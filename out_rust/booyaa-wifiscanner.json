{
    "repository": "booyaa/wifiscanner",
    "clone_url": "https://github.com/booyaa/wifiscanner.git",
    "timestamp": "2023-05-30T09:08:53.000306Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/Check/Rustfmt/Clippy] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Check/Rustfmt/Clippy]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Check/Rustfmt/Clippy]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check/Rustfmt/Clippy]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check/Rustfmt/Clippy]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/booyaa-wifiscanner] user=0 workdir=\n[CI/Check/Rustfmt/Clippy]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/Check/Rustfmt/Clippy]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/Check/Rustfmt/Clippy]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/Check/Rustfmt/Clippy]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/Check/Rustfmt/Clippy]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/Check/Rustfmt/Clippy] \u2b50 Run Main actions/checkout@v1\n[CI/Check/Rustfmt/Clippy]   \u2705  Success - Main actions/checkout@v1\n[CI/Check/Rustfmt/Clippy] \u2b50 Run Main actions-rs/toolchain@v1\n[CI/Check/Rustfmt/Clippy]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/Check/Rustfmt/Clippy]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/Check/Rustfmt/Clippy]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/Check/Rustfmt/Clippy]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[CI/Check/Rustfmt/Clippy]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/Check/Rustfmt/Clippy]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/Check/Rustfmt/Clippy]   \ud83d\udcac  ::debug::Destination /tmp/90391533-2720-4e8e-b9f1-7a57cd8f3510\n[CI/Check/Rustfmt/Clippy]   \ud83d\udcac  ::debug::download complete\n[CI/Check/Rustfmt/Clippy]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/90391533-2720-4e8e-b9f1-7a57cd8f3510\n[CI/Check/Rustfmt/Clippy]   | [command]/tmp/90391533-2720-4e8e-b9f1-7a57cd8f3510 --default-toolchain none -y\n[CI/Check/Rustfmt/Clippy]   | info: downloading installer\n[CI/Check/Rustfmt/Clippy]   | info: profile set to 'default'\n[CI/Check/Rustfmt/Clippy]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Check/Rustfmt/Clippy]   | info: skipping toolchain installation\n[CI/Check/Rustfmt/Clippy]   | \n[CI/Check/Rustfmt/Clippy]   | \n[CI/Check/Rustfmt/Clippy]   | Rust is installed now. Great!\n[CI/Check/Rustfmt/Clippy]   | \n[CI/Check/Rustfmt/Clippy]   | To get started you may need to restart your current shell.\n[CI/Check/Rustfmt/Clippy]   | This would reload your PATH environment variable to include\n[CI/Check/Rustfmt/Clippy]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Check/Rustfmt/Clippy]   | \n[CI/Check/Rustfmt/Clippy]   | To configure your current shell, run:\n[CI/Check/Rustfmt/Clippy]   | source \"$HOME/.cargo/env\"\n[CI/Check/Rustfmt/Clippy]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/Check/Rustfmt/Clippy]   | Default host: x86_64-unknown-linux-gnu\n[CI/Check/Rustfmt/Clippy]   | rustup home:  /home/runneradmin/.rustup\n[CI/Check/Rustfmt/Clippy]   | \n[CI/Check/Rustfmt/Clippy]   | no active toolchain\n[CI/Check/Rustfmt/Clippy]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[CI/Check/Rustfmt/Clippy]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/Check/Rustfmt/Clippy]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/Check/Rustfmt/Clippy]   | info: downloading component 'cargo'\n[CI/Check/Rustfmt/Clippy]   | info: downloading component 'clippy'\n[CI/Check/Rustfmt/Clippy]   | info: downloading component 'rust-docs'\n[CI/Check/Rustfmt/Clippy]   | info: downloading component 'rust-std'\n[CI/Check/Rustfmt/Clippy]   | info: downloading component 'rustc'\n[CI/Check/Rustfmt/Clippy]   | info: downloading component 'rustfmt'\n[CI/Check/Rustfmt/Clippy]   | info: installing component 'cargo'\n[CI/Check/Rustfmt/Clippy]   | info: installing component 'clippy'\n[CI/Check/Rustfmt/Clippy]   | info: installing component 'rust-docs'\n[CI/Check/Rustfmt/Clippy]   | info: installing component 'rust-std'\n[CI/Check/Rustfmt/Clippy]   | info: installing component 'rustc'\n[CI/Check/Rustfmt/Clippy]   | info: installing component 'rustfmt'\n[CI/Check/Rustfmt/Clippy]   | \n[CI/Check/Rustfmt/Clippy]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Check/Rustfmt/Clippy]   | \n[CI/Check/Rustfmt/Clippy]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/Check/Rustfmt/Clippy]   | info: checking for self-update\n[CI/Check/Rustfmt/Clippy]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[CI/Check/Rustfmt/Clippy]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[CI/Check/Rustfmt/Clippy]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/booyaa-wifiscanner' set to 'stable-x86_64-unknown-linux-gnu'\n[CI/Check/Rustfmt/Clippy]   | \n[CI/Check/Rustfmt/Clippy]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Check/Rustfmt/Clippy]   | \n[CI/Check/Rustfmt/Clippy]   \u2753  ::group::Gathering installed versions\n[CI/Check/Rustfmt/Clippy]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/Check/Rustfmt/Clippy]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Check/Rustfmt/Clippy]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[CI/Check/Rustfmt/Clippy]   \u2699  ::set-output:: rustc_hash=84c898d65\n[CI/Check/Rustfmt/Clippy]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/Check/Rustfmt/Clippy]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[CI/Check/Rustfmt/Clippy]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[CI/Check/Rustfmt/Clippy]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Check/Rustfmt/Clippy]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Check/Rustfmt/Clippy]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Check/Rustfmt/Clippy]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[CI/Check/Rustfmt/Clippy]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/Check/Rustfmt/Clippy]   \u2753  ::endgroup::\n[CI/Check/Rustfmt/Clippy]   \u2705  Success - Main actions-rs/toolchain@v1\n[CI/Check/Rustfmt/Clippy]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Check/Rustfmt/Clippy] \u2b50 Run Main Check\n[CI/Check/Rustfmt/Clippy]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[CI/Check/Rustfmt/Clippy]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[CI/Check/Rustfmt/Clippy]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[CI/Check/Rustfmt/Clippy]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[CI/Check/Rustfmt/Clippy]   | [command]/home/runneradmin/.cargo/bin/cargo check\n[CI/Check/Rustfmt/Clippy]   | warning: An explicit [[bin]] section is specified in Cargo.toml which currently\n[CI/Check/Rustfmt/Clippy]   | disables Cargo from automatically inferring other binary targets.\n[CI/Check/Rustfmt/Clippy]   | This inference behavior will change in the Rust 2018 edition and the following\n[CI/Check/Rustfmt/Clippy]   | files will be included as a binary target:\n[CI/Check/Rustfmt/Clippy]   | \n[CI/Check/Rustfmt/Clippy]   | * /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/booyaa-wifiscanner/src/bin/main.rs\n[CI/Check/Rustfmt/Clippy]   | \n[CI/Check/Rustfmt/Clippy]   | This is likely to break cargo build or cargo test as these files may not be\n[CI/Check/Rustfmt/Clippy]   | ready to be compiled as a binary target today. You can future-proof yourself\n[CI/Check/Rustfmt/Clippy]   | and disable this warning by adding `autobins = false` to your [package]\n[CI/Check/Rustfmt/Clippy]   | section. You may also move the files to a location where Cargo would not\n[CI/Check/Rustfmt/Clippy]   | automatically infer them to be a target, such as in subfolders.\n[CI/Check/Rustfmt/Clippy]   | \n[CI/Check/Rustfmt/Clippy]   | For more information on this warning you can consult\n[CI/Check/Rustfmt/Clippy]   | https://github.com/rust-lang/cargo/issues/5330\n[CI/Check/Rustfmt/Clippy]   | warning: path `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/booyaa-wifiscanner/src/bin/main.rs` was erroneously implicitly accepted for binary `wifiscanner`,\n[CI/Check/Rustfmt/Clippy]   | please set bin.path in Cargo.toml\n[CI/Check/Rustfmt/Clippy]   |     Updating crates.io index\n[CI/Check/Rustfmt/Clippy]   |  Downloading crates ...\n[CI/Check/Rustfmt/Clippy]   |   Downloaded memchr v2.5.0\n[CI/Check/Rustfmt/Clippy]   |   Downloaded regex-syntax v0.7.2\n[CI/Check/Rustfmt/Clippy]   |   Downloaded regex v1.8.3\n[CI/Check/Rustfmt/Clippy]   |   Downloaded itertools v0.10.5\n[CI/Check/Rustfmt/Clippy]   |   Downloaded either v1.8.1\n[CI/Check/Rustfmt/Clippy]   |   Downloaded aho-corasick v1.0.1\n[CI/Check/Rustfmt/Clippy]   |    Compiling memchr v2.5.0\n[CI/Check/Rustfmt/Clippy]   |     Checking regex-syntax v0.7.2\n[CI/Check/Rustfmt/Clippy]   |     Checking either v1.8.1\n[CI/Check/Rustfmt/Clippy]   |     Checking itertools v0.10.5\n[CI/Check/Rustfmt/Clippy]   |     Checking aho-corasick v1.0.1\n[CI/Check/Rustfmt/Clippy]   |     Checking regex v1.8.3\n[CI/Check/Rustfmt/Clippy]   |     Checking wifiscanner v0.5.1 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/booyaa-wifiscanner)\n[CI/Check/Rustfmt/Clippy]   |     Finished dev [unoptimized + debuginfo] target(s) in 2m 05s\n[CI/Check/Rustfmt/Clippy]   \u2705  Success - Main Check\n[CI/Check/Rustfmt/Clippy] \u2b50 Run Main Rustfmt\n[CI/Check/Rustfmt/Clippy]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[CI/Check/Rustfmt/Clippy]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[CI/Check/Rustfmt/Clippy]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[CI/Check/Rustfmt/Clippy]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[CI/Check/Rustfmt/Clippy]   | [command]/home/runneradmin/.cargo/bin/cargo fmt -- --check\n[CI/Check/Rustfmt/Clippy]   \u2705  Success - Main Rustfmt\n[CI/Check/Rustfmt/Clippy] \u2b50 Run Main Clean\n[CI/Check/Rustfmt/Clippy]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[CI/Check/Rustfmt/Clippy]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[CI/Check/Rustfmt/Clippy]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[CI/Check/Rustfmt/Clippy]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[CI/Check/Rustfmt/Clippy]   | [command]/home/runneradmin/.cargo/bin/cargo clean\n[CI/Check/Rustfmt/Clippy]   \u2705  Success - Main Clean\n[CI/Check/Rustfmt/Clippy] \u2b50 Run Main Clippy\n[CI/Check/Rustfmt/Clippy]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[CI/Check/Rustfmt/Clippy]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[CI/Check/Rustfmt/Clippy]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[CI/Check/Rustfmt/Clippy]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[CI/Check/Rustfmt/Clippy]   | [command]/home/runneradmin/.cargo/bin/cargo clippy\n[CI/Check/Rustfmt/Clippy]   | warning: An explicit [[bin]] section is specified in Cargo.toml which currently\n[CI/Check/Rustfmt/Clippy]   | disables Cargo from automatically inferring other binary targets.\n[CI/Check/Rustfmt/Clippy]   | This inference behavior will change in the Rust 2018 edition and the following\n[CI/Check/Rustfmt/Clippy]   | files will be included as a binary target:\n[CI/Check/Rustfmt/Clippy]   | \n[CI/Check/Rustfmt/Clippy]   | * /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/booyaa-wifiscanner/src/bin/main.rs\n[CI/Check/Rustfmt/Clippy]   | \n[CI/Check/Rustfmt/Clippy]   | This is likely to break cargo build or cargo test as these files may not be\n[CI/Check/Rustfmt/Clippy]   | ready to be compiled as a binary target today. You can future-proof yourself\n[CI/Check/Rustfmt/Clippy]   | and disable this warning by adding `autobins = false` to your [package]\n[CI/Check/Rustfmt/Clippy]   | section. You may also move the files to a location where Cargo would not\n[CI/Check/Rustfmt/Clippy]   | automatically infer them to be a target, such as in subfolders.\n[CI/Check/Rustfmt/Clippy]   | \n[CI/Check/Rustfmt/Clippy]   | For more information on this warning you can consult\n[CI/Check/Rustfmt/Clippy]   | https://github.com/rust-lang/cargo/issues/5330\n[CI/Check/Rustfmt/Clippy]   | warning: path `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/booyaa-wifiscanner/src/bin/main.rs` was erroneously implicitly accepted for binary `wifiscanner`,\n[CI/Check/Rustfmt/Clippy]   | please set bin.path in Cargo.toml\n[CI/Check/Rustfmt/Clippy]   |    Compiling memchr v2.5.0\n[CI/Check/Rustfmt/Clippy]   |     Checking either v1.8.1\n[CI/Check/Rustfmt/Clippy]   |     Checking regex-syntax v0.7.2\n[CI/Check/Rustfmt/Clippy]   |     Checking itertools v0.10.5\n[CI/Check/Rustfmt/Clippy]   |     Checking aho-corasick v1.0.1\n[CI/Check/Rustfmt/Clippy]   |     Checking regex v1.8.3\n[CI/Check/Rustfmt/Clippy]   |     Checking wifiscanner v0.5.1 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/booyaa-wifiscanner)\n[CI/Check/Rustfmt/Clippy]   | warning: constants have by default a `'static` lifetime\n[CI/Check/Rustfmt/Clippy]   |  --> src/sys/linux.rs:7:22\n[CI/Check/Rustfmt/Clippy]   |   |\n[CI/Check/Rustfmt/Clippy]   | 7 |     const PATH_ENV: &'static str = \"PATH\";\n[CI/Check/Rustfmt/Clippy]   |   |                     -^^^^^^^---- help: consider removing `'static`: `&str`\n[CI/Check/Rustfmt/Clippy]   |   |\n[CI/Check/Rustfmt/Clippy]   |   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n[CI/Check/Rustfmt/Clippy]   |   = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n[CI/Check/Rustfmt/Clippy]   | \n[CI/Check/Rustfmt/Clippy]   | warning: called `.nth(0)` on a `std::iter::Iterator`, when `.next()` is equivalent\n[CI/Check/Rustfmt/Clippy]   |   --> src/sys/linux.rs:39:5\n[CI/Check/Rustfmt/Clippy]   |    |\n[CI/Check/Rustfmt/Clippy]   | 39 | /     interfaces\n[CI/Check/Rustfmt/Clippy]   | 40 | |         .split(\"\\tInterface \")\n[CI/Check/Rustfmt/Clippy]   | 41 | |         .take(2)\n[CI/Check/Rustfmt/Clippy]   | 42 | |         .last()\n[CI/Check/Rustfmt/Clippy]   | 43 | |         .ok_or(Error::NoValue)?\n[CI/Check/Rustfmt/Clippy]   | 44 | |         .split(\"\\n\")\n[CI/Check/Rustfmt/Clippy]   | 45 | |         .nth(0)\n[CI/Check/Rustfmt/Clippy]   |    | |_______________^\n[CI/Check/Rustfmt/Clippy]   |    |\n[CI/Check/Rustfmt/Clippy]   |    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_nth_zero\n[CI/Check/Rustfmt/Clippy]   |    = note: `#[warn(clippy::iter_nth_zero)]` on by default\n[CI/Check/Rustfmt/Clippy]   | help: try calling `.next()` instead of `.nth(0)`\n[CI/Check/Rustfmt/Clippy]   |    |\n[CI/Check/Rustfmt/Clippy]   | 39 ~     interfaces\n[CI/Check/Rustfmt/Clippy]   | 40 +         .split(\"\\tInterface \")\n[CI/Check/Rustfmt/Clippy]   | 41 +         .take(2)\n[CI/Check/Rustfmt/Clippy]   | 42 +         .last()\n[CI/Check/Rustfmt/Clippy]   | 43 +         .ok_or(Error::NoValue)?\n[CI/Check/Rustfmt/Clippy]   | 44 +         .split(\"\\n\").next()\n[CI/Check/Rustfmt/Clippy]   |    |\n[CI/Check/Rustfmt/Clippy]   | \n[CI/Check/Rustfmt/Clippy]   | warning: single-character string constant used as pattern\n[CI/Check/Rustfmt/Clippy]   |   --> src/sys/linux.rs:44:16\n[CI/Check/Rustfmt/Clippy]   |    |\n[CI/Check/Rustfmt/Clippy]   | 44 |         .split(\"\\n\")\n[CI/Check/Rustfmt/Clippy]   |    |                ^^^^ help: try using a `char` instead: `'\\n'`\n[CI/Check/Rustfmt/Clippy]   |    |\n[CI/Check/Rustfmt/Clippy]   |    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n[CI/Check/Rustfmt/Clippy]   |    = note: `#[warn(clippy::single_char_pattern)]` on by default\n[CI/Check/Rustfmt/Clippy]   | \n[CI/Check/Rustfmt/Clippy]   | warning: single-character string constant used as pattern\n[CI/Check/Rustfmt/Clippy]   |   --> src/sys/linux.rs:54:36\n[CI/Check/Rustfmt/Clippy]   |    |\n[CI/Check/Rustfmt/Clippy]   | 54 |     for line in network_list.split(\"\\n\") {\n[CI/Check/Rustfmt/Clippy]   |    |                                    ^^^^ help: try using a `char` instead: `'\\n'`\n[CI/Check/Rustfmt/Clippy]   |    |\n[CI/Check/Rustfmt/Clippy]   |    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n[CI/Check/Rustfmt/Clippy]   | \n[CI/Check/Rustfmt/Clippy]   | warning: `wifiscanner` (lib) generated 4 warnings (run `cargo clippy --fix --lib -p wifiscanner` to apply 4 suggestions)\n[CI/Check/Rustfmt/Clippy]   |     Finished dev [unoptimized + debuginfo] target(s) in 4.42s\n[CI/Check/Rustfmt/Clippy]   \u2705  Success - Main Clippy\n[CI/Check/Rustfmt/Clippy] \ud83c\udfc1  Job succeeded\n[CI/Test                ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Test                ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Test                ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test                ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n",
    "actions_stderr": "Error: failed to copy content to container: Error response from daemon: Could not find the file /var/run/act/ in container c6a454273aa47affe4bbe4040f4d833730072a73d7aa15a632d0a334f54c0767\n"
}