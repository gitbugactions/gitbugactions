{
    "repository": "shepmaster/jetscii",
    "clone_url": "https://github.com/shepmaster/jetscii.git",
    "timestamp": "2023-05-30T08:42:56.307827Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Continuous Integration/sanitizers     ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous Integration/toolchains     ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous Integration/crate_features ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous Integration/target_features] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous Integration/platforms      ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous Integration/sanitizers     ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous Integration/target_features]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous Integration/crate_features ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous Integration/platforms      ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous Integration/toolchains     ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous Integration/target_features]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/crate_features ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/sanitizers     ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/toolchains     ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/platforms      ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/crate_features ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/target_features]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/platforms      ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/sanitizers     ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/toolchains     ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/crate_features ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/shepmaster-jetscii] user=0 workdir=\n[Continuous Integration/platforms      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/shepmaster-jetscii] user=0 workdir=\n[Continuous Integration/toolchains     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/shepmaster-jetscii] user=0 workdir=\n[Continuous Integration/crate_features ] \u2b50 Run Main Check out code\n[Continuous Integration/target_features]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/shepmaster-jetscii] user=0 workdir=\n[Continuous Integration/sanitizers     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/shepmaster-jetscii] user=0 workdir=\n[Continuous Integration/crate_features ]   \u2705  Success - Main Check out code\n[Continuous Integration/crate_features ] \u2b50 Run Main Run tests\n[Continuous Integration/crate_features ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous Integration/crate_features ] \u2b50 Run Main Install Rust\n[Continuous Integration/crate_features ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous Integration/crate_features ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous Integration/toolchains     ] \ud83e\uddea  Matrix: map[toolchain:stable]\n[Continuous Integration/platforms      ] \ud83e\uddea  Matrix: map[platform:ubuntu-latest]\n[Continuous Integration/platforms      ] \u2b50 Run Main Check out code\n[Continuous Integration/toolchains     ] \u2b50 Run Main Check out code\n[Continuous Integration/platforms      ]   \u2705  Success - Main Check out code\n[Continuous Integration/toolchains     ]   \u2705  Success - Main Check out code\n[Continuous Integration/platforms      ] \u2b50 Run Main Run tests\n[Continuous Integration/toolchains     ] \u2b50 Run Main Run tests\n[Continuous Integration/toolchains     ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous Integration/platforms      ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous Integration/toolchains     ] \u2b50 Run Main Install Rust\n[Continuous Integration/toolchains     ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous Integration/toolchains     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous Integration/platforms      ] \u2b50 Run Main Install Rust\n[Continuous Integration/platforms      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous Integration/platforms      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous Integration/platforms      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous Integration/crate_features ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous Integration/toolchains     ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous Integration/crate_features ]   \ud83d\udcac  ::debug::using toolchain from input: nightly\n[Continuous Integration/toolchains     ]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[Continuous Integration/crate_features ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous Integration/crate_features ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous Integration/crate_features ]   \ud83d\udcac  ::debug::Destination /tmp/2945d3c5-2e8c-4423-acc8-2f5a74469c14\n[Continuous Integration/toolchains     ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous Integration/toolchains     ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous Integration/toolchains     ]   \ud83d\udcac  ::debug::Destination /tmp/14f5a5a8-bbb2-48b4-8b5b-f4426b450998\n[Continuous Integration/platforms      ]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[Continuous Integration/platforms      ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous Integration/platforms      ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous Integration/platforms      ]   \ud83d\udcac  ::debug::Destination /tmp/bc9c8938-67af-4846-8ccd-46cd249c724e\n[Continuous Integration/toolchains     ]   \ud83d\udcac  ::debug::download complete\n[Continuous Integration/toolchains     ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/14f5a5a8-bbb2-48b4-8b5b-f4426b450998\n[Continuous Integration/toolchains     ]   | [command]/tmp/14f5a5a8-bbb2-48b4-8b5b-f4426b450998 --default-toolchain none -y\n[Continuous Integration/toolchains     ]   | info: downloading installer\n[Continuous Integration/crate_features ]   \ud83d\udcac  ::debug::download complete\n[Continuous Integration/crate_features ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/2945d3c5-2e8c-4423-acc8-2f5a74469c14\n[Continuous Integration/crate_features ]   | [command]/tmp/2945d3c5-2e8c-4423-acc8-2f5a74469c14 --default-toolchain none -y\n[Continuous Integration/crate_features ]   | info: downloading installer\n[Continuous Integration/platforms      ]   \ud83d\udcac  ::debug::download complete\n[Continuous Integration/platforms      ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/bc9c8938-67af-4846-8ccd-46cd249c724e\n[Continuous Integration/platforms      ]   | [command]/tmp/bc9c8938-67af-4846-8ccd-46cd249c724e --default-toolchain none -y\n[Continuous Integration/platforms      ]   | info: downloading installer\n[Continuous Integration/target_features] \ud83e\uddea  Matrix: map[target: target_feature:-sse4.2]\n[Continuous Integration/toolchains     ]   | info: profile set to 'default'\n[Continuous Integration/toolchains     ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous Integration/toolchains     ]   | info: skipping toolchain installation\n[Continuous Integration/toolchains     ]   | \n[Continuous Integration/toolchains     ]   | \n[Continuous Integration/toolchains     ]   | Rust is installed now. Great!\n[Continuous Integration/toolchains     ]   | \n[Continuous Integration/toolchains     ]   | To get started you may need to restart your current shell.\n[Continuous Integration/toolchains     ]   | This would reload your PATH environment variable to include\n[Continuous Integration/toolchains     ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous Integration/toolchains     ]   | \n[Continuous Integration/toolchains     ]   | To configure your current shell, run:\n[Continuous Integration/toolchains     ]   | source \"$HOME/.cargo/env\"\n[Continuous Integration/toolchains     ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous Integration/toolchains     ]   | Default host: x86_64-unknown-linux-gnu\n[Continuous Integration/toolchains     ]   | rustup home:  /home/runneradmin/.rustup\n[Continuous Integration/toolchains     ]   | \n[Continuous Integration/toolchains     ]   | no active toolchain\n[Continuous Integration/toolchains     ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/toolchains     ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/toolchains     ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/toolchains     ]   | Installed rustup 1.26.0 support profiles\n[Continuous Integration/toolchains     ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Continuous Integration/toolchains     ]   | info: profile set to 'minimal'\n[Continuous Integration/toolchains     ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[Continuous Integration/toolchains     ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/sanitizers     ] \u2b50 Run Main Check out code\n[Continuous Integration/target_features] \u2b50 Run Main Check out code\n[Continuous Integration/crate_features ]   | info: profile set to 'default'\n[Continuous Integration/crate_features ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous Integration/crate_features ]   | info: skipping toolchain installation\n[Continuous Integration/crate_features ]   | \n[Continuous Integration/crate_features ]   | \n[Continuous Integration/crate_features ]   | Rust is installed now. Great!\n[Continuous Integration/crate_features ]   | \n[Continuous Integration/crate_features ]   | To get started you may need to restart your current shell.\n[Continuous Integration/crate_features ]   | This would reload your PATH environment variable to include\n[Continuous Integration/crate_features ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous Integration/crate_features ]   | \n[Continuous Integration/crate_features ]   | To configure your current shell, run:\n[Continuous Integration/crate_features ]   | source \"$HOME/.cargo/env\"\n[Continuous Integration/crate_features ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous Integration/crate_features ]   | Default host: x86_64-unknown-linux-gnu\n[Continuous Integration/crate_features ]   | rustup home:  /home/runneradmin/.rustup\n[Continuous Integration/crate_features ]   | \n[Continuous Integration/crate_features ]   | no active toolchain\n[Continuous Integration/crate_features ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/crate_features ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/crate_features ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/crate_features ]   | Installed rustup 1.26.0 support profiles\n[Continuous Integration/crate_features ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Continuous Integration/target_features]   \u2705  Success - Main Check out code\n[Continuous Integration/sanitizers     ]   \u2705  Success - Main Check out code\n[Continuous Integration/crate_features ]   | info: profile set to 'minimal'\n[Continuous Integration/crate_features ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install nightly\n[Continuous Integration/crate_features ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[Continuous Integration/toolchains     ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/toolchains     ]   | info: downloading component 'cargo'\n[Continuous Integration/crate_features ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[Continuous Integration/crate_features ]   | info: downloading component 'cargo'\n[Continuous Integration/crate_features ]   | info: downloading component 'rust-std'\n[Continuous Integration/toolchains     ]   | info: downloading component 'rust-std'\n[Continuous Integration/crate_features ]   | info: downloading component 'rustc'\n[Continuous Integration/toolchains     ]   | info: downloading component 'rustc'\n[Continuous Integration/target_features] \u2b50 Run Main Run tests\n[Continuous Integration/sanitizers     ] \u2b50 Run Main Run tests\n[Continuous Integration/platforms      ]   | info: profile set to 'default'\n[Continuous Integration/platforms      ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous Integration/platforms      ]   | info: skipping toolchain installation\n[Continuous Integration/platforms      ]   | \n[Continuous Integration/platforms      ]   | \n[Continuous Integration/platforms      ]   | Rust is installed now. Great!\n[Continuous Integration/platforms      ]   | \n[Continuous Integration/platforms      ]   | To get started you may need to restart your current shell.\n[Continuous Integration/platforms      ]   | This would reload your PATH environment variable to include\n[Continuous Integration/platforms      ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous Integration/platforms      ]   | \n[Continuous Integration/platforms      ]   | To configure your current shell, run:\n[Continuous Integration/platforms      ]   | source \"$HOME/.cargo/env\"\n[Continuous Integration/platforms      ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous Integration/platforms      ]   | Default host: x86_64-unknown-linux-gnu\n[Continuous Integration/platforms      ]   | rustup home:  /home/runneradmin/.rustup\n[Continuous Integration/platforms      ]   | \n[Continuous Integration/platforms      ]   | no active toolchain\n[Continuous Integration/platforms      ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/platforms      ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/platforms      ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/platforms      ]   | Installed rustup 1.26.0 support profiles\n[Continuous Integration/platforms      ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Continuous Integration/platforms      ]   | info: profile set to 'minimal'\n[Continuous Integration/platforms      ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[Continuous Integration/platforms      ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/target_features]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous Integration/sanitizers     ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous Integration/platforms      ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/platforms      ]   | info: downloading component 'cargo'\n[Continuous Integration/target_features] \u2b50 Run Main Install Rust\n[Continuous Integration/target_features]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous Integration/sanitizers     ] \u2b50 Run Main Install Rust\n[Continuous Integration/sanitizers     ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous Integration/target_features]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous Integration/crate_features ]   | info: installing component 'cargo'\n[Continuous Integration/sanitizers     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous Integration/crate_features ]   | info: installing component 'rust-std'\n[Continuous Integration/platforms      ]   | info: downloading component 'rust-std'\n[Continuous Integration/crate_features ]   | info: installing component 'rustc'\n[Continuous Integration/toolchains     ]   | info: installing component 'cargo'\n[Continuous Integration/toolchains     ]   | info: installing component 'rust-std'\n[Continuous Integration/crate_features ]   | \n[Continuous Integration/crate_features ]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[Continuous Integration/crate_features ]   | \n[Continuous Integration/crate_features ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[Continuous Integration/crate_features ]   | info: checking for self-update\n[Continuous Integration/crate_features ]   | [command]/home/runneradmin/.cargo/bin/rustup default nightly\n[Continuous Integration/crate_features ]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[Continuous Integration/crate_features ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[Continuous Integration/crate_features ]   | \n[Continuous Integration/crate_features ]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[Continuous Integration/crate_features ]   | \n[Continuous Integration/crate_features ]   \u2753  ::group::Gathering installed versions\n[Continuous Integration/crate_features ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Continuous Integration/crate_features ]   | rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[Continuous Integration/crate_features ]   \u2699  ::set-output:: rustc=1.72.0-nightly (498553fc0 2023-05-29)\n[Continuous Integration/crate_features ]   \u2699  ::set-output:: rustc_hash=498553fc0\n[Continuous Integration/crate_features ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Continuous Integration/crate_features ]   | cargo 1.72.0-nightly (64fb38c97 2023-05-23)\n[Continuous Integration/crate_features ]   \u2699  ::set-output:: cargo=1.72.0-nightly (64fb38c97 2023-05-23)\n[Continuous Integration/crate_features ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/crate_features ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/crate_features ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/crate_features ]   | info: The currently active `rustc` version is `rustc 1.72.0-nightly (498553fc0 2023-05-29)`\n[Continuous Integration/crate_features ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/crate_features ]   \u2753  ::endgroup::\n[Continuous Integration/crate_features ]   \u2705  Success - Main Install Rust\n[Continuous Integration/toolchains     ]   | info: installing component 'rustc'\n[Continuous Integration/crate_features ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous Integration/crate_features ] \u2b50 Run Main Configure cross\n[Continuous Integration/crate_features ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-1.sh] user= workdir=\n[Continuous Integration/platforms      ]   | info: downloading component 'rustc'\n[Continuous Integration/platforms      ]   | info: installing component 'cargo'\n[Continuous Integration/toolchains     ]   | \n[Continuous Integration/platforms      ]   | info: installing component 'rust-std'\n[Continuous Integration/toolchains     ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/toolchains     ]   | \n[Continuous Integration/toolchains     ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/toolchains     ]   | info: checking for self-update\n[Continuous Integration/toolchains     ]   | [command]/home/runneradmin/.cargo/bin/rustup default stable\n[Continuous Integration/toolchains     ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/toolchains     ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/toolchains     ]   | \n[Continuous Integration/toolchains     ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/toolchains     ]   | \n[Continuous Integration/toolchains     ]   \u2753  ::group::Gathering installed versions\n[Continuous Integration/toolchains     ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Continuous Integration/toolchains     ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/toolchains     ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/toolchains     ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[Continuous Integration/toolchains     ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Continuous Integration/toolchains     ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[Continuous Integration/toolchains     ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[Continuous Integration/toolchains     ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/toolchains     ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/toolchains     ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/toolchains     ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[Continuous Integration/toolchains     ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/toolchains     ]   \u2753  ::endgroup::\n[Continuous Integration/toolchains     ]   \u2705  Success - Main Install Rust\n[Continuous Integration/toolchains     ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous Integration/toolchains     ] \u2b50 Run Main Configure cross\n[Continuous Integration/toolchains     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-1.sh] user= workdir=\n[Continuous Integration/platforms      ]   | info: installing component 'rustc'\n[Continuous Integration/platforms      ]   | \n[Continuous Integration/platforms      ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/platforms      ]   | \n[Continuous Integration/platforms      ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/platforms      ]   | info: checking for self-update\n[Continuous Integration/platforms      ]   | [command]/home/runneradmin/.cargo/bin/rustup default stable\n[Continuous Integration/platforms      ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/platforms      ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/platforms      ]   | \n[Continuous Integration/platforms      ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/platforms      ]   | \n[Continuous Integration/platforms      ]   \u2753  ::group::Gathering installed versions\n[Continuous Integration/platforms      ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Continuous Integration/platforms      ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/platforms      ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/platforms      ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[Continuous Integration/platforms      ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Continuous Integration/platforms      ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[Continuous Integration/platforms      ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[Continuous Integration/platforms      ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/platforms      ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/platforms      ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/platforms      ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[Continuous Integration/platforms      ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/platforms      ]   \u2753  ::endgroup::\n[Continuous Integration/platforms      ]   \u2705  Success - Main Install Rust\n[Continuous Integration/platforms      ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous Integration/platforms      ] \u2b50 Run Main Configure cross\n[Continuous Integration/platforms      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-1.sh] user= workdir=\n[Continuous Integration/crate_features ]   \u2705  Success - Main Configure cross\n[Continuous Integration/sanitizers     ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous Integration/target_features]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous Integration/platforms      ]   \u2705  Success - Main Configure cross\n[Continuous Integration/toolchains     ]   \u2705  Success - Main Configure cross\n[Continuous Integration/target_features]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[Continuous Integration/target_features]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous Integration/target_features]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous Integration/target_features]   \ud83d\udcac  ::debug::Destination /tmp/add149f8-0588-4272-b77f-ef1bfe99574e\n[Continuous Integration/sanitizers     ]   \ud83d\udcac  ::debug::using toolchain from input: nightly\n[Continuous Integration/sanitizers     ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous Integration/sanitizers     ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous Integration/sanitizers     ]   \ud83d\udcac  ::debug::Destination /tmp/eee24f77-94d0-4828-b931-42911455f3d3\n[Continuous Integration/target_features]   \ud83d\udcac  ::debug::download complete\n[Continuous Integration/target_features]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/add149f8-0588-4272-b77f-ef1bfe99574e\n[Continuous Integration/target_features]   | [command]/tmp/add149f8-0588-4272-b77f-ef1bfe99574e --default-toolchain none -y\n[Continuous Integration/target_features]   | info: downloading installer\n[Continuous Integration/sanitizers     ]   \ud83d\udcac  ::debug::download complete\n[Continuous Integration/sanitizers     ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/eee24f77-94d0-4828-b931-42911455f3d3\n[Continuous Integration/sanitizers     ]   | [command]/tmp/eee24f77-94d0-4828-b931-42911455f3d3 --default-toolchain none -y\n[Continuous Integration/sanitizers     ]   | info: downloading installer\n[Continuous Integration/target_features]   | info: profile set to 'default'\n[Continuous Integration/target_features]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous Integration/target_features]   | info: skipping toolchain installation\n[Continuous Integration/target_features]   | \n[Continuous Integration/target_features]   | \n[Continuous Integration/target_features]   | Rust is installed now. Great!\n[Continuous Integration/target_features]   | \n[Continuous Integration/target_features]   | To get started you may need to restart your current shell.\n[Continuous Integration/target_features]   | This would reload your PATH environment variable to include\n[Continuous Integration/target_features]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous Integration/target_features]   | \n[Continuous Integration/target_features]   | To configure your current shell, run:\n[Continuous Integration/target_features]   | source \"$HOME/.cargo/env\"\n[Continuous Integration/target_features]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous Integration/target_features]   | Default host: x86_64-unknown-linux-gnu\n[Continuous Integration/target_features]   | rustup home:  /home/runneradmin/.rustup\n[Continuous Integration/target_features]   | \n[Continuous Integration/target_features]   | no active toolchain\n[Continuous Integration/target_features]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/target_features]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/target_features]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/target_features]   | Installed rustup 1.26.0 support profiles\n[Continuous Integration/target_features]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Continuous Integration/target_features]   | info: profile set to 'minimal'\n[Continuous Integration/target_features]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[Continuous Integration/target_features]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/target_features]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/target_features]   | info: downloading component 'cargo'\n[Continuous Integration/sanitizers     ]   | info: profile set to 'default'\n[Continuous Integration/sanitizers     ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous Integration/sanitizers     ]   | info: skipping toolchain installation\n[Continuous Integration/sanitizers     ]   | \n[Continuous Integration/sanitizers     ]   | \n[Continuous Integration/sanitizers     ]   | Rust is installed now. Great!\n[Continuous Integration/sanitizers     ]   | \n[Continuous Integration/sanitizers     ]   | To get started you may need to restart your current shell.\n[Continuous Integration/sanitizers     ]   | This would reload your PATH environment variable to include\n[Continuous Integration/sanitizers     ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous Integration/sanitizers     ]   | \n[Continuous Integration/sanitizers     ]   | To configure your current shell, run:\n[Continuous Integration/sanitizers     ]   | source \"$HOME/.cargo/env\"\n[Continuous Integration/sanitizers     ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous Integration/sanitizers     ]   | Default host: x86_64-unknown-linux-gnu\n[Continuous Integration/sanitizers     ]   | rustup home:  /home/runneradmin/.rustup\n[Continuous Integration/sanitizers     ]   | \n[Continuous Integration/sanitizers     ]   | no active toolchain\n[Continuous Integration/sanitizers     ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/sanitizers     ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/sanitizers     ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/sanitizers     ]   | Installed rustup 1.26.0 support profiles\n[Continuous Integration/sanitizers     ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Continuous Integration/sanitizers     ]   | info: profile set to 'minimal'\n[Continuous Integration/sanitizers     ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install nightly\n[Continuous Integration/sanitizers     ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[Continuous Integration/target_features]   | info: downloading component 'rust-std'\n[Continuous Integration/toolchains     ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous Integration/platforms      ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous Integration/crate_features ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous Integration/sanitizers     ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[Continuous Integration/sanitizers     ]   | info: downloading component 'cargo'\n[Continuous Integration/sanitizers     ]   | info: downloading component 'rust-std'\n[Continuous Integration/target_features]   | info: downloading component 'rustc'\n[Continuous Integration/sanitizers     ]   | info: downloading component 'rustc'\n[Continuous Integration/sanitizers     ]   | info: installing component 'cargo'\n[Continuous Integration/sanitizers     ]   | info: installing component 'rust-std'\n[Continuous Integration/target_features]   | info: installing component 'cargo'\n[Continuous Integration/toolchains     ] \u2b50 Run Main Run tests\n[Continuous Integration/platforms      ] \u2b50 Run Main Run tests\n[Continuous Integration/target_features]   | info: installing component 'rust-std'\n[Continuous Integration/toolchains     ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[Continuous Integration/platforms      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[Continuous Integration/toolchains     ] <nil>\n[Continuous Integration/toolchains     ]   \u274c  Failure - Main Run tests\n[Continuous Integration/platforms      ] <nil>\n[Continuous Integration/platforms      ]   \u274c  Failure - Main Run tests\n[Continuous Integration/crate_features ] \u2b50 Run Main Run tests\n[Continuous Integration/sanitizers     ]   | info: installing component 'rustc'\n[Continuous Integration/crate_features ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[Continuous Integration/crate_features ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[Continuous Integration/toolchains     ] lstat /home/andre-silva/.cache/act/actions-rs-cargo@v1/.eslintrc.json: no such file or directory\n[Continuous Integration/platforms      ] lstat /home/andre-silva/.cache/act/actions-rs-cargo@v1/jest.config.json: no such file or directory\n[Continuous Integration/toolchains     ]   \u274c  Failure - Main Run tests\n[Continuous Integration/platforms      ]   \u274c  Failure - Main Run tests\n[Continuous Integration/platforms      ] lstat /home/andre-silva/.cache/act/actions-rs-cargo@v1/jest.config.json: no such file or directory\n[Continuous Integration/target_features]   | info: installing component 'rustc'\n[Continuous Integration/toolchains     ] lstat /home/andre-silva/.cache/act/actions-rs-cargo@v1/.eslintrc.json: no such file or directory\n[Continuous Integration/platforms      ] \u2b50 Run Post Run tests\n[Continuous Integration/toolchains     ] \u2b50 Run Post Run tests\n[Continuous Integration/platforms      ]   \u2705  Success - Post Run tests\n[Continuous Integration/toolchains     ]   \u2705  Success - Post Run tests\n[Continuous Integration/sanitizers     ]   | \n[Continuous Integration/sanitizers     ]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[Continuous Integration/sanitizers     ]   | \n[Continuous Integration/sanitizers     ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[Continuous Integration/sanitizers     ]   | info: checking for self-update\n[Continuous Integration/sanitizers     ]   | [command]/home/runneradmin/.cargo/bin/rustup default nightly\n[Continuous Integration/sanitizers     ]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[Continuous Integration/sanitizers     ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[Continuous Integration/sanitizers     ]   | \n[Continuous Integration/sanitizers     ]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[Continuous Integration/sanitizers     ]   | \n[Continuous Integration/sanitizers     ]   \u2753  ::group::Gathering installed versions\n[Continuous Integration/sanitizers     ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Continuous Integration/sanitizers     ]   | rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[Continuous Integration/sanitizers     ]   \u2699  ::set-output:: rustc=1.72.0-nightly (498553fc0 2023-05-29)\n[Continuous Integration/sanitizers     ]   \u2699  ::set-output:: rustc_hash=498553fc0\n[Continuous Integration/sanitizers     ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Continuous Integration/sanitizers     ]   | cargo 1.72.0-nightly (64fb38c97 2023-05-23)\n[Continuous Integration/sanitizers     ]   \u2699  ::set-output:: cargo=1.72.0-nightly (64fb38c97 2023-05-23)\n[Continuous Integration/sanitizers     ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/sanitizers     ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/sanitizers     ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/sanitizers     ]   | info: The currently active `rustc` version is `rustc 1.72.0-nightly (498553fc0 2023-05-29)`\n[Continuous Integration/sanitizers     ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/sanitizers     ]   \u2753  ::endgroup::\n[Continuous Integration/sanitizers     ]   \u2705  Success - Main Install Rust\n[Continuous Integration/sanitizers     ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous Integration/sanitizers     ] \u2b50 Run Main Configure cross\n[Continuous Integration/sanitizers     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-1.sh] user= workdir=\n[Continuous Integration/target_features]   | \n[Continuous Integration/target_features]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/target_features]   | \n[Continuous Integration/target_features]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/target_features]   | info: checking for self-update\n[Continuous Integration/target_features]   | [command]/home/runneradmin/.cargo/bin/rustup default stable\n[Continuous Integration/target_features]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/target_features]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/target_features]   | \n[Continuous Integration/target_features]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/target_features]   | \n[Continuous Integration/target_features]   \u2753  ::group::Gathering installed versions\n[Continuous Integration/target_features]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Continuous Integration/target_features]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/target_features]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/target_features]   \u2699  ::set-output:: rustc_hash=84c898d65\n[Continuous Integration/target_features]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Continuous Integration/target_features]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[Continuous Integration/target_features]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[Continuous Integration/target_features]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/target_features]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/target_features]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/target_features]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[Continuous Integration/target_features]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/target_features]   \u2753  ::endgroup::\n[Continuous Integration/target_features]   \u2705  Success - Main Install Rust\n[Continuous Integration/target_features]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous Integration/target_features] \u2b50 Run Main Configure cross\n[Continuous Integration/target_features]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-1.sh] user= workdir=\n[Continuous Integration/platforms      ] \ud83c\udfc1  Job failed\n[Continuous Integration/toolchains     ] \ud83c\udfc1  Job failed\n[Continuous Integration/crate_features ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[Continuous Integration/sanitizers     ]   \u2705  Success - Main Configure cross\n[Continuous Integration/target_features]   \u2705  Success - Main Configure cross\n[Continuous Integration/target_features]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous Integration/sanitizers     ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous Integration/target_features] \u2b50 Run Main Run tests\n[Continuous Integration/target_features]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[Continuous Integration/sanitizers     ] \u2b50 Run Main Run tests\n[Continuous Integration/crate_features ]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[Continuous Integration/crate_features ]   | [command]/home/runneradmin/.cargo/bin/cargo +nightly test --all --features pattern\n[Continuous Integration/sanitizers     ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[Continuous Integration/crate_features ]   |     Updating crates.io index\n[Continuous Integration/target_features]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[Continuous Integration/sanitizers     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[Continuous Integration/target_features]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[Continuous Integration/sanitizers     ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[Continuous Integration/target_features]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[Continuous Integration/target_features]   | [command]/home/runneradmin/.cargo/bin/cargo +stable test --all\n[Continuous Integration/target_features]   |     Updating crates.io index\n[Continuous Integration/crate_features ]   |  Downloading crates ...\n[Continuous Integration/crate_features ]   |   Downloaded autocfg v1.1.0\n[Continuous Integration/crate_features ]   |   Downloaded byteorder v1.4.3\n[Continuous Integration/crate_features ]   |   Downloaded rand v0.8.5\n[Continuous Integration/crate_features ]   |   Downloaded memmap v0.7.0\n[Continuous Integration/crate_features ]   |   Downloaded tempfile v3.5.0\n[Continuous Integration/crate_features ]   |   Downloaded rand_core v0.6.4\n[Continuous Integration/crate_features ]   |   Downloaded unarray v0.1.4\n[Continuous Integration/crate_features ]   |   Downloaded wait-timeout v0.2.0\n[Continuous Integration/crate_features ]   |   Downloaded rusty-fork v0.3.0\n[Continuous Integration/crate_features ]   |   Downloaded quick-error v1.2.3\n[Continuous Integration/crate_features ]   |   Downloaded proptest v1.2.0\n[Continuous Integration/crate_features ]   |   Downloaded region v3.0.0\n[Continuous Integration/crate_features ]   |   Downloaded io-lifetimes v1.0.11\n[Continuous Integration/crate_features ]   |   Downloaded rustix v0.37.19\n[Continuous Integration/crate_features ]   |   Downloaded bitflags v1.3.2\n[Continuous Integration/crate_features ]   |   Downloaded fnv v1.0.7\n[Continuous Integration/crate_features ]   |   Downloaded rand_xorshift v0.3.0\n[Continuous Integration/crate_features ]   |   Downloaded bit-vec v0.6.3\n[Continuous Integration/crate_features ]   |   Downloaded fastrand v1.9.0\n[Continuous Integration/crate_features ]   |   Downloaded bit-set v0.5.3\n[Continuous Integration/crate_features ]   |   Downloaded getrandom v0.2.9\n[Continuous Integration/crate_features ]   |   Downloaded rand_chacha v0.3.1\n[Continuous Integration/crate_features ]   |   Downloaded ppv-lite86 v0.2.17\n[Continuous Integration/crate_features ]   |   Downloaded num-traits v0.2.15\n[Continuous Integration/crate_features ]   |   Downloaded libm v0.2.7\n[Continuous Integration/crate_features ]   |   Downloaded libc v0.2.144\n[Continuous Integration/crate_features ]   |   Downloaded lazy_static v1.4.0\n[Continuous Integration/crate_features ]   |   Downloaded cfg-if v1.0.0\n[Continuous Integration/crate_features ]   |   Downloaded regex-syntax v0.6.29\n[Continuous Integration/crate_features ]   |   Downloaded linux-raw-sys v0.3.8\n[Continuous Integration/crate_features ]   |    Compiling libc v0.2.144\n[Continuous Integration/crate_features ]   |    Compiling cfg-if v1.0.0\n[Continuous Integration/crate_features ]   |    Compiling io-lifetimes v1.0.11\n[Continuous Integration/crate_features ]   |    Compiling bitflags v1.3.2\n[Continuous Integration/crate_features ]   |    Compiling rustix v0.37.19\n[Continuous Integration/crate_features ]   |    Compiling linux-raw-sys v0.3.8\n[Continuous Integration/crate_features ]   |    Compiling autocfg v1.1.0\n[Continuous Integration/crate_features ]   |    Compiling libm v0.2.7\n[Continuous Integration/crate_features ]   |    Compiling ppv-lite86 v0.2.17\n[Continuous Integration/crate_features ]   |    Compiling fastrand v1.9.0\n[Continuous Integration/crate_features ]   |    Compiling fnv v1.0.7\n[Continuous Integration/crate_features ]   |    Compiling bit-vec v0.6.3\n[Continuous Integration/crate_features ]   |    Compiling jetscii v0.5.3 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/shepmaster-jetscii)\n[Continuous Integration/crate_features ]   |    Compiling quick-error v1.2.3\n[Continuous Integration/crate_features ]   |    Compiling unarray v0.1.4\n[Continuous Integration/crate_features ]   |    Compiling byteorder v1.4.3\n[Continuous Integration/crate_features ]   |    Compiling regex-syntax v0.6.29\n[Continuous Integration/crate_features ]   |    Compiling lazy_static v1.4.0\n[Continuous Integration/crate_features ]   |    Compiling bit-set v0.5.3\n[Continuous Integration/crate_features ]   |    Compiling num-traits v0.2.15\n[Continuous Integration/crate_features ]   |    Compiling getrandom v0.2.9\n[Continuous Integration/crate_features ]   |    Compiling wait-timeout v0.2.0\n[Continuous Integration/crate_features ]   |    Compiling memmap v0.7.0\n[Continuous Integration/crate_features ]   |    Compiling region v3.0.0\n[Continuous Integration/crate_features ]   |    Compiling rand_core v0.6.4\n[Continuous Integration/crate_features ]   |    Compiling rand_chacha v0.3.1\n[Continuous Integration/crate_features ]   |    Compiling rand_xorshift v0.3.0\n[Continuous Integration/crate_features ]   |    Compiling rand v0.8.5\n[Continuous Integration/crate_features ]   |    Compiling tempfile v3.5.0\n[Continuous Integration/crate_features ]   |    Compiling rusty-fork v0.3.0\n[Continuous Integration/crate_features ]   |    Compiling proptest v1.2.0\n[Continuous Integration/crate_features ]   |     Finished test [unoptimized + debuginfo] target(s) in 23.32s\n[Continuous Integration/crate_features ]   |      Running unittests src/lib.rs (target/debug/deps/jetscii-7b967289f40ed4e3)\n[Continuous Integration/crate_features ]   | \n[Continuous Integration/crate_features ]   | running 25 tests\n[Continuous Integration/crate_features ]   | test pattern::test::substring_of_an_empty_needle ... ignored\n[Continuous Integration/crate_features ]   | test pattern::test::can_search_for_nul_bytes ... ok\n[Continuous Integration/crate_features ]   | test pattern::test::pattern_does_not_backtrack_after_first ... ok\n[Continuous Integration/crate_features ]   | test simd::test::byte_substring_is_not_found ... ok\n[Continuous Integration/crate_features ]   | test simd::test::byte_substring_is_found ... ok\n[Continuous Integration/crate_features ]   | test simd::test::byte_substring_needle_is_longer_than_16_bytes ... ok\n[Continuous Integration/crate_features ]   | test simd::test::byte_substring_has_false_positive ... ok\n[Continuous Integration/crate_features ]   | test pattern::test::can_search_in_nul_bytes ... ok\n[Continuous Integration/crate_features ]   | test simd::test::can_search_for_null_bytes ... ok\n[Continuous Integration/crate_features ]   | test simd::test::misalignment_does_not_cause_a_false_positive_before_start ... ok\n[Continuous Integration/crate_features ]   | test simd::test::xml_delim_5_is_found ... ok\n[Continuous Integration/crate_features ]   | test simd::test::xml_delim_3_is_found ... ok\n[Continuous Integration/crate_features ]   | test simd::test::space_not_found ... ok\n[Continuous Integration/crate_features ]   | test simd::test::can_search_in_null_bytes ... ok\n[Continuous Integration/crate_features ]   | test simd::test::space_is_found ... ok\n[Continuous Integration/crate_features ]   | test simd::test::works_on_nonaligned_beginnings ... ok\n[Continuous Integration/crate_features ]   | test simd::test::works_at_page_boundary ... ok\n[Continuous Integration/crate_features ]   | test simd::test::does_not_access_memory_after_haystack_when_haystack_is_multiple_of_16_bytes_and_no_match ... ok\n[Continuous Integration/crate_features ]   | test simd::test::works_as_find_does_for_up_to_and_including_16_bytes ... ok\n[Continuous Integration/crate_features ]   | test simd::test::works_as_find_does_for_various_memory_offsets ... ok\n[Continuous Integration/crate_features ]   | test simd::test::works_as_find_does_for_byte_substrings ... ok\n[Continuous Integration/crate_features ]   | test pattern::test::works_as_find_does_for_multiple_characters ... ok\n[Continuous Integration/crate_features ]   | test pattern::test::works_as_find_does_for_up_to_and_including_16_characters ... ok\n[Continuous Integration/crate_features ]   | test pattern::test::works_as_find_does_for_single_characters ... ok\n[Continuous Integration/crate_features ]   | test pattern::test::works_as_find_does_for_substrings ... ok\n[Continuous Integration/crate_features ]   | \n[Continuous Integration/crate_features ]   | test result: ok. 24 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in 0.36s\n[Continuous Integration/crate_features ]   | \n[Continuous Integration/crate_features ]   |    Doc-tests jetscii\n[Continuous Integration/crate_features ]   | \n[Continuous Integration/crate_features ]   | running 6 tests\n[Continuous Integration/crate_features ]   | test src/lib.rs - (line 37) ... ok\n[Continuous Integration/crate_features ]   | test src/lib.rs - (line 47) ... ok\n[Continuous Integration/crate_features ]   | test src/lib.rs - (line 11) ... ok\n[Continuous Integration/crate_features ]   | test src/lib.rs - (line 24) ... ok\n[Continuous Integration/crate_features ]   | test src/lib.rs - (line 76) ... ok\n[Continuous Integration/crate_features ]   | test src/lib.rs - (line 62) ... ok\n[Continuous Integration/crate_features ]   | \n[Continuous Integration/crate_features ]   | test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.44s\n[Continuous Integration/crate_features ]   | \n[Continuous Integration/crate_features ]   \u2705  Success - Main Run tests\n[Continuous Integration/crate_features ]   \u2705  Success - Main Run tests\n[Continuous Integration/crate_features ] \u2b50 Run Post Run tests\n[Continuous Integration/crate_features ]   \u2705  Success - Post Run tests\n[Continuous Integration/crate_features ] \ud83c\udfc1  Job succeeded\n[Continuous Integration/sanitizers     ]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[Continuous Integration/sanitizers     ]   | [command]/home/runneradmin/.cargo/bin/cargo +nightly test --all\n[Continuous Integration/sanitizers     ]   |     Updating crates.io index\n[Continuous Integration/sanitizers     ]   |  Downloading crates ...\n[Continuous Integration/sanitizers     ]   |   Downloaded bit-set v0.5.3\n[Continuous Integration/sanitizers     ]   |   Downloaded tempfile v3.5.0\n[Continuous Integration/sanitizers     ]   |   Downloaded autocfg v1.1.0\n[Continuous Integration/sanitizers     ]   |   Downloaded region v3.0.0\n[Continuous Integration/sanitizers     ]   |   Downloaded bit-vec v0.6.3\n[Continuous Integration/sanitizers     ]   |   Downloaded bitflags v1.3.2\n[Continuous Integration/sanitizers     ]   |   Downloaded cfg-if v1.0.0\n[Continuous Integration/sanitizers     ]   |   Downloaded getrandom v0.2.9\n[Continuous Integration/sanitizers     ]   |   Downloaded fastrand v1.9.0\n[Continuous Integration/sanitizers     ]   |   Downloaded lazy_static v1.4.0\n[Continuous Integration/sanitizers     ]   |   Downloaded byteorder v1.4.3\n[Continuous Integration/sanitizers     ]   |   Downloaded libc v0.2.144\n[Continuous Integration/sanitizers     ]   |   Downloaded wait-timeout v0.2.0\n[Continuous Integration/sanitizers     ]   |   Downloaded rand_xorshift v0.3.0\n[Continuous Integration/sanitizers     ]   |   Downloaded quick-error v1.2.3\n[Continuous Integration/sanitizers     ]   |   Downloaded memmap v0.7.0\n[Continuous Integration/sanitizers     ]   |   Downloaded unarray v0.1.4\n[Continuous Integration/sanitizers     ]   |   Downloaded rusty-fork v0.3.0\n[Continuous Integration/sanitizers     ]   |   Downloaded proptest v1.2.0\n[Continuous Integration/sanitizers     ]   |   Downloaded libm v0.2.7\n[Continuous Integration/sanitizers     ]   |   Downloaded regex-syntax v0.6.29\n[Continuous Integration/sanitizers     ]   |   Downloaded io-lifetimes v1.0.11\n[Continuous Integration/sanitizers     ]   |   Downloaded fnv v1.0.7\n[Continuous Integration/sanitizers     ]   |   Downloaded rand_core v0.6.4\n[Continuous Integration/sanitizers     ]   |   Downloaded rustix v0.37.19\n[Continuous Integration/sanitizers     ]   |   Downloaded linux-raw-sys v0.3.8\n[Continuous Integration/sanitizers     ]   |   Downloaded rand_chacha v0.3.1\n[Continuous Integration/sanitizers     ]   |   Downloaded rand v0.8.5\n[Continuous Integration/sanitizers     ]   |   Downloaded ppv-lite86 v0.2.17\n[Continuous Integration/sanitizers     ]   |   Downloaded num-traits v0.2.15\n[Continuous Integration/sanitizers     ]   |    Compiling libc v0.2.144\n[Continuous Integration/sanitizers     ]   |    Compiling cfg-if v1.0.0\n[Continuous Integration/sanitizers     ]   |    Compiling io-lifetimes v1.0.11\n[Continuous Integration/sanitizers     ]   |    Compiling bitflags v1.3.2\n[Continuous Integration/sanitizers     ]   |    Compiling rustix v0.37.19\n[Continuous Integration/sanitizers     ]   |    Compiling autocfg v1.1.0\n[Continuous Integration/sanitizers     ]   |    Compiling libm v0.2.7\n[Continuous Integration/sanitizers     ]   |    Compiling linux-raw-sys v0.3.8\n[Continuous Integration/sanitizers     ]   |    Compiling fastrand v1.9.0\n[Continuous Integration/sanitizers     ]   |    Compiling ppv-lite86 v0.2.17\n[Continuous Integration/sanitizers     ]   |    Compiling fnv v1.0.7\n[Continuous Integration/sanitizers     ]   |    Compiling quick-error v1.2.3\n[Continuous Integration/sanitizers     ]   |    Compiling jetscii v0.5.3 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/shepmaster-jetscii)\n[Continuous Integration/sanitizers     ]   |    Compiling bit-vec v0.6.3\n[Continuous Integration/sanitizers     ]   |    Compiling lazy_static v1.4.0\n[Continuous Integration/sanitizers     ]   |    Compiling unarray v0.1.4\n[Continuous Integration/sanitizers     ]   |    Compiling byteorder v1.4.3\n[Continuous Integration/sanitizers     ]   |    Compiling regex-syntax v0.6.29\n[Continuous Integration/sanitizers     ]   |    Compiling bit-set v0.5.3\n[Continuous Integration/sanitizers     ]   |    Compiling num-traits v0.2.15\n[Continuous Integration/sanitizers     ]   |    Compiling getrandom v0.2.9\n[Continuous Integration/sanitizers     ]   |    Compiling wait-timeout v0.2.0\n[Continuous Integration/sanitizers     ]   |    Compiling memmap v0.7.0\n[Continuous Integration/sanitizers     ]   |    Compiling region v3.0.0\n[Continuous Integration/sanitizers     ]   |    Compiling rand_core v0.6.4\n[Continuous Integration/sanitizers     ]   |    Compiling rand_chacha v0.3.1\n[Continuous Integration/sanitizers     ]   |    Compiling rand_xorshift v0.3.0\n[Continuous Integration/sanitizers     ]   |    Compiling rand v0.8.5\n[Continuous Integration/sanitizers     ]   |    Compiling tempfile v3.5.0\n[Continuous Integration/sanitizers     ]   |    Compiling rusty-fork v0.3.0\n[Continuous Integration/sanitizers     ]   |    Compiling proptest v1.2.0\n[Continuous Integration/sanitizers     ]   |     Finished test [unoptimized + debuginfo] target(s) in 14.77s\n[Continuous Integration/sanitizers     ]   |      Running unittests src/lib.rs (target/debug/deps/jetscii-9057172944b04bda)\n[Continuous Integration/sanitizers     ]   | \n[Continuous Integration/sanitizers     ]   | running 17 tests\n[Continuous Integration/sanitizers     ]   | test simd::test::byte_substring_has_false_positive ... ok\n[Continuous Integration/sanitizers     ]   | test simd::test::byte_substring_is_not_found ... ok\n[Continuous Integration/sanitizers     ]   | test simd::test::byte_substring_needle_is_longer_than_16_bytes ... ok\n[Continuous Integration/sanitizers     ]   | test simd::test::does_not_access_memory_after_haystack_when_haystack_is_multiple_of_16_bytes_and_no_match ... ok\n[Continuous Integration/sanitizers     ]   | test simd::test::byte_substring_is_found ... ok\n[Continuous Integration/sanitizers     ]   | test simd::test::can_search_for_null_bytes ... ok\n[Continuous Integration/sanitizers     ]   | test simd::test::can_search_in_null_bytes ... ok\n[Continuous Integration/sanitizers     ]   | test simd::test::misalignment_does_not_cause_a_false_positive_before_start ... ok\n[Continuous Integration/sanitizers     ]   | test simd::test::space_is_found ... ok\n[Continuous Integration/sanitizers     ]   | test simd::test::space_not_found ... ok\n[Continuous Integration/sanitizers     ]   | test simd::test::xml_delim_5_is_found ... ok\n[Continuous Integration/sanitizers     ]   | test simd::test::works_at_page_boundary ... ok\n[Continuous Integration/sanitizers     ]   | test simd::test::xml_delim_3_is_found ... ok\n[Continuous Integration/sanitizers     ]   | test simd::test::works_on_nonaligned_beginnings ... ok\n[Continuous Integration/sanitizers     ]   | test simd::test::works_as_find_does_for_byte_substrings ... ok\n[Continuous Integration/sanitizers     ]   | test simd::test::works_as_find_does_for_up_to_and_including_16_bytes ... ok\n[Continuous Integration/sanitizers     ]   | test simd::test::works_as_find_does_for_various_memory_offsets ... ok\n[Continuous Integration/sanitizers     ]   | \n[Continuous Integration/sanitizers     ]   | test result: ok. 17 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.26s\n[Continuous Integration/sanitizers     ]   | \n[Continuous Integration/sanitizers     ]   |    Doc-tests jetscii\n[Continuous Integration/sanitizers     ]   | \n[Continuous Integration/sanitizers     ]   | running 6 tests\n[Continuous Integration/sanitizers     ]   | test src/lib.rs - (line 62) ... ok\n[Continuous Integration/sanitizers     ]   | test src/lib.rs - (line 76) ... ok\n[Continuous Integration/sanitizers     ]   | test src/lib.rs - (line 24) ... ok\n[Continuous Integration/sanitizers     ]   | test src/lib.rs - (line 37) ... ok\n[Continuous Integration/sanitizers     ]   | test src/lib.rs - (line 47) ... ok\n[Continuous Integration/sanitizers     ]   | test src/lib.rs - (line 11) ... ok\n[Continuous Integration/sanitizers     ]   | \n[Continuous Integration/sanitizers     ]   | test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.58s\n[Continuous Integration/sanitizers     ]   | \n[Continuous Integration/sanitizers     ]   \u2705  Success - Main Run tests\n[Continuous Integration/sanitizers     ]   \u2705  Success - Main Run tests\n[Continuous Integration/sanitizers     ] \u2b50 Run Post Run tests\n[Continuous Integration/sanitizers     ]   \u2705  Success - Post Run tests\n[Continuous Integration/sanitizers     ] \ud83c\udfc1  Job succeeded\n[Continuous Integration/target_features]   |  Downloading crates ...\n[Continuous Integration/target_features]   |   Downloaded bit-vec v0.6.3\n[Continuous Integration/target_features]   |   Downloaded bitflags v1.3.2\n[Continuous Integration/target_features]   |   Downloaded lazy_static v1.4.0\n[Continuous Integration/target_features]   |   Downloaded bit-set v0.5.3\n[Continuous Integration/target_features]   |   Downloaded unarray v0.1.4\n[Continuous Integration/target_features]   |   Downloaded rand_xorshift v0.3.0\n[Continuous Integration/target_features]   |   Downloaded memmap v0.7.0\n[Continuous Integration/target_features]   |   Downloaded wait-timeout v0.2.0\n[Continuous Integration/target_features]   |   Downloaded tempfile v3.5.0\n[Continuous Integration/target_features]   |   Downloaded rand_chacha v0.3.1\n[Continuous Integration/target_features]   |   Downloaded quick-error v1.2.3\n[Continuous Integration/target_features]   |   Downloaded rand_core v0.6.4\n[Continuous Integration/target_features]   |   Downloaded num-traits v0.2.15\n[Continuous Integration/target_features]   |   Downloaded autocfg v1.1.0\n[Continuous Integration/target_features]   |   Downloaded fastrand v1.9.0\n[Continuous Integration/target_features]   |   Downloaded fnv v1.0.7\n[Continuous Integration/target_features]   |   Downloaded cfg-if v1.0.0\n[Continuous Integration/target_features]   |   Downloaded io-lifetimes v1.0.11\n[Continuous Integration/target_features]   |   Downloaded byteorder v1.4.3\n[Continuous Integration/target_features]   |   Downloaded getrandom v0.2.9\n[Continuous Integration/target_features]   |   Downloaded ppv-lite86 v0.2.17\n[Continuous Integration/target_features]   |   Downloaded rand v0.8.5\n[Continuous Integration/target_features]   |   Downloaded libm v0.2.7\n[Continuous Integration/target_features]   |   Downloaded rusty-fork v0.3.0\n[Continuous Integration/target_features]   |   Downloaded regex-syntax v0.6.29\n[Continuous Integration/target_features]   |   Downloaded rustix v0.37.19\n[Continuous Integration/target_features]   |   Downloaded linux-raw-sys v0.3.8\n[Continuous Integration/target_features]   |   Downloaded region v3.0.0\n[Continuous Integration/target_features]   |   Downloaded proptest v1.2.0\n[Continuous Integration/target_features]   |   Downloaded libc v0.2.144\n[Continuous Integration/target_features]   |    Compiling libc v0.2.144\n[Continuous Integration/target_features]   |    Compiling cfg-if v1.0.0\n[Continuous Integration/target_features]   |    Compiling io-lifetimes v1.0.11\n[Continuous Integration/target_features]   |    Compiling bitflags v1.3.2\n[Continuous Integration/target_features]   |    Compiling rustix v0.37.19\n[Continuous Integration/target_features]   |    Compiling autocfg v1.1.0\n[Continuous Integration/target_features]   |    Compiling libm v0.2.7\n[Continuous Integration/target_features]   |    Compiling linux-raw-sys v0.3.8\n[Continuous Integration/target_features]   |    Compiling fastrand v1.9.0\n[Continuous Integration/target_features]   |    Compiling ppv-lite86 v0.2.17\n[Continuous Integration/target_features]   |    Compiling quick-error v1.2.3\n[Continuous Integration/target_features]   |    Compiling fnv v1.0.7\n[Continuous Integration/target_features]   |    Compiling jetscii v0.5.3 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/shepmaster-jetscii)\n[Continuous Integration/target_features]   |    Compiling bit-vec v0.6.3\n[Continuous Integration/target_features]   |    Compiling lazy_static v1.4.0\n[Continuous Integration/target_features]   |    Compiling unarray v0.1.4\n[Continuous Integration/target_features]   |    Compiling byteorder v1.4.3\n[Continuous Integration/target_features]   |    Compiling regex-syntax v0.6.29\n[Continuous Integration/target_features]   |    Compiling bit-set v0.5.3\n[Continuous Integration/target_features]   |    Compiling num-traits v0.2.15\n[Continuous Integration/target_features]   |    Compiling getrandom v0.2.9\n[Continuous Integration/target_features]   |    Compiling wait-timeout v0.2.0\n[Continuous Integration/target_features]   |    Compiling region v3.0.0\n[Continuous Integration/target_features]   |    Compiling memmap v0.7.0\n[Continuous Integration/target_features]   |    Compiling rand_core v0.6.4\n[Continuous Integration/target_features]   |    Compiling rand_chacha v0.3.1\n[Continuous Integration/target_features]   |    Compiling rand_xorshift v0.3.0\n[Continuous Integration/target_features]   |    Compiling rand v0.8.5\n[Continuous Integration/target_features]   |    Compiling tempfile v3.5.0\n[Continuous Integration/target_features]   |    Compiling rusty-fork v0.3.0\n[Continuous Integration/target_features]   |    Compiling proptest v1.2.0\n[Continuous Integration/target_features]   |     Finished test [unoptimized + debuginfo] target(s) in 2m 56s\n[Continuous Integration/target_features]   |      Running unittests src/lib.rs (target/debug/deps/jetscii-bef4be5528b8fff3)\n[Continuous Integration/target_features]   | \n[Continuous Integration/target_features]   | running 17 tests\n[Continuous Integration/target_features]   | test simd::test::byte_substring_has_false_positive ... ok\n[Continuous Integration/target_features]   | test simd::test::byte_substring_is_found ... ok\n[Continuous Integration/target_features]   | test simd::test::byte_substring_needle_is_longer_than_16_bytes ... ok\n[Continuous Integration/target_features]   | test simd::test::can_search_in_null_bytes ... ok\n[Continuous Integration/target_features]   | test simd::test::can_search_for_null_bytes ... ok\n[Continuous Integration/target_features]   | test simd::test::byte_substring_is_not_found ... ok\n[Continuous Integration/target_features]   | test simd::test::does_not_access_memory_after_haystack_when_haystack_is_multiple_of_16_bytes_and_no_match ... ok\n[Continuous Integration/target_features]   | test simd::test::misalignment_does_not_cause_a_false_positive_before_start ... ok\n[Continuous Integration/target_features]   | test simd::test::space_is_found ... ok\n[Continuous Integration/target_features]   | test simd::test::space_not_found ... ok\n[Continuous Integration/target_features]   | test simd::test::works_on_nonaligned_beginnings ... ok\n[Continuous Integration/target_features]   | test simd::test::works_at_page_boundary ... ok\n[Continuous Integration/target_features]   | test simd::test::xml_delim_3_is_found ... ok\n[Continuous Integration/target_features]   | test simd::test::xml_delim_5_is_found ... ok\n[Continuous Integration/target_features]   | test simd::test::works_as_find_does_for_various_memory_offsets ... ok\n[Continuous Integration/target_features]   | test simd::test::works_as_find_does_for_up_to_and_including_16_bytes ... ok\n[Continuous Integration/target_features]   | test simd::test::works_as_find_does_for_byte_substrings ... ok\n[Continuous Integration/target_features]   | \n[Continuous Integration/target_features]   | test result: ok. 17 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.04s\n[Continuous Integration/target_features]   | \n[Continuous Integration/target_features]   |    Doc-tests jetscii\n[Continuous Integration/target_features]   | \n[Continuous Integration/target_features]   | running 6 tests\n[Continuous Integration/target_features]   | test src/lib.rs - (line 62) ... ok\n[Continuous Integration/target_features]   | test src/lib.rs - (line 76) ... ok\n[Continuous Integration/target_features]   | test src/lib.rs - (line 47) ... ok\n[Continuous Integration/target_features]   | test src/lib.rs - (line 24) ... ok\n[Continuous Integration/target_features]   | test src/lib.rs - (line 37) ... ok\n[Continuous Integration/target_features]   | test src/lib.rs - (line 11) ... ok\n[Continuous Integration/target_features]   | \n[Continuous Integration/target_features]   | test result: ok. 6 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.32s\n[Continuous Integration/target_features]   | \n[Continuous Integration/target_features]   \u2705  Success - Main Run tests\n[Continuous Integration/target_features]   \u2705  Success - Main Run tests\n[Continuous Integration/target_features] \u2b50 Run Post Run tests\n[Continuous Integration/target_features]   \u2705  Success - Post Run tests\n[Continuous Integration/target_features] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: Job 'platforms' failed\n"
}