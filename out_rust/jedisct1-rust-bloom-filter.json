{
    "repository": "jedisct1/rust-bloom-filter",
    "clone_url": "https://github.com/jedisct1/rust-bloom-filter.git",
    "timestamp": "2023-05-30T08:25:26.220247Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Continuous Integration/Check ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous Integration/test-1] \ud83d\udea7  Skipping unsupported platform -- Try running with `-P =...`\n[Continuous Integration/test-2] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous Integration/test-2]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous Integration/Check ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous Integration/Check ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/test-2]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/Check ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/test-2]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous Integration/Check ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/jedisct1-rust-bloom-filter] user=0 workdir=\n[Continuous Integration/test-2]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/jedisct1-rust-bloom-filter] user=0 workdir=\n[Continuous Integration/Check ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous Integration/test-2]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Continuous Integration/Check ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous Integration/test-2]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Continuous Integration/Check ] \u2b50 Run Main Checkout sources\n[Continuous Integration/Check ]   \u2705  Success - Main Checkout sources\n[Continuous Integration/test-2] \ud83e\uddea  Matrix: map[build:macos os:ubuntu-latest rust:stable]\n[Continuous Integration/test-2] \u2b50 Run Main actions/checkout@v2\n[Continuous Integration/Check ] \u2b50 Run Main Install stable toolchain\n[Continuous Integration/test-2]   \u2705  Success - Main actions/checkout@v2\n[Continuous Integration/Check ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous Integration/Check ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous Integration/test-2] \u2b50 Run Main actions-rs/toolchain@v1\n[Continuous Integration/Check ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous Integration/test-2]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Continuous Integration/Check ]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[Continuous Integration/Check ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous Integration/Check ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous Integration/Check ]   \ud83d\udcac  ::debug::Destination /tmp/74951389-17de-411e-b4e8-10b0b75767ec\n[Continuous Integration/Check ]   \ud83d\udcac  ::debug::download complete\n[Continuous Integration/Check ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/74951389-17de-411e-b4e8-10b0b75767ec\n[Continuous Integration/Check ]   | [command]/tmp/74951389-17de-411e-b4e8-10b0b75767ec --default-toolchain none -y\n[Continuous Integration/test-2]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Continuous Integration/Check ]   | info: downloading installer\n[Continuous Integration/test-2]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Continuous Integration/test-2]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[Continuous Integration/test-2]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous Integration/test-2]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous Integration/test-2]   \ud83d\udcac  ::debug::Destination /tmp/390f5c76-9178-40ef-81b8-9578e74db912\n[Continuous Integration/test-2]   \ud83d\udcac  ::debug::download complete\n[Continuous Integration/test-2]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/390f5c76-9178-40ef-81b8-9578e74db912\n[Continuous Integration/test-2]   | [command]/tmp/390f5c76-9178-40ef-81b8-9578e74db912 --default-toolchain none -y\n[Continuous Integration/Check ]   | info: profile set to 'default'\n[Continuous Integration/Check ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous Integration/Check ]   | info: skipping toolchain installation\n[Continuous Integration/Check ]   | \n[Continuous Integration/Check ]   | \n[Continuous Integration/Check ]   | Rust is installed now. Great!\n[Continuous Integration/Check ]   | \n[Continuous Integration/Check ]   | To get started you may need to restart your current shell.\n[Continuous Integration/Check ]   | This would reload your PATH environment variable to include\n[Continuous Integration/Check ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous Integration/Check ]   | \n[Continuous Integration/Check ]   | To configure your current shell, run:\n[Continuous Integration/Check ]   | source \"$HOME/.cargo/env\"\n[Continuous Integration/Check ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous Integration/Check ]   | Default host: x86_64-unknown-linux-gnu\n[Continuous Integration/Check ]   | rustup home:  /home/runneradmin/.rustup\n[Continuous Integration/Check ]   | \n[Continuous Integration/Check ]   | no active toolchain\n[Continuous Integration/Check ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/test-2]   | info: downloading installer\n[Continuous Integration/Check ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/Check ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/Check ]   | Installed rustup 1.26.0 support profiles\n[Continuous Integration/Check ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Continuous Integration/Check ]   | info: profile set to 'minimal'\n[Continuous Integration/Check ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[Continuous Integration/Check ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/Check ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/Check ]   | info: downloading component 'cargo'\n[Continuous Integration/Check ]   | info: downloading component 'rust-std'\n[Continuous Integration/test-2]   | info: profile set to 'default'\n[Continuous Integration/test-2]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous Integration/test-2]   | info: skipping toolchain installation\n[Continuous Integration/test-2]   | \n[Continuous Integration/test-2]   | \n[Continuous Integration/test-2]   | Rust is installed now. Great!\n[Continuous Integration/test-2]   | \n[Continuous Integration/test-2]   | To get started you may need to restart your current shell.\n[Continuous Integration/test-2]   | This would reload your PATH environment variable to include\n[Continuous Integration/test-2]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous Integration/test-2]   | \n[Continuous Integration/test-2]   | To configure your current shell, run:\n[Continuous Integration/test-2]   | source \"$HOME/.cargo/env\"\n[Continuous Integration/test-2]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous Integration/test-2]   | Default host: x86_64-unknown-linux-gnu\n[Continuous Integration/test-2]   | rustup home:  /home/runneradmin/.rustup\n[Continuous Integration/test-2]   | \n[Continuous Integration/test-2]   | no active toolchain\n[Continuous Integration/test-2]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[Continuous Integration/test-2]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/test-2]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/test-2]   | info: downloading component 'cargo'\n[Continuous Integration/Check ]   | info: downloading component 'rustc'\n[Continuous Integration/test-2]   | info: downloading component 'clippy'\n[Continuous Integration/test-2]   | info: downloading component 'rust-docs'\n[Continuous Integration/test-2]   | info: downloading component 'rust-std'\n[Continuous Integration/Check ]   | info: installing component 'cargo'\n[Continuous Integration/test-2]   | info: downloading component 'rustc'\n[Continuous Integration/test-2]   | info: downloading component 'rustfmt'\n[Continuous Integration/Check ]   | info: installing component 'rust-std'\n[Continuous Integration/test-2]   | info: installing component 'cargo'\n[Continuous Integration/test-2]   | info: installing component 'clippy'\n[Continuous Integration/test-2]   | info: installing component 'rust-docs'\n[Continuous Integration/Check ]   | info: installing component 'rustc'\n[Continuous Integration/test-2]   | info: installing component 'rust-std'\n[Continuous Integration/test-2]   | info: installing component 'rustc'\n[Continuous Integration/Check ]   | \n[Continuous Integration/Check ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/Check ]   | \n[Continuous Integration/Check ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/Check ]   | info: checking for self-update\n[Continuous Integration/Check ]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[Continuous Integration/Check ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/Check ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/jedisct1-rust-bloom-filter' set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/Check ]   | \n[Continuous Integration/Check ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/Check ]   | \n[Continuous Integration/Check ]   \u2753  ::group::Gathering installed versions\n[Continuous Integration/Check ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Continuous Integration/Check ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/Check ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/Check ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[Continuous Integration/Check ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Continuous Integration/Check ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[Continuous Integration/Check ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[Continuous Integration/Check ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/Check ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/Check ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/Check ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[Continuous Integration/Check ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/Check ]   \u2753  ::endgroup::\n[Continuous Integration/Check ]   \u2705  Success - Main Install stable toolchain\n[Continuous Integration/Check ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous Integration/Check ] \u2b50 Run Main Run cargo check\n[Continuous Integration/Check ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[Continuous Integration/Check ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[Continuous Integration/test-2]   | info: installing component 'rustfmt'\n[Continuous Integration/test-2]   | \n[Continuous Integration/test-2]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/test-2]   | \n[Continuous Integration/test-2]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/test-2]   | info: checking for self-update\n[Continuous Integration/test-2]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[Continuous Integration/test-2]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/test-2]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/jedisct1-rust-bloom-filter' set to 'stable-x86_64-unknown-linux-gnu'\n[Continuous Integration/test-2]   | \n[Continuous Integration/test-2]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/test-2]   | \n[Continuous Integration/test-2]   \u2753  ::group::Gathering installed versions\n[Continuous Integration/test-2]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Continuous Integration/test-2]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/test-2]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[Continuous Integration/test-2]   \u2699  ::set-output:: rustc_hash=84c898d65\n[Continuous Integration/test-2]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Continuous Integration/test-2]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[Continuous Integration/test-2]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[Continuous Integration/test-2]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous Integration/test-2]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/test-2]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous Integration/test-2]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[Continuous Integration/test-2]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Continuous Integration/test-2]   \u2753  ::endgroup::\n[Continuous Integration/test-2]   \u2705  Success - Main actions-rs/toolchain@v1\n[Continuous Integration/test-2]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous Integration/test-2] \u2b50 Run Main Run tests\n[Continuous Integration/test-2]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[Continuous Integration/test-2]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[Continuous Integration/test-2]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[Continuous Integration/Check ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[Continuous Integration/test-2]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[Continuous Integration/test-2]   | [command]/home/runneradmin/.cargo/bin/cargo test --no-fail-fast\n[Continuous Integration/Check ]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[Continuous Integration/Check ]   | [command]/home/runneradmin/.cargo/bin/cargo check\n[Continuous Integration/test-2]   |     Updating crates.io index\n[Continuous Integration/Check ]   |     Updating crates.io index\n[Continuous Integration/Check ]   |  Downloading crates ...\n[Continuous Integration/Check ]   |   Downloaded cfg-if v1.0.0\n[Continuous Integration/Check ]   |   Downloaded siphasher v0.3.10\n[Continuous Integration/Check ]   |   Downloaded libc v0.2.144\n[Continuous Integration/Check ]   |   Downloaded getrandom v0.2.9\n[Continuous Integration/Check ]   |   Downloaded bit-vec v0.6.3\n[Continuous Integration/Check ]   |    Compiling libc v0.2.144\n[Continuous Integration/Check ]   |     Checking cfg-if v1.0.0\n[Continuous Integration/Check ]   |     Checking bit-vec v0.6.3\n[Continuous Integration/Check ]   |     Checking siphasher v0.3.10\n[Continuous Integration/test-2]   |  Downloading crates ...\n[Continuous Integration/test-2]   |   Downloaded cfg-if v1.0.0\n[Continuous Integration/test-2]   |   Downloaded getrandom v0.2.9\n[Continuous Integration/test-2]   |   Downloaded siphasher v0.3.10\n[Continuous Integration/test-2]   |   Downloaded bit-vec v0.6.3\n[Continuous Integration/test-2]   |   Downloaded libc v0.2.144\n[Continuous Integration/test-2]   |     Blocking waiting for file lock on build directory\n[Continuous Integration/Check ]   |     Checking getrandom v0.2.9\n[Continuous Integration/Check ]   |     Checking bloomfilter v1.0.9 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/jedisct1-rust-bloom-filter)\n[Continuous Integration/Check ]   |     Finished dev [unoptimized + debuginfo] target(s) in 2m 26s\n[Continuous Integration/test-2]   |    Compiling libc v0.2.144\n[Continuous Integration/test-2]   |    Compiling cfg-if v1.0.0\n[Continuous Integration/test-2]   |    Compiling bit-vec v0.6.3\n[Continuous Integration/test-2]   |    Compiling siphasher v0.3.10\n[Continuous Integration/Check ]   \u2705  Success - Main Run cargo check\n[Continuous Integration/test-2]   |    Compiling getrandom v0.2.9\n[Continuous Integration/test-2]   |    Compiling bloomfilter v1.0.9 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/jedisct1-rust-bloom-filter)\n[Continuous Integration/Check ] \ud83c\udfc1  Job succeeded\n[Continuous Integration/test-2]   |     Finished test [unoptimized + debuginfo] target(s) in 2m 28s\n[Continuous Integration/test-2]   |      Running unittests src/lib.rs (target/debug/deps/bloomfilter-d09dbdd4de00030c)\n[Continuous Integration/test-2]   | \n[Continuous Integration/test-2]   | running 0 tests\n[Continuous Integration/test-2]   | \n[Continuous Integration/test-2]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Continuous Integration/test-2]   | \n[Continuous Integration/test-2]   |      Running tests/bloom.rs (target/debug/deps/bloom-f55e691a21d5acb3)\n[Continuous Integration/test-2]   | \n[Continuous Integration/test-2]   | running 4 tests\n[Continuous Integration/test-2]   | test bloom_test_check_and_set ... ok\n[Continuous Integration/test-2]   | test bloom_test_clear ... ok\n[Continuous Integration/test-2]   | test bloom_test_load ... ok\n[Continuous Integration/test-2]   | test bloom_test_set ... ok\n[Continuous Integration/test-2]   | \n[Continuous Integration/test-2]   | test result: ok. 4 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Continuous Integration/test-2]   | \n[Continuous Integration/test-2]   |    Doc-tests bloomfilter\n[Continuous Integration/test-2]   | \n[Continuous Integration/test-2]   | running 0 tests\n[Continuous Integration/test-2]   | \n[Continuous Integration/test-2]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Continuous Integration/test-2]   | \n[Continuous Integration/test-2]   \u2705  Success - Main Run tests\n[Continuous Integration/test-2] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}