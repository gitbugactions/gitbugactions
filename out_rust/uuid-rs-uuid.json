{
    "repository": "uuid-rs/uuid",
    "clone_url": "https://github.com/uuid-rs/uuid.git",
    "timestamp": "2023-05-30T08:26:43.227427Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Continuous integration/Tests / WebAssembly (wasm-bindgen)] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/Build / Embedded                  ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/Tests / OS:  - -                  ] \ud83d\udea7  Skipping unsupported platform -- Try running with `-P =...`\n[Continuous integration/Tests / Stable                    ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/Tests / WebAssembly (WASI)        ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/Build / No deps                   ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/Build / MSRV                      ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/Tests / MIPS (Big Endian)         ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/Build / Embedded                  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/Tests / WebAssembly (wasm-bindgen)]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/Tests / MIPS (Big Endian)         ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/Tests / Stable                    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/Build / MSRV                      ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/Tests / WebAssembly (WASI)        ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/Build / No deps                   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/Build / MSRV                      ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Tests / MIPS (Big Endian)         ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Tests / Stable                    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Tests / WebAssembly (wasm-bindgen)]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Tests / WebAssembly (WASI)        ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Build / No deps                   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Build / Embedded                  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Tests / Stable                    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Build / Embedded                  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Tests / WebAssembly (WASI)        ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Tests / WebAssembly (wasm-bindgen)]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Build / No deps                   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Build / MSRV                      ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Tests / MIPS (Big Endian)         ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Tests / Stable                    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/uuid-rs-uuid] user=0 workdir=\n[Continuous integration/Build / Embedded                  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/uuid-rs-uuid] user=0 workdir=\n[Continuous integration/Tests / WebAssembly (wasm-bindgen)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/uuid-rs-uuid] user=0 workdir=\n[Continuous integration/Tests / Stable                    ] \u2b50 Run Main Checkout sources\n[Continuous integration/Build / Embedded                  ] \u2b50 Run Main Checkout sources\n[Continuous integration/Tests / WebAssembly (wasm-bindgen)] \u2b50 Run Main Checkout sources\n[Continuous integration/Tests / WebAssembly (wasm-bindgen)]   \u2705  Success - Main Checkout sources\n[Continuous integration/Build / Embedded                  ]   \u2705  Success - Main Checkout sources\n[Continuous integration/Tests / Stable                    ]   \u2705  Success - Main Checkout sources\n[Continuous integration/Tests / Stable                    ] \u2b50 Run Main All features\n[Continuous integration/Tests / WebAssembly (wasm-bindgen)] \u2b50 Run Main Install\n[Continuous integration/Build / Embedded                  ] \u2b50 Run Main Install Rust toolchain\n[Continuous integration/Tests / Stable                    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[Continuous integration/Tests / WebAssembly (wasm-bindgen)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[Continuous integration/Build / Embedded                  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[Continuous integration/Tests / WebAssembly (wasm-bindgen)]   | sh: 139: [: x86_64: unexpected operator\n[Continuous integration/Tests / WebAssembly (wasm-bindgen)]   | wasm-pack-init: failed to find Rust installation, is rustup installed?\n[Continuous integration/Tests / WebAssembly (wasm-bindgen)]   \u274c  Failure - Main Install\n[Continuous integration/Tests / Stable                    ]   | /var/run/act/workflow/1: line 2: cargo: command not found\n[Continuous integration/Build / Embedded                  ]   | /var/run/act/workflow/1: line 2: rustup: command not found\n[Continuous integration/Tests / Stable                    ]   \u274c  Failure - Main All features\n[Continuous integration/Build / Embedded                  ]   \u274c  Failure - Main Install Rust toolchain\n[Continuous integration/Build / MSRV                      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/uuid-rs-uuid] user=0 workdir=\n[Continuous integration/Build / No deps                   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/uuid-rs-uuid] user=0 workdir=\n[Continuous integration/Tests / WebAssembly (WASI)        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/uuid-rs-uuid] user=0 workdir=\n[Continuous integration/Tests / WebAssembly (wasm-bindgen)] exitcode '1': failure\n[Continuous integration/Build / Embedded                  ] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[Continuous integration/Tests / Stable                    ] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[Continuous integration/Build / MSRV                      ] \u2b50 Run Main Checkout sources\n[Continuous integration/Build / No deps                   ] \u2b50 Run Main Checkout sources\n[Continuous integration/Tests / WebAssembly (WASI)        ] \u2b50 Run Main Checkout sources\n[Continuous integration/Build / No deps                   ]   \u2705  Success - Main Checkout sources\n[Continuous integration/Build / MSRV                      ]   \u2705  Success - Main Checkout sources\n[Continuous integration/Tests / WebAssembly (WASI)        ]   \u2705  Success - Main Checkout sources\n[Continuous integration/Build / No deps                   ] \u2b50 Run Main Install Rust toolchain\n[Continuous integration/Build / MSRV                      ] \u2b50 Run Main Install Rust toolchain\n[Continuous integration/Tests / WebAssembly (WASI)        ] \u2b50 Run Main Install Wasmtime\n[Continuous integration/Tests / MIPS (Big Endian)         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/uuid-rs-uuid] user=0 workdir=\n[Continuous integration/Build / No deps                   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[Continuous integration/Tests / WebAssembly (WASI)        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[Continuous integration/Build / MSRV                      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[Continuous integration/Tests / Stable                    ] \ud83c\udfc1  Job failed\n[Continuous integration/Build / Embedded                  ] \ud83c\udfc1  Job failed\n[Continuous integration/Tests / WebAssembly (wasm-bindgen)] \ud83c\udfc1  Job failed\n[Continuous integration/Build / No deps                   ]   | /var/run/act/workflow/1: line 2: rustup: command not found\n[Continuous integration/Build / No deps                   ]   \u274c  Failure - Main Install Rust toolchain\n[Continuous integration/Build / MSRV                      ]   | /var/run/act/workflow/1: line 2: rustup: command not found\n[Continuous integration/Build / MSRV                      ]   \u274c  Failure - Main Install Rust toolchain\n[Continuous integration/Tests / MIPS (Big Endian)         ] \u2b50 Run Main Checkout sources\n[Continuous integration/Tests / MIPS (Big Endian)         ]   \u2705  Success - Main Checkout sources\n[Continuous integration/Build / MSRV                      ] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[Continuous integration/Build / No deps                   ] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[Continuous integration/Tests / WebAssembly (WASI)        ]   | \u001b[1;32m  Installing\u001b[0m latest version of Wasmtime (v9.0.2)\n[Continuous integration/Tests / WebAssembly (WASI)        ]   | \u001b[1;32m    Checking\u001b[0m for existing Wasmtime installation\n[Continuous integration/Tests / WebAssembly (WASI)        ]   | \u001b[1;32m    Fetching\u001b[0m archive for Linux, version v9.0.2\n[Continuous integration/Tests / WebAssembly (WASI)        ]   | \u001b[1;32mhttps://github.com/bytecodealliance/wasmtime/releases/download/v9.0.2/wasmtime-v9.0.2-x86_64-linux.tar.xz\u001b[0m \n[Continuous integration/Tests / MIPS (Big Endian)         ] \u2b50 Run Main Install Cross\n[Continuous integration/Build / MSRV                      ] \ud83c\udfc1  Job failed\n[Continuous integration/Build / No deps                   ] \ud83c\udfc1  Job failed\n[Continuous integration/Tests / WebAssembly (WASI)        ]   | #=#=#                                                                         \r##O#- #                                                                       \r##O=#  #                                                                      \r#=#=-#  #                                                                     \r\r#############################                                             41.6%\r####################################################################      94.6%\r######################################################################## 100.0%\n[Continuous integration/Tests / WebAssembly (WASI)        ]   | \u001b[1;32m    Creating\u001b[0m directory layout\n[Continuous integration/Tests / WebAssembly (WASI)        ]   | \u001b[1;32m  Extracting\u001b[0m Wasmtime binaries\n[Continuous integration/Tests / WebAssembly (WASI)        ]   | wasmtime-v9.0.2-x86_64-linux/\n[Continuous integration/Tests / WebAssembly (WASI)        ]   | wasmtime-v9.0.2-x86_64-linux/wasmtime\n[Continuous integration/Tests / MIPS (Big Endian)         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[Continuous integration/Tests / WebAssembly (WASI)        ]   | wasmtime-v9.0.2-x86_64-linux/README.md\n[Continuous integration/Tests / WebAssembly (WASI)        ]   | wasmtime-v9.0.2-x86_64-linux/LICENSE\n[Continuous integration/Tests / WebAssembly (WASI)        ]   | \u001b[1;32m     Editing\u001b[0m user profile (/home/runneradmin/.bashrc)\n[Continuous integration/Tests / WebAssembly (WASI)        ]   | \u001b[1;32m    Finished\u001b[0m installation. Open a new terminal to start using Wasmtime!\n[Continuous integration/Tests / WebAssembly (WASI)        ]   \u2705  Success - Main Install Wasmtime\n[Continuous integration/Tests / WebAssembly (WASI)        ] \u2b50 Run Main Add Wasmtime to path\n[Continuous integration/Tests / WebAssembly (WASI)        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Continuous integration/Tests / WebAssembly (WASI)        ]   \u2705  Success - Main Add Wasmtime to path\n[Continuous integration/Tests / MIPS (Big Endian)         ]   | /var/run/act/workflow/1: line 2: cargo: command not found\n[Continuous integration/Tests / MIPS (Big Endian)         ]   \u274c  Failure - Main Install Cross\n[Continuous integration/Tests / WebAssembly (WASI)        ]   \u2699  ::add-path:: /home/runneradmin/.wasmtime/bin\n[Continuous integration/Tests / WebAssembly (WASI)        ] \u2b50 Run Main Install wasm32-wasi target\n[Continuous integration/Tests / MIPS (Big Endian)         ] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[Continuous integration/Tests / WebAssembly (WASI)        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Continuous integration/Tests / MIPS (Big Endian)         ] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/afd4c15ca0117ef4f6f6ecc51cb715284690450342a19f5c9ae283367f50aba5?force=1&v=1\": context deadline exceeded\n[Continuous integration/Tests / MIPS (Big Endian)         ] \ud83c\udfc1  Job failed\n[Continuous integration/Tests / WebAssembly (WASI)        ]   | /var/run/act/workflow/3: line 2: rustup: command not found\n[Continuous integration/Tests / WebAssembly (WASI)        ]   \u274c  Failure - Main Install wasm32-wasi target\n[Continuous integration/Tests / WebAssembly (WASI)        ] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[Continuous integration/Tests / WebAssembly (WASI)        ] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/1c73028a022d04d2155389fb5766f885ecb189a8748884de707b8c141decbf77?force=1&v=1\": context deadline exceeded\n[Continuous integration/Tests / WebAssembly (WASI)        ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Error occurred running finally: Error occurred running finally: context deadline exceeded (original error: <nil>) (original error: <nil>)\n"
}