{
    "repository": "osa1/tiny",
    "clone_url": "https://github.com/osa1/tiny.git",
    "timestamp": "2023-05-30T08:56:52.720398Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/Check formatting                         ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/[OSX, native TLS + notifications] Build  ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/[Linux, default] Build and test          ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/[Linux, native TLS + notifications] Build] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/[OSX, default] Build and test            ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Check formatting                         ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/[Linux, default] Build and test          ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/[OSX, native TLS + notifications] Build  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/[Linux, native TLS + notifications] Build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/[OSX, default] Build and test            ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/[Linux, native TLS + notifications] Build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/[OSX, default] Build and test            ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/[Linux, default] Build and test          ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/[OSX, native TLS + notifications] Build  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check formatting                         ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/[Linux, native TLS + notifications] Build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/[Linux, default] Build and test          ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/[OSX, default] Build and test            ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check formatting                         ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/[OSX, native TLS + notifications] Build  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/[Linux, default] Build and test          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny] user=0 workdir=\n[CI/[Linux, native TLS + notifications] Build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny] user=0 workdir=\n[CI/Check formatting                         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny] user=0 workdir=\n[CI/[OSX, native TLS + notifications] Build  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny] user=0 workdir=\n[CI/[OSX, default] Build and test            ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny] user=0 workdir=\n[CI/[OSX, native TLS + notifications] Build  ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/[Linux, default] Build and test          ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/[Linux, native TLS + notifications] Build]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/[OSX, default] Build and test            ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/Check formatting                         ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/[OSX, native TLS + notifications] Build  ] Unable to reset to 16499b5e05bf2e26879000db0c1d13f7e13fa3af: EOF\n[CI/[Linux, default] Build and test          ] Unable to checkout 16499b5e05bf2e26879000db0c1d13f7e13fa3af: EOF\n[CI/[Linux, native TLS + notifications] Build] \u2b50 Run Main actions/checkout@v2\n[CI/[OSX, default] Build and test            ] \u2b50 Run Main actions/checkout@v2\n[CI/Check formatting                         ] \u2b50 Run Main actions/checkout@v2\n[CI/[OSX, default] Build and test            ]   \u2705  Success - Main actions/checkout@v2\n[CI/[Linux, native TLS + notifications] Build]   \u2705  Success - Main actions/checkout@v2\n[CI/Check formatting                         ]   \u2705  Success - Main actions/checkout@v2\n[CI/[OSX, default] Build and test            ] \u2b50 Run Main Get stable toolchain\n[CI/[Linux, native TLS + notifications] Build] \u2b50 Run Main Install native dependencies\n[CI/Check formatting                         ] \u2b50 Run Main Get Rust stable toolchain\n[CI/[OSX, default] Build and test            ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/[Linux, native TLS + notifications] Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[CI/Check formatting                         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/[OSX, default] Build and test            ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/[Linux, default] Build and test          ] \ud83c\udfc1  Job succeeded\n[CI/Check formatting                         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/[OSX, native TLS + notifications] Build  ] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/5b6edf9deca76f2c4158f3ba60d056262a0ef4430e1db9540a504d285d184199?force=1&v=1\": context deadline exceeded\n[CI/[OSX, native TLS + notifications] Build  ] \ud83c\udfc1  Job succeeded\n[CI/[OSX, default] Build and test            ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/Check formatting                         ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/[Linux, native TLS + notifications] Build]   | Get:1 https://dl.hhvm.com/ubuntu focal InRelease [3137 B]\n[CI/[Linux, native TLS + notifications] Build]   | Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease\n[CI/[Linux, native TLS + notifications] Build]   | Get:3 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Get:4 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ InRelease [3622 B]\n[CI/[Linux, native TLS + notifications] Build]   | Get:5 http://dl.google.com/linux/chrome/deb stable InRelease [1825 B]\n[CI/[Linux, native TLS + notifications] Build]   | Hit:6 http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu focal InRelease\n[CI/[Linux, native TLS + notifications] Build]   | Get:7 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Hit:8 https://adoptopenjdk.jfrog.io/adoptopenjdk/deb focal InRelease\n[CI/[Linux, native TLS + notifications] Build]   | Get:9 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Get:10 https://dl.hhvm.com/ubuntu focal/main amd64 Packages [1880 B]\n[CI/[Linux, native TLS + notifications] Build]   | Get:11 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ Packages [77.6 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Err:5 http://dl.google.com/linux/chrome/deb stable InRelease\n[CI/[Linux, native TLS + notifications] Build]   |   The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[CI/[Linux, native TLS + notifications] Build]   | Get:12 https://packages.microsoft.com/ubuntu/20.04/prod focal InRelease [3611 B]\n[CI/[Linux, native TLS + notifications] Build]   | Get:13 http://security.ubuntu.com/ubuntu focal-security/restricted i386 Packages [36.9 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Get:14 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [739 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Get:15 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [739 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Get:16 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [1052 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Get:17 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [28.5 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Get:18 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [2270 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Get:19 http://security.ubuntu.com/ubuntu focal-security/multiverse i386 Packages [8141 B]\n[CI/[Linux, native TLS + notifications] Build]   | Get:20 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [2726 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Get:21 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [31.2 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Get:22 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [2412 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Get:23 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [3204 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Get:24 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1346 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Get:25 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [28.6 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Get:26 http://archive.ubuntu.com/ubuntu focal-backports/main amd64 Packages [55.2 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Get:27 https://packages.microsoft.com/ubuntu/20.04/prod focal/main amd64 Packages [201 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Get:28 https://packages.microsoft.com/ubuntu/20.04/prod focal/main all Packages [2521 B]\n[CI/[Linux, native TLS + notifications] Build]   | Fetched 15.3 MB in 11s (1427 kB/s)\n[CI/[Linux, native TLS + notifications] Build]   | Reading package lists...\n[CI/[Linux, native TLS + notifications] Build]   | W: An error occurred during the signature verification. The repository is not updated and the previous index files will be used. GPG error: http://dl.google.com/linux/chrome/deb stable InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[CI/[Linux, native TLS + notifications] Build]   | W: Failed to fetch http://dl.google.com/linux/chrome/deb/dists/stable/InRelease  The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[CI/[Linux, native TLS + notifications] Build]   | W: Some index files failed to download. They have been ignored, or old ones used instead.\n[CI/[Linux, native TLS + notifications] Build]   | Reading package lists...\n[CI/[Linux, native TLS + notifications] Build]   | Building dependency tree...\n[CI/[Linux, native TLS + notifications] Build]   | Reading state information...\n[CI/[Linux, native TLS + notifications] Build]   | pkg-config is already the newest version (0.29.1-0ubuntu4).\n[CI/[Linux, native TLS + notifications] Build]   | The following additional packages will be installed:\n[CI/[Linux, native TLS + notifications] Build]   |   dbus libdbus-1-3 libssl1.1\n[CI/[Linux, native TLS + notifications] Build]   | Suggested packages:\n[CI/[Linux, native TLS + notifications] Build]   |   libssl-doc\n[CI/[Linux, native TLS + notifications] Build]   | The following NEW packages will be installed:\n[CI/[Linux, native TLS + notifications] Build]   |   libdbus-1-dev\n[CI/[Linux, native TLS + notifications] Build]   | The following packages will be upgraded:\n[CI/[Linux, native TLS + notifications] Build]   |   dbus libdbus-1-3 libssl-dev libssl1.1\n[CI/[Linux, native TLS + notifications] Build]   | 4 upgraded, 1 newly installed, 0 to remove and 384 not upgraded.\n[CI/[Linux, native TLS + notifications] Build]   | Need to get 3406 kB of archives.\n[CI/[Linux, native TLS + notifications] Build]   | After this operation, 1009 kB of additional disk space will be used.\n[CI/[Linux, native TLS + notifications] Build]   | Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 dbus amd64 1.12.16-2ubuntu2.3 [151 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Get:2 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libdbus-1-3 amd64 1.12.16-2ubuntu2.3 [179 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Get:3 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libssl-dev amd64 1.1.1f-1ubuntu2.18 [1586 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Get:4 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libssl1.1 amd64 1.1.1f-1ubuntu2.18 [1322 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Get:5 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libdbus-1-dev amd64 1.12.16-2ubuntu2.3 [167 kB]\n[CI/[Linux, native TLS + notifications] Build]   | Preconfiguring packages ...\n[CI/[Linux, native TLS + notifications] Build]   | Fetched 3406 kB in 1s (2321 kB/s)\n[CI/[Linux, native TLS + notifications] Build]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 193678 files and directories currently installed.)\r\n[CI/[Linux, native TLS + notifications] Build]   | Preparing to unpack .../dbus_1.12.16-2ubuntu2.3_amd64.deb ...\r\n[CI/[Linux, native TLS + notifications] Build]   | Unpacking dbus (1.12.16-2ubuntu2.3) over (1.12.16-2ubuntu2.1) ...\r\n[CI/[Linux, native TLS + notifications] Build]   | Preparing to unpack .../libdbus-1-3_1.12.16-2ubuntu2.3_amd64.deb ...\r\n[CI/[Linux, native TLS + notifications] Build]   | Unpacking libdbus-1-3:amd64 (1.12.16-2ubuntu2.3) over (1.12.16-2ubuntu2.1) ...\r\n[CI/[Linux, native TLS + notifications] Build]   | Preparing to unpack .../libssl-dev_1.1.1f-1ubuntu2.18_amd64.deb ...\r\n[CI/[Linux, native TLS + notifications] Build]   | Unpacking libssl-dev:amd64 (1.1.1f-1ubuntu2.18) over (1.1.1f-1ubuntu2.8) ...\r\n[CI/[Linux, native TLS + notifications] Build]   | Preparing to unpack .../libssl1.1_1.1.1f-1ubuntu2.18_amd64.deb ...\r\n[CI/[Linux, native TLS + notifications] Build]   | Unpacking libssl1.1:amd64 (1.1.1f-1ubuntu2.18) over (1.1.1f-1ubuntu2.8) ...\r\n[CI/[Linux, native TLS + notifications] Build]   | Selecting previously unselected package libdbus-1-dev:amd64.\r\n[CI/[Linux, native TLS + notifications] Build]   | Preparing to unpack .../libdbus-1-dev_1.12.16-2ubuntu2.3_amd64.deb ...\r\n[CI/[Linux, native TLS + notifications] Build]   | Unpacking libdbus-1-dev:amd64 (1.12.16-2ubuntu2.3) ...\r\n[CI/[Linux, native TLS + notifications] Build]   | Setting up libssl1.1:amd64 (1.1.1f-1ubuntu2.18) ...\r\n[CI/[Linux, native TLS + notifications] Build]   | Setting up libdbus-1-3:amd64 (1.12.16-2ubuntu2.3) ...\r\n[CI/[Linux, native TLS + notifications] Build]   | Setting up dbus (1.12.16-2ubuntu2.3) ...\r\n[CI/[Linux, native TLS + notifications] Build]   | Setting up libssl-dev:amd64 (1.1.1f-1ubuntu2.18) ...\r\n[CI/[Linux, native TLS + notifications] Build]   | Setting up libdbus-1-dev:amd64 (1.12.16-2ubuntu2.3) ...\r\n[CI/[Linux, native TLS + notifications] Build]   | Processing triggers for systemd (245.4-4ubuntu3.11) ...\r\n[CI/[Linux, native TLS + notifications] Build]   | Processing triggers for libc-bin (2.31-0ubuntu9.2) ...\r\n[CI/[Linux, native TLS + notifications] Build]   \u2705  Success - Main Install native dependencies\n[CI/[Linux, native TLS + notifications] Build] \u2b50 Run Main Get stable toolchain\n[CI/[Linux, native TLS + notifications] Build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/[Linux, native TLS + notifications] Build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/[Linux, native TLS + notifications] Build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/[OSX, default] Build and test            ]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[CI/[OSX, default] Build and test            ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/[OSX, default] Build and test            ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/[OSX, default] Build and test            ]   \ud83d\udcac  ::debug::Destination /tmp/e05b02c1-b14b-4018-bd18-6fd670562f02\n[CI/[OSX, default] Build and test            ]   \ud83d\udcac  ::debug::download complete\n[CI/[OSX, default] Build and test            ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/e05b02c1-b14b-4018-bd18-6fd670562f02\n[CI/[OSX, default] Build and test            ]   | [command]/tmp/e05b02c1-b14b-4018-bd18-6fd670562f02 --default-toolchain none -y\n[CI/[OSX, default] Build and test            ]   | info: downloading installer\n[CI/Check formatting                         ]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[CI/Check formatting                         ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/Check formatting                         ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/Check formatting                         ]   \ud83d\udcac  ::debug::Destination /tmp/bd3c9ff2-1a7e-4366-b9f3-6587a4632c8e\n[CI/[Linux, native TLS + notifications] Build]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[CI/[Linux, native TLS + notifications] Build]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/[Linux, native TLS + notifications] Build]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/[Linux, native TLS + notifications] Build]   \ud83d\udcac  ::debug::Destination /tmp/fe6f78b3-2164-4735-90af-2ac8f873e121\n[CI/Check formatting                         ]   \ud83d\udcac  ::debug::download complete\n[CI/Check formatting                         ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/bd3c9ff2-1a7e-4366-b9f3-6587a4632c8e\n[CI/Check formatting                         ]   | [command]/tmp/bd3c9ff2-1a7e-4366-b9f3-6587a4632c8e --default-toolchain none -y\n[CI/Check formatting                         ]   | info: downloading installer\n[CI/[Linux, native TLS + notifications] Build]   \ud83d\udcac  ::debug::download complete\n[CI/[Linux, native TLS + notifications] Build]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/fe6f78b3-2164-4735-90af-2ac8f873e121\n[CI/[Linux, native TLS + notifications] Build]   | [command]/tmp/fe6f78b3-2164-4735-90af-2ac8f873e121 --default-toolchain none -y\n[CI/[Linux, native TLS + notifications] Build]   | info: downloading installer\n[CI/[OSX, default] Build and test            ]   | info: profile set to 'default'\n[CI/[OSX, default] Build and test            ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/[OSX, default] Build and test            ]   | info: skipping toolchain installation\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | Rust is installed now. Great!\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | To get started you may need to restart your current shell.\n[CI/[OSX, default] Build and test            ]   | This would reload your PATH environment variable to include\n[CI/[OSX, default] Build and test            ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | To configure your current shell, run:\n[CI/[OSX, default] Build and test            ]   | source \"$HOME/.cargo/env\"\n[CI/[OSX, default] Build and test            ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/[OSX, default] Build and test            ]   | Default host: x86_64-unknown-linux-gnu\n[CI/[OSX, default] Build and test            ]   | rustup home:  /home/runneradmin/.rustup\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/[Linux, native TLS + notifications] Build]   | info: profile set to 'default'\n[CI/[Linux, native TLS + notifications] Build]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/[Linux, native TLS + notifications] Build]   | info: skipping toolchain installation\n[CI/[Linux, native TLS + notifications] Build]   | \n[CI/[Linux, native TLS + notifications] Build]   | \n[CI/[Linux, native TLS + notifications] Build]   | Rust is installed now. Great!\n[CI/[Linux, native TLS + notifications] Build]   | \n[CI/[Linux, native TLS + notifications] Build]   | To get started you may need to restart your current shell.\n[CI/[Linux, native TLS + notifications] Build]   | This would reload your PATH environment variable to include\n[CI/[Linux, native TLS + notifications] Build]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/[Linux, native TLS + notifications] Build]   | \n[CI/[Linux, native TLS + notifications] Build]   | To configure your current shell, run:\n[CI/[Linux, native TLS + notifications] Build]   | source \"$HOME/.cargo/env\"\n[CI/[Linux, native TLS + notifications] Build]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/[Linux, native TLS + notifications] Build]   | Default host: x86_64-unknown-linux-gnu\n[CI/[Linux, native TLS + notifications] Build]   | rustup home:  /home/runneradmin/.rustup\n[CI/[Linux, native TLS + notifications] Build]   | \n[CI/[Linux, native TLS + notifications] Build]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/[OSX, default] Build and test            ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/[OSX, default] Build and test            ]   | info: downloading component 'cargo'\n[CI/[OSX, default] Build and test            ]   | info: downloading component 'clippy'\n[CI/[OSX, default] Build and test            ]   | info: downloading component 'rust-docs'\n[CI/[OSX, default] Build and test            ]   | info: downloading component 'rust-std'\n[CI/[OSX, default] Build and test            ]   | info: downloading component 'rustc'\n[CI/[Linux, native TLS + notifications] Build]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/[Linux, native TLS + notifications] Build]   | info: downloading component 'cargo'\n[CI/[OSX, default] Build and test            ]   | info: downloading component 'rustfmt'\n[CI/[Linux, native TLS + notifications] Build]   | info: downloading component 'clippy'\n[CI/[Linux, native TLS + notifications] Build]   | info: downloading component 'rust-docs'\n[CI/[OSX, default] Build and test            ]   | info: installing component 'cargo'\n[CI/[Linux, native TLS + notifications] Build]   | info: downloading component 'rust-std'\n[CI/Check formatting                         ]   | info: profile set to 'default'\n[CI/Check formatting                         ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Check formatting                         ]   | info: skipping toolchain installation\n[CI/Check formatting                         ]   | \n[CI/Check formatting                         ]   | \n[CI/Check formatting                         ]   | Rust is installed now. Great!\n[CI/Check formatting                         ]   | \n[CI/Check formatting                         ]   | To get started you may need to restart your current shell.\n[CI/Check formatting                         ]   | This would reload your PATH environment variable to include\n[CI/Check formatting                         ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Check formatting                         ]   | \n[CI/Check formatting                         ]   | To configure your current shell, run:\n[CI/Check formatting                         ]   | source \"$HOME/.cargo/env\"\n[CI/Check formatting                         ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/Check formatting                         ]   | Default host: x86_64-unknown-linux-gnu\n[CI/Check formatting                         ]   | rustup home:  /home/runneradmin/.rustup\n[CI/Check formatting                         ]   | \n[CI/Check formatting                         ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/[Linux, native TLS + notifications] Build]   | info: downloading component 'rustc'\n[CI/Check formatting                         ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/Check formatting                         ]   | info: downloading component 'cargo'\n[CI/[OSX, default] Build and test            ]   | info: installing component 'clippy'\n[CI/Check formatting                         ]   | info: downloading component 'clippy'\n[CI/Check formatting                         ]   | info: downloading component 'rust-docs'\n[CI/Check formatting                         ]   | info: downloading component 'rust-std'\n[CI/[OSX, default] Build and test            ]   | info: installing component 'rust-docs'\n[CI/[Linux, native TLS + notifications] Build]   | info: downloading component 'rustfmt'\n[CI/[Linux, native TLS + notifications] Build]   | info: installing component 'cargo'\n[CI/Check formatting                         ]   | info: downloading component 'rustc'\n[CI/[Linux, native TLS + notifications] Build]   | info: installing component 'clippy'\n[CI/[Linux, native TLS + notifications] Build]   | info: installing component 'rust-docs'\n[CI/Check formatting                         ]   | info: downloading component 'rustfmt'\n[CI/[OSX, default] Build and test            ]   | info: installing component 'rust-std'\n[CI/Check formatting                         ]   | info: installing component 'cargo'\n[CI/Check formatting                         ]   | info: installing component 'clippy'\n[CI/[Linux, native TLS + notifications] Build]   | info: installing component 'rust-std'\n[CI/Check formatting                         ]   | info: installing component 'rust-docs'\n[CI/[OSX, default] Build and test            ]   | info: installing component 'rustc'\n[CI/Check formatting                         ]   | info: installing component 'rust-std'\n[CI/[Linux, native TLS + notifications] Build]   | info: installing component 'rustc'\n[CI/Check formatting                         ]   | info: installing component 'rustc'\n[CI/[OSX, default] Build and test            ]   | info: installing component 'rustfmt'\n[CI/[OSX, default] Build and test            ]   | stable-x86_64-unknown-linux-gnu (overridden by '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/rust-toolchain')\n[CI/[OSX, default] Build and test            ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/[OSX, default] Build and test            ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[CI/[OSX, default] Build and test            ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | info: checking for self-update\n[CI/[OSX, default] Build and test            ]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[CI/[OSX, default] Build and test            ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[CI/[OSX, default] Build and test            ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny' set to 'stable-x86_64-unknown-linux-gnu'\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   \u2753  ::group::Gathering installed versions\n[CI/[OSX, default] Build and test            ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/[OSX, default] Build and test            ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/[OSX, default] Build and test            ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[CI/[OSX, default] Build and test            ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[CI/[OSX, default] Build and test            ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/[OSX, default] Build and test            ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[CI/[OSX, default] Build and test            ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[CI/[OSX, default] Build and test            ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/[OSX, default] Build and test            ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/[OSX, default] Build and test            ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/[OSX, default] Build and test            ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[CI/[OSX, default] Build and test            ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/[OSX, default] Build and test            ]   \u2753  ::endgroup::\n[CI/[OSX, default] Build and test            ]   \u2705  Success - Main Get stable toolchain\n[CI/[OSX, default] Build and test            ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/[OSX, default] Build and test            ] \u2b50 Run Main Build tiny\n[CI/[Linux, native TLS + notifications] Build]   | info: installing component 'rustfmt'\n[CI/[Linux, native TLS + notifications] Build]   | stable-x86_64-unknown-linux-gnu (overridden by '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/rust-toolchain')\n[CI/[Linux, native TLS + notifications] Build]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/[Linux, native TLS + notifications] Build]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[CI/[OSX, default] Build and test            ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/[Linux, native TLS + notifications] Build]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/[Linux, native TLS + notifications] Build]   | \n[CI/[Linux, native TLS + notifications] Build]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/[Linux, native TLS + notifications] Build]   | \n[CI/[Linux, native TLS + notifications] Build]   | info: checking for self-update\n[CI/[Linux, native TLS + notifications] Build]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[CI/[Linux, native TLS + notifications] Build]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[CI/[Linux, native TLS + notifications] Build]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny' set to 'stable-x86_64-unknown-linux-gnu'\n[CI/[Linux, native TLS + notifications] Build]   | \n[CI/[Linux, native TLS + notifications] Build]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/[Linux, native TLS + notifications] Build]   | \n[CI/[Linux, native TLS + notifications] Build]   \u2753  ::group::Gathering installed versions\n[CI/[Linux, native TLS + notifications] Build]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/[Linux, native TLS + notifications] Build]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/[Linux, native TLS + notifications] Build]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[CI/[Linux, native TLS + notifications] Build]   \u2699  ::set-output:: rustc_hash=84c898d65\n[CI/[Linux, native TLS + notifications] Build]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/[Linux, native TLS + notifications] Build]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[CI/[Linux, native TLS + notifications] Build]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[CI/[Linux, native TLS + notifications] Build]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/[Linux, native TLS + notifications] Build]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/[Linux, native TLS + notifications] Build]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/[Linux, native TLS + notifications] Build]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[CI/[Linux, native TLS + notifications] Build]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/[Linux, native TLS + notifications] Build]   \u2753  ::endgroup::\n[CI/[Linux, native TLS + notifications] Build]   \u2705  Success - Main Get stable toolchain\n[CI/[Linux, native TLS + notifications] Build]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/[Linux, native TLS + notifications] Build] \u2b50 Run Main Build with rustls and dbus\n[CI/Check formatting                         ]   | info: installing component 'rustfmt'\n[CI/[Linux, native TLS + notifications] Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/Check formatting                         ]   | stable-x86_64-unknown-linux-gnu (overridden by '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/rust-toolchain')\n[CI/Check formatting                         ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Check formatting                         ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Check formatting                         ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Check formatting                         ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Check formatting                         ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[CI/Check formatting                         ]   | Installed rustup 1.26.0 support components\n[CI/Check formatting                         ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable --component rustfmt\n[CI/Check formatting                         ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/Check formatting                         ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/Check formatting                         ]   | info: component 'rustfmt' for target 'x86_64-unknown-linux-gnu' is up to date\n[CI/Check formatting                         ]   | \n[CI/Check formatting                         ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Check formatting                         ]   | \n[CI/Check formatting                         ]   | info: checking for self-update\n[CI/Check formatting                         ]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[CI/Check formatting                         ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[CI/Check formatting                         ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny' set to 'stable-x86_64-unknown-linux-gnu'\n[CI/Check formatting                         ]   | \n[CI/Check formatting                         ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Check formatting                         ]   | \n[CI/Check formatting                         ]   \u2753  ::group::Gathering installed versions\n[CI/Check formatting                         ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/Check formatting                         ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Check formatting                         ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[CI/Check formatting                         ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[CI/Check formatting                         ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/Check formatting                         ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[CI/Check formatting                         ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[CI/Check formatting                         ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Check formatting                         ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Check formatting                         ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Check formatting                         ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[CI/Check formatting                         ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/Check formatting                         ]   \u2753  ::endgroup::\n[CI/Check formatting                         ]   \u2705  Success - Main Get Rust stable toolchain\n[CI/Check formatting                         ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Check formatting                         ] \u2b50 Run Main Check formatting\n[CI/Check formatting                         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/[Linux, native TLS + notifications] Build]   |     Updating crates.io index\n[CI/[OSX, default] Build and test            ]   |     Updating crates.io index\n[CI/Check formatting                         ]   \u2705  Success - Main Check formatting\n[CI/Check formatting                         ] \ud83c\udfc1  Job succeeded\n[CI/[Linux, native TLS + notifications] Build]   |  Downloading crates ...\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded futures-task v0.3.21\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded remove_dir_all v0.5.3\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded signal-hook-registry v1.4.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded tempfile v3.3.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded yaml-rust v0.4.5\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded waker-fn v1.1.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded unicode-width v0.1.9\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded toml v0.5.8\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded time v0.1.43\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded zbus_macros v2.1.1\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded zbus v2.1.1\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded async-channel v1.6.1\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded zvariant v3.1.2\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded base64 v0.13.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded bytes v1.1.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded futures-core v0.3.21\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded memoffset v0.6.5\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded parking v2.0.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded proc-macro-crate v1.1.3\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded rand_core v0.6.3\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded sha1_smol v1.0.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded unicode-xid v0.2.2\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded strsim v0.10.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded serde_repr v0.1.7\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded ryu v1.0.9\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded slab v0.4.5\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded tokio-native-tls v0.3.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded rand_chacha v0.3.1\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded serde_derive v1.0.136\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded serde v1.0.136\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded tokio-macros v1.7.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded syn v1.0.86\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded tokio-stream v0.1.8\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded async-task v4.1.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded zvariant_derive v3.1.2\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded zbus_names v2.1.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded textwrap v0.14.2\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded clap v3.1.3\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded regex-syntax v0.6.25\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded termion v1.5.6\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded openssl v0.10.38\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded enumflags2 v0.7.3\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded rand v0.8.5\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded tokio v1.17.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded numtoa v0.1.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded libc v0.2.119\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded cc v1.0.73\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded dirs v4.0.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded cfg-if v1.0.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded byteorder v1.4.3\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded pin-utils v0.1.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded hex v0.4.3\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded static_assertions v1.1.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded polling v2.2.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded native-tls v0.2.9\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded futures-lite v1.12.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded cache-padded v1.2.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded memchr v2.4.1\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded serde_yaml v0.8.23\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded pkg-config v0.3.24\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded openssl-sys v0.9.72\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded os_str_bytes v6.0.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded ordered-stream v0.0.1\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded once_cell v1.9.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded nix v0.23.1\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded indexmap v1.8.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded log v0.4.14\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded linked-hash-map v0.5.4\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded hashbrown v0.11.2\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded futures-util v0.3.21\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded futures-sink v0.3.21\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded futures-io v0.3.21\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded easy-parallel v3.2.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded foreign-types-shared v0.1.1\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded foreign-types v0.3.2\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded fastrand v1.7.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded event-listener v2.5.2\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded dirs-sys v0.3.6\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded derivative v2.2.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded async-trait v0.1.52\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded async-lock v2.5.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded async-io v1.6.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded async-executor v1.4.1\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded async-recursion v0.3.2\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded async-broadcast v0.3.4\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded lazy_static v1.4.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded bitflags v1.3.2\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded autocfg v1.1.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded atty v0.2.14\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded thiserror-impl v1.0.30\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded thiserror v1.0.30\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded termcolor v1.1.2\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded proc-macro2 v1.0.36\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded socket2 v0.4.4\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded quote v1.0.15\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded pin-project-lite v0.2.8\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded shell-words v1.1.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded sha1 v0.6.1\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded mio v0.8.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded regex v1.5.4\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded ppv-lite86 v0.2.16\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded openssl-probe v0.1.5\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded env_logger v0.9.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded concurrent-queue v1.2.2\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded aho-corasick v0.7.18\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded enumflags2_derive v0.7.3\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded rustc_tools_util v0.2.0\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded getrandom v0.2.5\n[CI/[Linux, native TLS + notifications] Build]   |   Downloaded notify-rust v4.5.6\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling libc v0.2.119\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling proc-macro2 v1.0.36\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling unicode-xid v0.2.2\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling syn v1.0.86\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling autocfg v1.1.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling cfg-if v1.0.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling memchr v2.4.1\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling log v0.4.14\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling futures-core v0.3.21\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling pin-project-lite v0.2.8\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling once_cell v1.9.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling serde v1.0.136\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling serde_derive v1.0.136\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling bitflags v1.3.2\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling pkg-config v0.3.24\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling cc v1.0.73\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling futures-task v0.3.21\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling slab v0.4.5\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling cache-padded v1.2.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling fastrand v1.7.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling waker-fn v1.1.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling parking v2.0.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling futures-util v0.3.21\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling futures-io v0.3.21\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling event-listener v2.5.2\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling bytes v1.1.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling async-trait v0.1.52\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling static_assertions v1.1.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling byteorder v1.4.3\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling regex-syntax v0.6.25\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling openssl v0.10.38\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling ppv-lite86 v0.2.16\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling futures-sink v0.3.21\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling pin-utils v0.1.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling foreign-types-shared v0.1.1\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling lazy_static v1.4.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling async-task v4.1.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling hashbrown v0.11.2\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling libtiny_common v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/libtiny_common)\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling native-tls v0.2.9\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling sha1_smol v1.0.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling easy-parallel v3.2.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling openssl-probe v0.1.5\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling linked-hash-map v0.5.4\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling numtoa v0.1.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling hex v0.4.3\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling rustc_tools_util v0.2.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling remove_dir_all v0.5.3\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling unicode-width v0.1.9\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling ryu v1.0.9\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling base64 v0.13.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling strsim v0.10.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling termcolor v1.1.2\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling textwrap v0.14.2\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling shell-words v1.1.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling concurrent-queue v1.2.2\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling async-lock v2.5.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling foreign-types v0.3.2\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling libtiny_wire v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/libtiny_wire)\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling memoffset v0.6.5\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling indexmap v1.8.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling yaml-rust v0.4.5\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling tiny v0.10.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/tiny)\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling sha1 v0.6.1\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling async-broadcast v0.3.4\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling ordered-stream v0.0.1\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling async-channel v1.6.1\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling env_logger v0.9.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling openssl-sys v0.9.72\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling aho-corasick v0.7.18\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling futures-lite v1.12.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling os_str_bytes v6.0.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling quote v1.0.15\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling async-executor v1.4.1\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling socket2 v0.4.4\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling mio v0.8.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling getrandom v0.2.5\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling signal-hook-registry v1.4.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling nix v0.23.1\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling polling v2.2.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling termion v1.5.6\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling time v0.1.43\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling tempfile v3.3.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling atty v0.2.14\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling dirs-sys v0.3.6\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling clap v3.1.3\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling dirs v4.0.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling rand_core v0.6.3\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling libtiny_logger v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/libtiny_logger)\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling async-io v1.6.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling regex v1.5.4\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling termbox_simple v0.2.3 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/termbox)\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling rand_chacha v0.3.1\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling rand v0.8.5\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling toml v0.5.8\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling thiserror-impl v1.0.30\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling enumflags2_derive v0.7.3\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling tokio-macros v1.7.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling serde_repr v0.1.7\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling async-recursion v0.3.2\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling derivative v2.2.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling term_input_macros v0.2.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/term_input_macros)\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling tokio v1.17.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling thiserror v1.0.30\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling proc-macro-crate v1.1.3\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling zvariant_derive v3.1.2\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling zbus_macros v2.1.1\n[CI/[OSX, default] Build and test            ]   |  Downloading crates ...\n[CI/[OSX, default] Build and test            ]   |   Downloaded atty v0.2.14\n[CI/[OSX, default] Build and test            ]   |   Downloaded pin-project-lite v0.2.8\n[CI/[OSX, default] Build and test            ]   |   Downloaded sct v0.7.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded time v0.1.43\n[CI/[OSX, default] Build and test            ]   |   Downloaded mio v0.8.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded signal-hook-registry v1.4.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded termion v1.5.6\n[CI/[OSX, default] Build and test            ]   |   Downloaded bitflags v1.3.2\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling tokio-stream v0.1.8\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling tokio-native-tls v0.3.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded base64 v0.13.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded serde v1.0.136\n[CI/[OSX, default] Build and test            ]   |   Downloaded openssl-probe v0.1.5\n[CI/[OSX, default] Build and test            ]   |   Downloaded autocfg v1.1.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded spin v0.5.2\n[CI/[OSX, default] Build and test            ]   |   Downloaded futures-task v0.3.21\n[CI/[OSX, default] Build and test            ]   |   Downloaded dirs v4.0.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded futures-core v0.3.21\n[CI/[OSX, default] Build and test            ]   |   Downloaded unicode-width v0.1.9\n[CI/[OSX, default] Build and test            ]   |   Downloaded lazy_static v1.4.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded untrusted v0.7.1\n[CI/[OSX, default] Build and test            ]   |   Downloaded cfg-if v1.0.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded dirs-sys v0.3.6\n[CI/[OSX, default] Build and test            ]   |   Downloaded rustls-pemfile v0.3.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded quote v1.0.15\n[CI/[OSX, default] Build and test            ]   |   Downloaded rustls-pemfile v0.2.1\n[CI/[OSX, default] Build and test            ]   |   Downloaded once_cell v1.9.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded pin-utils v0.1.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded memoffset v0.6.5\n[CI/[OSX, default] Build and test            ]   |   Downloaded tempfile v3.3.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded linked-hash-map v0.5.4\n[CI/[OSX, default] Build and test            ]   |   Downloaded ryu v1.0.9\n[CI/[OSX, default] Build and test            ]   |   Downloaded numtoa v0.1.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded env_logger v0.9.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded strsim v0.10.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded unicode-xid v0.2.2\n[CI/[OSX, default] Build and test            ]   |   Downloaded tokio-macros v1.7.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded remove_dir_all v0.5.3\n[CI/[OSX, default] Build and test            ]   |   Downloaded proc-macro2 v1.0.36\n[CI/[OSX, default] Build and test            ]   |   Downloaded socket2 v0.4.4\n[CI/[OSX, default] Build and test            ]   |   Downloaded indexmap v1.8.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded cc v1.0.73\n[CI/[OSX, default] Build and test            ]   |   Downloaded rustls-native-certs v0.6.1\n[CI/[OSX, default] Build and test            ]   |   Downloaded webpki v0.22.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded termcolor v1.1.2\n[CI/[OSX, default] Build and test            ]   |   Downloaded shell-words v1.1.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded serde_derive v1.0.136\n[CI/[OSX, default] Build and test            ]   |   Downloaded os_str_bytes v6.0.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded memchr v2.4.1\n[CI/[OSX, default] Build and test            ]   |   Downloaded yaml-rust v0.4.5\n[CI/[OSX, default] Build and test            ]   |   Downloaded log v0.4.14\n[CI/[OSX, default] Build and test            ]   |   Downloaded fastrand v1.7.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded tokio-stream v0.1.8\n[CI/[OSX, default] Build and test            ]   |   Downloaded hashbrown v0.11.2\n[CI/[OSX, default] Build and test            ]   |   Downloaded bytes v1.1.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded textwrap v0.14.2\n[CI/[OSX, default] Build and test            ]   |   Downloaded futures-util v0.3.21\n[CI/[OSX, default] Build and test            ]   |   Downloaded tokio-rustls v0.23.2\n[CI/[OSX, default] Build and test            ]   |   Downloaded nix v0.23.1\n[CI/[OSX, default] Build and test            ]   |   Downloaded syn v1.0.86\n[CI/[OSX, default] Build and test            ]   |   Downloaded rustls v0.20.4\n[CI/[OSX, default] Build and test            ]   |   Downloaded tokio v1.17.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded libc v0.2.119\n[CI/[OSX, default] Build and test            ]   |   Downloaded ring v0.16.20\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling term_input v0.2.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/term_input)\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling libtiny_client v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/libtiny_client)\n[CI/[OSX, default] Build and test            ]   |   Downloaded serde_yaml v0.8.23\n[CI/[OSX, default] Build and test            ]   |   Downloaded rustc_tools_util v0.2.0\n[CI/[OSX, default] Build and test            ]   |   Downloaded clap v3.1.3\n[CI/[OSX, default] Build and test            ]   |     Blocking waiting for file lock on build directory\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling enumflags2 v0.7.3\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling serde_yaml v0.8.23\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling zvariant v3.1.2\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling zbus_names v2.1.0\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling zbus v2.1.1\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling notify-rust v4.5.6\n[CI/[Linux, native TLS + notifications] Build]   |    Compiling libtiny_tui v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/libtiny_tui)\n[CI/[Linux, native TLS + notifications] Build]   |     Finished dev [unoptimized + debuginfo] target(s) in 3m 08s\n[CI/[OSX, default] Build and test            ]   |    Compiling syn v1.0.86\n[CI/[OSX, default] Build and test            ]   |    Compiling spin v0.5.2\n[CI/[OSX, default] Build and test            ]   |    Compiling untrusted v0.7.1\n[CI/[OSX, default] Build and test            ]   |    Compiling rustls v0.20.4\n[CI/[OSX, default] Build and test            ]   |    Compiling futures-task v0.3.21\n[CI/[OSX, default] Build and test            ]   |    Compiling futures-util v0.3.21\n[CI/[OSX, default] Build and test            ]   |    Compiling ring v0.16.20\n[CI/[OSX, default] Build and test            ]   |    Compiling rustls-pemfile v0.2.1\n[CI/[OSX, default] Build and test            ]   |    Compiling tiny v0.10.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/tiny)\n[CI/[OSX, default] Build and test            ]   |    Compiling rustls-pemfile v0.3.0\n[CI/[Linux, native TLS + notifications] Build]   \u2705  Success - Main Build with rustls and dbus\n[CI/[OSX, default] Build and test            ]   |    Compiling rustls-native-certs v0.6.1\n[CI/[OSX, default] Build and test            ]   |    Compiling webpki v0.22.0\n[CI/[OSX, default] Build and test            ]   |    Compiling sct v0.7.0\n[CI/[OSX, default] Build and test            ]   |    Compiling tokio-macros v1.7.0\n[CI/[OSX, default] Build and test            ]   |    Compiling serde_derive v1.0.136\n[CI/[OSX, default] Build and test            ]   |    Compiling term_input_macros v0.2.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/term_input_macros)\n[CI/[OSX, default] Build and test            ]   |    Compiling tokio v1.17.0\n[CI/[OSX, default] Build and test            ]   |    Compiling serde v1.0.136\n[CI/[OSX, default] Build and test            ]   |    Compiling tokio-stream v0.1.8\n[CI/[OSX, default] Build and test            ]   |    Compiling tokio-rustls v0.23.2\n[CI/[OSX, default] Build and test            ]   |    Compiling term_input v0.2.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/term_input)\n[CI/[OSX, default] Build and test            ]   |    Compiling libtiny_client v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/libtiny_client)\n[CI/[OSX, default] Build and test            ]   |    Compiling serde_yaml v0.8.23\n[CI/[OSX, default] Build and test            ]   |    Compiling libtiny_tui v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/libtiny_tui)\n[CI/[Linux, native TLS + notifications] Build] \ud83c\udfc1  Job succeeded\n[CI/[OSX, default] Build and test            ]   |     Finished dev [unoptimized + debuginfo] target(s) in 3m 29s\n[CI/[OSX, default] Build and test            ]   \u2705  Success - Main Build tiny\n[CI/[OSX, default] Build and test            ] \u2b50 Run Main Run tests\n[CI/[OSX, default] Build and test            ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/[OSX, default] Build and test            ]   |  Downloading crates ...\n[CI/[OSX, default] Build and test            ]   |   Downloaded bencher v0.1.5\n[CI/[OSX, default] Build and test            ]   |    Compiling bencher v0.1.5\n[CI/[OSX, default] Build and test            ]   |    Compiling libtiny_common v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/libtiny_common)\n[CI/[OSX, default] Build and test            ]   |    Compiling libtiny_wire v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/libtiny_wire)\n[CI/[OSX, default] Build and test            ]   |    Compiling libtiny_logger v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/libtiny_logger)\n[CI/[OSX, default] Build and test            ]   |    Compiling term_input_macros v0.2.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/term_input_macros)\n[CI/[OSX, default] Build and test            ]   |    Compiling libtiny_client v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/libtiny_client)\n[CI/[OSX, default] Build and test            ]   |    Compiling term_input v0.2.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/term_input)\n[CI/[OSX, default] Build and test            ]   |    Compiling libtiny_tui v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/libtiny_tui)\n[CI/[OSX, default] Build and test            ]   |    Compiling termbox_simple v0.2.3 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/termbox)\n[CI/[OSX, default] Build and test            ]   |    Compiling tiny v0.10.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/tiny)\n[CI/[OSX, default] Build and test            ]   |     Finished test [unoptimized + debuginfo] target(s) in 10.96s\n[CI/[OSX, default] Build and test            ]   |      Running unittests src/lib.rs (target/debug/deps/libtiny_client-9ffd62ba5e49277e)\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | running 8 tests\n[CI/[OSX, default] Build and test            ]   | test state::tests::test_parse_servername_1 ... ok\n[CI/[OSX, default] Build and test            ]   | test utils::tests::test_split_iterator_1 ... ok\n[CI/[OSX, default] Build and test            ]   | test state::tests::test_parse_servername_2 ... ok\n[CI/[OSX, default] Build and test            ]   | test utils::tests::test_split_iterator_2 ... ok\n[CI/[OSX, default] Build and test            ]   | test utils::tests::test_split_iterator_4 ... ok\n[CI/[OSX, default] Build and test            ]   | test utils::tests::test_split_iterator_5 ... ok\n[CI/[OSX, default] Build and test            ]   | test utils::tests::test_split_iterator_6 ... ok\n[CI/[OSX, default] Build and test            ]   | test utils::tests::test_split_iterator_3 ... ok\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | test result: ok. 8 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   |      Running unittests src/lib.rs (target/debug/deps/libtiny_common-ad9a2ad4a241fb34)\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | running 0 tests\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   |      Running unittests src/lib.rs (target/debug/deps/libtiny_logger-c6451142275bb8cd)\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | running 0 tests\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   |      Running unittests src/lib.rs (target/debug/deps/libtiny_tui-8c5d0c570d3501e9)\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | running 33 tests\n[CI/[OSX, default] Build and test            ]   | test key_map::deser_key_action_goto_tab ... ok\n[CI/[OSX, default] Build and test            ]   | test input_area::tests::test_set_buffer ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::init_screen ... ok\n[CI/[OSX, default] Build and test            ]   | test msg_area::line::height_test_3 ... ok\n[CI/[OSX, default] Build and test            ]   | test input_area::input_line::tests::test_calculate_height ... ok\n[CI/[OSX, default] Build and test            ]   | test msg_area::line::height_test_2 ... ok\n[CI/[OSX, default] Build and test            ]   | test msg_area::line::align_test ... ok\n[CI/[OSX, default] Build and test            ]   | test msg_area::line::height_test_1 ... ok\n[CI/[OSX, default] Build and test            ]   | test msg_area::tests::newline_scrolling ... ok\n[CI/[OSX, default] Build and test            ]   | test msg_area::line::height_test_4 ... ok\n[CI/[OSX, default] Build and test            ]   | test input_area::tests::text_field_bug ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::layout::test_join_part_overflow ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::close_rightmost_tab ... ok\n[CI/[OSX, default] Build and test            ]   | test trie::tests::trie_test_2 ... ok\n[CI/[OSX, default] Build and test            ]   | test trie::tests::trie_test_3 ... ok\n[CI/[OSX, default] Build and test            ]   | test trie::tests::trie_test_1 ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::resize::test_clear_resize_recalc_scroll ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::resize::test_resize_recalc_scroll ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::resize::test_resize_scroll_stick_to_top ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::resize::test_resize_scroll_resize ... ok\n[CI/[OSX, default] Build and test            ]   | test msg_area::tests::test_max_lines ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::layout::test_alignment_long_string ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::resize::test_resize_no_scroll_stay_on_bottom ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::ctrl_w ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::small_screen_1 ... ok\n[CI/[OSX, default] Build and test            ]   | test trie::tests::trie_test_insert_remove ... ok\n[CI/[OSX, default] Build and test            ]   | test key_map::deser_key ... ok\n[CI/[OSX, default] Build and test            ]   | test msg_area::line::height_test_5 ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::test_text_field_wrap ... ok\n[CI/[OSX, default] Build and test            ]   | test key_map::deser_keymap ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::layout::test_mnemonic_generation ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::small_screen_2 ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::resize::test_resize ... ok\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | test result: ok. 33 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.26s\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   |      Running unittests src/lib.rs (target/debug/deps/libtiny_wire-9c6edf4d844fa1d4)\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | running 21 tests\n[CI/[OSX, default] Build and test            ]   | test formatting::test_newline ... ok\n[CI/[OSX, default] Build and test            ]   | test formatting::test_parse_color ... ok\n[CI/[OSX, default] Build and test            ]   | test formatting::test_parse_text_1 ... ok\n[CI/[OSX, default] Build and test            ]   | test formatting::test_parse_text_2 ... ok\n[CI/[OSX, default] Build and test            ]   | test formatting::test_parse_text_4 ... ok\n[CI/[OSX, default] Build and test            ]   | test formatting::test_parse_text_3 ... ok\n[CI/[OSX, default] Build and test            ]   | test formatting::test_tab ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::test_ctcp_action_parsing_1 ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::other_ctcp_parsing ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::test_ctcp_action_parsing_2 ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::test_join_parsing ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::test_notice_parsing ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::test_parse_params ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::test_ctcp_version_parsing ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::test_parse_pfx ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::test_privmsg_parsing ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::test_numeric_parsing ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::test_part_parsing ... ok\n[CI/[OSX, default] Build and test            ]   | test formatting::test_parse_text_5 ... ok\n[CI/[OSX, default] Build and test            ]   | test formatting::test_translate_irc_control_chars ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::test_error_parsing ... ok\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | test result: ok. 21 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   |      Running unittests src/lib.rs (target/debug/deps/term_input-560d595d2a9c38c0)\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | running 7 tests\n[CI/[OSX, default] Build and test            ]   | test tests::test_alt_key ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::test_left_key ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::test_tab_key ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::test_del_key ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::test_utf8_char ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::test_esc_key ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::test_is_valid ... ok\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | test result: ok. 7 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   |      Running unittests src/lib.rs (target/debug/deps/term_input_macros-05709a343b12cbbb)\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | running 0 tests\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   |      Running unittests src/lib.rs (target/debug/deps/termbox_simple-e6d5d782c1084cdd)\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | running 0 tests\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   |      Running unittests src/main.rs (target/debug/deps/tiny-7cd9aac57175d712)\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | running 9 tests\n[CI/[OSX, default] Build and test            ]   | test cmd::test_msg_args ... ok\n[CI/[OSX, default] Build and test            ]   | test cmd::test_parse_cmd ... ok\n[CI/[OSX, default] Build and test            ]   | test config::tests::validation ... ok\n[CI/[OSX, default] Build and test            ]   | test config::tests::parse_password_field ... ok\n[CI/[OSX, default] Build and test            ]   | test utils::tests::split_ws_idx ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::test_privmsg_targetmask_issue_278 ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::test_bouncer_relay_issue_271 ... ok\n[CI/[OSX, default] Build and test            ]   | test config::tests::parse_default_config ... ok\n[CI/[OSX, default] Build and test            ]   | test tests::test_privmsg_from_user_without_user_or_host_part_issue_247 ... ok\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | test result: ok. 9 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   |    Doc-tests libtiny_client\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | running 0 tests\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   |    Doc-tests libtiny_common\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | running 0 tests\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   |    Doc-tests libtiny_logger\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | running 0 tests\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   |    Doc-tests libtiny_tui\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | running 0 tests\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   |    Doc-tests libtiny_wire\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | running 0 tests\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   |    Doc-tests term_input\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | running 0 tests\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   |    Doc-tests term_input_macros\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | running 0 tests\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   |    Doc-tests termbox_simple\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | running 0 tests\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[CI/[OSX, default] Build and test            ]   | \n[CI/[OSX, default] Build and test            ]   \u2705  Success - Main Run tests\n[CI/[OSX, default] Build and test            ] \u2b50 Run Main Build examples and benches\n[CI/[OSX, default] Build and test            ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[CI/[OSX, default] Build and test            ]   |    Compiling libtiny_tui v0.1.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/osa1-tiny/crates/libtiny_tui)\n[CI/[OSX, default] Build and test            ]   |     Finished dev [unoptimized + debuginfo] target(s) in 2.62s\n[CI/[OSX, default] Build and test            ]   \u2705  Success - Main Build examples and benches\n[CI/[OSX, default] Build and test            ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: EOF\n"
}