{
    "repository": "ben0x539/totally-safe-transmute",
    "clone_url": "https://github.com/ben0x539/totally-safe-transmute.git",
    "timestamp": "2023-05-30T09:41:00.974646Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[test it/windows] \ud83d\ude80  Start image=crawlergpt:latest\n[test it/ubuntu ] \ud83d\ude80  Start image=crawlergpt:latest\n[test it/ubuntu ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[test it/windows]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[test it/windows]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[test it/ubuntu ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[test it/windows]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[test it/ubuntu ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[test it/ubuntu ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/ben0x539-totally-safe-transmute] user=0 workdir=\n[test it/windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/ben0x539-totally-safe-transmute] user=0 workdir=\n[test it/ubuntu ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[test it/windows]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[test it/ubuntu ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[test it/windows]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[test it/ubuntu ] \u2b50 Run Main actions/checkout@v3\n[test it/ubuntu ]   \u2705  Success - Main actions/checkout@v3\n[test it/windows] \u2b50 Run Main actions/checkout@v3\n[test it/windows]   \u2705  Success - Main actions/checkout@v3\n[test it/ubuntu ] \u2b50 Run Main actions-rs/toolchain@v1\n[test it/ubuntu ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[test it/windows] \u2b50 Run Main actions-rs/toolchain@v1\n[test it/ubuntu ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[test it/windows]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[test it/windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[test it/windows]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[test it/ubuntu ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[test it/windows]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[test it/windows]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[test it/windows]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[test it/windows]   \ud83d\udcac  ::debug::Destination /tmp/c484ab7a-bc54-49ad-83b2-6361c35bc0ab\n[test it/ubuntu ]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[test it/ubuntu ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[test it/ubuntu ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[test it/ubuntu ]   \ud83d\udcac  ::debug::Destination /tmp/f9c25c72-ab07-4a03-95f4-f50803cf7b0e\n[test it/windows]   \ud83d\udcac  ::debug::download complete\n[test it/windows]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/c484ab7a-bc54-49ad-83b2-6361c35bc0ab\n[test it/windows]   | [command]/tmp/c484ab7a-bc54-49ad-83b2-6361c35bc0ab --default-toolchain none -y\n[test it/windows]   | info: downloading installer\n[test it/ubuntu ]   \ud83d\udcac  ::debug::download complete\n[test it/ubuntu ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/f9c25c72-ab07-4a03-95f4-f50803cf7b0e\n[test it/ubuntu ]   | [command]/tmp/f9c25c72-ab07-4a03-95f4-f50803cf7b0e --default-toolchain none -y\n[test it/ubuntu ]   | info: downloading installer\n[test it/windows]   | info: profile set to 'default'\n[test it/windows]   | info: default host triple is x86_64-unknown-linux-gnu\n[test it/windows]   | info: skipping toolchain installation\n[test it/windows]   | \n[test it/windows]   | \n[test it/windows]   | Rust is installed now. Great!\n[test it/windows]   | \n[test it/windows]   | To get started you may need to restart your current shell.\n[test it/windows]   | This would reload your PATH environment variable to include\n[test it/windows]   | Cargo's bin directory ($HOME/.cargo/bin).\n[test it/windows]   | \n[test it/windows]   | To configure your current shell, run:\n[test it/windows]   | source \"$HOME/.cargo/env\"\n[test it/windows]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[test it/windows]   | Default host: x86_64-unknown-linux-gnu\n[test it/windows]   | rustup home:  /home/runneradmin/.rustup\n[test it/windows]   | \n[test it/windows]   | no active toolchain\n[test it/windows]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[test it/windows]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[test it/windows]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[test it/windows]   | info: downloading component 'cargo'\n[test it/windows]   | info: downloading component 'clippy'\n[test it/windows]   | info: downloading component 'rust-docs'\n[test it/windows]   | info: downloading component 'rust-std'\n[test it/windows]   | info: downloading component 'rustc'\n[test it/ubuntu ]   | info: profile set to 'default'\n[test it/ubuntu ]   | info: default host triple is x86_64-unknown-linux-gnu\n[test it/ubuntu ]   | info: skipping toolchain installation\n[test it/ubuntu ]   | \n[test it/ubuntu ]   | \n[test it/ubuntu ]   | Rust is installed now. Great!\n[test it/ubuntu ]   | \n[test it/ubuntu ]   | To get started you may need to restart your current shell.\n[test it/ubuntu ]   | This would reload your PATH environment variable to include\n[test it/ubuntu ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[test it/ubuntu ]   | \n[test it/ubuntu ]   | To configure your current shell, run:\n[test it/ubuntu ]   | source \"$HOME/.cargo/env\"\n[test it/ubuntu ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[test it/ubuntu ]   | Default host: x86_64-unknown-linux-gnu\n[test it/ubuntu ]   | rustup home:  /home/runneradmin/.rustup\n[test it/ubuntu ]   | \n[test it/ubuntu ]   | no active toolchain\n[test it/ubuntu ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[test it/ubuntu ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[test it/ubuntu ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[test it/ubuntu ]   | info: downloading component 'cargo'\n[test it/ubuntu ]   | info: downloading component 'clippy'\n[test it/ubuntu ]   | info: downloading component 'rust-docs'\n[test it/windows]   | info: downloading component 'rustfmt'\n[test it/windows]   | info: installing component 'cargo'\n[test it/ubuntu ]   | info: downloading component 'rust-std'\n[test it/ubuntu ]   | info: downloading component 'rustc'\n[test it/windows]   | info: installing component 'clippy'\n[test it/ubuntu ]   | info: downloading component 'rustfmt'\n[test it/windows]   | info: installing component 'rust-docs'\n[test it/ubuntu ]   | info: installing component 'cargo'\n[test it/ubuntu ]   | info: installing component 'clippy'\n[test it/ubuntu ]   | info: installing component 'rust-docs'\n[test it/windows]   | info: installing component 'rust-std'\n[test it/ubuntu ]   | info: installing component 'rust-std'\n[test it/windows]   | info: installing component 'rustc'\n[test it/ubuntu ]   | info: installing component 'rustc'\n[test it/windows]   | info: installing component 'rustfmt'\n[test it/windows]   | \n[test it/windows]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[test it/windows]   | \n[test it/windows]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[test it/windows]   | info: checking for self-update\n[test it/windows]   \u2753  ::group::Gathering installed versions\n[test it/windows]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[test it/windows]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[test it/windows]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[test it/windows]   \u2699  ::set-output:: rustc_hash=84c898d65\n[test it/windows]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[test it/windows]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[test it/windows]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[test it/windows]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[test it/windows]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[test it/windows]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[test it/windows]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[test it/windows]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[test it/windows]   \u2753  ::endgroup::\n[test it/windows]   \u2705  Success - Main actions-rs/toolchain@v1\n[test it/windows]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[test it/ubuntu ]   | info: installing component 'rustfmt'\n[test it/windows] \u2b50 Run Main actions-rs/cargo@v1\n[test it/windows]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[test it/windows]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[test it/ubuntu ]   | \n[test it/ubuntu ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[test it/ubuntu ]   | \n[test it/ubuntu ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[test it/ubuntu ]   | info: checking for self-update\n[test it/ubuntu ]   \u2753  ::group::Gathering installed versions\n[test it/ubuntu ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[test it/ubuntu ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[test it/ubuntu ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[test it/ubuntu ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[test it/ubuntu ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[test it/ubuntu ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[test it/ubuntu ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[test it/ubuntu ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[test it/ubuntu ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[test it/ubuntu ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[test it/ubuntu ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[test it/ubuntu ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[test it/ubuntu ]   \u2753  ::endgroup::\n[test it/ubuntu ]   \u2705  Success - Main actions-rs/toolchain@v1\n[test it/ubuntu ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[test it/ubuntu ] \u2b50 Run Main actions-rs/cargo@v1\n[test it/ubuntu ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[test it/ubuntu ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[test it/ubuntu ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[test it/windows]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[test it/windows]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[test it/windows]   | [command]/home/runneradmin/.cargo/bin/cargo test\n[test it/ubuntu ]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[test it/ubuntu ]   | [command]/home/runneradmin/.cargo/bin/cargo test\n[test it/ubuntu ]   |     Blocking waiting for file lock on build directory\n[test it/windows]   |    Compiling totally-safe-transmute v0.0.3 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/ben0x539-totally-safe-transmute)\n[test it/windows]   |     Finished test [unoptimized + debuginfo] target(s) in 1.29s\n[test it/windows]   |      Running unittests src/lib.rs (target/debug/deps/totally_safe_transmute-fa06c0e1f0e8019a)\n[test it/ubuntu ]   |     Finished test [unoptimized + debuginfo] target(s) in 1.29s\n[test it/windows]   | \n[test it/windows]   | running 1 test\n[test it/windows]   | test main ... ok\n[test it/windows]   | \n[test it/windows]   | test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[test it/windows]   | \n[test it/windows]   |    Doc-tests totally-safe-transmute\n[test it/ubuntu ]   |      Running unittests src/lib.rs (target/debug/deps/totally_safe_transmute-fa06c0e1f0e8019a)\n[test it/ubuntu ]   | \n[test it/ubuntu ]   | running 1 test\n[test it/ubuntu ]   | test main ... ok\n[test it/ubuntu ]   | \n[test it/ubuntu ]   | test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[test it/ubuntu ]   | \n[test it/ubuntu ]   |    Doc-tests totally-safe-transmute\n[test it/windows]   | \n[test it/windows]   | running 0 tests\n[test it/windows]   | \n[test it/windows]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[test it/windows]   | \n[test it/ubuntu ]   | \n[test it/ubuntu ]   | running 0 tests\n[test it/ubuntu ]   | \n[test it/ubuntu ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[test it/ubuntu ]   | \n[test it/windows]   \u2705  Success - Main actions-rs/cargo@v1\n[test it/ubuntu ]   \u2705  Success - Main actions-rs/cargo@v1\n[test it/ubuntu ] \ud83c\udfc1  Job succeeded\n[test it/windows] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}