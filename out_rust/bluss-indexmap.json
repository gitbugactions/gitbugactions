{
    "repository": "bluss/indexmap",
    "clone_url": "https://github.com/bluss/indexmap.git",
    "timestamp": "2023-05-30T09:11:06.612343Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Continuous integration/clippy     ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/nostd_build] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/miri       ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/tests      ] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/nostd_build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/miri       ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/clippy     ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/tests      ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/nostd_build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/miri       ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/tests      ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/clippy     ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/clippy     ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/nostd_build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/miri       ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/tests      ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/nostd_build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-indexmap] user=0 workdir=\n[Continuous integration/nostd_build]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=master\n[Continuous integration/nostd_build] \u2b50 Run Pre dtolnay/rust-toolchain@master\n[Continuous integration/clippy     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-indexmap] user=0 workdir=\n[Continuous integration/nostd_build]   \u2705  Success - Pre dtolnay/rust-toolchain@master\n[Continuous integration/clippy     ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=beta\n[Continuous integration/tests      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-indexmap] user=0 workdir=\n[Continuous integration/miri       ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-indexmap] user=0 workdir=\n[Continuous integration/nostd_build] \ud83e\uddea  Matrix: map[rust:1.61.0 target:thumbv6m-none-eabi]\n[Continuous integration/clippy     ] \u2b50 Run Pre dtolnay/rust-toolchain@beta\n[Continuous integration/miri       ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=nightly\n[Continuous integration/tests      ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=master\n[Continuous integration/nostd_build] \u2b50 Run Main actions/checkout@v3\n[Continuous integration/miri       ] \u2b50 Run Pre dtolnay/rust-toolchain@nightly\n[Continuous integration/nostd_build]   \u2705  Success - Main actions/checkout@v3\n[Continuous integration/tests      ] \u2b50 Run Pre dtolnay/rust-toolchain@master\n[Continuous integration/miri       ]   \u2705  Success - Pre dtolnay/rust-toolchain@nightly\n[Continuous integration/clippy     ]   \u2705  Success - Pre dtolnay/rust-toolchain@beta\n[Continuous integration/tests      ]   \u2705  Success - Pre dtolnay/rust-toolchain@master\n[Continuous integration/nostd_build] \u2b50 Run Main dtolnay/rust-toolchain@master\n[Continuous integration/nostd_build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[Continuous integration/clippy     ] \u2b50 Run Main actions/checkout@v3\n[Continuous integration/miri       ] \u2b50 Run Main actions/checkout@v3\n[Continuous integration/miri       ]   \u2705  Success - Main actions/checkout@v3\n[Continuous integration/clippy     ]   \u2705  Success - Main actions/checkout@v3\n[Continuous integration/nostd_build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[Continuous integration/tests      ] \ud83e\uddea  Matrix: map[features:<nil> rust:1.61.0]\n[Continuous integration/tests      ] \u2b50 Run Main actions/checkout@v3\n[Continuous integration/tests      ]   \u2705  Success - Main actions/checkout@v3\n[Continuous integration/clippy     ] \u2b50 Run Main dtolnay/rust-toolchain@beta\n[Continuous integration/miri       ] \u2b50 Run Main dtolnay/rust-toolchain@nightly\n[Continuous integration/miri       ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@nightly/ dst=/var/run/act/actions/dtolnay-rust-toolchain@nightly/\n[Continuous integration/clippy     ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@beta/ dst=/var/run/act/actions/dtolnay-rust-toolchain@beta/\n[Continuous integration/miri       ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@nightly/] user=0 workdir=\n[Continuous integration/clippy     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@beta/] user=0 workdir=\n[Continuous integration/tests      ] \u2b50 Run Main dtolnay/rust-toolchain@master\n[Continuous integration/tests      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[Continuous integration/tests      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[Continuous integration/clippy     ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Continuous integration/nostd_build] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Continuous integration/miri       ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Continuous integration/tests      ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Continuous integration/miri       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[Continuous integration/clippy     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[Continuous integration/tests      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[Continuous integration/nostd_build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[Continuous integration/tests      ]   | OCI runtime exec failed: exec failed: unable to start container process: error executing setns process: exit status 1: unknown\r\n[Continuous integration/tests      ]   \u274c  Failure - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Continuous integration/miri       ]   | OCI runtime exec failed: exec failed: unable to start container process: error executing setns process: exit status 1: unknown\r\n[Continuous integration/miri       ]   \u274c  Failure - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Continuous integration/clippy     ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Continuous integration/nostd_build]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Continuous integration/clippy     ]   \u2699  ::set-output:: toolchain=beta\n[Continuous integration/nostd_build]   \u2699  ::set-output:: toolchain=1.61.0\n[Continuous integration/clippy     ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Continuous integration/nostd_build] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Continuous integration/clippy     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[Continuous integration/nostd_build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[Continuous integration/tests      ] Error response from daemon: Could not find the file /var/run/act/workflow/pathcmd.txt in container ec851fec24fea7b1bda1eeca2a2c2bc634c490e06580ca2fb1d31983226bc97f\n[Continuous integration/tests      ]   \u2699  ::set-output:: cachekey=\n[Continuous integration/tests      ]   \u2699  ::set-output:: name=\n[Continuous integration/tests      ]   \u274c  Failure - Main dtolnay/rust-toolchain@master\n[Continuous integration/tests      ] Error response from daemon: No such container: ec851fec24fea7b1bda1eeca2a2c2bc634c490e06580ca2fb1d31983226bc97f\n[Continuous integration/tests      ] \u2b50 Run Post dtolnay/rust-toolchain@master\n[Continuous integration/tests      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[Continuous integration/tests      ]   \u274c  Failure - Post dtolnay/rust-toolchain@master\n[Continuous integration/tests      ] failed to remove container: Error response from daemon: No such container: ec851fec24fea7b1bda1eeca2a2c2bc634c490e06580ca2fb1d31983226bc97f\n[Continuous integration/tests      ] \ud83c\udfc1  Job failed\n[Continuous integration/miri       ] Error response from daemon: Could not find the file /var/run/act/workflow/pathcmd.txt in container 014d5fef567a61940b790b57856a59585ff50b9a100db6ffb28b9107ac9a58f8\n[Continuous integration/nostd_build]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Continuous integration/clippy     ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Continuous integration/clippy     ]   \u2699  ::set-output:: targets=\n[Continuous integration/clippy     ]   \u2699  ::set-output:: components= --component clippy\n[Continuous integration/clippy     ]   \u2699  ::set-output:: downgrade=\n[Continuous integration/nostd_build]   \u2699  ::set-output:: targets= --target thumbv6m-none-eabi\n[Continuous integration/nostd_build]   \u2699  ::set-output:: components=\n[Continuous integration/nostd_build]   \u2699  ::set-output:: downgrade=\n[Continuous integration/clippy     ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Continuous integration/nostd_build] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Continuous integration/miri       ]   \u2699  ::set-output:: cachekey=\n[Continuous integration/miri       ]   \u2699  ::set-output:: name=\n[Continuous integration/miri       ]   \u274c  Failure - Main dtolnay/rust-toolchain@nightly\n[Continuous integration/miri       ] Error response from daemon: No such container: 014d5fef567a61940b790b57856a59585ff50b9a100db6ffb28b9107ac9a58f8\n[Continuous integration/miri       ] \u2b50 Run Post dtolnay/rust-toolchain@nightly\n[Continuous integration/miri       ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@nightly/ dst=/var/run/act/actions/dtolnay-rust-toolchain@nightly/\n[Continuous integration/miri       ]   \u274c  Failure - Post dtolnay/rust-toolchain@nightly\n[Continuous integration/miri       ] failed to remove container: Error response from daemon: No such container: 014d5fef567a61940b790b57856a59585ff50b9a100db6ffb28b9107ac9a58f8\n[Continuous integration/miri       ] \ud83c\udfc1  Job failed\n[Continuous integration/clippy     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[Continuous integration/nostd_build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[Continuous integration/nostd_build]   | info: downloading installer\n[Continuous integration/clippy     ]   | info: downloading installer\n[Continuous integration/nostd_build]   | info: profile set to 'default'\n[Continuous integration/nostd_build]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous integration/nostd_build]   | info: skipping toolchain installation\n[Continuous integration/nostd_build]   | \n[Continuous integration/nostd_build]   | \n[Continuous integration/nostd_build]   | Rust is installed now. Great!\n[Continuous integration/nostd_build]   | \n[Continuous integration/nostd_build]   | To get started you may need to restart your current shell.\n[Continuous integration/nostd_build]   | This would reload your PATH environment variable to include\n[Continuous integration/nostd_build]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous integration/nostd_build]   | \n[Continuous integration/nostd_build]   | To configure your current shell, run:\n[Continuous integration/nostd_build]   | source \"$HOME/.cargo/env\"\n[Continuous integration/nostd_build]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Continuous integration/clippy     ]   | info: profile set to 'default'\n[Continuous integration/clippy     ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous integration/clippy     ]   | info: skipping toolchain installation\n[Continuous integration/clippy     ]   | \n[Continuous integration/clippy     ]   | \n[Continuous integration/clippy     ]   | Rust is installed now. Great!\n[Continuous integration/clippy     ]   | \n[Continuous integration/clippy     ]   | To get started you may need to restart your current shell.\n[Continuous integration/clippy     ]   | This would reload your PATH environment variable to include\n[Continuous integration/clippy     ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous integration/clippy     ]   | \n[Continuous integration/clippy     ]   | To configure your current shell, run:\n[Continuous integration/clippy     ]   | source \"$HOME/.cargo/env\"\n[Continuous integration/clippy     ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Continuous integration/clippy     ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous integration/nostd_build]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous integration/nostd_build] \u2b50 Run Main rustup toolchain install 1.61.0\n[Continuous integration/clippy     ] \u2b50 Run Main rustup toolchain install beta\n[Continuous integration/nostd_build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[Continuous integration/clippy     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[Continuous integration/clippy     ]   | info: syncing channel updates for 'beta-x86_64-unknown-linux-gnu'\n[Continuous integration/clippy     ]   | info: latest update on 2023-05-30, rust version 1.71.0-beta.1 (eff24c06d 2023-05-29)\n[Continuous integration/clippy     ]   | info: downloading component 'cargo'\n[Continuous integration/clippy     ]   | info: downloading component 'clippy'\n[Continuous integration/clippy     ]   | info: downloading component 'rust-std'\n[Continuous integration/nostd_build]   | info: syncing channel updates for '1.61.0-x86_64-unknown-linux-gnu'\n[Continuous integration/nostd_build]   | info: latest update on 2022-05-19, rust version 1.61.0 (fe5b13d68 2022-05-18)\n[Continuous integration/nostd_build]   | info: downloading component 'cargo'\n[Continuous integration/clippy     ]   | info: downloading component 'rustc'\n[Continuous integration/nostd_build]   | info: downloading component 'rust-std' for 'thumbv6m-none-eabi'\n[Continuous integration/nostd_build]   | info: downloading component 'rust-std'\n[Continuous integration/clippy     ]   | info: installing component 'cargo'\n[Continuous integration/nostd_build]   | info: downloading component 'rustc'\n[Continuous integration/clippy     ]   | info: installing component 'clippy'\n[Continuous integration/clippy     ]   | info: installing component 'rust-std'\n[Continuous integration/clippy     ]   | info: installing component 'rustc'\n[Continuous integration/nostd_build]   | info: installing component 'cargo'\n[Continuous integration/nostd_build]   | info: installing component 'rust-std' for 'thumbv6m-none-eabi'\n[Continuous integration/clippy     ]   | \n[Continuous integration/clippy     ]   |   beta-x86_64-unknown-linux-gnu installed - rustc 1.71.0-beta.1 (eff24c06d 2023-05-29)\n[Continuous integration/clippy     ]   | \n[Continuous integration/clippy     ]   | info: default toolchain set to 'beta-x86_64-unknown-linux-gnu'\n[Continuous integration/clippy     ]   \u2705  Success - Main rustup toolchain install beta\n[Continuous integration/clippy     ] \u2b50 Run Main rustup default beta\n[Continuous integration/clippy     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[Continuous integration/nostd_build]   | info: installing component 'rust-std'\n[Continuous integration/nostd_build]   | info: installing component 'rustc'\n[Continuous integration/nostd_build]   | \n[Continuous integration/nostd_build]   |   1.61.0-x86_64-unknown-linux-gnu installed - rustc 1.61.0 (fe5b13d68 2022-05-18)\n[Continuous integration/nostd_build]   | \n[Continuous integration/nostd_build]   | info: default toolchain set to '1.61.0-x86_64-unknown-linux-gnu'\n[Continuous integration/nostd_build]   \u2705  Success - Main rustup toolchain install 1.61.0\n[Continuous integration/nostd_build] \u2b50 Run Main rustup default 1.61.0\n[Continuous integration/nostd_build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[Continuous integration/nostd_build]   | info: using existing install for '1.61.0-x86_64-unknown-linux-gnu'\n[Continuous integration/nostd_build]   | info: default toolchain set to '1.61.0-x86_64-unknown-linux-gnu'\n[Continuous integration/nostd_build]   | \n[Continuous integration/nostd_build]   |   1.61.0-x86_64-unknown-linux-gnu unchanged - rustc 1.61.0 (fe5b13d68 2022-05-18)\n[Continuous integration/nostd_build]   | \n[Continuous integration/clippy     ]   | info: using existing install for 'beta-x86_64-unknown-linux-gnu'\n[Continuous integration/nostd_build]   \u2705  Success - Main rustup default 1.61.0\n[Continuous integration/clippy     ]   | \n[Continuous integration/clippy     ]   | info: default toolchain set to 'beta-x86_64-unknown-linux-gnu'\n[Continuous integration/clippy     ]   |   beta-x86_64-unknown-linux-gnu unchanged - rustc 1.71.0-beta.1 (eff24c06d 2023-05-29)\n[Continuous integration/clippy     ]   | \n[Continuous integration/clippy     ]   \u2705  Success - Main rustup default beta\n[Continuous integration/nostd_build] \u2b50 Run Main : create cachekey\nDATE=$(rustc +1.61.0 --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +1.61.0 --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Continuous integration/clippy     ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +beta --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +beta --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Continuous integration/nostd_build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[Continuous integration/clippy     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[Continuous integration/nostd_build]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +1.61.0 --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +1.61.0 --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Continuous integration/clippy     ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +beta --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +beta --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Continuous integration/nostd_build]   \u2699  ::set-output:: cachekey=20220518fe5b\n[Continuous integration/clippy     ]   \u2699  ::set-output:: cachekey=20230529eff2\n[Continuous integration/nostd_build] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Continuous integration/clippy     ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Continuous integration/nostd_build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[Continuous integration/clippy     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[Continuous integration/clippy     ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Continuous integration/nostd_build]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Continuous integration/nostd_build] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Continuous integration/clippy     ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Continuous integration/clippy     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[Continuous integration/nostd_build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[Continuous integration/clippy     ]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Continuous integration/nostd_build]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Continuous integration/clippy     ] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +beta --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Continuous integration/nostd_build] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +1.61.0 --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Continuous integration/clippy     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[Continuous integration/nostd_build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[Continuous integration/clippy     ]   \u2705  Success - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +beta --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Continuous integration/nostd_build]   \u2705  Success - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +1.61.0 --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Continuous integration/nostd_build]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[Continuous integration/clippy     ]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[Continuous integration/clippy     ] \u2b50 Run Main rustc +beta --version --verbose\n[Continuous integration/nostd_build] \u2b50 Run Main rustc +1.61.0 --version --verbose\n[Continuous integration/nostd_build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-9.sh] user= workdir=\n[Continuous integration/clippy     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-9.sh] user= workdir=\n[Continuous integration/nostd_build]   | rustc 1.61.0 (fe5b13d68 2022-05-18)\n[Continuous integration/nostd_build]   | binary: rustc\n[Continuous integration/nostd_build]   | commit-hash: fe5b13d681f25ee6474be29d748c65adcd91f69e\n[Continuous integration/nostd_build]   | commit-date: 2022-05-18\n[Continuous integration/nostd_build]   | host: x86_64-unknown-linux-gnu\n[Continuous integration/nostd_build]   | release: 1.61.0\n[Continuous integration/nostd_build]   | LLVM version: 14.0.0\n[Continuous integration/nostd_build]   \u2705  Success - Main rustc +1.61.0 --version --verbose\n[Continuous integration/clippy     ]   | rustc 1.71.0-beta.1 (eff24c06d 2023-05-29)\n[Continuous integration/clippy     ]   | binary: rustc\n[Continuous integration/clippy     ]   | commit-hash: eff24c06d8f4397802b546aa2e52450e1022fc02\n[Continuous integration/clippy     ]   | commit-date: 2023-05-29\n[Continuous integration/clippy     ]   | host: x86_64-unknown-linux-gnu\n[Continuous integration/clippy     ]   | release: 1.71.0-beta.1\n[Continuous integration/clippy     ]   | LLVM version: 16.0.4\n[Continuous integration/clippy     ]   \u2705  Success - Main rustc +beta --version --verbose\n[Continuous integration/nostd_build]   \u2699  ::set-output:: cachekey=20220518fe5b\n[Continuous integration/nostd_build]   \u2699  ::set-output:: name=1.61.0\n[Continuous integration/nostd_build]   \u2705  Success - Main dtolnay/rust-toolchain@master\n[Continuous integration/clippy     ]   \u2699  ::set-output:: cachekey=20230529eff2\n[Continuous integration/clippy     ]   \u2699  ::set-output:: name=beta\n[Continuous integration/clippy     ]   \u2705  Success - Main dtolnay/rust-toolchain@beta\n[Continuous integration/nostd_build] \u2b50 Run Main Tests\n[Continuous integration/clippy     ] \u2b50 Run Main cargo clippy\n[Continuous integration/nostd_build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Continuous integration/clippy     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Updating\u001b[0m crates.io index\n[Continuous integration/nostd_build]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Updating\u001b[0m crates.io index\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m Downloading\u001b[0m crates ...\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m hashbrown v0.13.2\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Checking\u001b[0m hashbrown v0.13.2\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Checking\u001b[0m indexmap v2.0.0-pre (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/bluss-indexmap)\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: `if` chain can be rewritten with `match`\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/map/core.rs:401:13\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[38;5;12m401\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            if from < to {\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[38;5;12m402\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                self.decrement_indices(from + 1, to + 1);\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[38;5;12m403\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                self.entries[from..=to].rotate_left(1);\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[38;5;12m404\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            } else if to < from {\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[38;5;12m405\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                self.increment_indices(to, from);\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[38;5;12m406\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                self.entries[to..=from].rotate_right(1);\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[38;5;12m407\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            }\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____________^\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: consider rewriting the `if` chain to use `cmp` and `match`\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_chain\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::comparison_chain)]` on by default\u001b[0m\n[Continuous integration/clippy     ]   | \n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: manual implementation of `Option::map`\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/map.rs:575:9\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[38;5;12m575\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        match self.swap_remove_full(key) {\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[38;5;12m576\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Some((_, key, value)) => Some((key, value)),\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[38;5;12m577\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            None => None,\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[38;5;12m578\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try this: `self.swap_remove_full(key).map(|(_, key, value)| (key, value))`\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_map\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::manual_map)]` on by default\u001b[0m\n[Continuous integration/clippy     ]   | \n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: manual implementation of `Option::map`\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/map.rs:632:9\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[38;5;12m632\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m        match self.shift_remove_full(key) {\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[38;5;12m633\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Some((_, key, value)) => Some((key, value)),\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[38;5;12m634\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            None => None,\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[38;5;12m635\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        }\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try this: `self.shift_remove_full(key).map(|(_, key, value)| (key, value))`\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_map\u001b[0m\n[Continuous integration/clippy     ]   | \n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this loop could be written as a `for` loop\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/set/iter.rs:208:9\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[38;5;12m208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        while let Some(item) = self.iter.next() {\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `for item in self.iter.by_ref()`\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_on_iterator\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::while_let_on_iterator)]` on by default\u001b[0m\n[Continuous integration/clippy     ]   | \n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: this loop could be written as a `for` loop\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/set/iter.rs:291:9\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[1m\u001b[38;5;12m291\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        while let Some(item) = self.iter.next() {\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try: `for item in self.iter.by_ref()`\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n[Continuous integration/clippy     ]   | \u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_on_iterator\u001b[0m\n[Continuous integration/clippy     ]   | \n[Continuous integration/clippy     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[1m:\u001b[0m `indexmap` (lib) generated 5 warnings (run `cargo clippy --fix --lib -p indexmap` to apply 4 suggestions)\n[Continuous integration/clippy     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Finished\u001b[0m dev [unoptimized + debuginfo] target(s) in 4.75s\n[Continuous integration/clippy     ]   \u2705  Success - Main cargo clippy\n[Continuous integration/nostd_build]   \u274c  Failure - Main Tests\n[Continuous integration/clippy     ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/aee10647a06ed40db8a554d51b5ee3504c89a786fe00b6cf921769107ec8f45b/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Continuous integration/nostd_build] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/f296c519e09ef5f660695903ecece558b49d88a3349f2fc0b4539c289b9e273c/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Continuous integration/clippy     ] \u2b50 Run Post dtolnay/rust-toolchain@beta\n[Continuous integration/nostd_build] \u2b50 Run Post dtolnay/rust-toolchain@master\n[Continuous integration/clippy     ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@beta/ dst=/var/run/act/actions/dtolnay-rust-toolchain@beta/\n[Continuous integration/nostd_build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[Continuous integration/nostd_build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[Continuous integration/clippy     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@beta/] user=0 workdir=\n[Continuous integration/clippy     ]   \u2705  Success - Post dtolnay/rust-toolchain@beta\n[Continuous integration/nostd_build]   \u2705  Success - Post dtolnay/rust-toolchain@master\n[Continuous integration/nostd_build] \ud83c\udfc1  Job succeeded\n[Continuous integration/clippy     ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}