{
    "repository": "llogiq/bytecount",
    "clone_url": "https://github.com/llogiq/bytecount.git",
    "timestamp": "2023-05-30T09:11:12.874674Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Continuous integration/Test suite] \ud83d\ude80  Start image=crawlergpt:latest\n[Continuous integration/Test suite]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Continuous integration/Test suite]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Test suite]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Continuous integration/Test suite]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/llogiq-bytecount] user=0 workdir=\n[Continuous integration/Test suite]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1.0.7\n[Continuous integration/Test suite]   \u2601  git clone 'https://github.com/Swatinem/rust-cache' # ref=v2\n[Continuous integration/Test suite]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1.0.3\n[Continuous integration/Test suite]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1.0.3\n[Continuous integration/Test suite]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1.0.3\n[Continuous integration/Test suite]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1.0.3\n[Continuous integration/Test suite]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1.0.3\n[Continuous integration/Test suite] \ud83e\uddea  Matrix: map[arch:i686 features:default os:ubuntu-latest rust:1.32.0]\n[Continuous integration/Test suite] \u2b50 Run Main actions/checkout@v3\n[Continuous integration/Test suite]   \u2705  Success - Main actions/checkout@v3\n[Continuous integration/Test suite] \u2b50 Run Main actions-rs/toolchain@v1.0.7\n[Continuous integration/Test suite]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1.0.7/ dst=/var/run/act/actions/actions-rs-toolchain@v1.0.7/\n[Continuous integration/Test suite]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1.0.7/] user=0 workdir=\n[Continuous integration/Test suite]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1.0.7/dist/index.js] user= workdir=\n[Continuous integration/Test suite]   \ud83d\udcac  ::debug::using toolchain from input: 1.32.0\n[Continuous integration/Test suite]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Continuous integration/Test suite]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Continuous integration/Test suite]   \ud83d\udcac  ::debug::Destination /tmp/252e5e1a-83b8-457b-8785-6c385d7bacbe\n[Continuous integration/Test suite]   \ud83d\udcac  ::debug::download complete\n[Continuous integration/Test suite]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/252e5e1a-83b8-457b-8785-6c385d7bacbe\n[Continuous integration/Test suite]   | [command]/tmp/252e5e1a-83b8-457b-8785-6c385d7bacbe --default-toolchain none -y\n[Continuous integration/Test suite]   | info: downloading installer\n[Continuous integration/Test suite]   | info: profile set to 'default'\n[Continuous integration/Test suite]   | info: default host triple is x86_64-unknown-linux-gnu\n[Continuous integration/Test suite]   | info: skipping toolchain installation\n[Continuous integration/Test suite]   | \n[Continuous integration/Test suite]   | \n[Continuous integration/Test suite]   | Rust is installed now. Great!\n[Continuous integration/Test suite]   | \n[Continuous integration/Test suite]   | To get started you may need to restart your current shell.\n[Continuous integration/Test suite]   | This would reload your PATH environment variable to include\n[Continuous integration/Test suite]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Continuous integration/Test suite]   | \n[Continuous integration/Test suite]   | To configure your current shell, run:\n[Continuous integration/Test suite]   | source \"$HOME/.cargo/env\"\n[Continuous integration/Test suite]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Continuous integration/Test suite]   | Default host: x86_64-unknown-linux-gnu\n[Continuous integration/Test suite]   | rustup home:  /home/runneradmin/.rustup\n[Continuous integration/Test suite]   | \n[Continuous integration/Test suite]   | no active toolchain\n[Continuous integration/Test suite]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous integration/Test suite]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/Test suite]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous integration/Test suite]   | Installed rustup 1.26.0 support profiles\n[Continuous integration/Test suite]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous integration/Test suite]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/Test suite]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous integration/Test suite]   | Installed rustup 1.26.0 support components\n[Continuous integration/Test suite]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Continuous integration/Test suite]   | info: profile set to 'minimal'\n[Continuous integration/Test suite]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install 1.32.0 --component clippy --component rustfmt\n[Continuous integration/Test suite]   | info: syncing channel updates for '1.32.0-x86_64-unknown-linux-gnu'\n[Continuous integration/Test suite]   | info: latest update on 2019-01-17, rust version 1.32.0 (9fda7c223 2019-01-16)\n[Continuous integration/Test suite]   | info: downloading component 'cargo'\n[Continuous integration/Test suite]   | info: downloading component 'clippy'\n[Continuous integration/Test suite]   | info: downloading component 'rust-docs'\n[Continuous integration/Test suite]   | info: downloading component 'rust-std'\n[Continuous integration/Test suite]   | info: downloading component 'rustc'\n[Continuous integration/Test suite]   | info: downloading component 'rustfmt'\n[Continuous integration/Test suite]   | info: installing component 'cargo'\n[Continuous integration/Test suite]   | info: installing component 'clippy'\n[Continuous integration/Test suite]   | info: installing component 'rust-docs'\n[Continuous integration/Test suite]   | info: installing component 'rust-std'\n[Continuous integration/Test suite]   | info: installing component 'rustc'\n[Continuous integration/Test suite]   | info: installing component 'rustfmt'\n[Continuous integration/Test suite]   | \n[Continuous integration/Test suite]   |   1.32.0-x86_64-unknown-linux-gnu installed - rustc 1.32.0 (9fda7c223 2019-01-16)\n[Continuous integration/Test suite]   | \n[Continuous integration/Test suite]   | info: default toolchain set to '1.32.0-x86_64-unknown-linux-gnu'\n[Continuous integration/Test suite]   | info: checking for self-update\n[Continuous integration/Test suite]   | [command]/home/runneradmin/.cargo/bin/rustup override set 1.32.0\n[Continuous integration/Test suite]   | info: using existing install for '1.32.0-x86_64-unknown-linux-gnu'\n[Continuous integration/Test suite]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/llogiq-bytecount' set to '1.32.0-x86_64-unknown-linux-gnu'\n[Continuous integration/Test suite]   | \n[Continuous integration/Test suite]   |   1.32.0-x86_64-unknown-linux-gnu unchanged - rustc 1.32.0 (9fda7c223 2019-01-16)\n[Continuous integration/Test suite]   | \n[Continuous integration/Test suite]   \u2753  ::group::Gathering installed versions\n[Continuous integration/Test suite]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Continuous integration/Test suite]   | rustc 1.32.0 (9fda7c223 2019-01-16)\n[Continuous integration/Test suite]   \u2699  ::set-output:: rustc=1.32.0 (9fda7c223 2019-01-16)\n[Continuous integration/Test suite]   \u2699  ::set-output:: rustc_hash=9fda7c223\n[Continuous integration/Test suite]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Continuous integration/Test suite]   | cargo 1.32.0 (8610973aa 2019-01-02)\n[Continuous integration/Test suite]   \u2699  ::set-output:: cargo=1.32.0 (8610973aa 2019-01-02)\n[Continuous integration/Test suite]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Continuous integration/Test suite]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/Test suite]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Continuous integration/Test suite]   | info: The currently active `rustc` version is `rustc 1.32.0 (9fda7c223 2019-01-16)`\n[Continuous integration/Test suite]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Continuous integration/Test suite]   \u2753  ::endgroup::\n[Continuous integration/Test suite]   \u2705  Success - Main actions-rs/toolchain@v1.0.7\n[Continuous integration/Test suite]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Continuous integration/Test suite] \u2b50 Run Main Swatinem/rust-cache@v2\n[Continuous integration/Test suite]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/Swatinem-rust-cache@v2/ dst=/var/run/act/actions/Swatinem-rust-cache@v2/\n[Continuous integration/Test suite]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/Swatinem-rust-cache@v2/] user=0 workdir=\n[Continuous integration/Test suite]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/Swatinem-rust-cache@v2/dist/restore/index.js] user= workdir=\n[Continuous integration/Test suite]   \u2705  Success - Main Swatinem/rust-cache@v2\n[Continuous integration/Test suite]   \u2699  ::set-output:: cache-hit=false\n[Continuous integration/Test suite] \u2b50 Run Main Build (1.32.0, default)\n[Continuous integration/Test suite]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1.0.3/ dst=/var/run/act/actions/actions-rs-cargo@v1.0.3/\n[Continuous integration/Test suite]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1.0.3/] user=0 workdir=\n[Continuous integration/Test suite]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1.0.3/dist/index.js] user= workdir=\n[Continuous integration/Test suite]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1.0.3/dist/.matchers/rust.json\n[Continuous integration/Test suite]   | [command]/home/runneradmin/.cargo/bin/cargo build --release\n[Continuous integration/Test suite]   |     Updating crates.io index\n[Continuous integration/Test suite]   |    Compiling bytecount v0.6.3 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/llogiq-bytecount)\n[Continuous integration/Test suite]   |     Finished release [optimized] target(s) in 1m 36s\n[Continuous integration/Test suite]   \u2705  Success - Main Build (1.32.0, default)\n[Continuous integration/Test suite] \u2b50 Run Post Swatinem/rust-cache@v2\n[Continuous integration/Test suite]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/Swatinem-rust-cache@v2/dist/save/index.js] user= workdir=\n[Continuous integration/Test suite]   \u2705  Success - Post Swatinem/rust-cache@v2\n[Continuous integration/Test suite] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}