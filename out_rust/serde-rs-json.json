{
    "repository": "serde-rs/json",
    "clone_url": "https://github.com/serde-rs/json.git",
    "timestamp": "2023-05-30T08:41:42.743765Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/Documentation ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Fuzz          ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Outdated      ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Miri          ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Rust nightly  ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Rust stable -2] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Rust beta -1  ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Clippy        ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Miri          ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Documentation ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Clippy        ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Fuzz          ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Rust stable -2]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Rust beta -1  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Rust nightly  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Outdated      ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Documentation ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Outdated      ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rust stable -2]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rust nightly  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Clippy        ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Fuzz          ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Miri          ] failed to remove container: Error response from daemon: No such container: 6edf2c65d0700489a85fd0af629ff6f213d89a6960c924667493db3e2559fc6c\n[CI/Rust beta -1  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Fuzz          ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Clippy        ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Documentation ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rust nightly  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rust stable -2]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Outdated      ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rust beta -1  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rust beta -1  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/serde-rs-json] user=0 workdir=\n[CI/Outdated      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/serde-rs-json] user=0 workdir=\n[CI/Documentation ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/serde-rs-json] user=0 workdir=\n[CI/Clippy        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/serde-rs-json] user=0 workdir=\n[CI/Rust nightly  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/serde-rs-json] user=0 workdir=\n[CI/Fuzz          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/serde-rs-json] user=0 workdir=\n[CI/Rust stable -2]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/serde-rs-json] user=0 workdir=\n[CI/Outdated      ]   \u2601  git clone 'https://github.com/dtolnay/install' # ref=cargo-outdated\n[CI/Documentation ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=nightly\n[CI/Fuzz          ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=nightly\n[CI/Rust stable -2]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=master\n[CI/Rust beta -1  ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=master\n[CI/Rust nightly  ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=nightly\n[CI/Clippy        ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=clippy\n[CI/Outdated      ] \u2b50 Run Pre dtolnay/install@cargo-outdated\n[CI/Documentation ] \u2b50 Run Pre dtolnay/rust-toolchain@nightly\n[CI/Fuzz          ] \u2b50 Run Pre dtolnay/rust-toolchain@nightly\n[CI/Rust stable -2] \u2b50 Run Pre dtolnay/rust-toolchain@master\n[CI/Fuzz          ]   \u2705  Success - Pre dtolnay/rust-toolchain@nightly\n[CI/Outdated      ]   \u2705  Success - Pre dtolnay/install@cargo-outdated\n[CI/Documentation ]   \u2705  Success - Pre dtolnay/rust-toolchain@nightly\n[CI/Rust beta -1  ] \u2b50 Run Pre dtolnay/rust-toolchain@master\n[CI/Rust nightly  ] \u2b50 Run Pre dtolnay/rust-toolchain@nightly\n[CI/Rust stable -2]   \u2705  Success - Pre dtolnay/rust-toolchain@master\n[CI/Rust beta -1  ]   \u2705  Success - Pre dtolnay/rust-toolchain@master\n[CI/Rust nightly  ]   \u2705  Success - Pre dtolnay/rust-toolchain@nightly\n[CI/Fuzz          ]   \u2601  git clone 'https://github.com/dtolnay/install' # ref=cargo-fuzz\n[CI/Clippy        ] \u2b50 Run Pre dtolnay/rust-toolchain@clippy\n[CI/Outdated      ] \u2b50 Run Main actions/checkout@v3\n[CI/Documentation ] \u2b50 Run Main actions/checkout@v3\n[CI/Rust stable -2] \ud83e\uddea  Matrix: map[os:ubuntu rust:stable target:aarch64-unknown-none]\n[CI/Rust beta -1  ] \ud83e\uddea  Matrix: map[os:ubuntu rust:beta]\n[CI/Documentation ]   \u2705  Success - Main actions/checkout@v3\n[CI/Outdated      ]   \u2705  Success - Main actions/checkout@v3\n[CI/Clippy        ]   \u2705  Success - Pre dtolnay/rust-toolchain@clippy\n[CI/Rust beta -1  ] \u2b50 Run Main actions/checkout@v3\n[CI/Rust stable -2] \u2b50 Run Main actions/checkout@v3\n[CI/Fuzz          ] \u2b50 Run Pre dtolnay/install@cargo-fuzz\n[CI/Rust beta -1  ]   \u2705  Success - Main actions/checkout@v3\n[CI/Rust nightly  ] \ud83e\uddea  Matrix: map[os:ubuntu]\n[CI/Rust nightly  ] \u2b50 Run Main actions/checkout@v3\n[CI/Rust stable -2]   \u2705  Success - Main actions/checkout@v3\n[CI/Rust nightly  ]   \u2705  Success - Main actions/checkout@v3\n[CI/Fuzz          ]   \u2705  Success - Pre dtolnay/install@cargo-fuzz\n[CI/Clippy        ] \u2b50 Run Main actions/checkout@v3\n[CI/Documentation ] \u2b50 Run Main dtolnay/rust-toolchain@nightly\n[CI/Outdated      ] \u2b50 Run Main dtolnay/install@cargo-outdated\n[CI/Rust beta -1  ] \u2b50 Run Main dtolnay/rust-toolchain@master\n[CI/Clippy        ]   \u2705  Success - Main actions/checkout@v3\n[CI/Documentation ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@nightly/ dst=/var/run/act/actions/dtolnay-rust-toolchain@nightly/\n[CI/Rust beta -1  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[CI/Outdated      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-install@cargo-outdated/ dst=/var/run/act/actions/dtolnay-install@cargo-outdated/\n[CI/Fuzz          ] \u2b50 Run Main actions/checkout@v3\n[CI/Rust nightly  ] \u2b50 Run Main dtolnay/rust-toolchain@nightly\n[CI/Rust stable -2] \u2b50 Run Main dtolnay/rust-toolchain@master\n[CI/Documentation ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@nightly/] user=0 workdir=\n[CI/Outdated      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-install@cargo-outdated/] user=0 workdir=\n[CI/Fuzz          ]   \u2705  Success - Main actions/checkout@v3\n[CI/Rust beta -1  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[CI/Rust nightly  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@nightly/ dst=/var/run/act/actions/dtolnay-rust-toolchain@nightly/\n[CI/Rust stable -2]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[CI/Rust nightly  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@nightly/] user=0 workdir=\n[CI/Rust stable -2]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[CI/Clippy        ] \u2b50 Run Main dtolnay/rust-toolchain@clippy\n[CI/Clippy        ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@clippy/ dst=/var/run/act/actions/dtolnay-rust-toolchain@clippy/\n[CI/Fuzz          ] \u2b50 Run Main dtolnay/rust-toolchain@nightly\n[CI/Fuzz          ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@nightly/ dst=/var/run/act/actions/dtolnay-rust-toolchain@nightly/\n[CI/Clippy        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@clippy/] user=0 workdir=\n[CI/Fuzz          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@nightly/] user=0 workdir=\n[CI/Fuzz          ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Documentation ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Rust nightly  ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Outdated      ] \u2b50 Run Main Determine cargo bin directory\n[CI/Rust beta -1  ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Rust stable -2] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Clippy        ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Rust beta -1  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/Outdated      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-cargo.sh] user= workdir=\n[CI/Rust nightly  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/Documentation ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/Rust stable -2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/Fuzz          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/Clippy        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[CI/Rust stable -2]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Rust nightly  ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Documentation ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Rust beta -1  ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Fuzz          ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Clippy        ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[CI/Outdated      ]   | dirname: missing operand\n[CI/Outdated      ]   | Try 'dirname --help' for more information.\n[CI/Outdated      ]   \u2705  Success - Main Determine cargo bin directory\n[CI/Rust nightly  ]   \u2699  ::set-output:: toolchain=nightly\n[CI/Rust stable -2]   \u2699  ::set-output:: toolchain=stable\n[CI/Fuzz          ]   \u2699  ::set-output:: toolchain=nightly\n[CI/Clippy        ]   \u2699  ::set-output:: toolchain=nightly\n[CI/Documentation ]   \u2699  ::set-output:: toolchain=nightly\n[CI/Rust beta -1  ]   \u2699  ::set-output:: toolchain=beta\n[CI/Outdated      ]   \u2699  ::set-output:: dir=\n[CI/Rust nightly  ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Rust stable -2] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Rust beta -1  ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Documentation ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Outdated      ] \u2b50 Run Main Download cargo-outdated\n[CI/Fuzz          ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Clippy        ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade= --allow-downgrade\" >> $GITHUB_OUTPUT\n[CI/Outdated      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-1.sh] user= workdir=\n[CI/Clippy        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/Rust beta -1  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/Documentation ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/Fuzz          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/Rust stable -2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/Documentation ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Rust stable -2]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Clippy        ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade= --allow-downgrade\" >> $GITHUB_OUTPUT\n[CI/Rust beta -1  ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Fuzz          ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Outdated      ]   | curl: (23) Failed writing body (0 != 1369)\n[CI/Outdated      ]   \u274c  Failure - Main Download cargo-outdated\n[CI/Rust stable -2]   \u2699  ::set-output:: components=\n[CI/Rust stable -2]   \u2699  ::set-output:: downgrade=\n[CI/Rust stable -2]   \u2699  ::set-output:: targets= --target aarch64-unknown-none\n[CI/Fuzz          ]   \u2699  ::set-output:: downgrade=\n[CI/Fuzz          ]   \u2699  ::set-output:: targets=\n[CI/Fuzz          ]   \u2699  ::set-output:: components=\n[CI/Documentation ]   \u2699  ::set-output:: targets=\n[CI/Documentation ]   \u2699  ::set-output:: components=\n[CI/Documentation ]   \u2699  ::set-output:: downgrade=\n[CI/Clippy        ]   \u2699  ::set-output:: targets=\n[CI/Clippy        ]   \u2699  ::set-output:: components= --component clippy\n[CI/Clippy        ]   \u2699  ::set-output:: downgrade= --allow-downgrade\n[CI/Rust beta -1  ]   \u2699  ::set-output:: targets=\n[CI/Rust beta -1  ]   \u2699  ::set-output:: components=\n[CI/Rust beta -1  ]   \u2699  ::set-output:: downgrade=\n[CI/Outdated      ] exitcode '23': failure\n[CI/Documentation ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Clippy        ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Rust beta -1  ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Fuzz          ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Rust stable -2] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Documentation ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/Outdated      ]   \u274c  Failure - Main dtolnay/install@cargo-outdated\n[CI/Rust beta -1  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/Rust stable -2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/Clippy        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/Fuzz          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/Outdated      ] exitcode '23': failure\n[CI/Outdated      ] \u2b50 Run Post dtolnay/install@cargo-outdated\n[CI/Outdated      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-install@cargo-outdated/ dst=/var/run/act/actions/dtolnay-install@cargo-outdated/\n[CI/Outdated      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-install@cargo-outdated/] user=0 workdir=\n[CI/Documentation ]   | info: downloading installer\n[CI/Rust stable -2]   | info: downloading installer\n[CI/Outdated      ]   \u2705  Success - Post dtolnay/install@cargo-outdated\n[CI/Fuzz          ]   | info: downloading installer\n[CI/Documentation ]   | info: profile set to 'default'\n[CI/Documentation ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Documentation ]   | info: skipping toolchain installation\n[CI/Documentation ]   | \n[CI/Documentation ]   | \n[CI/Documentation ]   | Rust is installed now. Great!\n[CI/Documentation ]   | \n[CI/Documentation ]   | To get started you may need to restart your current shell.\n[CI/Documentation ]   | This would reload your PATH environment variable to include\n[CI/Documentation ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Documentation ]   | \n[CI/Documentation ]   | To configure your current shell, run:\n[CI/Documentation ]   | source \"$HOME/.cargo/env\"\n[CI/Documentation ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Clippy        ]   | info: downloading installer\n[CI/Rust stable -2]   | info: profile set to 'default'\n[CI/Rust stable -2]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Rust stable -2]   | info: skipping toolchain installation\n[CI/Rust stable -2]   | \n[CI/Rust stable -2]   | \n[CI/Rust stable -2]   | Rust is installed now. Great!\n[CI/Rust stable -2]   | \n[CI/Rust stable -2]   | To get started you may need to restart your current shell.\n[CI/Rust stable -2]   | This would reload your PATH environment variable to include\n[CI/Rust stable -2]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Rust stable -2]   | \n[CI/Rust stable -2]   | To configure your current shell, run:\n[CI/Rust stable -2]   | source \"$HOME/.cargo/env\"\n[CI/Fuzz          ]   | info: profile set to 'default'\n[CI/Fuzz          ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Fuzz          ]   | info: skipping toolchain installation\n[CI/Fuzz          ]   | \n[CI/Fuzz          ]   | \n[CI/Fuzz          ]   | Rust is installed now. Great!\n[CI/Fuzz          ]   | \n[CI/Fuzz          ]   | To get started you may need to restart your current shell.\n[CI/Fuzz          ]   | This would reload your PATH environment variable to include\n[CI/Fuzz          ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Fuzz          ]   | \n[CI/Fuzz          ]   | To configure your current shell, run:\n[CI/Fuzz          ]   | source \"$HOME/.cargo/env\"\n[CI/Rust stable -2]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Fuzz          ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Rust beta -1  ]   | info: downloading installer\n[CI/Clippy        ]   | info: profile set to 'default'\n[CI/Clippy        ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Clippy        ]   | info: skipping toolchain installation\n[CI/Clippy        ]   | \n[CI/Clippy        ]   | \n[CI/Clippy        ]   | Rust is installed now. Great!\n[CI/Clippy        ]   | \n[CI/Clippy        ]   | To get started you may need to restart your current shell.\n[CI/Clippy        ]   | This would reload your PATH environment variable to include\n[CI/Clippy        ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Clippy        ]   | \n[CI/Clippy        ]   | To configure your current shell, run:\n[CI/Clippy        ]   | source \"$HOME/.cargo/env\"\n[CI/Clippy        ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Rust beta -1  ]   | info: profile set to 'default'\n[CI/Rust beta -1  ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Rust beta -1  ]   | info: skipping toolchain installation\n[CI/Rust beta -1  ]   | \n[CI/Rust beta -1  ]   | \n[CI/Rust beta -1  ]   | Rust is installed now. Great!\n[CI/Rust beta -1  ]   | \n[CI/Rust beta -1  ]   | To get started you may need to restart your current shell.\n[CI/Rust beta -1  ]   | This would reload your PATH environment variable to include\n[CI/Rust beta -1  ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Rust beta -1  ]   | \n[CI/Rust beta -1  ]   | To configure your current shell, run:\n[CI/Rust beta -1  ]   | source \"$HOME/.cargo/env\"\n[CI/Rust beta -1  ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Fuzz          ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Rust stable -2]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Documentation ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Clippy        ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Rust beta -1  ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Fuzz          ] \u2b50 Run Main rustup toolchain install nightly\n[CI/Rust stable -2] \u2b50 Run Main rustup toolchain install stable\n[CI/Documentation ] \u2b50 Run Main rustup toolchain install nightly\n[CI/Clippy        ] \u2b50 Run Main rustup toolchain install nightly\n[CI/Rust beta -1  ] \u2b50 Run Main rustup toolchain install beta\n[CI/Documentation ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/Rust stable -2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/Fuzz          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/Rust beta -1  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/Clippy        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[CI/Outdated      ] \ud83c\udfc1  Job failed\n[CI/Fuzz          ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Clippy        ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Rust beta -1  ]   | info: syncing channel updates for 'beta-x86_64-unknown-linux-gnu'\n[CI/Documentation ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Rust stable -2]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/Rust beta -1  ]   | info: latest update on 2023-05-30, rust version 1.71.0-beta.1 (eff24c06d 2023-05-29)\n[CI/Rust beta -1  ]   | info: downloading component 'cargo'\n[CI/Clippy        ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Clippy        ]   | info: downloading component 'cargo'\n[CI/Fuzz          ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Fuzz          ]   | info: downloading component 'cargo'\n[CI/Clippy        ]   | info: downloading component 'clippy'\n[CI/Fuzz          ]   | info: downloading component 'rust-std'\n[CI/Documentation ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Documentation ]   | info: downloading component 'cargo'\n[CI/Rust beta -1  ]   | info: downloading component 'rust-std'\n[CI/Clippy        ]   | info: downloading component 'rust-std'\n[CI/Rust stable -2]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/Rust stable -2]   | info: downloading component 'cargo'\n[CI/Documentation ]   | info: downloading component 'rust-std'\n[CI/Fuzz          ]   | info: downloading component 'rustc'\n[CI/Clippy        ]   | info: downloading component 'rustc'\n[CI/Documentation ]   | info: downloading component 'rustc'\n[CI/Rust stable -2]   | info: downloading component 'rust-std' for 'aarch64-unknown-none'\n[CI/Fuzz          ]   | info: installing component 'cargo'\n[CI/Documentation ]   | info: installing component 'cargo'\n[CI/Fuzz          ]   | info: installing component 'rust-std'\n[CI/Documentation ]   | info: installing component 'rust-std'\n[CI/Rust beta -1  ]   | info: downloading component 'rustc'\n[CI/Clippy        ]   | info: installing component 'cargo'\n[CI/Documentation ]   | info: installing component 'rustc'\n[CI/Fuzz          ]   | info: installing component 'rustc'\n[CI/Clippy        ]   | info: installing component 'clippy'\n[CI/Clippy        ]   | info: installing component 'rust-std'\n[CI/Rust beta -1  ]   | info: installing component 'cargo'\n[CI/Rust stable -2]   | info: downloading component 'rust-std'\n[CI/Rust beta -1  ]   | info: installing component 'rust-std'\n[CI/Clippy        ]   | info: installing component 'rustc'\n[CI/Rust stable -2]   | info: downloading component 'rustc'\n[CI/Rust beta -1  ]   | info: installing component 'rustc'\n[CI/Rust stable -2]   | info: installing component 'cargo'\n[CI/Fuzz          ]   | \n[CI/Fuzz          ]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Fuzz          ]   | \n[CI/Documentation ]   | \n[CI/Documentation ]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Documentation ]   | \n[CI/Fuzz          ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Fuzz          ]   \u2705  Success - Main rustup toolchain install nightly\n[CI/Documentation ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Documentation ]   \u2705  Success - Main rustup toolchain install nightly\n[CI/Rust stable -2]   | info: installing component 'rust-std' for 'aarch64-unknown-none'\n[CI/Fuzz          ] \u2b50 Run Main rustup default nightly\n[CI/Documentation ] \u2b50 Run Main rustup default nightly\n[CI/Rust stable -2]   | info: installing component 'rust-std'\n[CI/Fuzz          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[CI/Documentation ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[CI/Clippy        ]   | \n[CI/Clippy        ]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Clippy        ]   | \n[CI/Clippy        ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Clippy        ]   \u2705  Success - Main rustup toolchain install nightly\n[CI/Rust beta -1  ]   | \n[CI/Rust stable -2]   | info: installing component 'rustc'\n[CI/Rust beta -1  ]   |   beta-x86_64-unknown-linux-gnu installed - rustc 1.71.0-beta.1 (eff24c06d 2023-05-29)\n[CI/Rust beta -1  ]   | \n[CI/Rust beta -1  ]   | info: default toolchain set to 'beta-x86_64-unknown-linux-gnu'\n[CI/Rust beta -1  ]   \u2705  Success - Main rustup toolchain install beta\n[CI/Clippy        ] \u2b50 Run Main rustup default nightly\n[CI/Clippy        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[CI/Rust beta -1  ] \u2b50 Run Main rustup default beta\n[CI/Rust beta -1  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[CI/Rust stable -2]   | \n[CI/Rust stable -2]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Rust stable -2]   | \n[CI/Rust stable -2]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/Rust stable -2]   \u2705  Success - Main rustup toolchain install stable\n[CI/Rust stable -2] \u2b50 Run Main rustup default stable\n[CI/Rust stable -2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[CI/Fuzz          ]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Documentation ]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Documentation ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Documentation ]   | \n[CI/Fuzz          ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Fuzz          ]   | \n[CI/Documentation ]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Documentation ]   | \n[CI/Fuzz          ]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Fuzz          ]   | \n[CI/Fuzz          ]   \u2705  Success - Main rustup default nightly\n[CI/Documentation ]   \u2705  Success - Main rustup default nightly\n[CI/Rust beta -1  ]   | info: using existing install for 'beta-x86_64-unknown-linux-gnu'\n[CI/Rust beta -1  ]   | info: default toolchain set to 'beta-x86_64-unknown-linux-gnu'\n[CI/Rust beta -1  ]   | \n[CI/Rust beta -1  ]   |   beta-x86_64-unknown-linux-gnu unchanged - rustc 1.71.0-beta.1 (eff24c06d 2023-05-29)\n[CI/Rust beta -1  ]   | \n[CI/Rust beta -1  ]   \u2705  Success - Main rustup default beta\n[CI/Rust stable -2]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[CI/Rust stable -2]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/Rust stable -2]   | \n[CI/Clippy        ]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Rust stable -2]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Rust stable -2]   | \n[CI/Rust stable -2]   \u2705  Success - Main rustup default stable\n[CI/Clippy        ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Clippy        ]   | \n[CI/Clippy        ]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Clippy        ]   | \n[CI/Clippy        ]   \u2705  Success - Main rustup default nightly\n[CI/Clippy        ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +nightly --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Fuzz          ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +nightly --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Documentation ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +nightly --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Rust stable -2] \u2b50 Run Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Rust beta -1  ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +beta --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +beta --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Rust beta -1  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[CI/Fuzz          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[CI/Clippy        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[CI/Documentation ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[CI/Rust stable -2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[CI/Rust nightly  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[CI/Fuzz          ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +nightly --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Rust stable -2]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Documentation ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +nightly --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Clippy        ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +nightly --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Rust beta -1  ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +beta --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +beta --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[CI/Fuzz          ]   \u2699  ::set-output:: cachekey=202305294985\n[CI/Rust stable -2]   \u2699  ::set-output:: cachekey=2023041684c8\n[CI/Documentation ]   \u2699  ::set-output:: cachekey=202305294985\n[CI/Clippy        ]   \u2699  ::set-output:: cachekey=202305294985\n[CI/Rust beta -1  ]   \u2699  ::set-output:: cachekey=20230529eff2\n[CI/Fuzz          ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Rust stable -2] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Documentation ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Clippy        ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Rust beta -1  ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Rust beta -1  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[CI/Documentation ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[CI/Clippy        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[CI/Fuzz          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[CI/Rust stable -2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[CI/Documentation ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Rust nightly  ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[CI/Rust stable -2]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Fuzz          ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Clippy        ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Rust beta -1  ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[CI/Rust beta -1  ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[CI/Rust stable -2]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[CI/Fuzz          ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[CI/Documentation ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[CI/Clippy        ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[CI/Rust nightly  ]   \u2699  ::set-output:: targets=\n[CI/Rust nightly  ]   \u2699  ::set-output:: components=\n[CI/Rust nightly  ]   \u2699  ::set-output:: downgrade=\n[CI/Documentation ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/Clippy        ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/Rust beta -1  ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/Rust stable -2] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/Fuzz          ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/Rust nightly  ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Documentation ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[CI/Clippy        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[CI/Rust beta -1  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[CI/Rust nightly  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[CI/Fuzz          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[CI/Rust stable -2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[CI/Documentation ]   \u274c  Failure - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/Rust nightly  ]   \u274c  Failure - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[CI/Rust beta -1  ]   \u274c  Failure - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/Clippy        ]   \u274c  Failure - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/Fuzz          ]   \u274c  Failure - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/Rust stable -2]   \u274c  Failure - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[CI/Rust nightly  ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/f4895032bed5903be45bc3df48872388f6bea2455e79c64bb704562c9341197f/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Clippy        ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/c1f426fc414d1d74361f235169fb322b77eae7802b699dfabe1019a6c744ba0a/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Rust beta -1  ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/9aca7f4b9b0793f62b7b7e0306c03d8f248afcb30d6eb56d5852f1e58fc1bd4e/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Documentation ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/92d1e8e2bbc39e2f4328f157e4e857153c1f0e567787e6dcd2e0759fe1665c27/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Fuzz          ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/5c77f72d9549b7bbf07c305a44f2eccb64bcff0c1538717c217af17cdced3623/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Rust stable -2] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/3a156ac94561beb9ce8f8903f3998f943de6764e436786e7f265e5f4b1d53ab6/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Rust beta -1  ]   \u2699  ::set-output:: cachekey=20230529eff2\n[CI/Rust beta -1  ]   \u2699  ::set-output:: name=beta\n[CI/Rust beta -1  ]   \u274c  Failure - Main dtolnay/rust-toolchain@master\n[CI/Rust nightly  ]   \u2699  ::set-output:: cachekey=\n[CI/Rust beta -1  ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/9aca7f4b9b0793f62b7b7e0306c03d8f248afcb30d6eb56d5852f1e58fc1bd4e/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Rust nightly  ]   \u2699  ::set-output:: name=nightly\n[CI/Rust nightly  ]   \u274c  Failure - Main dtolnay/rust-toolchain@nightly\n[CI/Fuzz          ]   \u2699  ::set-output:: cachekey=202305294985\n[CI/Fuzz          ]   \u2699  ::set-output:: name=nightly\n[CI/Fuzz          ]   \u274c  Failure - Main dtolnay/rust-toolchain@nightly\n[CI/Rust nightly  ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/f4895032bed5903be45bc3df48872388f6bea2455e79c64bb704562c9341197f/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Rust stable -2]   \u2699  ::set-output:: cachekey=2023041684c8\n[CI/Fuzz          ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/5c77f72d9549b7bbf07c305a44f2eccb64bcff0c1538717c217af17cdced3623/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Rust stable -2]   \u2699  ::set-output:: name=stable\n[CI/Rust stable -2]   \u274c  Failure - Main dtolnay/rust-toolchain@master\n[CI/Rust stable -2] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/3a156ac94561beb9ce8f8903f3998f943de6764e436786e7f265e5f4b1d53ab6/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Documentation ]   \u2699  ::set-output:: cachekey=202305294985\n[CI/Documentation ]   \u2699  ::set-output:: name=nightly\n[CI/Documentation ]   \u274c  Failure - Main dtolnay/rust-toolchain@nightly\n[CI/Clippy        ]   \u2699  ::set-output:: cachekey=202305294985\n[CI/Clippy        ]   \u2699  ::set-output:: name=nightly\n[CI/Documentation ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/92d1e8e2bbc39e2f4328f157e4e857153c1f0e567787e6dcd2e0759fe1665c27/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Clippy        ]   \u274c  Failure - Main dtolnay/rust-toolchain@clippy\n[CI/Clippy        ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/c1f426fc414d1d74361f235169fb322b77eae7802b699dfabe1019a6c744ba0a/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[CI/Rust nightly  ] \u2b50 Run Post dtolnay/rust-toolchain@nightly\n[CI/Fuzz          ] \u2b50 Run Post dtolnay/rust-toolchain@nightly\n[CI/Rust beta -1  ] \u2b50 Run Post dtolnay/rust-toolchain@master\n[CI/Clippy        ] \u2b50 Run Post dtolnay/rust-toolchain@clippy\n[CI/Documentation ] \u2b50 Run Post dtolnay/rust-toolchain@nightly\n[CI/Rust stable -2] \u2b50 Run Post dtolnay/rust-toolchain@master\n[CI/Rust nightly  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@nightly/ dst=/var/run/act/actions/dtolnay-rust-toolchain@nightly/\n[CI/Documentation ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@nightly/ dst=/var/run/act/actions/dtolnay-rust-toolchain@nightly/\n[CI/Rust stable -2]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[CI/Fuzz          ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@nightly/ dst=/var/run/act/actions/dtolnay-rust-toolchain@nightly/\n[CI/Clippy        ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@clippy/ dst=/var/run/act/actions/dtolnay-rust-toolchain@clippy/\n[CI/Rust beta -1  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[CI/Rust stable -2]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[CI/Fuzz          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@nightly/] user=0 workdir=\n[CI/Clippy        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@clippy/] user=0 workdir=\n[CI/Documentation ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@nightly/] user=0 workdir=\n[CI/Rust beta -1  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[CI/Rust nightly  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@nightly/] user=0 workdir=\n[CI/Documentation ]   \u2705  Success - Post dtolnay/rust-toolchain@nightly\n[CI/Rust nightly  ]   \u2705  Success - Post dtolnay/rust-toolchain@nightly\n[CI/Rust stable -2]   \u2705  Success - Post dtolnay/rust-toolchain@master\n[CI/Rust beta -1  ]   \u2705  Success - Post dtolnay/rust-toolchain@master\n[CI/Clippy        ]   \u2705  Success - Post dtolnay/rust-toolchain@clippy\n[CI/Fuzz          ]   \u2705  Success - Post dtolnay/rust-toolchain@nightly\n[CI/Rust beta -1  ]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[CI/Rust stable -2]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[CI/Clippy        ]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[CI/Fuzz          ]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[CI/Documentation ]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[CI/Rust nightly  ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Fuzz          ] \ud83c\udfc1  Job succeeded\n[CI/Rust stable -2] \ud83c\udfc1  Job succeeded\n[CI/Documentation ] \ud83c\udfc1  Job succeeded\n[CI/Clippy        ] \ud83c\udfc1  Job succeeded\n[CI/Rust nightly  ] \ud83c\udfc1  Job succeeded\n[CI/Rust beta -1  ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}