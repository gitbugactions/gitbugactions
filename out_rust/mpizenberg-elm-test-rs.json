{
    "repository": "mpizenberg/elm-test-rs",
    "clone_url": "https://github.com/mpizenberg/elm-test-rs.git",
    "timestamp": "2023-05-30T09:37:32.649555Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/Test            ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Build artifacts ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Check formatting] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Check clippy    ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Build artifacts ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Test            ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Check formatting]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Check clippy    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Build artifacts ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check clippy    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check formatting]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check clippy    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Build artifacts ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test            ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check formatting]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test            ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check formatting]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mpizenberg-elm-test-rs] user=0 workdir=\n[CI/Build artifacts ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mpizenberg-elm-test-rs] user=0 workdir=\n[CI/Check clippy    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mpizenberg-elm-test-rs] user=0 workdir=\n[CI/Check formatting]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/Check clippy    ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/Build artifacts ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/Check formatting]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/Check clippy    ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/Build artifacts ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[CI/Check formatting] \u2b50 Run Main actions/checkout@v2\n[CI/Check clippy    ] \u2b50 Run Main actions/checkout@v2\n[CI/Build artifacts ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/Build artifacts ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/Check clippy    ]   \u2705  Success - Main actions/checkout@v2\n[CI/Check formatting]   \u2705  Success - Main actions/checkout@v2\n[CI/Build artifacts ]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v2\n[CI/Build artifacts ]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v2\n[CI/Build artifacts ] \ud83e\uddea  Matrix: map[build:linux-musl os:ubuntu-latest target:x86_64-unknown-linux-musl toolchain:stable]\n[CI/Build artifacts ] \u2b50 Run Main install musl-tools if musl target\n[CI/Check formatting] \u2b50 Run Main actions-rs/toolchain@v1\n[CI/Check clippy    ] \u2b50 Run Main actions-rs/toolchain@v1\n[CI/Build artifacts ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/0] user= workdir=\n[CI/Check clippy    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/Check formatting]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/Check clippy    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/Check formatting]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/Test            ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:0 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mpizenberg-elm-test-rs] user=0 workdir=\n[CI/Check clippy    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/Check formatting]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/Build artifacts ]   | \n[CI/Build artifacts ]   | WARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n[CI/Build artifacts ]   | \n[CI/Build artifacts ]   | Reading package lists...\n[CI/Build artifacts ]   | Building dependency tree...\n[CI/Build artifacts ]   | Reading state information...\n[CI/Build artifacts ]   | The following additional packages will be installed:\n[CI/Build artifacts ]   |   musl musl-dev\n[CI/Build artifacts ]   | Recommended packages:\n[CI/Build artifacts ]   |   linux-musl-dev\n[CI/Build artifacts ]   | The following NEW packages will be installed:\n[CI/Build artifacts ]   |   musl musl-dev musl-tools\n[CI/Build artifacts ]   | 0 upgraded, 3 newly installed, 0 to remove and 20 not upgraded.\n[CI/Build artifacts ]   | Need to get 948 kB of archives.\n[CI/Build artifacts ]   | After this operation, 4367 kB of additional disk space will be used.\n[CI/Build artifacts ]   | Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 musl amd64 1.1.24-1 [377 kB]\n[CI/Build artifacts ]   | Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 musl-dev amd64 1.1.24-1 [565 kB]\n[CI/Build artifacts ]   | Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 musl-tools amd64 1.1.24-1 [5868 B]\n[CI/Build artifacts ]   | Fetched 948 kB in 5s (179 kB/s)\n[CI/Build artifacts ]   | Selecting previously unselected package musl:amd64.\r\n[CI/Build artifacts ]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 193678 files and directories currently installed.)\r\n[CI/Build artifacts ]   | Preparing to unpack .../musl_1.1.24-1_amd64.deb ...\r\n[CI/Build artifacts ]   | Unpacking musl:amd64 (1.1.24-1) ...\r\n[CI/Build artifacts ]   | Selecting previously unselected package musl-dev:amd64.\r\n[CI/Build artifacts ]   | Preparing to unpack .../musl-dev_1.1.24-1_amd64.deb ...\r\n[CI/Build artifacts ]   | Unpacking musl-dev:amd64 (1.1.24-1) ...\r\n[CI/Build artifacts ]   | Selecting previously unselected package musl-tools.\r\n[CI/Build artifacts ]   | Preparing to unpack .../musl-tools_1.1.24-1_amd64.deb ...\r\n[CI/Build artifacts ]   | Unpacking musl-tools (1.1.24-1) ...\r\n[CI/Build artifacts ]   | Setting up musl:amd64 (1.1.24-1) ...\r\n[CI/Build artifacts ]   | Setting up musl-dev:amd64 (1.1.24-1) ...\r\n[CI/Build artifacts ]   | Setting up musl-tools (1.1.24-1) ...\r\n[CI/Build artifacts ]   \u2705  Success - Main install musl-tools if musl target\n[CI/Build artifacts ] \u2b50 Run Main actions/checkout@v2\n[CI/Build artifacts ]   \u2705  Success - Main actions/checkout@v2\n[CI/Build artifacts ] \u2b50 Run Main actions-rs/toolchain@v1\n[CI/Build artifacts ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/Build artifacts ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/Build artifacts ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/Check formatting]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[CI/Check clippy    ]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[CI/Check formatting]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/Check clippy    ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/Check formatting]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/Check formatting]   \ud83d\udcac  ::debug::Destination /tmp/e356c1f7-eeef-44ee-b7a0-7a8c911c9b67\n[CI/Check clippy    ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/Check clippy    ]   \ud83d\udcac  ::debug::Destination /tmp/859810aa-8282-40a5-826e-7aa2def64c0e\n[CI/Check formatting]   \ud83d\udcac  ::debug::download complete\n[CI/Check formatting]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/e356c1f7-eeef-44ee-b7a0-7a8c911c9b67\n[CI/Check clippy    ]   \ud83d\udcac  ::debug::download complete\n[CI/Check clippy    ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/859810aa-8282-40a5-826e-7aa2def64c0e\n[CI/Check clippy    ]   | [command]/tmp/859810aa-8282-40a5-826e-7aa2def64c0e --default-toolchain none -y\n[CI/Check formatting]   | [command]/tmp/e356c1f7-eeef-44ee-b7a0-7a8c911c9b67 --default-toolchain none -y\n[CI/Check clippy    ]   | info: downloading installer\n[CI/Check formatting]   | info: downloading installer\n[CI/Check clippy    ]   | info: profile set to 'default'\n[CI/Check clippy    ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Check clippy    ]   | info: skipping toolchain installation\n[CI/Check clippy    ]   | \n[CI/Check clippy    ]   | \n[CI/Check clippy    ]   | Rust is installed now. Great!\n[CI/Check clippy    ]   | \n[CI/Check clippy    ]   | To get started you may need to restart your current shell.\n[CI/Check clippy    ]   | This would reload your PATH environment variable to include\n[CI/Check clippy    ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Check clippy    ]   | \n[CI/Check clippy    ]   | To configure your current shell, run:\n[CI/Check clippy    ]   | source \"$HOME/.cargo/env\"\n[CI/Check clippy    ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/Check clippy    ]   | Default host: x86_64-unknown-linux-gnu\n[CI/Check clippy    ]   | rustup home:  /home/runneradmin/.rustup\n[CI/Check clippy    ]   | \n[CI/Check clippy    ]   | no active toolchain\n[CI/Check clippy    ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Check clippy    ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Check clippy    ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Check clippy    ]   | Installed rustup 1.26.0 support profiles\n[CI/Check clippy    ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Check clippy    ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Check clippy    ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Check clippy    ]   | Installed rustup 1.26.0 support components\n[CI/Check clippy    ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[CI/Check clippy    ]   | info: profile set to 'minimal'\n[CI/Check clippy    ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable --component clippy\n[CI/Check clippy    ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/Check clippy    ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/Check clippy    ]   | info: downloading component 'cargo'\n[CI/Check clippy    ]   | info: downloading component 'clippy'\n[CI/Check clippy    ]   | info: downloading component 'rust-std'\n[CI/Check formatting]   | info: profile set to 'default'\n[CI/Check formatting]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Check formatting]   | info: skipping toolchain installation\n[CI/Check formatting]   | \n[CI/Check formatting]   | \n[CI/Check formatting]   | Rust is installed now. Great!\n[CI/Check formatting]   | \n[CI/Check formatting]   | To get started you may need to restart your current shell.\n[CI/Check formatting]   | This would reload your PATH environment variable to include\n[CI/Check formatting]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Check formatting]   | \n[CI/Check formatting]   | To configure your current shell, run:\n[CI/Check formatting]   | source \"$HOME/.cargo/env\"\n[CI/Check formatting]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/Check formatting]   | Default host: x86_64-unknown-linux-gnu\n[CI/Check formatting]   | rustup home:  /home/runneradmin/.rustup\n[CI/Check formatting]   | \n[CI/Check formatting]   | no active toolchain\n[CI/Check formatting]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Check formatting]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Check formatting]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Check formatting]   | Installed rustup 1.26.0 support profiles\n[CI/Check formatting]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Check formatting]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Check formatting]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Check formatting]   | Installed rustup 1.26.0 support components\n[CI/Check formatting]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[CI/Check formatting]   | info: profile set to 'minimal'\n[CI/Check formatting]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable --component rustfmt\n[CI/Check formatting]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/Check formatting]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/Check formatting]   | info: downloading component 'cargo'\n[CI/Check clippy    ]   | info: downloading component 'rustc'\n[CI/Check formatting]   | info: downloading component 'rust-std'\n[CI/Check formatting]   | info: downloading component 'rustc'\n[CI/Check formatting]   | info: downloading component 'rustfmt'\n[CI/Check formatting]   | info: installing component 'cargo'\n[CI/Check formatting]   | info: installing component 'rust-std'\n[CI/Check clippy    ]   | info: installing component 'cargo'\n[CI/Check clippy    ]   | info: installing component 'clippy'\n[CI/Check clippy    ]   | info: installing component 'rust-std'\n[CI/Check formatting]   | info: installing component 'rustc'\n[CI/Check clippy    ]   | info: installing component 'rustc'\n[CI/Check formatting]   | info: installing component 'rustfmt'\n[CI/Check formatting]   | \n[CI/Check clippy    ]   | \n[CI/Check clippy    ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Check clippy    ]   | \n[CI/Check clippy    ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/Check clippy    ]   | info: checking for self-update\n[CI/Check formatting]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Check formatting]   | \n[CI/Check formatting]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/Check formatting]   | info: checking for self-update\n[CI/Check clippy    ]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[CI/Check formatting]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[CI/Check clippy    ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[CI/Check clippy    ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mpizenberg-elm-test-rs' set to 'stable-x86_64-unknown-linux-gnu'\n[CI/Check formatting]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[CI/Check formatting]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mpizenberg-elm-test-rs' set to 'stable-x86_64-unknown-linux-gnu'\n[CI/Check clippy    ]   | \n[CI/Check formatting]   | \n[CI/Check clippy    ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Check clippy    ]   | \n[CI/Check formatting]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Check formatting]   | \n[CI/Check clippy    ]   \u2753  ::group::Gathering installed versions\n[CI/Check clippy    ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/Check formatting]   \u2753  ::group::Gathering installed versions\n[CI/Check formatting]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/Check formatting]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Check clippy    ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Check formatting]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[CI/Check formatting]   \u2699  ::set-output:: rustc_hash=84c898d65\n[CI/Check formatting]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/Check clippy    ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[CI/Check clippy    ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[CI/Check clippy    ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/Check formatting]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[CI/Check formatting]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[CI/Check formatting]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Check clippy    ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[CI/Check formatting]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Check formatting]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Check clippy    ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[CI/Check clippy    ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Check clippy    ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Check clippy    ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Check formatting]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[CI/Check formatting]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/Check formatting]   \u2753  ::endgroup::\n[CI/Check formatting]   \u2705  Success - Main actions-rs/toolchain@v1\n[CI/Check clippy    ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[CI/Check clippy    ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/Check clippy    ]   \u2753  ::endgroup::\n[CI/Check clippy    ]   \u2705  Success - Main actions-rs/toolchain@v1\n[CI/Check clippy    ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Check formatting]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Check clippy    ] \u2b50 Run Main actions-rs/cargo@v1\n[CI/Check formatting] \u2b50 Run Main actions-rs/cargo@v1\n[CI/Check formatting]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[CI/Check clippy    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[CI/Check formatting]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[CI/Check clippy    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[CI/Check formatting]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[CI/Build artifacts ]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[CI/Build artifacts ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/Build artifacts ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/Build artifacts ]   \ud83d\udcac  ::debug::Destination /tmp/9eed424e-ef1b-48d3-b7f2-1ba0de8533cd\n[CI/Build artifacts ]   \ud83d\udcac  ::debug::download complete\n[CI/Build artifacts ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/9eed424e-ef1b-48d3-b7f2-1ba0de8533cd\n[CI/Build artifacts ]   | [command]/tmp/9eed424e-ef1b-48d3-b7f2-1ba0de8533cd --default-toolchain none -y\n[CI/Check clippy    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[CI/Build artifacts ]   | info: downloading installer\n[CI/Check formatting]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[CI/Check formatting]   | [command]/home/runneradmin/.cargo/bin/cargo fmt --all -- --check\n[CI/Check formatting]   \u2705  Success - Main actions-rs/cargo@v1\n[CI/Check clippy    ]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[CI/Check clippy    ]   | [command]/home/runneradmin/.cargo/bin/cargo clippy\n[CI/Check clippy    ]   |     Updating crates.io index\n[CI/Build artifacts ]   | info: profile set to 'default'\n[CI/Build artifacts ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Build artifacts ]   | info: skipping toolchain installation\n[CI/Build artifacts ]   | \n[CI/Build artifacts ]   | \n[CI/Build artifacts ]   | Rust is installed now. Great!\n[CI/Build artifacts ]   | \n[CI/Build artifacts ]   | To get started you may need to restart your current shell.\n[CI/Build artifacts ]   | This would reload your PATH environment variable to include\n[CI/Build artifacts ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Build artifacts ]   | \n[CI/Build artifacts ]   | To configure your current shell, run:\n[CI/Build artifacts ]   | source \"$HOME/.cargo/env\"\n[CI/Build artifacts ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/Build artifacts ]   | Default host: x86_64-unknown-linux-gnu\n[CI/Build artifacts ]   | rustup home:  /home/runneradmin/.rustup\n[CI/Build artifacts ]   | \n[CI/Build artifacts ]   | no active toolchain\n[CI/Build artifacts ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Build artifacts ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Build artifacts ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Build artifacts ]   | Installed rustup 1.26.0 support profiles\n[CI/Build artifacts ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[CI/Build artifacts ]   | info: profile set to 'minimal'\n[CI/Build artifacts ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[CI/Build artifacts ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[CI/Build artifacts ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[CI/Build artifacts ]   | info: downloading component 'cargo'\n[CI/Build artifacts ]   | info: downloading component 'rust-std'\n[CI/Build artifacts ]   | info: downloading component 'rustc'\n[CI/Build artifacts ]   | info: installing component 'cargo'\n[CI/Build artifacts ]   | info: installing component 'rust-std'\n[CI/Build artifacts ]   | info: installing component 'rustc'\n[CI/Build artifacts ]   | \n[CI/Build artifacts ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Build artifacts ]   | \n[CI/Build artifacts ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[CI/Build artifacts ]   | info: checking for self-update\n[CI/Build artifacts ]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[CI/Build artifacts ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[CI/Build artifacts ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mpizenberg-elm-test-rs' set to 'stable-x86_64-unknown-linux-gnu'\n[CI/Build artifacts ]   | \n[CI/Build artifacts ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[CI/Build artifacts ]   | \n[CI/Build artifacts ]   | [command]/home/runneradmin/.cargo/bin/rustup target add --toolchain stable x86_64-unknown-linux-musl\n[CI/Build artifacts ]   | info: downloading component 'rust-std' for 'x86_64-unknown-linux-musl'\n[CI/Build artifacts ]   | info: installing component 'rust-std' for 'x86_64-unknown-linux-musl'\n[CI/Build artifacts ]   | info: rolling back changes\n[CI/Build artifacts ]   | error: could not create component directory: '/home/runneradmin/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-musl/lib': No space left on device (os error 28)\n[CI/Build artifacts ]   \u2757  ::error::The process '/home/runneradmin/.cargo/bin/rustup' failed with exit code 1\n[CI/Build artifacts ]   \u274c  Failure - Main actions-rs/toolchain@v1\n[CI/Build artifacts ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Build artifacts ] exitcode '1': failure\n[CI/Build artifacts ] \ud83c\udfc1  Job failed\n[CI/Check formatting] \ud83c\udfc1  Job succeeded\n[CI/Check clippy    ]   |     Updating git repository `https://github.com/mpizenberg/pubgrub-dependency-provider-elm`\n[CI/Check clippy    ]   |  Downloading crates ...\n[CI/Check clippy    ]   |   Downloaded aho-corasick v0.7.18\n[CI/Check clippy    ]   |   Downloaded chunked_transfer v1.4.0\n[CI/Check clippy    ]   |   Downloaded same-file v1.0.6\n[CI/Check clippy    ]   |   Downloaded lazycell v1.3.0\n[CI/Check clippy    ]   |   Downloaded itoa v0.4.7\n[CI/Check clippy    ]   |   Downloaded dirs-next v2.0.0\n[CI/Check clippy    ]   |   Downloaded form_urlencoded v1.0.1\n[CI/Check clippy    ]   |   Downloaded net2 v0.2.37\n[CI/Check clippy    ]   |   Downloaded percent-encoding v2.1.0\n[CI/Check clippy    ]   |   Downloaded proc-macro2 v1.0.27\n[CI/Check clippy    ]   |   Downloaded rustc-hash v1.1.0\n[CI/Check clippy    ]   |   Downloaded quote v1.0.9\n[CI/Check clippy    ]   |   Downloaded mio v0.6.23\n[CI/Check clippy    ]   |   Downloaded syn v1.0.73\n[CI/Check clippy    ]   |   Downloaded tinyvec_macros v0.1.0\n[CI/Check clippy    ]   |   Downloaded unicode-normalization v0.1.19\n[CI/Check clippy    ]   |   Downloaded url v2.2.2\n[CI/Check clippy    ]   |   Downloaded webpki v0.22.0\n[CI/Check clippy    ]   |   Downloaded which v4.2.2\n[CI/Check clippy    ]   |   Downloaded glob v0.3.0\n[CI/Check clippy    ]   |   Downloaded log v0.4.14\n[CI/Check clippy    ]   |   Downloaded dirs-sys-next v0.1.2\n[CI/Check clippy    ]   |   Downloaded iovec v0.1.4\n[CI/Check clippy    ]   |   Downloaded inotify-sys v0.1.5\n[CI/Check clippy    ]   |   Downloaded unicode-width v0.1.8\n[CI/Check clippy    ]   |   Downloaded untrusted v0.7.1\n[CI/Check clippy    ]   |   Downloaded unicode-xid v0.2.2\n[CI/Check clippy    ]   |   Downloaded sct v0.7.0\n[CI/Check clippy    ]   |   Downloaded matches v0.1.8\n[CI/Check clippy    ]   |   Downloaded pathdiff v0.2.1\n[CI/Check clippy    ]   |   Downloaded minimal-lexical v0.2.1\n[CI/Check clippy    ]   |   Downloaded regex v1.5.5\n[CI/Check clippy    ]   |   Downloaded webpki-roots v0.22.1\n[CI/Check clippy    ]   |   Downloaded ureq v2.3.1\n[CI/Check clippy    ]   |   Downloaded pubgrub v0.2.1\n[CI/Check clippy    ]   |   Downloaded idna v0.2.3\n[CI/Check clippy    ]   |   Downloaded nom v7.1.0\n[CI/Check clippy    ]   |   Downloaded mio-extras v2.0.6\n[CI/Check clippy    ]   |   Downloaded regex-syntax v0.6.25\n[CI/Check clippy    ]   |   Downloaded cfg-if v1.0.0\n[CI/Check clippy    ]   |   Downloaded atty v0.2.14\n[CI/Check clippy    ]   |   Downloaded once_cell v1.8.0\n[CI/Check clippy    ]   |   Downloaded num_cpus v1.13.0\n[CI/Check clippy    ]   |   Downloaded memchr v2.4.0\n[CI/Check clippy    ]   |   Downloaded either v1.6.1\n[CI/Check clippy    ]   |   Downloaded cc v1.0.68\n[CI/Check clippy    ]   |   Downloaded textwrap v0.11.0\n[CI/Check clippy    ]   |   Downloaded serde v1.0.130\n[CI/Check clippy    ]   |   Downloaded ryu v1.0.5\n[CI/Check clippy    ]   |   Downloaded notify v4.0.17\n[CI/Check clippy    ]   |   Downloaded inotify v0.7.1\n[CI/Check clippy    ]   |   Downloaded filetime v0.2.14\n[CI/Check clippy    ]   |   Downloaded ring v0.16.20\n[CI/Check clippy    ]   |   Downloaded path-dedot v3.0.12\n[CI/Check clippy    ]   |   Downloaded path-absolutize v3.0.11\n[CI/Check clippy    ]   |   Downloaded bitflags v1.2.1\n[CI/Check clippy    ]   |   Downloaded fs_extra v1.2.0\n[CI/Check clippy    ]   |   Downloaded clap v2.34.0\n[CI/Check clippy    ]   |   Downloaded cfg-if v0.1.10\n[CI/Check clippy    ]   |   Downloaded walkdir v2.3.2\n[CI/Check clippy    ]   |   Downloaded version_check v0.9.3\n[CI/Check clippy    ]   |   Downloaded unicode-bidi v0.3.5\n[CI/Check clippy    ]   |   Downloaded tinyvec v1.2.0\n[CI/Check clippy    ]   |   Downloaded thiserror-impl v1.0.25\n[CI/Check clippy    ]   |   Downloaded thiserror v1.0.25\n[CI/Check clippy    ]   |   Downloaded slab v0.4.3\n[CI/Check clippy    ]   |   Downloaded spin v0.5.2\n[CI/Check clippy    ]   |   Downloaded serde_json v1.0.72\n[CI/Check clippy    ]   |   Downloaded serde_derive v1.0.130\n[CI/Check clippy    ]   |   Downloaded rustls v0.20.2\n[CI/Check clippy    ]   |   Downloaded libc v0.2.97\n[CI/Check clippy    ]   |   Downloaded anyhow v1.0.51\n[CI/Check clippy    ]   |   Downloaded base64 v0.13.0\n[CI/Check clippy    ]   |    Compiling libc v0.2.97\n[CI/Check clippy    ]   |    Compiling proc-macro2 v1.0.27\n[CI/Check clippy    ]   |    Compiling unicode-xid v0.2.2\n[CI/Check clippy    ]   |    Compiling syn v1.0.73\n[CI/Check clippy    ]   |     Checking once_cell v1.8.0\n[CI/Check clippy    ]   |    Compiling cc v1.0.68\n[CI/Check clippy    ]   |     Checking cfg-if v1.0.0\n[CI/Check clippy    ]   |    Compiling log v0.4.14\n[CI/Check clippy    ]   |     Checking untrusted v0.7.1\n[CI/Check clippy    ]   |     Checking spin v0.5.2\n[CI/Check clippy    ]   |    Compiling serde_derive v1.0.130\n[CI/Check clippy    ]   |     Checking tinyvec_macros v0.1.0\n[CI/Check clippy    ]   |    Compiling bitflags v1.2.1\n[CI/Check clippy    ]   |    Compiling memchr v2.4.0\n[CI/Check clippy    ]   |     Checking matches v0.1.8\n[CI/Check clippy    ]   |    Compiling serde v1.0.130\n[CI/Check clippy    ]   |     Checking cfg-if v0.1.10\n[CI/Check clippy    ]   |    Compiling ryu v1.0.5\n[CI/Check clippy    ]   |    Compiling serde_json v1.0.72\n[CI/Check clippy    ]   |     Checking slab v0.4.3\n[CI/Check clippy    ]   |     Checking percent-encoding v2.1.0\n[CI/Check clippy    ]   |    Compiling version_check v0.9.3\n[CI/Check clippy    ]   |    Compiling anyhow v1.0.51\n[CI/Check clippy    ]   |     Checking unicode-width v0.1.8\n[CI/Check clippy    ]   |     Checking lazycell v1.3.0\n[CI/Check clippy    ]   |     Checking itoa v0.4.7\n[CI/Check clippy    ]   |     Checking rustc-hash v1.1.0\n[CI/Check clippy    ]   |    Compiling fs_extra v1.2.0\n[CI/Check clippy    ]   |     Checking same-file v1.0.6\n[CI/Check clippy    ]   |     Checking minimal-lexical v0.2.1\n[CI/Check clippy    ]   |     Checking either v1.6.1\n[CI/Check clippy    ]   |     Checking regex-syntax v0.6.25\n[CI/Check clippy    ]   |     Checking chunked_transfer v1.4.0\n[CI/Check clippy    ]   |     Checking base64 v0.13.0\n[CI/Check clippy    ]   |     Checking glob v0.3.0\n[CI/Check clippy    ]   |     Checking pathdiff v0.2.1\n[CI/Check clippy    ]   |     Checking tinyvec v1.2.0\n[CI/Check clippy    ]   |     Checking unicode-bidi v0.3.5\n[CI/Check clippy    ]   |     Checking path-dedot v3.0.12\n[CI/Check clippy    ]   |     Checking form_urlencoded v1.0.1\n[CI/Check clippy    ]   |     Checking textwrap v0.11.0\n[CI/Check clippy    ]   |     Checking walkdir v2.3.2\n[CI/Check clippy    ]   |     Checking path-absolutize v3.0.11\n[CI/Check clippy    ]   |    Compiling nom v7.1.0\n[CI/Check clippy    ]   |     Checking clap v2.34.0\n[CI/Check clippy    ]   |    Compiling ring v0.16.20\n[CI/Check clippy    ]   |     Checking unicode-normalization v0.1.19\n[CI/Check clippy    ]   |     Checking aho-corasick v0.7.18\n[CI/Check clippy    ]   |    Compiling quote v1.0.9\n[CI/Check clippy    ]   |     Checking iovec v0.1.4\n[CI/Check clippy    ]   |     Checking net2 v0.2.37\n[CI/Check clippy    ]   |     Checking inotify-sys v0.1.5\n[CI/Check clippy    ]   |     Checking filetime v0.2.14\n[CI/Check clippy    ]   |     Checking dirs-sys-next v0.1.2\n[CI/Check clippy    ]   |     Checking num_cpus v1.13.0\n[CI/Check clippy    ]   |     Checking atty v0.2.14\n[CI/Check clippy    ]   |     Checking which v4.2.2\n[CI/Check clippy    ]   |     Checking inotify v0.7.1\n[CI/Check clippy    ]   |     Checking dirs-next v2.0.0\n[CI/Check clippy    ]   |     Checking mio v0.6.23\n[CI/Check clippy    ]   |    Compiling elm-test-rs v3.0.0 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mpizenberg-elm-test-rs)\n[CI/Check clippy    ]   |     Checking regex v1.5.5\n[CI/Check clippy    ]   |     Checking idna v0.2.3\n[CI/Check clippy    ]   |     Checking mio-extras v2.0.6\n[CI/Check clippy    ]   |     Checking url v2.2.2\n[CI/Check clippy    ]   |     Checking notify v4.0.17\n[CI/Check clippy    ]   |    Compiling thiserror-impl v1.0.25\n[CI/Check clippy    ]   |     Checking thiserror v1.0.25\n[CI/Check clippy    ]   |     Checking webpki v0.22.0\n[CI/Check clippy    ]   |     Checking sct v0.7.0\n[CI/Check clippy    ]   |     Checking rustls v0.20.2\n[CI/Check clippy    ]   |     Checking webpki-roots v0.22.1\n[CI/Check clippy    ]   |     Checking ureq v2.3.1\n[CI/Check clippy    ]   |     Checking pubgrub v0.2.1\n[CI/Check clippy    ]   |     Checking pubgrub-dependency-provider-elm v0.1.0 (https://github.com/mpizenberg/pubgrub-dependency-provider-elm?rev=a20a795f0#a20a795f)\n[CI/Check clippy    ]   |     Finished dev [unoptimized + debuginfo] target(s) in 2m 18s\n[CI/Check clippy    ]   | warning: the following packages contain code that will be rejected by a future version of Rust: fs_extra v1.2.0\n[CI/Check clippy    ]   | note: to see what the problems were, use the option `--future-incompat-report`, or run `cargo report future-incompatibilities --id 1`\n[CI/Check clippy    ]   \u2705  Success - Main actions-rs/cargo@v1\n[CI/Check clippy    ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: failed to copy content to container: Error response from daemon: Could not find the file /var/run/act/ in container 5f64633706d86762f3b073e8ae2c3bd6b093e8d43204eaeb7b4eba6901e76128\n"
}