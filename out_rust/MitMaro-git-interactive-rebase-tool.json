{
    "repository": "MitMaro/git-interactive-rebase-tool",
    "clone_url": "https://github.com/MitMaro/git-interactive-rebase-tool.git",
    "timestamp": "2023-05-30T09:15:20.853755Z",
    "clone_success": true,
    "number of actions": 4,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Pull Request/lint    ] \ud83d\ude80  Start image=crawlergpt:latest\n[Pull Request/coverage] \ud83d\ude80  Start image=crawlergpt:latest\n[Pull Request/linux   ] \ud83d\ude80  Start image=crawlergpt:latest\n[Pull Request/docs    ] \ud83d\ude80  Start image=crawlergpt:latest\n[Pull Request/windows ] \ud83d\ude80  Start image=crawlergpt:latest\n[Pull Request/macos   ] \ud83d\ude80  Start image=crawlergpt:latest\n[Pull Request/format  ] \ud83d\ude80  Start image=crawlergpt:latest\n[Pull Request/lint    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Pull Request/docs    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Pull Request/windows ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Pull Request/macos   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Pull Request/linux   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Pull Request/format  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Pull Request/coverage]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Pull Request/linux   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Pull Request/coverage]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Pull Request/windows ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Pull Request/docs    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Pull Request/macos   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Pull Request/lint    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Pull Request/format  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Pull Request/macos   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Pull Request/linux   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Pull Request/coverage]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Pull Request/lint    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Pull Request/windows ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Pull Request/format  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Pull Request/docs    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Pull Request/linux   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/MitMaro-git-interactive-rebase-tool] user=0 workdir=\n[Pull Request/windows ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/MitMaro-git-interactive-rebase-tool] user=0 workdir=\n[Pull Request/lint    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/MitMaro-git-interactive-rebase-tool] user=0 workdir=\n[Pull Request/docs    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/MitMaro-git-interactive-rebase-tool] user=0 workdir=\n[Pull Request/format  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/MitMaro-git-interactive-rebase-tool] user=0 workdir=\n[Pull Request/macos   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/MitMaro-git-interactive-rebase-tool] user=0 workdir=\n[Pull Request/coverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/MitMaro-git-interactive-rebase-tool] user=0 workdir=\n[Pull Request/windows ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=stable\n[Pull Request/macos   ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=stable\n[Pull Request/coverage]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=master\n[Pull Request/docs    ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=stable\n[Pull Request/format  ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=master\n[Pull Request/linux   ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=stable\n[Pull Request/lint    ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=stable\n[Pull Request/windows ] \u2b50 Run Pre dtolnay/rust-toolchain@stable\n[Pull Request/macos   ] \u2b50 Run Pre dtolnay/rust-toolchain@stable\n[Pull Request/coverage] \u2b50 Run Pre dtolnay/rust-toolchain@master\n[Pull Request/docs    ] \u2b50 Run Pre dtolnay/rust-toolchain@stable\n[Pull Request/format  ] \u2b50 Run Pre dtolnay/rust-toolchain@master\n[Pull Request/linux   ] \u2b50 Run Pre dtolnay/rust-toolchain@stable\n[Pull Request/lint    ] \u2b50 Run Pre dtolnay/rust-toolchain@stable\n[Pull Request/macos   ]   \u2705  Success - Pre dtolnay/rust-toolchain@stable\n[Pull Request/format  ]   \u2705  Success - Pre dtolnay/rust-toolchain@master\n[Pull Request/lint    ]   \u2705  Success - Pre dtolnay/rust-toolchain@stable\n[Pull Request/linux   ]   \u2705  Success - Pre dtolnay/rust-toolchain@stable\n[Pull Request/windows ]   \u2705  Success - Pre dtolnay/rust-toolchain@stable\n[Pull Request/coverage]   \u2705  Success - Pre dtolnay/rust-toolchain@master\n[Pull Request/docs    ]   \u2705  Success - Pre dtolnay/rust-toolchain@stable\n[Pull Request/linux   ]   \u2601  git clone 'https://github.com/Swatinem/rust-cache' # ref=v2\n[Pull Request/coverage]   \u2601  git clone 'https://github.com/Swatinem/rust-cache' # ref=v2\n[Pull Request/macos   ]   \u2601  git clone 'https://github.com/Swatinem/rust-cache' # ref=v2\n[Pull Request/lint    ]   \u2601  git clone 'https://github.com/Swatinem/rust-cache' # ref=v2\n[Pull Request/windows ]   \u2601  git clone 'https://github.com/Swatinem/rust-cache' # ref=v2\n[Pull Request/format  ]   \u2601  git clone 'https://github.com/Swatinem/rust-cache' # ref=v2\n[Pull Request/linux   ]   \u2601  git clone 'https://github.com/baptiste0928/cargo-install' # ref=v1\n[Pull Request/coverage]   \u2601  git clone 'https://github.com/actions-rs/tarpaulin' # ref=v0.1\n[Pull Request/macos   ]   \u2601  git clone 'https://github.com/baptiste0928/cargo-install' # ref=v1\n[Pull Request/lint    ]   \u2601  git clone 'https://github.com/baptiste0928/cargo-install' # ref=v1\n[Pull Request/format  ]   \u2601  git clone 'https://github.com/baptiste0928/cargo-install' # ref=v1\n[Pull Request/coverage]   \u2601  git clone 'https://github.com/coverallsapp/github-action' # ref=master\n[Pull Request/docs    ] \u2b50 Run Main actions/checkout@v3\n[Pull Request/windows ] \u2b50 Run Main actions/checkout@v3\n[Pull Request/linux   ] \u2b50 Run Main actions/checkout@v3\n[Pull Request/macos   ] \u2b50 Run Main actions/checkout@v3\n[Pull Request/lint    ] \u2b50 Run Main actions/checkout@v3\n[Pull Request/format  ] \u2b50 Run Main actions/checkout@v3\n[Pull Request/coverage] \u2b50 Run Main actions/checkout@v3\n[Pull Request/macos   ]   \u2705  Success - Main actions/checkout@v3\n[Pull Request/linux   ]   \u2705  Success - Main actions/checkout@v3\n[Pull Request/lint    ]   \u2705  Success - Main actions/checkout@v3\n[Pull Request/format  ]   \u2705  Success - Main actions/checkout@v3\n[Pull Request/windows ]   \u2705  Success - Main actions/checkout@v3\n[Pull Request/docs    ]   \u2705  Success - Main actions/checkout@v3\n[Pull Request/lint    ] \u2b50 Run Main dtolnay/rust-toolchain@stable\n[Pull Request/windows ] \u2b50 Run Main dtolnay/rust-toolchain@stable\n[Pull Request/macos   ] \u2b50 Run Main dtolnay/rust-toolchain@stable\n[Pull Request/docs    ] \u2b50 Run Main dtolnay/rust-toolchain@stable\n[Pull Request/format  ] \u2b50 Run Main dtolnay/rust-toolchain@master\n[Pull Request/linux   ] \u2b50 Run Main dtolnay/rust-toolchain@stable\n[Pull Request/windows ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@stable/ dst=/var/run/act/actions/dtolnay-rust-toolchain@stable/\n[Pull Request/format  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[Pull Request/lint    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@stable/ dst=/var/run/act/actions/dtolnay-rust-toolchain@stable/\n[Pull Request/docs    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@stable/ dst=/var/run/act/actions/dtolnay-rust-toolchain@stable/\n[Pull Request/macos   ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@stable/ dst=/var/run/act/actions/dtolnay-rust-toolchain@stable/\n[Pull Request/format  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[Pull Request/docs    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@stable/] user=0 workdir=\n[Pull Request/lint    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@stable/] user=0 workdir=\n[Pull Request/windows ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@stable/] user=0 workdir=\n[Pull Request/macos   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@stable/] user=0 workdir=\n[Pull Request/linux   ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@stable/ dst=/var/run/act/actions/dtolnay-rust-toolchain@stable/\n[Pull Request/linux   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@stable/] user=0 workdir=\n[Pull Request/format  ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Pull Request/windows ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Pull Request/docs    ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Pull Request/coverage]   \u2705  Success - Main actions/checkout@v3\n[Pull Request/macos   ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Pull Request/lint    ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Pull Request/linux   ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Pull Request/macos   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[Pull Request/windows ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[Pull Request/format  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[Pull Request/lint    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[Pull Request/linux   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[Pull Request/docs    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[Pull Request/docs    ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Pull Request/format  ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Pull Request/linux   ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Pull Request/lint    ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Pull Request/windows ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Pull Request/macos   ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Pull Request/coverage] \u2b50 Run Main dtolnay/rust-toolchain@master\n[Pull Request/coverage]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[Pull Request/format  ]   \u2699  ::set-output:: toolchain=nightly\n[Pull Request/linux   ]   \u2699  ::set-output:: toolchain=stable\n[Pull Request/lint    ]   \u2699  ::set-output:: toolchain=stable\n[Pull Request/macos   ]   \u2699  ::set-output:: toolchain=stable\n[Pull Request/windows ]   \u2699  ::set-output:: toolchain=stable\n[Pull Request/docs    ]   \u2699  ::set-output:: toolchain=stable\n[Pull Request/coverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[Pull Request/coverage] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Pull Request/macos   ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Pull Request/lint    ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Pull Request/docs    ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Pull Request/format  ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade= --allow-downgrade\" >> $GITHUB_OUTPUT\n[Pull Request/windows ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Pull Request/linux   ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Pull Request/coverage]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[Pull Request/format  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[Pull Request/lint    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[Pull Request/docs    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[Pull Request/windows ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[Pull Request/macos   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[Pull Request/linux   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[Pull Request/coverage]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Pull Request/macos   ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Pull Request/windows ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Pull Request/format  ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade= --allow-downgrade\" >> $GITHUB_OUTPUT\n[Pull Request/linux   ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Pull Request/lint    ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Pull Request/docs    ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Pull Request/coverage]   \u2699  ::set-output:: toolchain=nightly\n[Pull Request/macos   ]   \u2699  ::set-output:: targets=\n[Pull Request/macos   ]   \u2699  ::set-output:: components=\n[Pull Request/macos   ]   \u2699  ::set-output:: downgrade=\n[Pull Request/linux   ]   \u2699  ::set-output:: targets=\n[Pull Request/linux   ]   \u2699  ::set-output:: components=\n[Pull Request/linux   ]   \u2699  ::set-output:: downgrade=\n[Pull Request/lint    ]   \u2699  ::set-output:: targets=\n[Pull Request/lint    ]   \u2699  ::set-output:: components= --component clippy\n[Pull Request/lint    ]   \u2699  ::set-output:: downgrade=\n[Pull Request/format  ]   \u2699  ::set-output:: targets=\n[Pull Request/format  ]   \u2699  ::set-output:: components= --component rustfmt\n[Pull Request/format  ]   \u2699  ::set-output:: downgrade= --allow-downgrade\n[Pull Request/docs    ]   \u2699  ::set-output:: targets=\n[Pull Request/docs    ]   \u2699  ::set-output:: components=\n[Pull Request/docs    ]   \u2699  ::set-output:: downgrade=\n[Pull Request/windows ]   \u2699  ::set-output:: targets=\n[Pull Request/windows ]   \u2699  ::set-output:: components=\n[Pull Request/windows ]   \u2699  ::set-output:: downgrade=\n[Pull Request/coverage] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Pull Request/linux   ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Pull Request/format  ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Pull Request/docs    ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Pull Request/lint    ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Pull Request/macos   ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Pull Request/windows ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Pull Request/coverage]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[Pull Request/docs    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[Pull Request/linux   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[Pull Request/format  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[Pull Request/windows ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[Pull Request/lint    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[Pull Request/lint    ]   | info: downloading installer\n[Pull Request/format  ]   | info: downloading installer\n[Pull Request/linux   ]   | info: downloading installer\n[Pull Request/coverage]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Pull Request/windows ]   | info: downloading installer\n[Pull Request/docs    ]   | info: downloading installer\n[Pull Request/coverage]   \u2699  ::set-output:: components=\n[Pull Request/coverage]   \u2699  ::set-output:: downgrade=\n[Pull Request/coverage]   \u2699  ::set-output:: targets=\n[Pull Request/linux   ]   | \n[Pull Request/linux   ]   | \n[Pull Request/linux   ]   | Rust is installed now. Great!\n[Pull Request/linux   ]   | \n[Pull Request/linux   ]   | To get started you may need to restart your current shell.\n[Pull Request/linux   ]   | This would reload your PATH environment variable to include\n[Pull Request/linux   ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Pull Request/linux   ]   | \n[Pull Request/linux   ]   | To configure your current shell, run:\n[Pull Request/linux   ]   | source \"$HOME/.cargo/env\"\n[Pull Request/linux   ]   | info: profile set to 'default'\n[Pull Request/linux   ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Pull Request/linux   ]   | info: skipping toolchain installation\n[Pull Request/linux   ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Pull Request/lint    ]   | \n[Pull Request/lint    ]   | info: profile set to 'default'\n[Pull Request/lint    ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Pull Request/lint    ]   | info: skipping toolchain installation\n[Pull Request/lint    ]   | \n[Pull Request/lint    ]   | Rust is installed now. Great!\n[Pull Request/lint    ]   | \n[Pull Request/lint    ]   | To get started you may need to restart your current shell.\n[Pull Request/lint    ]   | This would reload your PATH environment variable to include\n[Pull Request/lint    ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Pull Request/lint    ]   | \n[Pull Request/lint    ]   | To configure your current shell, run:\n[Pull Request/lint    ]   | source \"$HOME/.cargo/env\"\n[Pull Request/lint    ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Pull Request/coverage] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Pull Request/docs    ]   | info: profile set to 'default'\n[Pull Request/docs    ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Pull Request/docs    ]   | info: skipping toolchain installation\n[Pull Request/docs    ]   | \n[Pull Request/docs    ]   | \n[Pull Request/docs    ]   | Rust is installed now. Great!\n[Pull Request/docs    ]   | \n[Pull Request/docs    ]   | To get started you may need to restart your current shell.\n[Pull Request/docs    ]   | This would reload your PATH environment variable to include\n[Pull Request/docs    ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Pull Request/docs    ]   | \n[Pull Request/docs    ]   | To configure your current shell, run:\n[Pull Request/docs    ]   | source \"$HOME/.cargo/env\"\n[Pull Request/docs    ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Pull Request/windows ]   | info: profile set to 'default'\n[Pull Request/windows ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Pull Request/windows ]   | info: skipping toolchain installation\n[Pull Request/windows ]   | \n[Pull Request/windows ]   | \n[Pull Request/windows ]   | Rust is installed now. Great!\n[Pull Request/windows ]   | \n[Pull Request/windows ]   | To get started you may need to restart your current shell.\n[Pull Request/windows ]   | This would reload your PATH environment variable to include\n[Pull Request/windows ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Pull Request/windows ]   | \n[Pull Request/windows ]   | To configure your current shell, run:\n[Pull Request/windows ]   | source \"$HOME/.cargo/env\"\n[Pull Request/windows ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Pull Request/lint    ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Pull Request/linux   ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Pull Request/docs    ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Pull Request/format  ]   | \n[Pull Request/format  ]   | \n[Pull Request/format  ]   | Rust is installed now. Great!\n[Pull Request/format  ]   | \n[Pull Request/format  ]   | To get started you may need to restart your current shell.\n[Pull Request/format  ]   | This would reload your PATH environment variable to include\n[Pull Request/format  ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Pull Request/format  ]   | \n[Pull Request/format  ]   | To configure your current shell, run:\n[Pull Request/format  ]   | source \"$HOME/.cargo/env\"\n[Pull Request/format  ]   | info: profile set to 'default'\n[Pull Request/format  ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Pull Request/format  ]   | info: skipping toolchain installation\n[Pull Request/coverage]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[Pull Request/format  ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Pull Request/windows ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Pull Request/docs    ] \u2b50 Run Main rustup toolchain install stable\n[Pull Request/lint    ] \u2b50 Run Main rustup toolchain install stable\n[Pull Request/linux   ] \u2b50 Run Main rustup toolchain install stable\n[Pull Request/windows ] \u2b50 Run Main rustup toolchain install stable\n[Pull Request/format  ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Pull Request/format  ] \u2b50 Run Main rustup toolchain install nightly\n[Pull Request/windows ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[Pull Request/docs    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[Pull Request/lint    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[Pull Request/linux   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[Pull Request/format  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[Pull Request/format  ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[Pull Request/docs    ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Pull Request/format  ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[Pull Request/format  ]   | info: downloading component 'cargo'\n[Pull Request/docs    ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Pull Request/docs    ]   | info: downloading component 'cargo'\n[Pull Request/lint    ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Pull Request/windows ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Pull Request/linux   ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Pull Request/format  ]   | info: downloading component 'rust-std'\n[Pull Request/coverage]   | info: downloading installer\n[Pull Request/lint    ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Pull Request/lint    ]   | info: downloading component 'cargo'\n[Pull Request/linux   ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Pull Request/linux   ]   | info: downloading component 'cargo'\n[Pull Request/windows ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Pull Request/windows ]   | info: downloading component 'cargo'\n[Pull Request/docs    ]   | info: downloading component 'rust-std'\n[Pull Request/lint    ]   | info: downloading component 'clippy'\n[Pull Request/linux   ]   | info: downloading component 'rust-std'\n[Pull Request/lint    ]   | info: downloading component 'rust-std'\n[Pull Request/windows ]   | info: downloading component 'rust-std'\n[Pull Request/coverage]   | info: profile set to 'default'\n[Pull Request/coverage]   | info: default host triple is x86_64-unknown-linux-gnu\n[Pull Request/coverage]   | info: skipping toolchain installation\n[Pull Request/coverage]   | \n[Pull Request/coverage]   | \n[Pull Request/coverage]   | Rust is installed now. Great!\n[Pull Request/coverage]   | \n[Pull Request/coverage]   | To get started you may need to restart your current shell.\n[Pull Request/coverage]   | This would reload your PATH environment variable to include\n[Pull Request/coverage]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Pull Request/coverage]   | \n[Pull Request/coverage]   | To configure your current shell, run:\n[Pull Request/coverage]   | source \"$HOME/.cargo/env\"\n[Pull Request/coverage]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Pull Request/format  ]   | info: downloading component 'rustc'\n[Pull Request/docs    ]   | info: downloading component 'rustc'\n[Pull Request/coverage]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Pull Request/coverage] \u2b50 Run Main rustup toolchain install nightly\n[Pull Request/linux   ]   | info: downloading component 'rustc'\n[Pull Request/lint    ]   | info: downloading component 'rustc'\n[Pull Request/coverage]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[Pull Request/windows ]   | info: downloading component 'rustc'\n[Pull Request/coverage]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[Pull Request/coverage]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[Pull Request/coverage]   | info: downloading component 'cargo'\n[Pull Request/coverage]   | info: downloading component 'rust-std'\n[Pull Request/lint    ]   | info: installing component 'cargo'\n[Pull Request/linux   ]   | info: installing component 'cargo'\n[Pull Request/format  ]   | info: downloading component 'rustfmt'\n[Pull Request/docs    ]   | info: installing component 'cargo'\n[Pull Request/lint    ]   | info: installing component 'clippy'\n[Pull Request/format  ]   | info: installing component 'cargo'\n[Pull Request/lint    ]   | info: installing component 'rust-std'\n[Pull Request/docs    ]   | info: installing component 'rust-std'\n[Pull Request/linux   ]   | info: installing component 'rust-std'\n[Pull Request/format  ]   | info: installing component 'rust-std'\n[Pull Request/windows ]   | info: installing component 'cargo'\n[Pull Request/coverage]   | info: downloading component 'rustc'\n[Pull Request/windows ]   | info: installing component 'rust-std'\n[Pull Request/lint    ]   | info: installing component 'rustc'\n[Pull Request/format  ]   | info: installing component 'rustc'\n[Pull Request/linux   ]   | info: installing component 'rustc'\n[Pull Request/docs    ]   | info: installing component 'rustc'\n[Pull Request/windows ]   | info: installing component 'rustc'\n[Pull Request/coverage]   | info: installing component 'cargo'\n[Pull Request/coverage]   | info: installing component 'rust-std'\n[Pull Request/lint    ]   | \n[Pull Request/lint    ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Pull Request/lint    ]   | \n[Pull Request/lint    ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Pull Request/lint    ]   \u2705  Success - Main rustup toolchain install stable\n[Pull Request/format  ]   | info: installing component 'rustfmt'\n[Pull Request/linux   ]   | \n[Pull Request/linux   ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Pull Request/linux   ]   | \n[Pull Request/linux   ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Pull Request/linux   ]   \u2705  Success - Main rustup toolchain install stable\n[Pull Request/coverage]   | info: installing component 'rustc'\n[Pull Request/docs    ]   | \n[Pull Request/format  ]   | \n[Pull Request/docs    ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Pull Request/docs    ]   | \n[Pull Request/format  ]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[Pull Request/format  ]   | \n[Pull Request/format  ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[Pull Request/docs    ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Pull Request/docs    ]   \u2705  Success - Main rustup toolchain install stable\n[Pull Request/format  ]   \u2705  Success - Main rustup toolchain install nightly\n[Pull Request/windows ]   | \n[Pull Request/windows ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Pull Request/windows ]   | \n[Pull Request/windows ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Pull Request/windows ]   \u2705  Success - Main rustup toolchain install stable\n[Pull Request/lint    ] \u2b50 Run Main rustup default stable\n[Pull Request/format  ] \u2b50 Run Main rustup default nightly\n[Pull Request/docs    ] \u2b50 Run Main rustup default stable\n[Pull Request/linux   ] \u2b50 Run Main rustup default stable\n[Pull Request/windows ] \u2b50 Run Main rustup default stable\n[Pull Request/lint    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[Pull Request/linux   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[Pull Request/docs    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[Pull Request/format  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[Pull Request/windows ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[Pull Request/coverage]   | \n[Pull Request/coverage]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[Pull Request/coverage]   | \n[Pull Request/coverage]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[Pull Request/coverage]   \u2705  Success - Main rustup toolchain install nightly\n[Pull Request/coverage] \u2b50 Run Main rustup default nightly\n[Pull Request/coverage]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[Pull Request/linux   ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Pull Request/docs    ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Pull Request/linux   ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Pull Request/linux   ]   | \n[Pull Request/docs    ]   | \n[Pull Request/docs    ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Pull Request/linux   ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Pull Request/linux   ]   | \n[Pull Request/docs    ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Pull Request/docs    ]   | \n[Pull Request/linux   ]   \u2705  Success - Main rustup default stable\n[Pull Request/lint    ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Pull Request/coverage]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[Pull Request/lint    ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Pull Request/lint    ]   | \n[Pull Request/windows ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Pull Request/coverage]   | \n[Pull Request/coverage]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[Pull Request/docs    ]   \u2705  Success - Main rustup default stable\n[Pull Request/windows ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Pull Request/windows ]   | \n[Pull Request/coverage]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[Pull Request/coverage]   | \n[Pull Request/format  ]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[Pull Request/lint    ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Pull Request/lint    ]   | \n[Pull Request/coverage]   \u2705  Success - Main rustup default nightly\n[Pull Request/lint    ]   \u2705  Success - Main rustup default stable\n[Pull Request/format  ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[Pull Request/format  ]   | \n[Pull Request/windows ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Pull Request/windows ]   | \n[Pull Request/windows ]   \u2705  Success - Main rustup default stable\n[Pull Request/format  ]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[Pull Request/format  ]   | \n[Pull Request/format  ]   \u2705  Success - Main rustup default nightly\n[Pull Request/linux   ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Pull Request/coverage] \u2b50 Run Main : create cachekey\nDATE=$(rustc +nightly --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Pull Request/windows ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Pull Request/lint    ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Pull Request/docs    ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Pull Request/format  ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +nightly --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Pull Request/linux   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[Pull Request/lint    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[Pull Request/coverage]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[Pull Request/windows ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[Pull Request/docs    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[Pull Request/format  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[Pull Request/docs    ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Pull Request/windows ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Pull Request/coverage]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +nightly --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Pull Request/format  ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +nightly --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Pull Request/linux   ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Pull Request/lint    ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Pull Request/linux   ]   \u2699  ::set-output:: cachekey=2023041684c8\n[Pull Request/windows ]   \u2699  ::set-output:: cachekey=2023041684c8\n[Pull Request/coverage]   \u2699  ::set-output:: cachekey=202305294985\n[Pull Request/format  ]   \u2699  ::set-output:: cachekey=202305294985\n[Pull Request/docs    ]   \u2699  ::set-output:: cachekey=2023041684c8\n[Pull Request/lint    ]   \u2699  ::set-output:: cachekey=2023041684c8\n[Pull Request/lint    ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Pull Request/coverage] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Pull Request/linux   ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Pull Request/format  ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Pull Request/docs    ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Pull Request/windows ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Pull Request/windows ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[Pull Request/coverage]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[Pull Request/linux   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[Pull Request/lint    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[Pull Request/format  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[Pull Request/docs    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[Pull Request/windows ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Pull Request/lint    ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Pull Request/format  ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Pull Request/format  ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[Pull Request/windows ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[Pull Request/lint    ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[Pull Request/docs    ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Pull Request/linux   ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Pull Request/coverage]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Pull Request/linux   ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[Pull Request/docs    ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[Pull Request/coverage]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[Pull Request/windows ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Pull Request/lint    ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Pull Request/format  ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Pull Request/linux   ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Pull Request/docs    ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Pull Request/coverage] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Pull Request/windows ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[Pull Request/lint    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[Pull Request/format  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[Pull Request/lint    ]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Pull Request/format  ]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Pull Request/windows ]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Pull Request/windows ]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[Pull Request/format  ]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[Pull Request/lint    ]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[Pull Request/docs    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[Pull Request/coverage]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[Pull Request/linux   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[Pull Request/lint    ] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Pull Request/windows ] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Pull Request/format  ] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +nightly --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Pull Request/lint    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[Pull Request/format  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[Pull Request/windows ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[Pull Request/linux   ]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Pull Request/coverage]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Pull Request/docs    ]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Pull Request/coverage]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[Pull Request/linux   ]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[Pull Request/docs    ]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[Pull Request/docs    ] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Pull Request/linux   ] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Pull Request/coverage] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +nightly --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Pull Request/coverage]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[Pull Request/docs    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[Pull Request/linux   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[Pull Request/coverage]   \u274c  Failure - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +nightly --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Pull Request/windows ]   \u274c  Failure - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Pull Request/linux   ]   \u274c  Failure - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Pull Request/lint    ]   \u274c  Failure - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Pull Request/docs    ]   \u274c  Failure - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Pull Request/format  ]   \u274c  Failure - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +nightly --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Pull Request/linux   ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/2d980337e7cd2ba69e2ce1890ac73cdfe1fa15df9b57d17e4a3437d975da01c0/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Pull Request/lint    ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/646a251dfa6d10c326758a5ebe911e0a4be2fe4161ebc989302c8cb6c13eabdb/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Pull Request/windows ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/6ec1bc58797143fff3742993770130e388d9a2f098cd3d0b44df55527e5e06c1/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Pull Request/coverage] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/c7255364e69c1b013684f6670ffb8fe42123847a87b2ad2046a407e5a1cc8bbe/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Pull Request/docs    ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/abfccadd161bc5586a9a4c3a903447fa32e2d78ac7677b5a96f1f6e81322252c/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Pull Request/format  ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/a4d29fe80171900d115afc08cc5a3479139627c65a792a8d17230df2267a401d/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Pull Request/linux   ]   \u2699  ::set-output:: cachekey=2023041684c8\n[Pull Request/linux   ]   \u2699  ::set-output:: name=stable\n[Pull Request/linux   ]   \u274c  Failure - Main dtolnay/rust-toolchain@stable\n[Pull Request/lint    ]   \u2699  ::set-output:: cachekey=2023041684c8\n[Pull Request/linux   ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/2d980337e7cd2ba69e2ce1890ac73cdfe1fa15df9b57d17e4a3437d975da01c0/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Pull Request/lint    ]   \u2699  ::set-output:: name=stable\n[Pull Request/lint    ]   \u274c  Failure - Main dtolnay/rust-toolchain@stable\n[Pull Request/docs    ]   \u2699  ::set-output:: cachekey=2023041684c8\n[Pull Request/format  ]   \u2699  ::set-output:: cachekey=202305294985\n[Pull Request/docs    ]   \u2699  ::set-output:: name=stable\n[Pull Request/docs    ]   \u274c  Failure - Main dtolnay/rust-toolchain@stable\n[Pull Request/lint    ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/646a251dfa6d10c326758a5ebe911e0a4be2fe4161ebc989302c8cb6c13eabdb/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Pull Request/format  ]   \u2699  ::set-output:: name=nightly\n[Pull Request/format  ]   \u274c  Failure - Main dtolnay/rust-toolchain@master\n[Pull Request/docs    ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/abfccadd161bc5586a9a4c3a903447fa32e2d78ac7677b5a96f1f6e81322252c/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Pull Request/format  ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/a4d29fe80171900d115afc08cc5a3479139627c65a792a8d17230df2267a401d/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Pull Request/windows ]   \u2699  ::set-output:: name=stable\n[Pull Request/coverage]   \u2699  ::set-output:: cachekey=202305294985\n[Pull Request/coverage]   \u2699  ::set-output:: name=nightly\n[Pull Request/coverage]   \u274c  Failure - Main dtolnay/rust-toolchain@master\n[Pull Request/windows ]   \u2699  ::set-output:: cachekey=2023041684c8\n[Pull Request/windows ]   \u274c  Failure - Main dtolnay/rust-toolchain@stable\n[Pull Request/coverage] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/c7255364e69c1b013684f6670ffb8fe42123847a87b2ad2046a407e5a1cc8bbe/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Pull Request/windows ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/6ec1bc58797143fff3742993770130e388d9a2f098cd3d0b44df55527e5e06c1/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Pull Request/macos   ]   \u274c  Failure - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Pull Request/macos   ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/55d26c8c750b7ce552603fb08aa90d95783534aa282ead366ccc884de08a8899/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Pull Request/macos   ]   \u2699  ::set-output:: cachekey=\n[Pull Request/macos   ]   \u2699  ::set-output:: name=stable\n[Pull Request/macos   ]   \u274c  Failure - Main dtolnay/rust-toolchain@stable\n[Pull Request/macos   ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/55d26c8c750b7ce552603fb08aa90d95783534aa282ead366ccc884de08a8899/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Pull Request/docs    ] \u2b50 Run Post dtolnay/rust-toolchain@stable\n[Pull Request/macos   ] \u2b50 Run Post dtolnay/rust-toolchain@stable\n[Pull Request/format  ] \u2b50 Run Post dtolnay/rust-toolchain@master\n[Pull Request/lint    ] \u2b50 Run Post dtolnay/rust-toolchain@stable\n[Pull Request/coverage] \u2b50 Run Post dtolnay/rust-toolchain@master\n[Pull Request/linux   ] \u2b50 Run Post dtolnay/rust-toolchain@stable\n[Pull Request/windows ] \u2b50 Run Post dtolnay/rust-toolchain@stable\n[Pull Request/linux   ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@stable/ dst=/var/run/act/actions/dtolnay-rust-toolchain@stable/\n[Pull Request/lint    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@stable/ dst=/var/run/act/actions/dtolnay-rust-toolchain@stable/\n[Pull Request/coverage]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[Pull Request/windows ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@stable/ dst=/var/run/act/actions/dtolnay-rust-toolchain@stable/\n[Pull Request/format  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[Pull Request/docs    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@stable/ dst=/var/run/act/actions/dtolnay-rust-toolchain@stable/\n[Pull Request/docs    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@stable/] user=0 workdir=\n[Pull Request/format  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[Pull Request/windows ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@stable/] user=0 workdir=\n[Pull Request/linux   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@stable/] user=0 workdir=\n[Pull Request/lint    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@stable/] user=0 workdir=\n[Pull Request/coverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[Pull Request/lint    ]   \u2705  Success - Post dtolnay/rust-toolchain@stable\n[Pull Request/format  ]   \u2705  Success - Post dtolnay/rust-toolchain@master\n[Pull Request/windows ]   \u2705  Success - Post dtolnay/rust-toolchain@stable\n[Pull Request/lint    ]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[Pull Request/format  ]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[Pull Request/windows ]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[Pull Request/docs    ]   \u2705  Success - Post dtolnay/rust-toolchain@stable\n[Pull Request/coverage]   \u2705  Success - Post dtolnay/rust-toolchain@master\n[Pull Request/linux   ]   \u2705  Success - Post dtolnay/rust-toolchain@stable\n[Pull Request/linux   ]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[Pull Request/coverage]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[Pull Request/docs    ]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[Pull Request/format  ] \ud83c\udfc1  Job succeeded\n[Pull Request/lint    ] \ud83c\udfc1  Job succeeded\n[Pull Request/windows ] \ud83c\udfc1  Job succeeded\n[Pull Request/docs    ] \ud83c\udfc1  Job succeeded\n[Pull Request/linux   ] \ud83c\udfc1  Job succeeded\n[Pull Request/coverage] \ud83c\udfc1  Job succeeded\n[Pull Request/macos   ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@stable/ dst=/var/run/act/actions/dtolnay-rust-toolchain@stable/\n[Pull Request/macos   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@stable/] user=0 workdir=\n[Pull Request/macos   ]   \u2705  Success - Post dtolnay/rust-toolchain@stable\n[Pull Request/macos   ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}