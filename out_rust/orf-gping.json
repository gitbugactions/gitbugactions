{
    "repository": "orf/gping",
    "clone_url": "https://github.com/orf/gping.git",
    "timestamp": "2023-05-30T08:52:29.839836Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/Test in Alpine] \ud83d\ude80  Start image=alpine:latest\n[CI/Checks        ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Cross-build   ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Rust project  ] \ud83d\ude80  Start image=quay.io/pypa/manylinux_2_28_x86_64\n[CI/Rust project  ]   \ud83d\udc33  docker pull image=quay.io/pypa/manylinux_2_28_x86_64 platform= username= forcePull=false\n[CI/Cross-build   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Test in Alpine]   \ud83d\udc33  docker pull image=alpine:latest platform= username= forcePull=false\n[CI/Checks        ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Test in Alpine]   \ud83d\udc33  docker create image=alpine:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Cross-build   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Checks        ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rust project  ]   \ud83d\udc33  docker create image=quay.io/pypa/manylinux_2_28_x86_64 platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test in Alpine]   \ud83d\udc33  docker run image=alpine:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Checks        ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Cross-build   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Rust project  ]   \ud83d\udc33  docker run image=quay.io/pypa/manylinux_2_28_x86_64 platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test in Alpine]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/Rust project  ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/Test in Alpine]   \u2601  git clone 'https://github.com/Swatinem/rust-cache' # ref=v2\n[CI/Rust project  ]   \u2601  git clone 'https://github.com/Swatinem/rust-cache' # ref=v2\n[CI/Test in Alpine]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/Rust project  ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/Rust project  ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/Rust project  ] Unable to checkout 844f36862e911db73fe0815f00a4a2602c279505: EOF\n[CI/Test in Alpine] \u2b50 Run Main actions/checkout@v3\n[CI/Test in Alpine]   \u2705  Success - Main actions/checkout@v3\n[CI/Rust project  ] \ud83c\udfc1  Job succeeded\n[CI/Checks        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/orf-gping] user=0 workdir=\n[CI/Cross-build   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/orf-gping] user=0 workdir=\n[CI/Cross-build   ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/Checks        ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/Cross-build   ]   \u2601  git clone 'https://github.com/Swatinem/rust-cache' # ref=v2\n[CI/Checks        ]   \u2601  git clone 'https://github.com/Swatinem/rust-cache' # ref=v2\n[CI/Cross-build   ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/Checks        ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/Cross-build   ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/Checks        ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/Test in Alpine] \u2b50 Run Main apk add libgcc gcc musl-dev\n[CI/Cross-build   ] Unable to reset to 844f36862e911db73fe0815f00a4a2602c279505: EOF\n[CI/Checks        ] Unable to reset to 844f36862e911db73fe0815f00a4a2602c279505: remove /home/andre-silva/.cache/act/actions-rs-cargo@v1/package-lock.json: no such file or directory\n[CI/Cross-build   ] \ud83c\udfc1  Job succeeded\n[CI/Checks        ] \ud83c\udfc1  Job succeeded\n[CI/Test in Alpine]   \ud83d\udc33  docker exec cmd=[sh -e /var/run/act/workflow/1.sh] user= workdir=\n[CI/Test in Alpine]   | fetch https://dl-cdn.alpinelinux.org/alpine/v3.15/main/x86_64/APKINDEX.tar.gz\n[CI/Test in Alpine]   | fetch https://dl-cdn.alpinelinux.org/alpine/v3.15/community/x86_64/APKINDEX.tar.gz\n[CI/Test in Alpine]   | (1/13) Upgrading musl (1.2.2-r7 -> 1.2.2-r9)\n[CI/Test in Alpine]   | (2/13) Installing libgcc (10.3.1_git20211027-r0)\n[CI/Test in Alpine]   | (3/13) Installing libstdc++ (10.3.1_git20211027-r0)\n[CI/Test in Alpine]   | (4/13) Installing binutils (2.37-r3)\n[CI/Test in Alpine]   | (5/13) Installing libgomp (10.3.1_git20211027-r0)\n[CI/Test in Alpine]   | (6/13) Installing libatomic (10.3.1_git20211027-r0)\n[CI/Test in Alpine]   | (7/13) Installing libgphobos (10.3.1_git20211027-r0)\n[CI/Test in Alpine]   | (8/13) Installing gmp (6.2.1-r1)\n[CI/Test in Alpine]   | (9/13) Installing isl22 (0.22-r0)\n[CI/Test in Alpine]   | (10/13) Installing mpfr4 (4.1.0-r0)\n[CI/Test in Alpine]   | (11/13) Installing mpc1 (1.2.1-r0)\n[CI/Test in Alpine]   | (12/13) Installing gcc (10.3.1_git20211027-r0)\n[CI/Test in Alpine]   | (13/13) Installing musl-dev (1.2.2-r9)\n[CI/Test in Alpine]   | Executing busybox-1.34.1-r3.trigger\n[CI/Test in Alpine]   | OK: 127 MiB in 26 packages\n[CI/Test in Alpine]   \u2705  Success - Main apk add libgcc gcc musl-dev\n[CI/Test in Alpine] \u2b50 Run Main Install Rust\n[CI/Test in Alpine]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/Test in Alpine]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/Test in Alpine]   | OCI runtime exec failed: exec failed: unable to start container process: exec: \"node\": executable file not found in $PATH: unknown\r\n[CI/Test in Alpine]   \u274c  Failure - Main Install Rust\n[CI/Test in Alpine] exitcode '126': failure\n[CI/Test in Alpine] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: EOF\n"
}