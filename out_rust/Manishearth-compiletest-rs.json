{
    "repository": "Manishearth/compiletest-rs",
    "clone_url": "https://github.com/Manishearth/compiletest-rs.git",
    "timestamp": "2023-05-30T08:39:18.374194Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Rust/rustc-nightly-feature] \ud83d\ude80  Start image=crawlergpt:latest\n[Rust/default-features     ] \ud83d\ude80  Start image=crawlergpt:latest\n[Rust/default-features     ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Rust/rustc-nightly-feature]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Rust/rustc-nightly-feature]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Rust/default-features     ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Rust/rustc-nightly-feature]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Rust/default-features     ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Rust/rustc-nightly-feature]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/Manishearth-compiletest-rs] user=0 workdir=\n[Rust/default-features     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/Manishearth-compiletest-rs] user=0 workdir=\n[Rust/default-features     ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Rust/default-features     ] \ud83e\uddea  Matrix: map[os:ubuntu-latest rust:stable]\n[Rust/rustc-nightly-feature]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[Rust/rustc-nightly-feature] \ud83e\uddea  Matrix: map[os:ubuntu-latest]\n[Rust/default-features     ] \u2b50 Run Main actions/checkout@v2\n[Rust/rustc-nightly-feature] \u2b50 Run Main actions/checkout@v2\n[Rust/default-features     ]   \u2705  Success - Main actions/checkout@v2\n[Rust/rustc-nightly-feature]   \u2705  Success - Main actions/checkout@v2\n[Rust/default-features     ] \u2b50 Run Main Install rust toolchain\n[Rust/rustc-nightly-feature] \u2b50 Run Main Install rust toolchain\n[Rust/default-features     ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Rust/rustc-nightly-feature]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[Rust/default-features     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Rust/rustc-nightly-feature]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[Rust/default-features     ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Rust/rustc-nightly-feature]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[Rust/default-features     ]   \ud83d\udcac  ::debug::using toolchain from input: stable\n[Rust/default-features     ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Rust/default-features     ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Rust/default-features     ]   \ud83d\udcac  ::debug::Destination /tmp/66e2fe80-90df-400b-a039-456b43e418de\n[Rust/default-features     ]   \ud83d\udcac  ::debug::download complete\n[Rust/default-features     ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/66e2fe80-90df-400b-a039-456b43e418de\n[Rust/default-features     ]   | [command]/tmp/66e2fe80-90df-400b-a039-456b43e418de --default-toolchain none -y\n[Rust/default-features     ]   | info: downloading installer\n[Rust/default-features     ]   | info: profile set to 'default'\n[Rust/default-features     ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Rust/default-features     ]   | info: skipping toolchain installation\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | \n[Rust/default-features     ]   | Rust is installed now. Great!\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | To get started you may need to restart your current shell.\n[Rust/default-features     ]   | This would reload your PATH environment variable to include\n[Rust/default-features     ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | To configure your current shell, run:\n[Rust/default-features     ]   | source \"$HOME/.cargo/env\"\n[Rust/default-features     ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Rust/default-features     ]   | Default host: x86_64-unknown-linux-gnu\n[Rust/default-features     ]   | rustup home:  /home/runneradmin/.rustup\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | no active toolchain\n[Rust/default-features     ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Rust/default-features     ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Rust/default-features     ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Rust/default-features     ]   | Installed rustup 1.26.0 support profiles\n[Rust/default-features     ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Rust/default-features     ]   | info: profile set to 'minimal'\n[Rust/default-features     ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install stable\n[Rust/default-features     ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Rust/default-features     ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Rust/default-features     ]   | info: downloading component 'cargo'\n[Rust/default-features     ]   | info: downloading component 'rust-std'\n[Rust/default-features     ]   | info: downloading component 'rustc'\n[Rust/default-features     ]   | info: installing component 'cargo'\n[Rust/default-features     ]   | info: installing component 'rust-std'\n[Rust/default-features     ]   | info: installing component 'rustc'\n[Rust/default-features     ]   | \n[Rust/default-features     ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Rust/default-features     ]   | info: checking for self-update\n[Rust/default-features     ]   | [command]/home/runneradmin/.cargo/bin/rustup override set stable\n[Rust/default-features     ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Rust/default-features     ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/Manishearth-compiletest-rs' set to 'stable-x86_64-unknown-linux-gnu'\n[Rust/default-features     ]   | \n[Rust/default-features     ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Rust/default-features     ]   | \n[Rust/default-features     ]   \u2753  ::group::Gathering installed versions\n[Rust/default-features     ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Rust/default-features     ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Rust/default-features     ]   \u2699  ::set-output:: rustc=1.69.0 (84c898d65 2023-04-16)\n[Rust/default-features     ]   \u2699  ::set-output:: rustc_hash=84c898d65\n[Rust/default-features     ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Rust/default-features     ]   | cargo 1.69.0 (6e9a83356 2023-04-12)\n[Rust/default-features     ]   \u2699  ::set-output:: cargo=1.69.0 (6e9a83356 2023-04-12)\n[Rust/default-features     ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Rust/default-features     ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Rust/default-features     ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Rust/default-features     ]   | info: The currently active `rustc` version is `rustc 1.69.0 (84c898d65 2023-04-16)`\n[Rust/default-features     ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Rust/default-features     ]   \u2753  ::endgroup::\n[Rust/default-features     ]   \u2705  Success - Main Install rust toolchain\n[Rust/default-features     ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Rust/default-features     ] \u2b50 Run Main Run tests\n[Rust/default-features     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Rust/rustc-nightly-feature]   \ud83d\udcac  ::debug::using toolchain from input: nightly\n[Rust/rustc-nightly-feature]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Rust/rustc-nightly-feature]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[Rust/rustc-nightly-feature]   \ud83d\udcac  ::debug::Destination /tmp/4384e83a-2b9b-4eb2-ae8b-7f6bfe0b140c\n[Rust/rustc-nightly-feature]   \ud83d\udcac  ::debug::download complete\n[Rust/rustc-nightly-feature]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/4384e83a-2b9b-4eb2-ae8b-7f6bfe0b140c\n[Rust/rustc-nightly-feature]   | [command]/tmp/4384e83a-2b9b-4eb2-ae8b-7f6bfe0b140c --default-toolchain none -y\n[Rust/rustc-nightly-feature]   | info: downloading installer\n[Rust/rustc-nightly-feature]   | info: profile set to 'default'\n[Rust/rustc-nightly-feature]   | info: default host triple is x86_64-unknown-linux-gnu\n[Rust/rustc-nightly-feature]   | info: skipping toolchain installation\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | Rust is installed now. Great!\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | To get started you may need to restart your current shell.\n[Rust/rustc-nightly-feature]   | This would reload your PATH environment variable to include\n[Rust/rustc-nightly-feature]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | To configure your current shell, run:\n[Rust/rustc-nightly-feature]   | source \"$HOME/.cargo/env\"\n[Rust/rustc-nightly-feature]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[Rust/rustc-nightly-feature]   | Default host: x86_64-unknown-linux-gnu\n[Rust/rustc-nightly-feature]   | rustup home:  /home/runneradmin/.rustup\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | no active toolchain\n[Rust/rustc-nightly-feature]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Rust/rustc-nightly-feature]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Rust/rustc-nightly-feature]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Rust/rustc-nightly-feature]   | Installed rustup 1.26.0 support profiles\n[Rust/rustc-nightly-feature]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Rust/rustc-nightly-feature]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Rust/rustc-nightly-feature]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Rust/rustc-nightly-feature]   | Installed rustup 1.26.0 support components\n[Rust/rustc-nightly-feature]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[Rust/rustc-nightly-feature]   | info: profile set to 'minimal'\n[Rust/rustc-nightly-feature]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install nightly --component rustc-dev --component llvm-tools --allow-downgrade\n[Rust/rustc-nightly-feature]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Updating\u001b[0m crates.io index\n[Rust/rustc-nightly-feature]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[Rust/rustc-nightly-feature]   | info: downloading component 'cargo'\n[Rust/rustc-nightly-feature]   | info: downloading component 'llvm-tools'\n[Rust/rustc-nightly-feature]   | info: downloading component 'rust-std'\n[Rust/rustc-nightly-feature]   | info: downloading component 'rustc'\n[Rust/rustc-nightly-feature]   | info: downloading component 'rustc-dev'\n[Rust/rustc-nightly-feature]   | info: installing component 'cargo'\n[Rust/rustc-nightly-feature]   | info: installing component 'llvm-tools'\n[Rust/rustc-nightly-feature]   | info: installing component 'rust-std'\n[Rust/rustc-nightly-feature]   | info: installing component 'rustc'\n[Rust/rustc-nightly-feature]   | info: installing component 'rustc-dev'\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[Rust/rustc-nightly-feature]   | info: checking for self-update\n[Rust/rustc-nightly-feature]   | [command]/home/runneradmin/.cargo/bin/rustup override set nightly\n[Rust/rustc-nightly-feature]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[Rust/rustc-nightly-feature]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/Manishearth-compiletest-rs' set to 'nightly-x86_64-unknown-linux-gnu'\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   \u2753  ::group::Gathering installed versions\n[Rust/rustc-nightly-feature]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[Rust/rustc-nightly-feature]   | rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[Rust/rustc-nightly-feature]   \u2699  ::set-output:: rustc=1.72.0-nightly (498553fc0 2023-05-29)\n[Rust/rustc-nightly-feature]   \u2699  ::set-output:: rustc_hash=498553fc0\n[Rust/rustc-nightly-feature]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[Rust/rustc-nightly-feature]   | cargo 1.72.0-nightly (64fb38c97 2023-05-23)\n[Rust/rustc-nightly-feature]   \u2699  ::set-output:: cargo=1.72.0-nightly (64fb38c97 2023-05-23)\n[Rust/rustc-nightly-feature]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[Rust/rustc-nightly-feature]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[Rust/rustc-nightly-feature]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[Rust/rustc-nightly-feature]   | info: The currently active `rustc` version is `rustc 1.72.0-nightly (498553fc0 2023-05-29)`\n[Rust/rustc-nightly-feature]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[Rust/rustc-nightly-feature]   \u2753  ::endgroup::\n[Rust/rustc-nightly-feature]   \u2705  Success - Main Install rust toolchain\n[Rust/rustc-nightly-feature]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Rust/rustc-nightly-feature] \u2b50 Run Main Run tests\n[Rust/rustc-nightly-feature]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Updating\u001b[0m crates.io index\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m Downloading\u001b[0m crates ...\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m diff v0.1.13\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serde_json v1.0.96\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m unicode-ident v1.0.9\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m term v0.7.0\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serde v1.0.163\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m unicode-width v0.1.10\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serde_derive v1.0.163\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m tester v0.9.1\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m libc v0.2.144\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m getopts v0.2.21\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m rustfix v0.6.1\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m filetime v0.2.21\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m dirs-sys-next v0.1.2\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m ryu v1.0.13\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m regex v1.8.3\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m quote v1.0.28\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m proc-macro2 v1.0.59\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m dirs-next v2.0.0\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m memchr v2.5.0\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m lazy_static v1.4.0\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m itoa v1.0.6\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m cfg-if v1.0.0\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m anyhow v1.0.71\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m aho-corasick v1.0.1\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m syn v2.0.18\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m regex-syntax v0.7.2\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m num_cpus v1.15.0\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m log v0.4.18\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m libc v0.2.144\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m proc-macro2 v1.0.59\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m unicode-ident v1.0.9\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m quote v1.0.28\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m memchr v2.5.0\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m cfg-if v1.0.0\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde v1.0.163\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m anyhow v1.0.71\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m log v0.4.18\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde_json v1.0.96\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m unicode-width v0.1.10\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m ryu v1.0.13\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m itoa v1.0.6\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m compiletest_rs v0.10.2 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/Manishearth-compiletest-rs)\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m regex-syntax v0.7.2\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m lazy_static v1.4.0\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m diff v0.1.13\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m getopts v0.2.21\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m syn v2.0.18\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m dirs-sys-next v0.1.2\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m num_cpus v1.15.0\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m filetime v0.2.21\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m dirs-next v2.0.0\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m aho-corasick v1.0.1\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m term v0.7.0\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m tester v0.9.1\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m regex v1.8.3\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde_derive v1.0.163\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m rustfix v0.6.1\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Finished\u001b[0m test [unoptimized + debuginfo] target(s) in 28.42s\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m unittests src/lib.rs (target/debug/deps/compiletest_rs-c101389ed6bdee76)\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | running 0 tests\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m tests/bless.rs (target/debug/deps/bless-868bd8f2631e1fdb)\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | running 2 tests\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | running 1 test\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | running 1 test\n[Rust/rustc-nightly-feature]   | test [ui] ui/foobar.rs ... ok\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.17s\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | running 1 test\n[Rust/rustc-nightly-feature]   | test [ui] ui/foobar2.rs ... ok\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.19s\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | running 1 test\n[Rust/rustc-nightly-feature]   | test [ui] ui/foobar.rs ... ok\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.18s\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | test test_bless_new_file ... ok\n[Rust/rustc-nightly-feature]   | test [ui] ui/foobar2.rs ... ok\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.19s\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | test test_bless_update_file ... ok\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.39s\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Doc-tests\u001b[0m compiletest_rs\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | running 1 test\n[Rust/rustc-nightly-feature]   | test src/header.rs - header::parse_normalization_string (line 695) ... ignored\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | test result: ok. 0 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in 0.02s\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   \u2705  Success - Main Run tests\n[Rust/rustc-nightly-feature] \u2b50 Run Main Run test-project tests with `rustc` feature\n[Rust/rustc-nightly-feature]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Updating\u001b[0m crates.io index\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m Downloading\u001b[0m crates ...\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m bitflags v1.3.2\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m io-lifetimes v1.0.11\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m fastrand v1.9.0\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m linux-raw-sys v0.3.8\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m tempfile v3.5.0\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m rustix v0.37.19\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m libc v0.2.144\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m proc-macro2 v1.0.59\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m quote v1.0.28\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m unicode-ident v1.0.9\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m cfg-if v1.0.0\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde v1.0.163\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m memchr v2.5.0\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m io-lifetimes v1.0.11\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m rustix v0.37.19\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m anyhow v1.0.71\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde_json v1.0.96\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m log v0.4.18\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m ryu v1.0.13\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m bitflags v1.3.2\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m itoa v1.0.6\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m linux-raw-sys v0.3.8\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m unicode-width v0.1.10\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m regex-syntax v0.7.2\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m fastrand v1.9.0\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m compiletest_rs v0.10.2 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/Manishearth-compiletest-rs)\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m lazy_static v1.4.0\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m diff v0.1.13\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m testp v0.0.1 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/Manishearth-compiletest-rs/test-project)\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m getopts v0.2.21\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m aho-corasick v1.0.1\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m syn v2.0.18\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m dirs-sys-next v0.1.2\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m num_cpus v1.15.0\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m filetime v0.2.21\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m dirs-next v2.0.0\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m regex v1.8.3\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m term v0.7.0\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m tester v0.9.1\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde_derive v1.0.163\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m Downloading\u001b[0m crates ...\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m tempfile v3.5.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m lazy_static v1.4.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m filetime v0.2.21\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m num_cpus v1.15.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m dirs-sys-next v0.1.2\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m cfg-if v1.0.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m unicode-width v0.1.10\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m quote v1.0.28\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m rustfix v0.6.1\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m itoa v1.0.6\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m term v0.7.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m tester v0.9.1\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m diff v0.1.13\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m getopts v0.2.21\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m dirs-next v2.0.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m log v0.4.18\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m proc-macro2 v1.0.59\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m unicode-ident v1.0.9\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serde_derive v1.0.163\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m ryu v1.0.13\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m anyhow v1.0.71\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serde v1.0.163\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m memchr v2.5.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serde_json v1.0.96\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m aho-corasick v1.0.1\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m syn v2.0.18\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m regex v1.8.3\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m regex-syntax v0.7.2\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m libc v0.2.144\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m libc v0.2.144\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m proc-macro2 v1.0.59\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m unicode-ident v1.0.9\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m quote v1.0.28\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m memchr v2.5.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde v1.0.163\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m cfg-if v1.0.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde_json v1.0.96\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m log v0.4.18\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m anyhow v1.0.71\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m unicode-width v0.1.10\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m itoa v1.0.6\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m ryu v1.0.13\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m regex-syntax v0.7.2\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m compiletest_rs v0.10.2 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/Manishearth-compiletest-rs)\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m lazy_static v1.4.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m diff v0.1.13\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m getopts v0.2.21\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m aho-corasick v1.0.1\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m dirs-sys-next v0.1.2\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m num_cpus v1.15.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m filetime v0.2.21\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m syn v2.0.18\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m dirs-next v2.0.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m term v0.7.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m regex v1.8.3\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m tester v0.9.1\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m rustfix v0.6.1\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde_derive v1.0.163\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Finished\u001b[0m test [unoptimized + debuginfo] target(s) in 24.75s\n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m unittests src/lib.rs (target/debug/deps/testp-7ed151b790161493)\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | running 0 tests\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m unittests src/main.rs (target/debug/deps/testp-8d22cc00e8aa77fa)\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | running 0 tests\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m tests/tests.rs (target/debug/deps/tests-1a6ad5a8cb0e87c6)\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | running 1 test\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | running 5 tests\n[Rust/rustc-nightly-feature]   | test [compile-fail] compile-fail/multiple-errors.rs ... ok\n[Rust/rustc-nightly-feature]   | test [compile-fail] compile-fail/trait-bounds-cant-coerce.rs ... ok\n[Rust/rustc-nightly-feature]   | test [compile-fail] compile-fail/macro.rs ... ok\n[Rust/rustc-nightly-feature]   | test [compile-fail] compile-fail/where-for-self.rs ... ok\n[Rust/rustc-nightly-feature]   | test [compile-fail] compile-fail/mut-suggestion.rs ... ok\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.19s\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | running 5 tests\n[Rust/rustc-nightly-feature]   | test [run-pass] run-pass/with-own-crate.rs ... ok\n[Rust/rustc-nightly-feature]   | test [run-pass] run-pass/issue-10025.rs ... ok\n[Rust/rustc-nightly-feature]   | test [run-pass] run-pass/associated-types-binding-in-where-clause.rs ... ok\n[Rust/rustc-nightly-feature]   | test [run-pass] run-pass/while-with-break.rs ... ok\n[Rust/rustc-nightly-feature]   | test [run-pass] run-pass/vec-slice-drop.rs ... ok\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.22s\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | running 1 test\n[Rust/rustc-nightly-feature]   | test [ui] ui/dyn-keyword.rs ... ok\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.55s\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | running 1 test\n[Rust/rustc-nightly-feature]   | test [pretty] pretty/macro.rs ... ok\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.13s\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | running 2 tests\n[Rust/rustc-nightly-feature]   | test [ui] nightly/2018-edition.rs ... ok\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m rustfix v0.6.1\n[Rust/rustc-nightly-feature]   | test [ui] nightly/some-proc-macro.rs ... ok\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.85s\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | test compile_test ... ok\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 2.09s\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Doc-tests\u001b[0m testp\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | running 0 tests\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Rust/rustc-nightly-feature]   | \n[Rust/rustc-nightly-feature]   \u2705  Success - Main Run test-project tests with `rustc` feature\n[Rust/rustc-nightly-feature] \ud83c\udfc1  Job succeeded\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Finished\u001b[0m test [unoptimized + debuginfo] target(s) in 2m 37s\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m unittests src/lib.rs (target/debug/deps/compiletest_rs-b48656854f414012)\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | running 0 tests\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m tests/bless.rs (target/debug/deps/bless-ced8d8c4141eda44)\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | running 2 tests\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | running 1 test\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | running 1 test\n[Rust/default-features     ]   | test [ui] ui/foobar2.rs ... ok\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.22s\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | test [ui] ui/foobar.rs ... ok\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.22s\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | \n[Rust/default-features     ]   | running 1 test\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | running 1 test\n[Rust/default-features     ]   | test [ui] ui/foobar2.rs ... ok\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.18s\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | test test_bless_update_file ... ok\n[Rust/default-features     ]   | test [ui] ui/foobar.rs ... ok\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.19s\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | test test_bless_new_file ... ok\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | test result: ok. 2 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.47s\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Doc-tests\u001b[0m compiletest_rs\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | running 1 test\n[Rust/default-features     ]   | test src/header.rs - header::parse_normalization_string (line 695) ... ignored\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | test result: ok. 0 passed; 0 failed; 1 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Rust/default-features     ]   | \n[Rust/default-features     ]   \u2705  Success - Main Run tests\n[Rust/default-features     ] \u2b50 Run Main Run test-project tests\n[Rust/default-features     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m Downloading\u001b[0m crates ...\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m io-lifetimes v1.0.11\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m tempfile v3.5.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m fastrand v1.9.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m bitflags v1.3.2\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m rustix v0.37.19\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m linux-raw-sys v0.3.8\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m libc v0.2.144\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m proc-macro2 v1.0.59\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m quote v1.0.28\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m unicode-ident v1.0.9\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m cfg-if v1.0.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde v1.0.163\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m memchr v2.5.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m io-lifetimes v1.0.11\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m rustix v0.37.19\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m log v0.4.18\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m anyhow v1.0.71\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde_json v1.0.96\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m ryu v1.0.13\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m unicode-width v0.1.10\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m itoa v1.0.6\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m bitflags v1.3.2\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m linux-raw-sys v0.3.8\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m fastrand v1.9.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m compiletest_rs v0.10.2 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/Manishearth-compiletest-rs)\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m regex-syntax v0.7.2\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m lazy_static v1.4.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m diff v0.1.13\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m testp v0.0.1 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/Manishearth-compiletest-rs/test-project)\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m getopts v0.2.21\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m aho-corasick v1.0.1\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m syn v2.0.18\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m dirs-sys-next v0.1.2\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m num_cpus v1.15.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m filetime v0.2.21\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m dirs-next v2.0.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m regex v1.8.3\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m term v0.7.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m tester v0.9.1\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde_derive v1.0.163\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m tempfile v3.5.0\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m rustfix v0.6.1\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Finished\u001b[0m test [unoptimized + debuginfo] target(s) in 24.09s\n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m unittests src/lib.rs (target/debug/deps/testp-e55d2b311e611d50)\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | running 0 tests\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m unittests src/main.rs (target/debug/deps/testp-2411b6b186f083cb)\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | running 0 tests\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m tests/tests.rs (target/debug/deps/tests-24dc698572b217e4)\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | running 1 test\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | running 5 tests\n[Rust/default-features     ]   | test [compile-fail] compile-fail/where-for-self.rs ... ok\n[Rust/default-features     ]   | test [compile-fail] compile-fail/trait-bounds-cant-coerce.rs ... ok\n[Rust/default-features     ]   | test [compile-fail] compile-fail/macro.rs ... ok\n[Rust/default-features     ]   | test [compile-fail] compile-fail/multiple-errors.rs ... ok\n[Rust/default-features     ]   | test [compile-fail] compile-fail/mut-suggestion.rs ... ok\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.15s\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | \n[Rust/default-features     ]   | running 5 tests\n[Rust/default-features     ]   | test [run-pass] run-pass/with-own-crate.rs ... ok\n[Rust/default-features     ]   | test [run-pass] run-pass/issue-10025.rs ... ok\n[Rust/default-features     ]   | test [run-pass] run-pass/vec-slice-drop.rs ... ok\n[Rust/default-features     ]   | test [run-pass] run-pass/associated-types-binding-in-where-clause.rs ... ok\n[Rust/default-features     ]   | test [run-pass] run-pass/while-with-break.rs ... ok\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | test result: ok. 5 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.32s\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | \n[Rust/default-features     ]   | running 1 test\n[Rust/default-features     ]   | test [ui] ui/dyn-keyword.rs ... ok\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.42s\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | test compile_test ... ok\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.02s\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Doc-tests\u001b[0m testp\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | running 0 tests\n[Rust/default-features     ]   | \n[Rust/default-features     ]   | test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s\n[Rust/default-features     ]   | \n[Rust/default-features     ]   \u2705  Success - Main Run test-project tests\n[Rust/default-features     ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}