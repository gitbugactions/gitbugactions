{
    "repository": "mavlink/rust-mavlink",
    "clone_url": "https://github.com/mavlink/rust-mavlink.git",
    "timestamp": "2023-05-30T09:00:45.941364Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Test all targets/mavlink-dump  ] \ud83d\ude80  Start image=crawlergpt:latest\n[Test all targets/internal-tests] \ud83d\ude80  Start image=crawlergpt:latest\n[Test all targets/msrv          ] \ud83d\ude80  Start image=crawlergpt:latest\n[Test all targets/formatting    ] \ud83d\ude80  Start image=crawlergpt:latest\n[Test all targets/linting       ] \ud83d\ude80  Start image=crawlergpt:latest\n[Test all targets/mavlink-dump  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test all targets/linting       ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test all targets/formatting    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test all targets/msrv          ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test all targets/internal-tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test all targets/mavlink-dump  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test all targets/internal-tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test all targets/linting       ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test all targets/msrv          ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test all targets/formatting    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test all targets/msrv          ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test all targets/mavlink-dump  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test all targets/formatting    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test all targets/linting       ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test all targets/internal-tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test all targets/msrv          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink] user=0 workdir=\n[Test all targets/mavlink-dump  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink] user=0 workdir=\n[Test all targets/msrv          ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=master\n[Test all targets/mavlink-dump  ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=master\n[Test all targets/linting       ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink] user=0 workdir=\n[Test all targets/formatting    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink] user=0 workdir=\n[Test all targets/msrv          ] \u2b50 Run Pre dtolnay/rust-toolchain@master\n[Test all targets/mavlink-dump  ] \u2b50 Run Pre dtolnay/rust-toolchain@master\n[Test all targets/linting       ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=master\n[Test all targets/mavlink-dump  ]   \u2705  Success - Pre dtolnay/rust-toolchain@master\n[Test all targets/msrv          ]   \u2705  Success - Pre dtolnay/rust-toolchain@master\n[Test all targets/linting       ] \u2b50 Run Pre dtolnay/rust-toolchain@master\n[Test all targets/linting       ]   \u2705  Success - Pre dtolnay/rust-toolchain@master\n[Test all targets/msrv          ]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[Test all targets/mavlink-dump  ] \u2b50 Run Main actions/checkout@master\n[Test all targets/mavlink-dump  ]   \u2705  Success - Main actions/checkout@master\n[Test all targets/msrv          ] \u2b50 Run Main actions/checkout@master\n[Test all targets/linting       ]   \u2601  git clone 'https://github.com/actions-rs/clippy-check' # ref=v1\n[Test all targets/msrv          ]   \u2705  Success - Main actions/checkout@master\n[Test all targets/formatting    ]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=master\n[Test all targets/linting       ] \u2b50 Run Main actions/checkout@master\n[Test all targets/linting       ]   \u2705  Success - Main actions/checkout@master\n[Test all targets/formatting    ] \u2b50 Run Pre dtolnay/rust-toolchain@master\n[Test all targets/mavlink-dump  ] \u2b50 Run Main dtolnay/rust-toolchain@master\n[Test all targets/formatting    ]   \u2705  Success - Pre dtolnay/rust-toolchain@master\n[Test all targets/msrv          ] \u2b50 Run Main dtolnay/rust-toolchain@master\n[Test all targets/msrv          ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[Test all targets/mavlink-dump  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[Test all targets/linting       ] \u2b50 Run Main dtolnay/rust-toolchain@master\n[Test all targets/mavlink-dump  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[Test all targets/msrv          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[Test all targets/linting       ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[Test all targets/formatting    ] \u2b50 Run Main actions/checkout@master\n[Test all targets/formatting    ]   \u2705  Success - Main actions/checkout@master\n[Test all targets/linting       ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[Test all targets/formatting    ] \u2b50 Run Main dtolnay/rust-toolchain@master\n[Test all targets/formatting    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[Test all targets/formatting    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[Test all targets/formatting    ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Test all targets/msrv          ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Test all targets/linting       ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Test all targets/mavlink-dump  ] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Test all targets/mavlink-dump  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[Test all targets/msrv          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[Test all targets/formatting    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[Test all targets/linting       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[Test all targets/formatting    ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Test all targets/internal-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink] user=0 workdir=\n[Test all targets/mavlink-dump  ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Test all targets/linting       ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Test all targets/msrv          ]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Test all targets/formatting    ]   \u2699  ::set-output:: toolchain=stable\n[Test all targets/linting       ]   \u2699  ::set-output:: toolchain=nightly-2022-11-30\n[Test all targets/mavlink-dump  ]   \u2699  ::set-output:: toolchain=stable\n[Test all targets/msrv          ]   \u2699  ::set-output:: toolchain=1.60.0\n[Test all targets/msrv          ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Test all targets/mavlink-dump  ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Test all targets/linting       ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Test all targets/formatting    ] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Test all targets/linting       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[Test all targets/mavlink-dump  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[Test all targets/formatting    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[Test all targets/msrv          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[Test all targets/formatting    ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Test all targets/linting       ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Test all targets/mavlink-dump  ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Test all targets/msrv          ]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Test all targets/internal-tests]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=master\n[Test all targets/internal-tests] \u2b50 Run Pre dtolnay/rust-toolchain@master\n[Test all targets/mavlink-dump  ]   \u2699  ::set-output:: components=\n[Test all targets/mavlink-dump  ]   \u2699  ::set-output:: downgrade=\n[Test all targets/mavlink-dump  ]   \u2699  ::set-output:: targets=\n[Test all targets/formatting    ]   \u2699  ::set-output:: targets=\n[Test all targets/formatting    ]   \u2699  ::set-output:: components= --component rustfmt\n[Test all targets/formatting    ]   \u2699  ::set-output:: downgrade=\n[Test all targets/msrv          ]   \u2699  ::set-output:: targets=\n[Test all targets/msrv          ]   \u2699  ::set-output:: components=\n[Test all targets/msrv          ]   \u2699  ::set-output:: downgrade=\n[Test all targets/linting       ]   \u2699  ::set-output:: components= --component clippy\n[Test all targets/linting       ]   \u2699  ::set-output:: downgrade=\n[Test all targets/linting       ]   \u2699  ::set-output:: targets=\n[Test all targets/internal-tests]   \u2705  Success - Pre dtolnay/rust-toolchain@master\n[Test all targets/linting       ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Test all targets/mavlink-dump  ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Test all targets/msrv          ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Test all targets/formatting    ] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Test all targets/mavlink-dump  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[Test all targets/msrv          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[Test all targets/formatting    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[Test all targets/linting       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[Test all targets/internal-tests] \u2b50 Run Main actions/checkout@master\n[Test all targets/internal-tests]   \u2705  Success - Main actions/checkout@master\n[Test all targets/internal-tests] \u2b50 Run Main dtolnay/rust-toolchain@master\n[Test all targets/internal-tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[Test all targets/internal-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[Test all targets/linting       ]   | info: downloading installer\n[Test all targets/mavlink-dump  ]   | info: downloading installer\n[Test all targets/msrv          ]   | info: downloading installer\n[Test all targets/formatting    ]   | info: downloading installer\n[Test all targets/internal-tests] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Test all targets/formatting    ]   | info: profile set to 'default'\n[Test all targets/formatting    ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Test all targets/formatting    ]   | info: skipping toolchain installation\n[Test all targets/formatting    ]   | \n[Test all targets/formatting    ]   | \n[Test all targets/formatting    ]   | Rust is installed now. Great!\n[Test all targets/formatting    ]   | \n[Test all targets/formatting    ]   | To get started you may need to restart your current shell.\n[Test all targets/formatting    ]   | This would reload your PATH environment variable to include\n[Test all targets/formatting    ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Test all targets/formatting    ]   | \n[Test all targets/formatting    ]   | To configure your current shell, run:\n[Test all targets/formatting    ]   | source \"$HOME/.cargo/env\"\n[Test all targets/formatting    ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Test all targets/mavlink-dump  ]   | info: \n[Test all targets/mavlink-dump  ]   | profile set to 'default'\n[Test all targets/mavlink-dump  ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Test all targets/mavlink-dump  ]   | info: skipping toolchain installation\n[Test all targets/mavlink-dump  ]   | \n[Test all targets/mavlink-dump  ]   | Rust is installed now. Great!\n[Test all targets/mavlink-dump  ]   | \n[Test all targets/mavlink-dump  ]   | To get started you may need to restart your current shell.\n[Test all targets/mavlink-dump  ]   | This would reload your PATH environment variable to include\n[Test all targets/mavlink-dump  ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Test all targets/mavlink-dump  ]   | \n[Test all targets/mavlink-dump  ]   | To configure your current shell, run:\n[Test all targets/mavlink-dump  ]   | source \"$HOME/.cargo/env\"\n[Test all targets/linting       ]   | \n[Test all targets/linting       ]   | \n[Test all targets/linting       ]   | Rust is installed now. Great!\n[Test all targets/linting       ]   | \n[Test all targets/linting       ]   | To get started you may need to restart your current shell.\n[Test all targets/linting       ]   | This would reload your PATH environment variable to include\n[Test all targets/linting       ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Test all targets/linting       ]   | \n[Test all targets/linting       ]   | To configure your current shell, run:\n[Test all targets/linting       ]   | source \"$HOME/.cargo/env\"\n[Test all targets/linting       ]   | info: profile set to 'default'\n[Test all targets/linting       ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Test all targets/linting       ]   | info: skipping toolchain installation\n[Test all targets/msrv          ]   | info: profile set to 'default'\n[Test all targets/msrv          ]   | info: default host triple is x86_64-unknown-linux-gnu\n[Test all targets/msrv          ]   | info: skipping toolchain installation\n[Test all targets/msrv          ]   | \n[Test all targets/msrv          ]   | \n[Test all targets/msrv          ]   | Rust is installed now. Great!\n[Test all targets/msrv          ]   | \n[Test all targets/msrv          ]   | To get started you may need to restart your current shell.\n[Test all targets/msrv          ]   | This would reload your PATH environment variable to include\n[Test all targets/msrv          ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Test all targets/msrv          ]   | \n[Test all targets/msrv          ]   | To configure your current shell, run:\n[Test all targets/msrv          ]   | source \"$HOME/.cargo/env\"\n[Test all targets/mavlink-dump  ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Test all targets/linting       ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Test all targets/msrv          ]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Test all targets/internal-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[Test all targets/msrv          ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Test all targets/linting       ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Test all targets/formatting    ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Test all targets/mavlink-dump  ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Test all targets/msrv          ] \u2b50 Run Main rustup toolchain install 1.60.0\n[Test all targets/formatting    ] \u2b50 Run Main rustup toolchain install stable\n[Test all targets/mavlink-dump  ] \u2b50 Run Main rustup toolchain install stable\n[Test all targets/linting       ] \u2b50 Run Main rustup toolchain install nightly-2022-11-30\n[Test all targets/formatting    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[Test all targets/linting       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[Test all targets/mavlink-dump  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[Test all targets/msrv          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[Test all targets/formatting    ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Test all targets/mavlink-dump  ]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Test all targets/internal-tests]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Test all targets/formatting    ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Test all targets/formatting    ]   | info: downloading component 'cargo'\n[Test all targets/formatting    ]   | info: downloading component 'rust-std'\n[Test all targets/linting       ]   | info: syncing channel updates for 'nightly-2022-11-30-x86_64-unknown-linux-gnu'\n[Test all targets/mavlink-dump  ]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Test all targets/mavlink-dump  ]   | info: downloading component 'cargo'\n[Test all targets/mavlink-dump  ]   | info: downloading component 'rust-std'\n[Test all targets/msrv          ]   | info: syncing channel updates for '1.60.0-x86_64-unknown-linux-gnu'\n[Test all targets/formatting    ]   | info: downloading component 'rustc'\n[Test all targets/msrv          ]   | info: latest update on 2022-04-07, rust version 1.60.0 (7737e0b5c 2022-04-04)\n[Test all targets/msrv          ]   | info: downloading component 'cargo'\n[Test all targets/msrv          ]   | info: downloading component 'rust-std'\n[Test all targets/mavlink-dump  ]   | info: downloading component 'rustc'\n[Test all targets/internal-tests]   \u2699  ::set-output:: toolchain=stable\n[Test all targets/msrv          ]   | info: downloading component 'rustc'\n[Test all targets/formatting    ]   | info: downloading component 'rustfmt'\n[Test all targets/formatting    ]   | info: installing component 'cargo'\n[Test all targets/linting       ]   | info: latest update on 2022-11-30, rust version 1.67.0-nightly (e0098a5cc 2022-11-29)\n[Test all targets/linting       ]   | info: downloading component 'cargo'\n[Test all targets/internal-tests] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Test all targets/mavlink-dump  ]   | info: installing component 'cargo'\n[Test all targets/formatting    ]   | info: installing component 'rust-std'\n[Test all targets/msrv          ]   | info: installing component 'cargo'\n[Test all targets/mavlink-dump  ]   | info: installing component 'rust-std'\n[Test all targets/linting       ]   | info: downloading component 'clippy'\n[Test all targets/msrv          ]   | info: installing component 'rust-std'\n[Test all targets/internal-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[Test all targets/formatting    ]   | info: installing component 'rustc'\n[Test all targets/linting       ]   | info: downloading component 'rust-std'\n[Test all targets/mavlink-dump  ]   | info: installing component 'rustc'\n[Test all targets/msrv          ]   | info: installing component 'rustc'\n[Test all targets/linting       ]   | info: downloading component 'rustc'\n[Test all targets/mavlink-dump  ]   | \n[Test all targets/mavlink-dump  ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Test all targets/mavlink-dump  ]   | \n[Test all targets/mavlink-dump  ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Test all targets/mavlink-dump  ]   \u2705  Success - Main rustup toolchain install stable\n[Test all targets/formatting    ]   | info: installing component 'rustfmt'\n[Test all targets/msrv          ]   | \n[Test all targets/msrv          ]   |   1.60.0-x86_64-unknown-linux-gnu installed - rustc 1.60.0 (7737e0b5c 2022-04-04)\n[Test all targets/msrv          ]   | \n[Test all targets/msrv          ]   | info: default toolchain set to '1.60.0-x86_64-unknown-linux-gnu'\n[Test all targets/msrv          ]   \u2705  Success - Main rustup toolchain install 1.60.0\n[Test all targets/formatting    ]   | \n[Test all targets/mavlink-dump  ] \u2b50 Run Main rustup default stable\n[Test all targets/formatting    ]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Test all targets/formatting    ]   | \n[Test all targets/formatting    ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Test all targets/formatting    ]   \u2705  Success - Main rustup toolchain install stable\n[Test all targets/msrv          ] \u2b50 Run Main rustup default 1.60.0\n[Test all targets/mavlink-dump  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[Test all targets/formatting    ] \u2b50 Run Main rustup default stable\n[Test all targets/msrv          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[Test all targets/formatting    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[Test all targets/mavlink-dump  ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Test all targets/formatting    ]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Test all targets/msrv          ]   | info: using existing install for '1.60.0-x86_64-unknown-linux-gnu'\n[Test all targets/internal-tests]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Test all targets/mavlink-dump  ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Test all targets/mavlink-dump  ]   | \n[Test all targets/msrv          ]   | info: default toolchain set to '1.60.0-x86_64-unknown-linux-gnu'\n[Test all targets/msrv          ]   | \n[Test all targets/formatting    ]   | \n[Test all targets/formatting    ]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Test all targets/mavlink-dump  ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Test all targets/mavlink-dump  ]   | \n[Test all targets/mavlink-dump  ]   \u2705  Success - Main rustup default stable\n[Test all targets/formatting    ]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Test all targets/formatting    ]   | \n[Test all targets/msrv          ]   |   1.60.0-x86_64-unknown-linux-gnu unchanged - rustc 1.60.0 (7737e0b5c 2022-04-04)\n[Test all targets/msrv          ]   | \n[Test all targets/formatting    ]   \u2705  Success - Main rustup default stable\n[Test all targets/msrv          ]   \u2705  Success - Main rustup default 1.60.0\n[Test all targets/linting       ]   | info: installing component 'cargo'\n[Test all targets/internal-tests]   \u2699  ::set-output:: targets=\n[Test all targets/internal-tests]   \u2699  ::set-output:: components=\n[Test all targets/internal-tests]   \u2699  ::set-output:: downgrade=\n[Test all targets/linting       ]   | info: installing component 'clippy'\n[Test all targets/linting       ]   | info: installing component 'rust-std'\n[Test all targets/mavlink-dump  ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Test all targets/formatting    ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Test all targets/internal-tests] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Test all targets/msrv          ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +1.60.0 --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +1.60.0 --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Test all targets/formatting    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[Test all targets/internal-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[Test all targets/mavlink-dump  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[Test all targets/msrv          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[Test all targets/linting       ]   | info: installing component 'rustc'\n[Test all targets/linting       ]   | \n[Test all targets/linting       ]   |   nightly-2022-11-30-x86_64-unknown-linux-gnu installed - rustc 1.67.0-nightly (e0098a5cc 2022-11-29)\n[Test all targets/linting       ]   | \n[Test all targets/linting       ]   | info: default toolchain set to 'nightly-2022-11-30-x86_64-unknown-linux-gnu'\n[Test all targets/linting       ]   \u2705  Success - Main rustup toolchain install nightly-2022-11-30\n[Test all targets/linting       ] \u2b50 Run Main rustup default nightly-2022-11-30\n[Test all targets/linting       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[Test all targets/formatting    ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Test all targets/msrv          ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +1.60.0 --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +1.60.0 --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Test all targets/internal-tests]   | info: downloading installer\n[Test all targets/mavlink-dump  ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Test all targets/internal-tests]   | \n[Test all targets/internal-tests]   | \n[Test all targets/internal-tests]   | Rust is installed now. Great!\n[Test all targets/internal-tests]   | \n[Test all targets/internal-tests]   | To get started you may need to restart your current shell.\n[Test all targets/internal-tests]   | This would reload your PATH environment variable to include\n[Test all targets/internal-tests]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Test all targets/internal-tests]   | \n[Test all targets/internal-tests]   | To configure your current shell, run:\n[Test all targets/internal-tests]   | source \"$HOME/.cargo/env\"\n[Test all targets/internal-tests]   | info: profile set to 'default'\n[Test all targets/internal-tests]   | info: default host triple is x86_64-unknown-linux-gnu\n[Test all targets/internal-tests]   | info: skipping toolchain installation\n[Test all targets/internal-tests]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Test all targets/msrv          ]   \u2699  ::set-output:: cachekey=202204047737\n[Test all targets/formatting    ]   \u2699  ::set-output:: cachekey=2023041684c8\n[Test all targets/mavlink-dump  ]   \u2699  ::set-output:: cachekey=2023041684c8\n[Test all targets/formatting    ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Test all targets/msrv          ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Test all targets/mavlink-dump  ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Test all targets/internal-tests]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Test all targets/internal-tests] \u2b50 Run Main rustup toolchain install stable\n[Test all targets/msrv          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[Test all targets/formatting    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[Test all targets/mavlink-dump  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[Test all targets/internal-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[Test all targets/formatting    ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Test all targets/linting       ]   | info: using existing install for 'nightly-2022-11-30-x86_64-unknown-linux-gnu'\n[Test all targets/linting       ]   | \n[Test all targets/linting       ]   | info: default toolchain set to 'nightly-2022-11-30-x86_64-unknown-linux-gnu'\n[Test all targets/internal-tests]   | info: syncing channel updates for 'stable-x86_64-unknown-linux-gnu'\n[Test all targets/linting       ]   |   nightly-2022-11-30-x86_64-unknown-linux-gnu unchanged - rustc 1.67.0-nightly (e0098a5cc 2022-11-29)\n[Test all targets/linting       ]   | \n[Test all targets/linting       ]   \u2705  Success - Main rustup default nightly-2022-11-30\n[Test all targets/msrv          ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Test all targets/internal-tests]   | info: latest update on 2023-04-20, rust version 1.69.0 (84c898d65 2023-04-16)\n[Test all targets/internal-tests]   | info: downloading component 'cargo'\n[Test all targets/mavlink-dump  ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Test all targets/internal-tests]   | info: downloading component 'rust-std'\n[Test all targets/formatting    ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[Test all targets/mavlink-dump  ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[Test all targets/msrv          ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[Test all targets/internal-tests]   | info: downloading component 'rustc'\n[Test all targets/mavlink-dump  ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Test all targets/linting       ] \u2b50 Run Main : create cachekey\nDATE=$(rustc +nightly-2022-11-30 --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly-2022-11-30 --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Test all targets/formatting    ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Test all targets/msrv          ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Test all targets/internal-tests]   | info: installing component 'cargo'\n[Test all targets/internal-tests]   | info: installing component 'rust-std'\n[Test all targets/mavlink-dump  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[Test all targets/formatting    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[Test all targets/linting       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[Test all targets/msrv          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[Test all targets/internal-tests]   | info: installing component 'rustc'\n[Test all targets/formatting    ]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Test all targets/mavlink-dump  ]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Test all targets/formatting    ]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[Test all targets/mavlink-dump  ]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[Test all targets/mavlink-dump  ] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Test all targets/formatting    ] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Test all targets/internal-tests]   | \n[Test all targets/internal-tests]   |   stable-x86_64-unknown-linux-gnu installed - rustc 1.69.0 (84c898d65 2023-04-16)\n[Test all targets/internal-tests]   | \n[Test all targets/internal-tests]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Test all targets/internal-tests]   \u2705  Success - Main rustup toolchain install stable\n[Test all targets/formatting    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[Test all targets/mavlink-dump  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[Test all targets/internal-tests] \u2b50 Run Main rustup default stable\n[Test all targets/internal-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[Test all targets/msrv          ]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Test all targets/linting       ]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +nightly-2022-11-30 --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +nightly-2022-11-30 --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Test all targets/internal-tests]   | info: using existing install for 'stable-x86_64-unknown-linux-gnu'\n[Test all targets/internal-tests]   | \n[Test all targets/internal-tests]   | info: default toolchain set to 'stable-x86_64-unknown-linux-gnu'\n[Test all targets/mavlink-dump  ]   \u2705  Success - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Test all targets/internal-tests]   |   stable-x86_64-unknown-linux-gnu unchanged - rustc 1.69.0 (84c898d65 2023-04-16)\n[Test all targets/internal-tests]   | \n[Test all targets/formatting    ]   \u2705  Success - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Test all targets/internal-tests]   \u2705  Success - Main rustup default stable\n[Test all targets/formatting    ]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[Test all targets/msrv          ]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[Test all targets/mavlink-dump  ]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[Test all targets/linting       ]   \u2699  ::set-output:: cachekey=20221129e009\n[Test all targets/formatting    ] \u2b50 Run Main rustc +stable --version --verbose\n[Test all targets/internal-tests] \u2b50 Run Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Test all targets/linting       ] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Test all targets/msrv          ] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +1.60.0 --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Test all targets/mavlink-dump  ] \u2b50 Run Main rustc +stable --version --verbose\n[Test all targets/msrv          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[Test all targets/internal-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-rustc-version.sh] user= workdir=\n[Test all targets/mavlink-dump  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-9.sh] user= workdir=\n[Test all targets/linting       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[Test all targets/formatting    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-9.sh] user= workdir=\n[Test all targets/formatting    ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Test all targets/formatting    ]   | binary: rustc\n[Test all targets/formatting    ]   | commit-hash: 84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc\n[Test all targets/formatting    ]   | commit-date: 2023-04-16\n[Test all targets/formatting    ]   | host: x86_64-unknown-linux-gnu\n[Test all targets/formatting    ]   | release: 1.69.0\n[Test all targets/formatting    ]   | LLVM version: 15.0.7\n[Test all targets/mavlink-dump  ]   | rustc 1.69.0 (84c898d65 2023-04-16)\n[Test all targets/mavlink-dump  ]   | binary: rustc\n[Test all targets/mavlink-dump  ]   | commit-hash: 84c898d65adf2f39a5a98507f1fe0ce10a2b8dbc\n[Test all targets/mavlink-dump  ]   | commit-date: 2023-04-16\n[Test all targets/mavlink-dump  ]   | host: x86_64-unknown-linux-gnu\n[Test all targets/mavlink-dump  ]   | release: 1.69.0\n[Test all targets/mavlink-dump  ]   | LLVM version: 15.0.7\n[Test all targets/linting       ]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Test all targets/formatting    ]   \u2705  Success - Main rustc +stable --version --verbose\n[Test all targets/mavlink-dump  ]   \u2705  Success - Main rustc +stable --version --verbose\n[Test all targets/msrv          ]   \u2705  Success - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +1.60.0 --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Test all targets/internal-tests]   \u2705  Success - Main : create cachekey\nDATE=$(rustc +stable --version --verbose | sed -ne 's/^commit-date: \\(20[0-9][0-9]\\)-\\([01][0-9]\\)-\\([0-3][0-9]\\)$/\\1\\2\\3/p')\nHASH=$(rustc +stable --version --verbose | sed -ne 's/^commit-hash: //p')\necho \"cachekey=$(echo $DATE$HASH | head -c12)\" >> $GITHUB_OUTPUT\n[Test all targets/linting       ]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[Test all targets/msrv          ]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[Test all targets/internal-tests]   \u2699  ::set-output:: cachekey=2023041684c8\n[Test all targets/linting       ] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Test all targets/mavlink-dump  ]   \u2699  ::set-output:: cachekey=2023041684c8\n[Test all targets/mavlink-dump  ]   \u2699  ::set-output:: name=stable\n[Test all targets/mavlink-dump  ]   \u2705  Success - Main dtolnay/rust-toolchain@master\n[Test all targets/formatting    ]   \u2699  ::set-output:: cachekey=2023041684c8\n[Test all targets/formatting    ]   \u2699  ::set-output:: name=stable\n[Test all targets/formatting    ]   \u2705  Success - Main dtolnay/rust-toolchain@master\n[Test all targets/internal-tests] \u2b50 Run Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Test all targets/msrv          ] \u2b50 Run Main rustc +1.60.0 --version --verbose\n[Test all targets/linting       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[Test all targets/internal-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-6.sh] user= workdir=\n[Test all targets/msrv          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-9.sh] user= workdir=\n[Test all targets/mavlink-dump  ] \u2b50 Run Main Build mavlink-dump\n[Test all targets/formatting    ] \u2b50 Run Main Run rustfmt\n[Test all targets/mavlink-dump  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test all targets/formatting    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test all targets/msrv          ]   | rustc 1.60.0 (7737e0b5c 2022-04-04)\n[Test all targets/msrv          ]   | binary: rustc\n[Test all targets/msrv          ]   | commit-hash: 7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c\n[Test all targets/msrv          ]   | commit-date: 2022-04-04\n[Test all targets/msrv          ]   | host: x86_64-unknown-linux-gnu\n[Test all targets/msrv          ]   | release: 1.60.0\n[Test all targets/msrv          ]   | LLVM version: 14.0.0\n[Test all targets/msrv          ]   \u2705  Success - Main rustc +1.60.0 --version --verbose\n[Test all targets/linting       ]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Test all targets/internal-tests]   \u2705  Success - Main : disable incremental compilation\nif [ -z \"${CARGO_INCREMENTAL+set}\" ]; then\n  echo CARGO_INCREMENTAL=0 >> $GITHUB_ENV\nfi\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Updating\u001b[0m crates.io index\n[Test all targets/linting       ]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[Test all targets/formatting    ]   \u2705  Success - Main Run rustfmt\n[Test all targets/internal-tests]   \u2699  ::set-env:: CARGO_INCREMENTAL=0\n[Test all targets/msrv          ]   \u2699  ::set-output:: cachekey=202204047737\n[Test all targets/msrv          ]   \u2699  ::set-output:: name=1.60.0\n[Test all targets/msrv          ]   \u2705  Success - Main dtolnay/rust-toolchain@master\n[Test all targets/internal-tests] \u2b50 Run Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Test all targets/linting       ] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +nightly-2022-11-30 --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Test all targets/formatting    ] \u2b50 Run Post dtolnay/rust-toolchain@master\n[Test all targets/formatting    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m Downloading\u001b[0m crates ...\n[Test all targets/formatting    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m byteorder v1.4.3\n[Test all targets/internal-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[Test all targets/linting       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[Test all targets/msrv          ] \u2b50 Run Main actions-rs/cargo@v1\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m crc-any v2.4.3\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m lazy_static v1.4.0\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m bitflags v1.3.2\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m autocfg v1.1.0\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m libc v0.2.144\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m quick-xml v0.26.0\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m quote v1.0.28\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m unicode-ident v1.0.9\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serde_derive v1.0.163\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m syn v2.0.18\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m termios v0.2.2\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serial-unix v0.4.0\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m ioctl-rs v0.1.6\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m syn v1.0.109\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serde v1.0.163\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m num-traits v0.2.15\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m proc-macro2 v1.0.59\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m num-derive v0.3.3\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m memchr v2.5.0\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serial v0.4.0\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serde_arrays v0.1.0\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m  Downloaded\u001b[0m serial-core v0.4.0\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m proc-macro2 v1.0.59\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m unicode-ident v1.0.9\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m quote v1.0.28\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m libc v0.2.144\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde v1.0.163\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m memchr v2.5.0\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m syn v1.0.109\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m autocfg v1.1.0\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m lazy_static v1.4.0\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m crc-any v2.4.3\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m byteorder v1.4.3\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m bitflags v1.3.2\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name unicode_ident --edition=2018 /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/unicode-ident-1.0.9/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C metadata=436cd65f37e1679d -C extra-filename=-436cd65f37e1679d --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name build_script_build --edition=2018 /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.28/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no --cfg 'feature=\"default\"' --cfg 'feature=\"proc-macro\"' -C metadata=5333412d78626f2c -C extra-filename=-5333412d78626f2c --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/build/quote-5333412d78626f2c -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name build_script_build --edition=2018 /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.59/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no --cfg 'feature=\"default\"' --cfg 'feature=\"proc-macro\"' -C metadata=38851edf9c03e504 -C extra-filename=-38851edf9c03e504 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/build/proc-macro2-38851edf9c03e504 -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name build_script_build --edition=2018 /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/memchr-2.5.0/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no --cfg 'feature=\"default\"' --cfg 'feature=\"std\"' -C metadata=a25ec5df75f0f72b -C extra-filename=-a25ec5df75f0f72b --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/build/memchr-a25ec5df75f0f72b -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name build_script_build /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.144/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no --cfg 'feature=\"default\"' --cfg 'feature=\"std\"' -C metadata=846389a75a4e7e20 -C extra-filename=-846389a75a4e7e20 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/build/libc-846389a75a4e7e20 -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name build_script_build /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-1.0.163/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no --cfg 'feature=\"default\"' --cfg 'feature=\"derive\"' --cfg 'feature=\"serde_derive\"' --cfg 'feature=\"std\"' -C metadata=958470ee17fbab3c -C extra-filename=-958470ee17fbab3c --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/build/serde-958470ee17fbab3c -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name build_script_build --edition=2018 /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.109/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no --cfg 'feature=\"clone-impls\"' --cfg 'feature=\"default\"' --cfg 'feature=\"derive\"' --cfg 'feature=\"parsing\"' --cfg 'feature=\"printing\"' --cfg 'feature=\"proc-macro\"' --cfg 'feature=\"quote\"' -C metadata=7b7f57618436a823 -C extra-filename=-7b7f57618436a823 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/build/syn-7b7f57618436a823 -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name bitflags --edition=2018 /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-1.3.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"default\"' -C metadata=82cc2d155c6eb112 -C extra-filename=-82cc2d155c6eb112 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name autocfg /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/autocfg-1.1.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C metadata=129bdff40ef07337 -C extra-filename=-129bdff40ef07337 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name crc_any --edition=2021 /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crc-any-2.4.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=171d60c6bd61f3fa -C extra-filename=-171d60c6bd61f3fa --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name byteorder --edition=2018 /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.4.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"std\"' -C metadata=57b1b2fff0121589 -C extra-filename=-57b1b2fff0121589 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name lazy_static /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/lazy_static-1.4.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C metadata=fffb742395d36153 -C extra-filename=-fffb742395d36153 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --cap-lints allow`\n[Test all targets/msrv          ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/build/quote-5333412d78626f2c/build-script-build`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m num-traits v0.2.15\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name build_script_build /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-traits-0.2.15/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C metadata=c7936bf8a7f5f6f9 -C extra-filename=-c7936bf8a7f5f6f9 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/build/num-traits-c7936bf8a7f5f6f9 -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --extern autocfg=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libautocfg-129bdff40ef07337.rlib --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/build/proc-macro2-38851edf9c03e504/build-script-build`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/build/serde-958470ee17fbab3c/build-script-build`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/build/libc-846389a75a4e7e20/build-script-build`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/build/syn-7b7f57618436a823/build-script-build`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name proc_macro2 --edition=2018 /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.59/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no --cfg 'feature=\"default\"' --cfg 'feature=\"proc-macro\"' -C metadata=d802126a30f8d792 -C extra-filename=-d802126a30f8d792 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --extern unicode_ident=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libunicode_ident-436cd65f37e1679d.rmeta --cap-lints allow --cfg wrap_proc_macro`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/build/memchr-a25ec5df75f0f72b/build-script-build`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name memchr --edition=2018 /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/memchr-2.5.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no --cfg 'feature=\"default\"' --cfg 'feature=\"std\"' -C metadata=df7f2b9f3dbcde12 -C extra-filename=-df7f2b9f3dbcde12 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --cap-lints allow --cfg memchr_runtime_simd --cfg memchr_runtime_sse2 --cfg memchr_runtime_sse42 --cfg memchr_runtime_avx`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name libc /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.144/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"default\"' --cfg 'feature=\"std\"' -C metadata=a0d5081a487339cb -C extra-filename=-a0d5081a487339cb --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --cap-lints allow --cfg freebsd11 --cfg libc_priv_mod_use --cfg libc_union --cfg libc_const_size_of --cfg libc_align --cfg libc_int128 --cfg libc_core_cvoid --cfg libc_packedN --cfg libc_cfg_target_vendor --cfg libc_non_exhaustive --cfg libc_long_array --cfg libc_ptr_addr_of --cfg libc_underscore_const_names --cfg libc_const_extern_fn`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/build/num-traits-c7936bf8a7f5f6f9/build-script-build`\n[Test all targets/msrv          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name quote --edition=2018 /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quote-1.0.28/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no --cfg 'feature=\"default\"' --cfg 'feature=\"proc-macro\"' -C metadata=52d45f9c912daaea -C extra-filename=-52d45f9c912daaea --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --extern proc_macro2=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libproc_macro2-d802126a30f8d792.rmeta --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m syn v2.0.18\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name syn --edition=2021 /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-2.0.18/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no --cfg 'feature=\"clone-impls\"' --cfg 'feature=\"default\"' --cfg 'feature=\"derive\"' --cfg 'feature=\"parsing\"' --cfg 'feature=\"printing\"' --cfg 'feature=\"proc-macro\"' --cfg 'feature=\"quote\"' -C metadata=55eeea37e10a29cc -C extra-filename=-55eeea37e10a29cc --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --extern proc_macro2=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libproc_macro2-d802126a30f8d792.rmeta --extern quote=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libquote-52d45f9c912daaea.rmeta --extern unicode_ident=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libunicode_ident-436cd65f37e1679d.rmeta --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name syn --edition=2018 /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/syn-1.0.109/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no --cfg 'feature=\"clone-impls\"' --cfg 'feature=\"default\"' --cfg 'feature=\"derive\"' --cfg 'feature=\"parsing\"' --cfg 'feature=\"printing\"' --cfg 'feature=\"proc-macro\"' --cfg 'feature=\"quote\"' -C metadata=7beacaec50974691 -C extra-filename=-7beacaec50974691 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --extern proc_macro2=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libproc_macro2-d802126a30f8d792.rmeta --extern quote=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libquote-52d45f9c912daaea.rmeta --extern unicode_ident=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libunicode_ident-436cd65f37e1679d.rmeta --cap-lints allow --cfg syn_disable_nightly_tests`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m quick-xml v0.26.0\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name quick_xml --edition=2018 /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/quick-xml-0.26.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no --cfg 'feature=\"default\"' -C metadata=93961dad000b2aed -C extra-filename=-93961dad000b2aed --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --extern memchr=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libmemchr-df7f2b9f3dbcde12.rmeta --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m termios v0.2.2\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serial-core v0.4.0\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m ioctl-rs v0.1.6\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name termios /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termios-0.2.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=fd1e7944ee589742 -C extra-filename=-fd1e7944ee589742 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --extern libc=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/liblibc-a0d5081a487339cb.rmeta --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name serial_core /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serial-core-0.4.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=aa0b27bd0bb0c961 -C extra-filename=-aa0b27bd0bb0c961 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --extern libc=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/liblibc-a0d5081a487339cb.rmeta --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name ioctl_rs /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ioctl-rs-0.1.6/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=bf2b829768511055 -C extra-filename=-bf2b829768511055 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --extern libc=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/liblibc-a0d5081a487339cb.rmeta --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serial-unix v0.4.0\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name serial_unix /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serial-unix-0.4.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=1df8d4e6ea9b2f2b -C extra-filename=-1df8d4e6ea9b2f2b --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --extern ioctl_rs=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libioctl_rs-bf2b829768511055.rmeta --extern libc=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/liblibc-a0d5081a487339cb.rmeta --extern serial_core=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libserial_core-aa0b27bd0bb0c961.rmeta --extern termios=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libtermios-fd1e7944ee589742.rmeta --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name num_traits /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-traits-0.2.15/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=11c9b029deaf19dd -C extra-filename=-11c9b029deaf19dd --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --cap-lints allow --cfg has_i128 --cfg has_to_int_unchecked --cfg has_reverse_bits --cfg has_leading_trailing_ones --cfg has_int_assignop_ref --cfg has_div_euclid`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serial v0.4.0\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name serial /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serial-0.4.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=7c70333bb4c68904 -C extra-filename=-7c70333bb4c68904 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --extern serial_core=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libserial_core-aa0b27bd0bb0c961.rmeta --extern serial_unix=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libserial_unix-1df8d4e6ea9b2f2b.rmeta --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde_derive v1.0.163\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name serde_derive /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_derive-1.0.163/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C embed-bitcode=no --cfg 'feature=\"default\"' -C metadata=695b5ffa45ff843b -C extra-filename=-695b5ffa45ff843b --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --extern proc_macro2=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libproc_macro2-d802126a30f8d792.rlib --extern quote=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libquote-52d45f9c912daaea.rlib --extern syn=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libsyn-55eeea37e10a29cc.rlib --extern proc_macro --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m num-derive v0.3.3\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name num_derive --edition=2018 /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-derive-0.3.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C embed-bitcode=no -C metadata=6f9481861813e7c9 -C extra-filename=-6f9481861813e7c9 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --extern proc_macro2=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libproc_macro2-d802126a30f8d792.rlib --extern quote=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libquote-52d45f9c912daaea.rlib --extern syn=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libsyn-7beacaec50974691.rlib --extern proc_macro --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name serde /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-1.0.163/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"default\"' --cfg 'feature=\"derive\"' --cfg 'feature=\"serde_derive\"' --cfg 'feature=\"std\"' -C metadata=2c433a63225b808a -C extra-filename=-2c433a63225b808a --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --extern serde_derive=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libserde_derive-695b5ffa45ff843b.so --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m serde_arrays v0.1.0\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name serde_arrays --edition=2018 /home/runneradmin/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde_arrays-0.1.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=9d70f88df8407e2d -C extra-filename=-9d70f88df8407e2d --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --extern serde=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libserde-2c433a63225b808a.rmeta --cap-lints allow`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m   Compiling\u001b[0m mavlink v0.11.2 (/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink)\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name build_script_main --edition=2018 build/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no --cfg 'feature=\"ardupilotmega\"' --cfg 'feature=\"common\"' --cfg 'feature=\"default\"' --cfg 'feature=\"direct-serial\"' --cfg 'feature=\"icarous\"' --cfg 'feature=\"serde\"' --cfg 'feature=\"serial\"' --cfg 'feature=\"std\"' --cfg 'feature=\"tcp\"' --cfg 'feature=\"uavionix\"' --cfg 'feature=\"udp\"' -C metadata=18ae382d3d99417d -C extra-filename=-18ae382d3d99417d --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/build/mavlink-18ae382d3d99417d -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --extern crc_any=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libcrc_any-171d60c6bd61f3fa.rlib --extern lazy_static=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/liblazy_static-fffb742395d36153.rlib --extern proc_macro2=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libproc_macro2-d802126a30f8d792.rlib --extern quick_xml=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libquick_xml-93961dad000b2aed.rlib --extern quote=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libquote-52d45f9c912daaea.rlib --extern serde=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libserde-2c433a63225b808a.rlib`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/build/mavlink-18ae382d3d99417d/build-script-main`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name mavlink --edition=2018 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"ardupilotmega\"' --cfg 'feature=\"common\"' --cfg 'feature=\"default\"' --cfg 'feature=\"direct-serial\"' --cfg 'feature=\"icarous\"' --cfg 'feature=\"serde\"' --cfg 'feature=\"serial\"' --cfg 'feature=\"std\"' --cfg 'feature=\"tcp\"' --cfg 'feature=\"uavionix\"' --cfg 'feature=\"udp\"' -C metadata=bbb1888b96c62fcd -C extra-filename=-bbb1888b96c62fcd --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --extern bitflags=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libbitflags-82cc2d155c6eb112.rmeta --extern byteorder=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libbyteorder-57b1b2fff0121589.rmeta --extern crc_any=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libcrc_any-171d60c6bd61f3fa.rmeta --extern num_derive=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libnum_derive-6f9481861813e7c9.so --extern num_traits=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libnum_traits-11c9b029deaf19dd.rmeta --extern serde=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libserde-2c433a63225b808a.rmeta --extern serde_arrays=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libserde_arrays-9d70f88df8407e2d.rmeta --extern serial=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libserial-7c70333bb4c68904.rmeta`\n[Test all targets/internal-tests]   \u2705  Success - Main : enable colors in Cargo output\nif [ -z \"${CARGO_TERM_COLOR+set}\" ]; then\n  echo CARGO_TERM_COLOR=always >> $GITHUB_ENV\nfi\n[Test all targets/msrv          ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[Test all targets/formatting    ]   \u2705  Success - Post dtolnay/rust-toolchain@master\n[Test all targets/internal-tests]   \u2699  ::set-env:: CARGO_TERM_COLOR=always\n[Test all targets/linting       ]   \u2705  Success - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +nightly-2022-11-30 --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Test all targets/msrv          ]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[Test all targets/msrv          ]   \ud83d\udcac  ::debug::Error: Unable to locate executable file: cross. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Test all targets/msrv          ]   \u2753  ::group::Installing \"cross = latest\"\n[Test all targets/msrv          ]   | [command]/home/runneradmin/.cargo/bin/cargo install cross\n[Test all targets/msrv          ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Updating\u001b[0m crates.io index\n[Test all targets/linting       ]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git\n[Test all targets/internal-tests] \u2b50 Run Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Test all targets/linting       ] \u2b50 Run Main rustc +nightly-2022-11-30 --version --verbose\n[Test all targets/internal-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[Test all targets/linting       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-9.sh] user= workdir=\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m     Running\u001b[0m `rustc --crate-name mavlink_dump --edition=2018 src/bin/mavlink-dump.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"ardupilotmega\"' --cfg 'feature=\"common\"' --cfg 'feature=\"default\"' --cfg 'feature=\"direct-serial\"' --cfg 'feature=\"icarous\"' --cfg 'feature=\"serde\"' --cfg 'feature=\"serial\"' --cfg 'feature=\"std\"' --cfg 'feature=\"tcp\"' --cfg 'feature=\"uavionix\"' --cfg 'feature=\"udp\"' -C metadata=6c090a5600de5f25 -C extra-filename=-6c090a5600de5f25 --out-dir /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps -L dependency=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps --extern bitflags=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libbitflags-82cc2d155c6eb112.rlib --extern byteorder=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libbyteorder-57b1b2fff0121589.rlib --extern crc_any=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libcrc_any-171d60c6bd61f3fa.rlib --extern mavlink=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libmavlink-bbb1888b96c62fcd.rlib --extern num_derive=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libnum_derive-6f9481861813e7c9.so --extern num_traits=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libnum_traits-11c9b029deaf19dd.rlib --extern serde=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libserde-2c433a63225b808a.rlib --extern serde_arrays=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libserde_arrays-9d70f88df8407e2d.rlib --extern serial=/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/mavlink-rust-mavlink/target/debug/deps/libserial-7c70333bb4c68904.rlib`\n[Test all targets/mavlink-dump  ]   | \u001b[0m\u001b[0m\u001b[1m\u001b[32m    Finished\u001b[0m dev [unoptimized + debuginfo] target(s) in 1m 42s\n[Test all targets/mavlink-dump  ]   \u2705  Success - Main Build mavlink-dump\n[Test all targets/mavlink-dump  ] \u2b50 Run Post dtolnay/rust-toolchain@master\n[Test all targets/mavlink-dump  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[Test all targets/mavlink-dump  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[Test all targets/linting       ]   \u274c  Failure - Main rustc +nightly-2022-11-30 --version --verbose\n[Test all targets/msrv          ]   \u274c  Failure - Main actions-rs/cargo@v1\n[Test all targets/mavlink-dump  ] context canceled\n[Test all targets/mavlink-dump  ] context canceled\n[Test all targets/mavlink-dump  ] context canceled\n[Test all targets/mavlink-dump  ] context canceled\n[Test all targets/mavlink-dump  ] context canceled\n[Test all targets/mavlink-dump  ] context canceled\n[Test all targets/mavlink-dump  ] context canceled\n[Test all targets/mavlink-dump  ] context canceled\n[Test all targets/mavlink-dump  ] context canceled\n[Test all targets/mavlink-dump  ] context canceled\n[Test all targets/mavlink-dump  ]   \u2705  Success - Post dtolnay/rust-toolchain@master\n[Test all targets/internal-tests]   \u274c  Failure - Main : enable Cargo sparse registry\n# except on 1.66 and 1.67, on which it is unstable\nif [ -z \"${CARGO_REGISTRIES_CRATES_IO_PROTOCOL+set}\" -o -f \"/tmp\"/.implicit_cargo_registries_crates_io_protocol ]; then\n  touch \"/tmp\"/.implicit_cargo_registries_crates_io_protocol || true\n  if rustc +stable --version --verbose | (! grep -q '^release: 1\\.6[67]\\.'); then\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse >> $GITHUB_ENV\n  else\n    echo CARGO_REGISTRIES_CRATES_IO_PROTOCOL=git >> $GITHUB_ENV\n  fi\nfi\n[Test all targets/linting       ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/deb53f3411eea208340d4ed9a8084ff2ff25ffd7b40c2f760633aae40e85570d/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Test all targets/msrv          ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/faeb5f20b90f3a0d2b9ba883f04f3b581af03d2be7aa04953c4e8d439fa7dda3/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Test all targets/internal-tests] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/a4061ee2d34eb6ab092b2f3c203929c4d365e96a77913301c4bf079be4c32514/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Test all targets/linting       ]   \u2699  ::set-output:: cachekey=20221129e009\n[Test all targets/linting       ]   \u2699  ::set-output:: name=nightly-2022-11-30\n[Test all targets/linting       ]   \u274c  Failure - Main dtolnay/rust-toolchain@master\n[Test all targets/linting       ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/deb53f3411eea208340d4ed9a8084ff2ff25ffd7b40c2f760633aae40e85570d/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Test all targets/internal-tests]   \u2699  ::set-output:: cachekey=2023041684c8\n[Test all targets/internal-tests]   \u2699  ::set-output:: name=stable\n[Test all targets/internal-tests]   \u274c  Failure - Main dtolnay/rust-toolchain@master\n[Test all targets/internal-tests] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/a4061ee2d34eb6ab092b2f3c203929c4d365e96a77913301c4bf079be4c32514/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Test all targets/linting       ] \u2b50 Run Post dtolnay/rust-toolchain@master\n[Test all targets/msrv          ] \u2b50 Run Post dtolnay/rust-toolchain@master\n[Test all targets/internal-tests] \u2b50 Run Post dtolnay/rust-toolchain@master\n[Test all targets/internal-tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[Test all targets/msrv          ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[Test all targets/linting       ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[Test all targets/linting       ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[Test all targets/internal-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[Test all targets/msrv          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[Test all targets/formatting    ] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/dde43599b753ce89e14fc71538f1921b2d3a4f67d61224e653a726d08559c83d?force=1&v=1\": context deadline exceeded\n[Test all targets/formatting    ] \ud83c\udfc1  Job succeeded\n[Test all targets/msrv          ]   \u2705  Success - Post dtolnay/rust-toolchain@master\n[Test all targets/internal-tests]   \u2705  Success - Post dtolnay/rust-toolchain@master\n[Test all targets/internal-tests]   \u2699  ::set-env:: CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse\n[Test all targets/linting       ]   \u2705  Success - Post dtolnay/rust-toolchain@master\n[Test all targets/mavlink-dump  ] \ud83c\udfc1  Job failed\n[Test all targets/internal-tests] \ud83c\udfc1  Job succeeded\n[Test all targets/msrv          ] \ud83c\udfc1  Job succeeded\n[Test all targets/linting       ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}