{
    "repository": "emabee/flexi_logger",
    "clone_url": "https://github.com/emabee/flexi_logger.git",
    "timestamp": "2023-05-30T08:48:42.409626Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/Check formatting] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Build and test  ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Clippy check    ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Clippy check    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Check formatting]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Build and test  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Clippy check    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Build and test  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Clippy check    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Build and test  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check formatting]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Check formatting]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Clippy check    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/emabee-flexi_logger] user=0 workdir=\n[CI/Check formatting]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/emabee-flexi_logger] user=0 workdir=\n[CI/Check formatting]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/Clippy check    ]   \u2601  git clone 'https://github.com/actions-rs/toolchain' # ref=v1\n[CI/Check formatting]   \u2601  git clone 'https://github.com/actions-rs/cargo' # ref=v1\n[CI/Clippy check    ]   \u2601  git clone 'https://github.com/actions-rs/clippy-check' # ref=v1\n[CI/Clippy check    ] \ud83e\uddea  Matrix: map[os:ubuntu-latest]\n[CI/Check formatting] \u2b50 Run Main actions/checkout@v2\n[CI/Clippy check    ] \u2b50 Run Main actions/checkout@v2\n[CI/Check formatting]   \u2705  Success - Main actions/checkout@v2\n[CI/Clippy check    ]   \u2705  Success - Main actions/checkout@v2\n[CI/Check formatting] \u2b50 Run Main Install latest nightly with rustfmt\n[CI/Clippy check    ] \u2b50 Run Main Install latest nightly with clippy\n[CI/Check formatting]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/Clippy check    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-toolchain@v1/ dst=/var/run/act/actions/actions-rs-toolchain@v1/\n[CI/Check formatting]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/Clippy check    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-toolchain@v1/] user=0 workdir=\n[CI/Check formatting]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/Clippy check    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-toolchain@v1/dist/index.js] user= workdir=\n[CI/Clippy check    ]   \ud83d\udcac  ::debug::using toolchain from input: nightly\n[CI/Clippy check    ]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/Clippy check    ]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/Clippy check    ]   \ud83d\udcac  ::debug::Destination /tmp/1295b6f5-b7c0-455a-95e0-54e7f068c46f\n[CI/Clippy check    ]   \ud83d\udcac  ::debug::download complete\n[CI/Clippy check    ]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/1295b6f5-b7c0-455a-95e0-54e7f068c46f\n[CI/Clippy check    ]   | [command]/tmp/1295b6f5-b7c0-455a-95e0-54e7f068c46f --default-toolchain none -y\n[CI/Clippy check    ]   | info: downloading installer\n[CI/Check formatting]   \ud83d\udcac  ::debug::using toolchain from input: nightly\n[CI/Check formatting]   \ud83d\udcac  ::debug::Unable to find \"rustup\" executable, installing it now. Reason: Error: Unable to locate executable file: rustup. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[CI/Check formatting]   \ud83d\udcac  ::debug::Downloading https://sh.rustup.rs\n[CI/Check formatting]   \ud83d\udcac  ::debug::Destination /tmp/17412774-52c7-4ae6-91c7-3c9e5de8d85f\n[CI/Check formatting]   \ud83d\udcac  ::debug::download complete\n[CI/Check formatting]   \ud83d\udcac  ::debug::Executing chmod 755 on the /tmp/17412774-52c7-4ae6-91c7-3c9e5de8d85f\n[CI/Check formatting]   | [command]/tmp/17412774-52c7-4ae6-91c7-3c9e5de8d85f --default-toolchain none -y\n[CI/Check formatting]   | info: downloading installer\n[CI/Clippy check    ]   | info: profile set to 'default'\n[CI/Clippy check    ]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Clippy check    ]   | info: skipping toolchain installation\n[CI/Clippy check    ]   | \n[CI/Clippy check    ]   | \n[CI/Clippy check    ]   | Rust is installed now. Great!\n[CI/Clippy check    ]   | \n[CI/Clippy check    ]   | To get started you may need to restart your current shell.\n[CI/Clippy check    ]   | This would reload your PATH environment variable to include\n[CI/Clippy check    ]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Clippy check    ]   | \n[CI/Clippy check    ]   | To configure your current shell, run:\n[CI/Clippy check    ]   | source \"$HOME/.cargo/env\"\n[CI/Clippy check    ]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/Clippy check    ]   | Default host: x86_64-unknown-linux-gnu\n[CI/Clippy check    ]   | rustup home:  /home/runneradmin/.rustup\n[CI/Clippy check    ]   | \n[CI/Clippy check    ]   | no active toolchain\n[CI/Clippy check    ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Clippy check    ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Clippy check    ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Clippy check    ]   | Installed rustup 1.26.0 support profiles\n[CI/Clippy check    ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Clippy check    ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Clippy check    ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Clippy check    ]   | Installed rustup 1.26.0 support components\n[CI/Clippy check    ]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[CI/Clippy check    ]   | info: profile set to 'minimal'\n[CI/Clippy check    ]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install nightly --component clippy --allow-downgrade\n[CI/Clippy check    ]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Check formatting]   | info: profile set to 'default'\n[CI/Check formatting]   | info: default host triple is x86_64-unknown-linux-gnu\n[CI/Check formatting]   | info: skipping toolchain installation\n[CI/Check formatting]   | \n[CI/Check formatting]   | \n[CI/Check formatting]   | Rust is installed now. Great!\n[CI/Check formatting]   | \n[CI/Check formatting]   | To get started you may need to restart your current shell.\n[CI/Check formatting]   | This would reload your PATH environment variable to include\n[CI/Check formatting]   | Cargo's bin directory ($HOME/.cargo/bin).\n[CI/Check formatting]   | \n[CI/Check formatting]   | To configure your current shell, run:\n[CI/Check formatting]   | source \"$HOME/.cargo/env\"\n[CI/Clippy check    ]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Clippy check    ]   | info: downloading component 'cargo'\n[CI/Check formatting]   | [command]/home/runneradmin/.cargo/bin/rustup show\n[CI/Check formatting]   | Default host: x86_64-unknown-linux-gnu\n[CI/Check formatting]   | rustup home:  /home/runneradmin/.rustup\n[CI/Check formatting]   | \n[CI/Check formatting]   | no active toolchain\n[CI/Check formatting]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Check formatting]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Check formatting]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Check formatting]   | Installed rustup 1.26.0 support profiles\n[CI/Check formatting]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Check formatting]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Check formatting]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Check formatting]   | Installed rustup 1.26.0 support components\n[CI/Check formatting]   | [command]/home/runneradmin/.cargo/bin/rustup set profile minimal\n[CI/Check formatting]   | info: profile set to 'minimal'\n[CI/Check formatting]   | [command]/home/runneradmin/.cargo/bin/rustup toolchain install nightly --component rustfmt --allow-downgrade\n[CI/Check formatting]   | info: syncing channel updates for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Clippy check    ]   | info: downloading component 'clippy'\n[CI/Clippy check    ]   | info: downloading component 'rust-std'\n[CI/Check formatting]   | info: latest update on 2023-05-30, rust version 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Check formatting]   | info: downloading component 'cargo'\n[CI/Check formatting]   | info: downloading component 'rust-std'\n[CI/Clippy check    ]   | info: downloading component 'rustc'\n[CI/Check formatting]   | info: downloading component 'rustc'\n[CI/Clippy check    ]   | info: installing component 'cargo'\n[CI/Clippy check    ]   | info: installing component 'clippy'\n[CI/Clippy check    ]   | info: installing component 'rust-std'\n[CI/Check formatting]   | info: downloading component 'rustfmt'\n[CI/Check formatting]   | info: installing component 'cargo'\n[CI/Check formatting]   | info: installing component 'rust-std'\n[CI/Clippy check    ]   | info: installing component 'rustc'\n[CI/Check formatting]   | info: installing component 'rustc'\n[CI/Clippy check    ]   | \n[CI/Clippy check    ]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Clippy check    ]   | \n[CI/Clippy check    ]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Clippy check    ]   | info: checking for self-update\n[CI/Clippy check    ]   | [command]/home/runneradmin/.cargo/bin/rustup override set nightly\n[CI/Clippy check    ]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Clippy check    ]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/emabee-flexi_logger' set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Clippy check    ]   | \n[CI/Clippy check    ]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Clippy check    ]   | \n[CI/Clippy check    ]   \u2753  ::group::Gathering installed versions\n[CI/Clippy check    ]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/Check formatting]   | info: installing component 'rustfmt'\n[CI/Clippy check    ]   | rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Clippy check    ]   \u2699  ::set-output:: rustc=1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Clippy check    ]   \u2699  ::set-output:: rustc_hash=498553fc0\n[CI/Clippy check    ]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/Clippy check    ]   | cargo 1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/Clippy check    ]   \u2699  ::set-output:: cargo=1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/Clippy check    ]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Clippy check    ]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Clippy check    ]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Clippy check    ]   | info: The currently active `rustc` version is `rustc 1.72.0-nightly (498553fc0 2023-05-29)`\n[CI/Clippy check    ]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/Clippy check    ]   \u2753  ::endgroup::\n[CI/Clippy check    ]   \u2705  Success - Main Install latest nightly with clippy\n[CI/Check formatting]   | \n[CI/Check formatting]   |   nightly-x86_64-unknown-linux-gnu installed - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Check formatting]   | \n[CI/Check formatting]   | info: default toolchain set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Check formatting]   | info: checking for self-update\n[CI/Check formatting]   | [command]/home/runneradmin/.cargo/bin/rustup override set nightly\n[CI/Check formatting]   | info: using existing install for 'nightly-x86_64-unknown-linux-gnu'\n[CI/Check formatting]   | info: override toolchain for '/tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/emabee-flexi_logger' set to 'nightly-x86_64-unknown-linux-gnu'\n[CI/Check formatting]   | \n[CI/Check formatting]   |   nightly-x86_64-unknown-linux-gnu unchanged - rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Check formatting]   | \n[CI/Check formatting]   \u2753  ::group::Gathering installed versions\n[CI/Check formatting]   | [command]/home/runneradmin/.cargo/bin/rustc -V\n[CI/Clippy check    ]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Check formatting]   | rustc 1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Check formatting]   \u2699  ::set-output:: rustc=1.72.0-nightly (498553fc0 2023-05-29)\n[CI/Check formatting]   \u2699  ::set-output:: rustc_hash=498553fc0\n[CI/Check formatting]   | [command]/home/runneradmin/.cargo/bin/cargo -V\n[CI/Clippy check    ] \u2b50 Run Main Run cargo clippy\n[CI/Check formatting]   | cargo 1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/Check formatting]   \u2699  ::set-output:: cargo=1.72.0-nightly (64fb38c97 2023-05-23)\n[CI/Check formatting]   | [command]/home/runneradmin/.cargo/bin/rustup -V\n[CI/Check formatting]   | rustup 1.26.0 (5af9b9484 2023-04-05)\n[CI/Check formatting]   | info: This is the version for the rustup toolchain manager, not the rustc compiler.\n[CI/Check formatting]   | info: The currently active `rustc` version is `rustc 1.72.0-nightly (498553fc0 2023-05-29)`\n[CI/Check formatting]   \u2699  ::set-output:: rustup=1.26.0 (5af9b9484 2023-04-05)\n[CI/Check formatting]   \u2753  ::endgroup::\n[CI/Check formatting]   \u2705  Success - Main Install latest nightly with rustfmt\n[CI/Clippy check    ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-clippy-check@v1/ dst=/var/run/act/actions/actions-rs-clippy-check@v1/\n[CI/Clippy check    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-clippy-check@v1/] user=0 workdir=\n[CI/Check formatting]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[CI/Check formatting] \u2b50 Run Main Run cargo fmt\n[CI/Check formatting]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-rs-cargo@v1/ dst=/var/run/act/actions/actions-rs-cargo@v1/\n[CI/Check formatting]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-rs-cargo@v1/] user=0 workdir=\n[CI/Check formatting]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-cargo@v1/dist/index.js] user= workdir=\n[CI/Clippy check    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-rs-clippy-check@v1/dist/index.js] user= workdir=\n[CI/Check formatting]   \u2753 add-matcher /run/act/actions/actions-rs-cargo@v1/dist/.matchers/rust.json\n[CI/Check formatting]   | [command]/home/runneradmin/.cargo/bin/cargo fmt -- --check\n[CI/Clippy check    ]   \u2757  ::error::Input required and not supplied: token\n[CI/Clippy check    ]   \u274c  Failure - Main Run cargo clippy\n[CI/Check formatting]   \u2705  Success - Main Run cargo fmt\n[CI/Clippy check    ] exitcode '1': failure\n[CI/Clippy check    ] \ud83c\udfc1  Job failed\n[CI/Check formatting] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: failed to copy content to container: Error response from daemon: Could not find the file /var/run/act/ in container ba4862baca32fc219a9b67b010aba5f31aea96fa7e94b9c8f2c0d5f7a525017e\n"
}