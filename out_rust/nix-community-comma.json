{
    "repository": "nix-community/comma",
    "clone_url": "https://github.com/nix-community/comma.git",
    "timestamp": "2023-05-30T09:30:31.605424Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Test/tests] \ud83d\ude80  Start image=crawlergpt:latest\n[Test/tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test/tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/nix-community-comma] user=0 workdir=\n[Test/tests]   \u2601  git clone 'https://github.com/cachix/install-nix-action' # ref=v20\n[Test/tests] \u2b50 Run Pre cachix/install-nix-action@v20\n[Test/tests]   \u2705  Success - Pre cachix/install-nix-action@v20\n[Test/tests] \ud83e\uddea  Matrix: map[os:ubuntu-latest]\n[Test/tests] \u2b50 Run Main actions/checkout@v3\n[Test/tests]   \u2705  Success - Main actions/checkout@v3\n[Test/tests] \u2b50 Run Main cachix/install-nix-action@v20\n[Test/tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/cachix-install-nix-action@v20/ dst=/var/run/act/actions/cachix-install-nix-action@v20/\n[Test/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/cachix-install-nix-action@v20/] user=0 workdir=\n[Test/tests] \u2b50 Run Main /var/run/act/actions/cachix-install-nix-action@v20/install-nix.sh\n[Test/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-0.sh] user= workdir=\n[Test/tests]   \u2753  ::group::Installing Nix\n[Test/tests]   | installer options: --no-channel-add --darwin-use-unencrypted-nix-store-volume --nix-extra-conf-file /tmp/tmp.ojBPKkDjNB/nix.conf\n[Test/tests]   | *   Trying 34.159.58.69:443...\n[Test/tests]   | * TCP_NODELAY set\n[Test/tests]   | * Connected to nixos.org (34.159.58.69) port 443 (#0)\n[Test/tests]   | * ALPN, offering h2\n[Test/tests]   | * ALPN, offering http/1.1\n[Test/tests]   | * successfully set certificate verify locations:\n[Test/tests]   | *   CAfile: /etc/ssl/certs/ca-certificates.crt\n[Test/tests]   |   CApath: /etc/ssl/certs\n[Test/tests]   | } [5 bytes data]\n[Test/tests]   | * TLSv1.3 (OUT), TLS handshake, Client hello (1):\n[Test/tests]   | } [512 bytes data]\n[Test/tests]   | * TLSv1.3 (IN), TLS handshake, Server hello (2):\n[Test/tests]   | { [122 bytes data]\n[Test/tests]   | * TLSv1.3 (IN), TLS handshake, Encrypted Extensions (8):\n[Test/tests]   | { [15 bytes data]\n[Test/tests]   | * TLSv1.3 (IN), TLS handshake, Certificate (11):\n[Test/tests]   | { [3827 bytes data]\n[Test/tests]   | * TLSv1.3 (IN), TLS handshake, CERT verify (15):\n[Test/tests]   | { [79 bytes data]\n[Test/tests]   | * TLSv1.3 (IN), TLS handshake, Finished (20):\n[Test/tests]   | { [36 bytes data]\n[Test/tests]   | * TLSv1.3 (OUT), TLS change cipher, Change cipher spec (1):\n[Test/tests]   | } [1 bytes data]\n[Test/tests]   | * TLSv1.3 (OUT), TLS handshake, Finished (20):\n[Test/tests]   | } [36 bytes data]\n[Test/tests]   | * SSL connection using TLSv1.3 / TLS_AES_128_GCM_SHA256\n[Test/tests]   | * ALPN, server accepted to use h2\n[Test/tests]   | * Server certificate:\n[Test/tests]   | *  subject: CN=*.nixos.org\n[Test/tests]   | *  start date: May 21 04:51:08 2023 GMT\n[Test/tests]   | *  expire date: Aug 19 04:51:07 2023 GMT\n[Test/tests]   | *  subjectAltName: host \"nixos.org\" matched cert's \"nixos.org\"\n[Test/tests]   | *  issuer: C=US; O=Let's Encrypt; CN=R3\n[Test/tests]   | *  SSL certificate verify ok.\n[Test/tests]   | * Using HTTP2, server supports multi-use\n[Test/tests]   | * Connection state changed (HTTP/2 confirmed)\n[Test/tests]   | * Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0\n[Test/tests]   | } [5 bytes data]\n[Test/tests]   | * Using Stream ID: 1 (easy handle 0x55808ee82860)\n[Test/tests]   | } [5 bytes data]\n[Test/tests]   | > GET /nix/install HTTP/2\r\n[Test/tests]   | > Host: nixos.org\r\n[Test/tests]   | > user-agent: curl/7.68.0\r\n[Test/tests]   | > accept: */*\r\n[Test/tests]   | > \r\n[Test/tests]   | { [5 bytes data]\n[Test/tests]   | * TLSv1.3 (IN), TLS handshake, Newsession Ticket (4):\n[Test/tests]   | { [130 bytes data]\n[Test/tests]   | * Connection state changed (MAX_CONCURRENT_STREAMS == 250)!\n[Test/tests]   | } [5 bytes data]\n[Test/tests]   | < HTTP/2 301 \r\n[Test/tests]   | < accept-ranges: bytes\r\n[Test/tests]   | < access-control-allow-origin: *\r\n[Test/tests]   | < age: 3164\r\n[Test/tests]   | < date: Tue, 30 May 2023 09:08:13 GMT\r\n[Test/tests]   | < location: https://releases.nixos.org/nix/nix-2.15.1/install\r\n[Test/tests]   | < server: Netlify\r\n[Test/tests]   | < strict-transport-security: max-age=31536000\r\n[Test/tests]   | < via: 1.1 varnish, 1.1 varnish\r\n[Test/tests]   | < x-cache: HIT, HIT\r\n[Test/tests]   | < x-cache-hits: 14, 2\r\n[Test/tests]   | < x-nf-request-id: 01H1P0CN28FZ12FZ86KHPAY0KS\r\n[Test/tests]   | < x-served-by: cache-iad-kjyo7100101-IAD, cache-fra-eddf8230052-FRA\r\n[Test/tests]   | < x-timer: S1685437694.893138,VS0,VE0\r\n[Test/tests]   | < content-length: 0\r\n[Test/tests]   | < \r\n[Test/tests]   | { [0 bytes data]\n[Test/tests]   | * Connection #0 to host nixos.org left intact\n[Test/tests]   | * Issue another request to this URL: 'https://releases.nixos.org/nix/nix-2.15.1/install'\n[Test/tests]   | *   Trying 151.101.194.217:443...\n[Test/tests]   | * TCP_NODELAY set\n[Test/tests]   | * Connected to releases.nixos.org (151.101.194.217) port 443 (#1)\n[Test/tests]   | * ALPN, offering h2\n[Test/tests]   | * ALPN, offering http/1.1\n[Test/tests]   | * successfully set certificate verify locations:\n[Test/tests]   | *   CAfile: /etc/ssl/certs/ca-certificates.crt\n[Test/tests]   |   CApath: /etc/ssl/certs\n[Test/tests]   | } [5 bytes data]\n[Test/tests]   | * TLSv1.3 (OUT), TLS handshake, Client hello (1):\n[Test/tests]   | } [512 bytes data]\n[Test/tests]   | * TLSv1.3 (IN), TLS handshake, Server hello (2):\n[Test/tests]   | { [106 bytes data]\n[Test/tests]   | * TLSv1.2 (IN), TLS handshake, Certificate (11):\n[Test/tests]   | { [2826 bytes data]\n[Test/tests]   | * TLSv1.2 (IN), TLS handshake, Server key exchange (12):\n[Test/tests]   | { [300 bytes data]\n[Test/tests]   | * TLSv1.2 (IN), TLS handshake, Server finished (14):\n[Test/tests]   | { [4 bytes data]\n[Test/tests]   | * TLSv1.2 (OUT), TLS handshake, Client key exchange (16):\n[Test/tests]   | } [37 bytes data]\n[Test/tests]   | * TLSv1.2 (OUT), TLS change cipher, Change cipher spec (1):\n[Test/tests]   | } [1 bytes data]\n[Test/tests]   | * TLSv1.2 (OUT), TLS handshake, Finished (20):\n[Test/tests]   | } [16 bytes data]\n[Test/tests]   | * TLSv1.2 (IN), TLS handshake, Finished (20):\n[Test/tests]   | { [16 bytes data]\n[Test/tests]   | * SSL connection using TLSv1.2 / ECDHE-RSA-AES128-GCM-SHA256\n[Test/tests]   | * ALPN, server accepted to use h2\n[Test/tests]   | * Server certificate:\n[Test/tests]   | *  subject: CN=releases.nixos.org\n[Test/tests]   | *  start date: Mar  7 20:47:38 2023 GMT\n[Test/tests]   | *  expire date: Apr  7 20:47:37 2024 GMT\n[Test/tests]   | *  subjectAltName: host \"releases.nixos.org\" matched cert's \"releases.nixos.org\"\n[Test/tests]   | *  issuer: C=BE; O=GlobalSign nv-sa; CN=GlobalSign Atlas R3 DV TLS CA 2023 Q1\n[Test/tests]   | *  SSL certificate verify ok.\n[Test/tests]   | * Using HTTP2, server supports multi-use\n[Test/tests]   | * Connection state changed (HTTP/2 confirmed)\n[Test/tests]   | * Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0\n[Test/tests]   | } [5 bytes data]\n[Test/tests]   | * Using Stream ID: 1 (easy handle 0x55808ee82860)\n[Test/tests]   | } [5 bytes data]\n[Test/tests]   | > GET /nix/nix-2.15.1/install HTTP/2\r\n[Test/tests]   | > Host: releases.nixos.org\r\n[Test/tests]   | > user-agent: curl/7.68.0\r\n[Test/tests]   | > accept: */*\r\n[Test/tests]   | > \r\n[Test/tests]   | { [5 bytes data]\n[Test/tests]   | * Connection state changed (MAX_CONCURRENT_STREAMS == 100)!\n[Test/tests]   | } [5 bytes data]\n[Test/tests]   | < HTTP/2 200 \r\n[Test/tests]   | < last-modified: Tue, 23 May 2023 15:11:36 GMT\r\n[Test/tests]   | < etag: \"fa4fff8955c318a3511ed4ee0e5f5ea5\"\r\n[Test/tests]   | < x-amz-server-side-encryption: AES256\r\n[Test/tests]   | < content-type: text/plain\r\n[Test/tests]   | < server: AmazonS3\r\n[Test/tests]   | < via: 1.1 varnish, 1.1 varnish\r\n[Test/tests]   | < access-control-allow-origin: *\r\n[Test/tests]   | < accept-ranges: bytes\r\n[Test/tests]   | < date: Tue, 30 May 2023 09:38:54 GMT\r\n[Test/tests]   | < age: 149651\r\n[Test/tests]   | < x-served-by: cache-iad-kjyo7100063-IAD, cache-bma1620-BMA\r\n[Test/tests]   | < x-cache: HIT, HIT\r\n[Test/tests]   | < x-cache-hits: 345, 1\r\n[Test/tests]   | < x-timer: S1685439534.224330,VS0,VE1\r\n[Test/tests]   | < content-length: 4052\r\n[Test/tests]   | < \r\n[Test/tests]   | { [1084 bytes data]\n[Test/tests]   | * Connection #1 to host releases.nixos.org left intact\n[Test/tests]   | downloading Nix 2.15.1 binary tarball for x86_64-linux from 'https://releases.nixos.org/nix/nix-2.15.1/nix-2.15.1-x86_64-linux.tar.xz' to '/tmp/nix-binary-tarball-unpack.pHnInU6Bx6'...\n[Test/tests]   |   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n[Test/tests]   |                                  Dload  Upload   Total   Spent    Left  Speed\n[Test/tests]   | \r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r  5 21.0M    5 1215k    0     0  1767k      0  0:00:12 --:--:--  0:00:12 1764k\r100 21.0M  100 21.0M    0     0  13.3M      0  0:00:01  0:00:01 --:--:-- 13.3M\n[Test/tests]   | Note: a multi-user installation is possible. See https://nixos.org/manual/nix/stable/installation/installing-binary.html#multi-user-installation\n[Test/tests]   | Warning: the flag --darwin-use-unencrypted-nix-store-volume\n[Test/tests]   |          is no longer needed and will be removed in the future.\n[Test/tests]   | \n[Test/tests]   | performing a single-user installation of Nix...\n[Test/tests]   | directory /nix does not exist; creating it by running 'mkdir -m 0755 /nix && chown runneradmin /nix' using sudo\n[Test/tests]   | copying Nix to /nix/store...\n[Test/tests]   | \n[Test/tests]   | installing 'nix-2.15.1'\n[Test/tests]   | building '/nix/store/510jn0kv8afx3sfxq96x250kbngqp34g-user-environment.drv'...\n[Test/tests]   | modifying /home/runneradmin/.profile...\n[Test/tests]   | \n[Test/tests]   | Installation finished!  To ensure that the necessary environment\n[Test/tests]   | variables are set, either log in again, or type\n[Test/tests]   | \n[Test/tests]   |   . /home/runneradmin/.nix-profile/etc/profile.d/nix.sh\n[Test/tests]   | \n[Test/tests]   | in your shell.\n[Test/tests]   \u2753  ::endgroup::\n[Test/tests]   \u2705  Success - Main /var/run/act/actions/cachix-install-nix-action@v20/install-nix.sh\n[Test/tests]   \u2699  ::add-path:: /nix/var/nix/profiles/default/bin\n[Test/tests]   \u2699  ::add-path:: /home/runneradmin/.nix-profile/bin\n[Test/tests]   \u2705  Success - Main cachix/install-nix-action@v20\n[Test/tests]   \u2699  ::add-path:: /nix/var/nix/profiles/default/bin\n[Test/tests]   \u2699  ::add-path:: /home/runneradmin/.nix-profile/bin\n[Test/tests] \u2b50 Run Main nix build --extra-experimental-features nix-command -L -f . -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/nixpkgs-unstable.tar.gz --show-trace\n[Test/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test/tests]   \u274c  Failure - Main nix build --extra-experimental-features nix-command -L -f . -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/nixpkgs-unstable.tar.gz --show-trace\n[Test/tests] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/960ecac95cb0abfb70143d22aca0d39dba1d6bd352af7ce09084878a93baf6a1/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Test/tests] \u2b50 Run Post cachix/install-nix-action@v20\n[Test/tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/cachix-install-nix-action@v20/ dst=/var/run/act/actions/cachix-install-nix-action@v20/\n[Test/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/cachix-install-nix-action@v20/] user=0 workdir=\n[Test/tests]   \u2705  Success - Post cachix/install-nix-action@v20\n[Test/tests] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}