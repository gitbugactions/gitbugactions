{
    "repository": "lumol-org/soa-derive",
    "clone_url": "https://github.com/lumol-org/soa-derive.git",
    "timestamp": "2023-05-30T09:24:18.048107Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Test/tests] \ud83d\ude80  Start image=crawlergpt:latest\n[Test/tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test/tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c1e8dd3a-fec2-11ed-a890-af2cc187fc11/lumol-org-soa-derive] user=0 workdir=\n[Test/tests]   \u2601  git clone 'https://github.com/dtolnay/rust-toolchain' # ref=master\n[Test/tests] \u2b50 Run Pre setup rust\n[Test/tests]   \u2705  Success - Pre setup rust\n[Test/tests] \ud83e\uddea  Matrix: map[rust-version:1.63]\n[Test/tests] \u2b50 Run Main actions/checkout@v3\n[Test/tests]   \u2705  Success - Main actions/checkout@v3\n[Test/tests] \u2b50 Run Main setup rust\n[Test/tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[Test/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dtolnay-rust-toolchain@master/] user=0 workdir=\n[Test/tests] \u2b50 Run Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Test/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-parse.sh] user= workdir=\n[Test/tests]   \u2705  Success - Main : parse toolchain version\nif [[ $toolchain =~ ^stable' '[0-9]+' '(year|month|week|day)s?' 'ago$ ]]; then\n  if [[ Linux == macOS ]]; then\n    echo \"toolchain=1.$((($(date -v-$(sed 's/stable \\([0-9]*\\) \\(.\\).*/\\1\\2/' <<< $toolchain) +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  else\n    echo \"toolchain=1.$((($(date --date \"${toolchain#stable }\" +%s)/60/60/24-16569)/7/6))\" >> $GITHUB_OUTPUT\n  fi\nelif [[ $toolchain =~ ^stable' 'minus' '[0-9]+' 'releases?$ ]]; then\n  echo \"toolchain=1.$((($(date +%s)/60/60/24-16569)/7/6-${toolchain//[^0-9]/}))\" >> $GITHUB_OUTPUT\nelse\n  echo \"toolchain=$toolchain\" >> $GITHUB_OUTPUT\nfi\n[Test/tests]   \u2699  ::set-output:: toolchain=1.63\n[Test/tests] \u2b50 Run Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Test/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-flags.sh] user= workdir=\n[Test/tests]   \u2705  Success - Main : construct rustup command line\necho \"targets=$(for t in ${targets//,/ }; do echo -n ' --target' $t; done)\" >> $GITHUB_OUTPUT\necho \"components=$(for c in ${components//,/ }; do echo -n ' --component' $c; done)\" >> $GITHUB_OUTPUT\necho \"downgrade=\" >> $GITHUB_OUTPUT\n[Test/tests]   \u2699  ::set-output:: targets=\n[Test/tests]   \u2699  ::set-output:: components=\n[Test/tests]   \u2699  ::set-output:: downgrade=\n[Test/tests] \u2b50 Run Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Test/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[Test/tests]   | info: downloading installer\n[Test/tests]   | info: profile set to 'default'\n[Test/tests]   | info: default host triple is x86_64-unknown-linux-gnu\n[Test/tests]   | info: skipping toolchain installation\n[Test/tests]   | \n[Test/tests]   | \n[Test/tests]   | Rust is installed now. Great!\n[Test/tests]   | \n[Test/tests]   | To get started you may need to restart your current shell.\n[Test/tests]   | This would reload your PATH environment variable to include\n[Test/tests]   | Cargo's bin directory ($HOME/.cargo/bin).\n[Test/tests]   | \n[Test/tests]   | To configure your current shell, run:\n[Test/tests]   | source \"$HOME/.cargo/env\"\n[Test/tests]   \u2705  Success - Main : install rustup if needed\nif ! command -v rustup &>/dev/null; then\n  curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL \"https://sh.rustup.rs\" | sh -s -- --default-toolchain none -y\n  echo \"${CARGO_HOME:-$HOME/.cargo}/bin\" >> $GITHUB_PATH\nfi\n[Test/tests]   \u2699  ::add-path:: /home/runneradmin/.cargo/bin\n[Test/tests] \u2b50 Run Main rustup toolchain install 1.63\n[Test/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[Test/tests]   | OCI runtime exec failed: exec failed: unable to start container process: error executing setns process: exit status 1: unknown\r\n[Test/tests]   \u274c  Failure - Main rustup toolchain install 1.63\n[Test/tests] Error response from daemon: Could not find the file /var/run/act/workflow/pathcmd.txt in container c6cf769201bb652c2eb200003e3ded846ab0283ff90301cad0c51d95c6274dca\n[Test/tests]   \u2699  ::set-output:: cachekey=\n[Test/tests]   \u2699  ::set-output:: name=1.63\n[Test/tests]   \u274c  Failure - Main setup rust\n[Test/tests] Error response from daemon: No such container: c6cf769201bb652c2eb200003e3ded846ab0283ff90301cad0c51d95c6274dca\n[Test/tests] \u2b50 Run Post setup rust\n[Test/tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dtolnay-rust-toolchain@master/ dst=/var/run/act/actions/dtolnay-rust-toolchain@master/\n[Test/tests]   \u274c  Failure - Post setup rust\n[Test/tests] failed to remove container: Error response from daemon: No such container: c6cf769201bb652c2eb200003e3ded846ab0283ff90301cad0c51d95c6274dca\n[Test/tests] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Error occurred running finally: Error occurred running finally: Error occurred running finally: Error occurred running finally: Error response from daemon: No such container: c6cf769201bb652c2eb200003e3ded846ab0283ff90301cad0c51d95c6274dca (original error: <nil>) (original error: <nil>) (original error: <nil>) (original error: <nil>)\n"
}