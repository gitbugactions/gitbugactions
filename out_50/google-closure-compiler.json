{
    "repository": "google/closure-compiler",
    "clone_url": "https://github.com/google/closure-compiler.git",
    "timestamp": "2023-05-28T18:10:52.568055Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Compiler CI/Build and Test] \ud83d\ude80  Start image=crawlergpt:latest\n[Compiler CI/Build and Test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Compiler CI/Build and Test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Compiler CI/Build and Test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Compiler CI/Build and Test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/google-closure-compiler] user=0 workdir=\n[Compiler CI/Build and Test]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v3\n[Compiler CI/Build and Test] Non-terminating error while running 'git clone': some refs were not updated\n[Compiler CI/Build and Test]   \u2601  git clone 'https://github.com/bazelbuild/setup-bazelisk' # ref=v2\n[Compiler CI/Build and Test]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v3\n[Compiler CI/Build and Test]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v3\n[Compiler CI/Build and Test] \u2b50 Run Main Setup Java\n[Compiler CI/Build and Test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v3/ dst=/var/run/act/actions/actions-setup-java@v3/\n[Compiler CI/Build and Test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v3/] user=0 workdir=\n[Compiler CI/Build and Test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/setup/index.js] user= workdir=\n[Compiler CI/Build and Test]   \u2753  ::group::Installed distributions\n[Compiler CI/Build and Test]   | Trying to resolve the latest version from remote\n[Compiler CI/Build and Test]   \ud83d\udcac  ::debug::Gathering available versions from 'https://api.azul.com/zulu/download/community/v1.0/bundles/?os=linux&ext=tar.gz&bundle_type=jdk&javafx=false&arch=x86&hw_bitness=64&release_status=ga'\n[Compiler CI/Build and Test]   | Resolved latest version as 11.0.19+7\n[Compiler CI/Build and Test]   | Trying to download...\n[Compiler CI/Build and Test]   | Downloading Java 11.0.19+7 (Zulu) from https://cdn.azul.com/zulu/bin/zulu11.64.19-ca-jdk11.0.19-linux_x64.tar.gz ...\n[Compiler CI/Build and Test]   \ud83d\udcac  ::debug::Downloading https://cdn.azul.com/zulu/bin/zulu11.64.19-ca-jdk11.0.19-linux_x64.tar.gz\n[Compiler CI/Build and Test]   \ud83d\udcac  ::debug::Destination /tmp/14f7afc9-8d8b-4460-b3d6-ebf168183f5d\n[Compiler CI/Build and Test]   \ud83d\udcac  ::debug::download complete\n[Compiler CI/Build and Test]   | Extracting Java archive...\n[Compiler CI/Build and Test]   \ud83d\udcac  ::debug::Checking tar --version\n[Compiler CI/Build and Test]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Compiler CI/Build and Test]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/2761f457-9a86-4d02-b45f-0c0ef0e2750a -f /tmp/14f7afc9-8d8b-4460-b3d6-ebf168183f5d\n[Compiler CI/Build and Test]   \ud83d\udcac  ::debug::Caching tool Java_Zulu_jdk 11.0.19-7 x64\n[Compiler CI/Build and Test]   \ud83d\udcac  ::debug::source dir: /tmp/2761f457-9a86-4d02-b45f-0c0ef0e2750a/zulu11.64.19-ca-jdk11.0.19-linux_x64\n[Compiler CI/Build and Test]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/Java_Zulu_jdk/11.0.19-7/x64\n[Compiler CI/Build and Test]   \ud83d\udcac  ::debug::finished caching tool\n[Compiler CI/Build and Test]   | Java 11.0.19+7 was downloaded\n[Compiler CI/Build and Test]   | Setting Java 11.0.19+7 as the default\n[Compiler CI/Build and Test]   | Creating toolchains.xml for JDK version 11 from zulu\n[Compiler CI/Build and Test]   | Writing to /home/runneradmin/.m2/toolchains.xml\n[Compiler CI/Build and Test]   | \n[Compiler CI/Build and Test]   | Java configuration:\n[Compiler CI/Build and Test]   |   Distribution: zulu\n[Compiler CI/Build and Test]   |   Version: 11.0.19+7\n[Compiler CI/Build and Test]   |   Path: /opt/hostedtoolcache/Java_Zulu_jdk/11.0.19-7/x64\n[Compiler CI/Build and Test]   | \n[Compiler CI/Build and Test]   \u2753  ::endgroup::\n[Compiler CI/Build and Test]   \u2753 add-matcher /run/act/actions/actions-setup-java@v3/.github/java.json\n[Compiler CI/Build and Test]   | Creating settings.xml with server-id: github\n[Compiler CI/Build and Test]   | Writing to /home/runneradmin/.m2/settings.xml\n[Compiler CI/Build and Test]   \u2705  Success - Main Setup Java\n[Compiler CI/Build and Test]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/Java_Zulu_jdk/11.0.19-7/x64\n[Compiler CI/Build and Test]   \u2699  ::set-env:: JAVA_HOME_11_X64=/opt/hostedtoolcache/Java_Zulu_jdk/11.0.19-7/x64\n[Compiler CI/Build and Test]   \u2699  ::set-output:: distribution=Zulu\n[Compiler CI/Build and Test]   \u2699  ::set-output:: path=/opt/hostedtoolcache/Java_Zulu_jdk/11.0.19-7/x64\n[Compiler CI/Build and Test]   \u2699  ::set-output:: version=11.0.19+7\n[Compiler CI/Build and Test]   \u2699  ::add-path:: /opt/hostedtoolcache/Java_Zulu_jdk/11.0.19-7/x64/bin\n[Compiler CI/Build and Test] \u2b50 Run Main Checkout Current closure-compiler Commit\n[Compiler CI/Build and Test]   \u2705  Success - Main Checkout Current closure-compiler Commit\n[Compiler CI/Build and Test] \u2b50 Run Main bazelbuild/setup-bazelisk@v2\n[Compiler CI/Build and Test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/bazelbuild-setup-bazelisk@v2/ dst=/var/run/act/actions/bazelbuild-setup-bazelisk@v2/\n[Compiler CI/Build and Test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/bazelbuild-setup-bazelisk@v2/] user=0 workdir=\n[Compiler CI/Build and Test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/bazelbuild-setup-bazelisk@v2/dist/index.js] user= workdir=\n[Compiler CI/Build and Test]   \ud83d\udcac  ::debug::isExplicit: \n[Compiler CI/Build and Test]   \ud83d\udcac  ::debug::explicit? false\n[Compiler CI/Build and Test]   \ud83d\udcac  ::debug::evaluating 0 versions\n[Compiler CI/Build and Test]   \ud83d\udcac  ::debug::match not found\n[Compiler CI/Build and Test]   | Attempting to download 1.x...\n[Compiler CI/Build and Test]   \u2757  ::error::Parameter token or opts.auth is required\n[Compiler CI/Build and Test]   \u274c  Failure - Main bazelbuild/setup-bazelisk@v2\n[Compiler CI/Build and Test] exitcode '1': failure\n[Compiler CI/Build and Test] \u2b50 Run Post Setup Java\n[Compiler CI/Build and Test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v3/dist/cleanup/index.js] user= workdir=\n[Compiler CI/Build and Test]   \u2705  Success - Post Setup Java\n[Compiler CI/Build and Test] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'Build and Test' failed\n"
}