{
    "repository": "spring-projects/spring-statemachine",
    "clone_url": "https://github.com/spring-projects/spring-statemachine.git",
    "timestamp": "2023-05-28T18:35:11.957783Z",
    "clone_success": true,
    "number of actions": 14,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/build] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/spring-projects-spring-statemachine] user=0 workdir=\n[CI/build]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[CI/build] Non-terminating error while running 'git clone': some refs were not updated\n[CI/build]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v2\n[CI/build] \ud83e\uddea  Matrix: map[java:1.8 os:ubuntu-latest]\n[CI/build] \u2b50 Run Main actions/checkout@v2\n[CI/build]   \u2705  Success - Main actions/checkout@v2\n[CI/build] \u2b50 Run Main Setup JDK\n[CI/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[CI/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[CI/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[CI/build]   \ud83d\udcac  ::debug::isExplicit: \n[CI/build]   \ud83d\udcac  ::debug::explicit? false\n[CI/build]   \ud83d\udcac  ::debug::evaluating 0 versions\n[CI/build]   \ud83d\udcac  ::debug::match not found\n[CI/build]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[CI/build]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[CI/build]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu8.70.0.23-ca-jdk8.0.372-linux_x64.tar.gz\n[CI/build]   \ud83d\udcac  ::debug::Downloading /tmp/32979f9b-f9ad-45f6-8b89-b579e30a31ac\n[CI/build]   \ud83d\udcac  ::debug::download complete\n[CI/build]   | [command]/usr/bin/tar --version\n[CI/build]   | tar (GNU tar) 1.30\n[CI/build]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[CI/build]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[CI/build]   | This is free software: you are free to change and redistribute it.\n[CI/build]   | There is NO WARRANTY, to the extent permitted by law.\n[CI/build]   | \n[CI/build]   | Written by John Gilmore and Jay Fenlason.\n[CI/build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_1984614827 -f /tmp/32979f9b-f9ad-45f6-8b89-b579e30a31ac\n[CI/build]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_1984614827/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[CI/build]   \ud83d\udcac  ::debug::Caching tool jdk 8.0.372 x64\n[CI/build]   \ud83d\udcac  ::debug::source dir: /tmp/temp_1984614827/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[CI/build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/8.0.372/x64\n[CI/build]   \ud83d\udcac  ::debug::finished caching tool\n[CI/build]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[CI/build]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[CI/build]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[CI/build]   | writing /home/runneradmin/.m2/settings.xml\n[CI/build]   \u2705  Success - Main Setup JDK\n[CI/build]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/8.0.372/x64\n[CI/build]   \u2699  ::set-env:: JAVA_HOME_8_0_372_X64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[CI/build]   \u2699  ::set-env:: JAVA_HOME_8.0.372_x64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[CI/build]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/8.0.372/x64\n[CI/build]   \u2699  ::set-output:: version=8.0.372\n[CI/build]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/8.0.372/x64/bin\n[CI/build] \u2b50 Run Main Build with Gradle\n[CI/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/build]   | Downloading https://services.gradle.org/distributions/gradle-6.8.3-bin.zip\n[CI/build]   | ..........10%..........20%..........30%...........40%..........50%..........60%..........70%...........80%..........90%..........100%\n[CI/build]   | \n[CI/build]   | Welcome to Gradle 6.8.3!\n[CI/build]   | \n[CI/build]   | Here are the highlights of this release:\n[CI/build]   |  - Faster Kotlin DSL script compilation\n[CI/build]   |  - Vendor selection for Java toolchains\n[CI/build]   |  - Convenient execution of tasks in composite builds\n[CI/build]   |  - Consistent dependency resolution\n[CI/build]   | \n[CI/build]   | For more details see https://docs.gradle.org/6.8.3/release-notes.html\n[CI/build]   | \n[CI/build]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[CI/build]   | \n[CI/build]   | FAILURE: Build failed with an exception.\n[CI/build]   | \n[CI/build]   | * What went wrong:\n[CI/build]   | A problem occurred configuring root project 'spring-statemachine'.\n[CI/build]   | > Could not resolve all artifacts for configuration ':classpath'.\n[CI/build]   |    > Could not resolve io.spring.gradle:propdeps-plugin:0.0.8.\n[CI/build]   |      Required by:\n[CI/build]   |          project :\n[CI/build]   |       > Could not resolve io.spring.gradle:propdeps-plugin:0.0.8.\n[CI/build]   |          > Could not get resource 'https://repo.spring.io/plugins-release/io/spring/gradle/propdeps-plugin/0.0.8/propdeps-plugin-0.0.8.pom'.\n[CI/build]   |             > Could not GET 'https://repo.spring.io/plugins-release/io/spring/gradle/propdeps-plugin/0.0.8/propdeps-plugin-0.0.8.pom'. Received status code 401 from server: \n[CI/build]   | \n[CI/build]   | * Try:\n[CI/build]   | Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.\n[CI/build]   | \n[CI/build]   | * Get more help at https://help.gradle.org\n[CI/build]   | \n[CI/build]   | BUILD FAILED in 19s\n[CI/build]   \u274c  Failure - Main Build with Gradle\n[CI/build] exitcode '1': failure\n[CI/build] \u2b50 Run Main Tar Build Logs\n[CI/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/build]   | tar: */build/reports: Warning: Cannot stat: No such file or directory\n[CI/build]   | tar: */*/build/reports: Warning: Cannot stat: No such file or directory\n[CI/build]   \u2705  Success - Main Tar Build Logs\n[CI/build] \u2b50 Run Main Upload Build Logs\n[CI/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-upload-artifact@v2/ dst=/var/run/act/actions/actions-upload-artifact@v2/\n[CI/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-upload-artifact@v2/] user=0 workdir=\n[CI/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-upload-artifact@v2/dist/index.js] user= workdir=\n[CI/build]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[CI/build]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[CI/build]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[CI/build]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[CI/build]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[CI/build]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[CI/build]   \ud83d\udcac  ::debug::Search path '/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/spring-projects-spring-statemachine/build/buildlogs.tar.gz'\n[CI/build]   \ud83d\udcac  ::debug::File:/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/spring-projects-spring-statemachine/build/buildlogs.tar.gz was found using the provided searchPath\n[CI/build]   | With the provided path, there will be 1 file uploaded\n[CI/build]   \ud83d\udcac  ::debug::Root artifact directory is /tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/spring-projects-spring-statemachine/build\n[CI/build]   | Starting artifact upload\n[CI/build]   | For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging\n[CI/build]   | Artifact name is valid!\n[CI/build]   \u2757  ::error::Unable to get ACTIONS_RUNTIME_TOKEN env variable\n[CI/build]   \u274c  Failure - Main Upload Build Logs\n[CI/build] exitcode '1': failure\n[CI/build] \u2b50 Run Post Setup JDK\n[CI/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[CI/build]   \u2705  Success - Post Setup JDK\n[CI/build] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'build' failed\n"
}