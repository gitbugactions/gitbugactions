{
    "repository": "bluelinelabs/Conductor",
    "clone_url": "https://github.com/bluelinelabs/Conductor.git",
    "timestamp": "2023-05-28T19:11:33.781999Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Test & Publish/test] \ud83d\ude80  Start image=crawlergpt:latest\n[Test & Publish/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test & Publish/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test & Publish/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test & Publish/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/bluelinelabs-Conductor] user=0 workdir=\n[Test & Publish/test]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v2\n[Test & Publish/test] Non-terminating error while running 'git clone': some refs were not updated\n[Test & Publish/test] \u2b50 Run Main actions/checkout@v2\n[Test & Publish/test]   \u2705  Success - Main actions/checkout@v2\n[Test & Publish/test] \u2b50 Run Main set up JDK 11\n[Test & Publish/test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v2/ dst=/var/run/act/actions/actions-setup-java@v2/\n[Test & Publish/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v2/] user=0 workdir=\n[Test & Publish/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v2/dist/setup/index.js] user= workdir=\n[Test & Publish/test]   \ud83d\udcac  ::debug::isExplicit: 11.0.11-9\n[Test & Publish/test]   \ud83d\udcac  ::debug::explicit? true\n[Test & Publish/test]   \ud83d\udcac  ::debug::isExplicit: 8.0.292-1\n[Test & Publish/test]   \ud83d\udcac  ::debug::explicit? true\n[Test & Publish/test]   | Resolved Java 11.0.11+9 from tool-cache\n[Test & Publish/test]   | Setting Java 11.0.11+9 as the default\n[Test & Publish/test]   | \n[Test & Publish/test]   | Java configuration:\n[Test & Publish/test]   |   Distribution: adopt\n[Test & Publish/test]   |   Version: 11.0.11+9\n[Test & Publish/test]   |   Path: /opt/hostedtoolcache/Java_Adopt_jdk/11.0.11-9/x64\n[Test & Publish/test]   | \n[Test & Publish/test]   \u2753 add-matcher /run/act/actions/actions-setup-java@v2/.github/java.json\n[Test & Publish/test]   | Creating settings.xml with server-id: github\n[Test & Publish/test]   | Writing to /home/runneradmin/.m2/settings.xml\n[Test & Publish/test]   \u2705  Success - Main set up JDK 11\n[Test & Publish/test]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/Java_Adopt_jdk/11.0.11-9/x64\n[Test & Publish/test]   \u2699  ::set-output:: distribution=Adopt-Hotspot\n[Test & Publish/test]   \u2699  ::set-output:: path=/opt/hostedtoolcache/Java_Adopt_jdk/11.0.11-9/x64\n[Test & Publish/test]   \u2699  ::set-output:: version=11.0.11+9\n[Test & Publish/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Java_Adopt_jdk/11.0.11-9/x64/bin\n[Test & Publish/test] \u2b50 Run Main Grant execute permission for gradlew\n[Test & Publish/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test & Publish/test]   \u2705  Success - Main Grant execute permission for gradlew\n[Test & Publish/test] \u2b50 Run Main Test with Gradle\n[Test & Publish/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Test & Publish/test]   | Downloading https://services.gradle.org/distributions/gradle-7.5-bin.zip\n[Test & Publish/test]   | ...........10%............20%...........30%............40%...........50%............60%...........70%............80%...........90%............100%\n[Test & Publish/test]   | \n[Test & Publish/test]   | Welcome to Gradle 7.5!\n[Test & Publish/test]   | \n[Test & Publish/test]   | Here are the highlights of this release:\n[Test & Publish/test]   |  - Support for Java 18\n[Test & Publish/test]   |  - Support for building with Groovy 4\n[Test & Publish/test]   |  - Much more responsive continuous builds\n[Test & Publish/test]   |  - Improved diagnostics for dependency resolution\n[Test & Publish/test]   | \n[Test & Publish/test]   | For more details see https://docs.gradle.org/7.5/release-notes.html\n[Test & Publish/test]   | \n[Test & Publish/test]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[Test & Publish/test]   | \n[Test & Publish/test]   | FAILURE: Build failed with an exception.\n[Test & Publish/test]   | \n[Test & Publish/test]   | * What went wrong:\n[Test & Publish/test]   | Could not determine the dependencies of task ':conductor:testDebugUnitTest'.\n[Test & Publish/test]   | > SDK location not found. Define a valid SDK location with an ANDROID_HOME environment variable or by setting the sdk.dir path in your project's local properties file at '/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/bluelinelabs-Conductor/local.properties'.\n[Test & Publish/test]   | \n[Test & Publish/test]   | * Try:\n[Test & Publish/test]   | > Run with --stacktrace option to get the stack trace.\n[Test & Publish/test]   | > Run with --info or --debug option to get more log output.\n[Test & Publish/test]   | > Run with --scan to get full insights.\n[Test & Publish/test]   | \n[Test & Publish/test]   | * Get more help at https://help.gradle.org\n[Test & Publish/test]   | \n[Test & Publish/test]   | BUILD FAILED in 43s\n[Test & Publish/test]   \u274c  Failure - Main Test with Gradle\n[Test & Publish/test] exitcode '1': failure\n[Test & Publish/test] \u2b50 Run Post set up JDK 11\n[Test & Publish/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v2/dist/cleanup/index.js] user= workdir=\n[Test & Publish/test]   \u2705  Success - Post set up JDK 11\n[Test & Publish/test] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'test' failed\n"
}