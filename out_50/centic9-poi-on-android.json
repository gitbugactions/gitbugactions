{
    "repository": "centic9/poi-on-android",
    "clone_url": "https://github.com/centic9/poi-on-android.git",
    "timestamp": "2023-05-28T19:17:22.795603Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Build and check/build        ] \ud83d\ude80  Start image=crawlergpt:latest\n[Build and check/android_tests] \ud83d\ude80  Start image=crawlergpt:latest\n[Build and check/build        ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build and check/android_tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build and check/android_tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and check/build        ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and check/build        ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and check/android_tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and check/android_tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/centic9-poi-on-android] user=0 workdir=\n[Build and check/build        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/centic9-poi-on-android] user=0 workdir=\n[Build and check/android_tests]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v2\n[Build and check/build        ]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v2\n[Build and check/android_tests] Non-terminating error while running 'git clone': some refs were not updated\n[Build and check/android_tests]   \u2601  git clone 'https://github.com/reactivecircus/android-emulator-runner' # ref=v2\n[Build and check/build        ] Non-terminating error while running 'git clone': some refs were not updated\n[Build and check/build        ] \u2b50 Run Main actions/checkout@v2\n[Build and check/build        ]   \u2705  Success - Main actions/checkout@v2\n[Build and check/android_tests] \u2b50 Run Main actions/checkout@v2\n[Build and check/build        ] \u2b50 Run Main Set up JDK\n[Build and check/android_tests]   \u2705  Success - Main actions/checkout@v2\n[Build and check/build        ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v2/ dst=/var/run/act/actions/actions-setup-java@v2/\n[Build and check/android_tests] \u2b50 Run Main Set up JDK\n[Build and check/build        ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v2/] user=0 workdir=\n[Build and check/android_tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v2/ dst=/var/run/act/actions/actions-setup-java@v2/\n[Build and check/android_tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v2/] user=0 workdir=\n[Build and check/build        ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v2/dist/setup/index.js] user= workdir=\n[Build and check/android_tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v2/dist/setup/index.js] user= workdir=\n[Build and check/android_tests]   \ud83d\udcac  ::debug::isExplicit: 11.0.11-9\n[Build and check/android_tests]   \ud83d\udcac  ::debug::explicit? true\n[Build and check/android_tests]   \ud83d\udcac  ::debug::isExplicit: 8.0.292-1\n[Build and check/android_tests]   \ud83d\udcac  ::debug::explicit? true\n[Build and check/android_tests]   | Resolved Java 11.0.11+9 from tool-cache\n[Build and check/android_tests]   | Setting Java 11.0.11+9 as the default\n[Build and check/android_tests]   | \n[Build and check/android_tests]   | Java configuration:\n[Build and check/android_tests]   |   Distribution: adopt\n[Build and check/android_tests]   |   Version: 11.0.11+9\n[Build and check/android_tests]   |   Path: /opt/hostedtoolcache/Java_Adopt_jdk/11.0.11-9/x64\n[Build and check/android_tests]   | \n[Build and check/android_tests]   \u2753 add-matcher /run/act/actions/actions-setup-java@v2/.github/java.json\n[Build and check/android_tests]   | Creating settings.xml with server-id: github\n[Build and check/build        ]   \ud83d\udcac  ::debug::isExplicit: 11.0.11-9\n[Build and check/build        ]   \ud83d\udcac  ::debug::explicit? true\n[Build and check/build        ]   \ud83d\udcac  ::debug::isExplicit: 8.0.292-1\n[Build and check/build        ]   \ud83d\udcac  ::debug::explicit? true\n[Build and check/build        ]   | Resolved Java 11.0.11+9 from tool-cache\n[Build and check/build        ]   | Setting Java 11.0.11+9 as the default\n[Build and check/build        ]   | \n[Build and check/build        ]   | Java configuration:\n[Build and check/build        ]   |   Distribution: adopt\n[Build and check/build        ]   |   Version: 11.0.11+9\n[Build and check/build        ]   |   Path: /opt/hostedtoolcache/Java_Adopt_jdk/11.0.11-9/x64\n[Build and check/build        ]   | \n[Build and check/build        ]   \u2753 add-matcher /run/act/actions/actions-setup-java@v2/.github/java.json\n[Build and check/build        ]   | Creating settings.xml with server-id: github\n[Build and check/android_tests]   | Writing to /home/runneradmin/.m2/settings.xml\n[Build and check/android_tests]   \u2705  Success - Main Set up JDK\n[Build and check/build        ]   | Writing to /home/runneradmin/.m2/settings.xml\n[Build and check/build        ]   \u2705  Success - Main Set up JDK\n[Build and check/build        ]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/Java_Adopt_jdk/11.0.11-9/x64\n[Build and check/android_tests]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/Java_Adopt_jdk/11.0.11-9/x64\n[Build and check/build        ]   \u2699  ::set-output:: distribution=Adopt-Hotspot\n[Build and check/build        ]   \u2699  ::set-output:: path=/opt/hostedtoolcache/Java_Adopt_jdk/11.0.11-9/x64\n[Build and check/build        ]   \u2699  ::set-output:: version=11.0.11+9\n[Build and check/android_tests]   \u2699  ::set-output:: path=/opt/hostedtoolcache/Java_Adopt_jdk/11.0.11-9/x64\n[Build and check/android_tests]   \u2699  ::set-output:: version=11.0.11+9\n[Build and check/android_tests]   \u2699  ::set-output:: distribution=Adopt-Hotspot\n[Build and check/build        ]   \u2699  ::add-path:: /opt/hostedtoolcache/Java_Adopt_jdk/11.0.11-9/x64/bin\n[Build and check/android_tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Java_Adopt_jdk/11.0.11-9/x64/bin\n[Build and check/build        ] \u2b50 Run Main Build the app\n[Build and check/android_tests] \u2b50 Run Main Instrumentation Tests\n[Build and check/android_tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/reactivecircus-android-emulator-runner@v2/ dst=/var/run/act/actions/reactivecircus-android-emulator-runner@v2/\n[Build and check/build        ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Build and check/android_tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/reactivecircus-android-emulator-runner@v2/] user=0 workdir=\n[Build and check/android_tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/reactivecircus-android-emulator-runner@v2/lib/main.js] user= workdir=\n[Build and check/build        ]   | Downloading https://services.gradle.org/distributions/gradle-7.5-bin.zip\n[Build and check/android_tests]   \u2753  ::group::Configure emulator\n[Build and check/android_tests]   | You're running a Linux VM where hardware acceleration is not available. Please consider using a macOS VM instead to take advantage of native hardware acceleration support provided by HAXM.\n[Build and check/android_tests]   | API level: 26\n[Build and check/android_tests]   | target: default\n[Build and check/android_tests]   | CPU architecture: x86\n[Build and check/android_tests]   | Hardware profile: \n[Build and check/android_tests]   | Cores: 2\n[Build and check/android_tests]   | RAM size: \n[Build and check/android_tests]   | Heap size: \n[Build and check/android_tests]   | SD card path or size: \n[Build and check/android_tests]   | Disk size: \n[Build and check/android_tests]   | AVD name: test\n[Build and check/android_tests]   | force avd creation: true\n[Build and check/android_tests]   | Emulator boot timeout: 600\n[Build and check/android_tests]   | emulator options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim\n[Build and check/android_tests]   | disable animations: true\n[Build and check/android_tests]   | disable spellchecker: false\n[Build and check/android_tests]   | disable Linux hardware acceleration: true\n[Build and check/android_tests]   | enable hardware keyboard: false\n[Build and check/android_tests]   | Channel: 0 (stable)\n[Build and check/android_tests]   | Script:\n[Build and check/android_tests]   | ./gradlew connectedCheck\n[Build and check/android_tests]   | Pre emulator launch script:\n[Build and check/android_tests]   \u2753  ::endgroup::\n[Build and check/android_tests]   \u2753  ::group::Install Android SDK\n[Build and check/android_tests]   | [command]/usr/bin/sh -c \\sudo chown $USER:$USER undefined -R\n[Build and check/android_tests]   | chown: cannot access 'undefined': No such file or directory\n[Build and check/android_tests]   \u2753  ::endgroup::\n[Build and check/android_tests]   \u2753  ::group::Terminate Emulator\n[Build and check/android_tests]   | Unable to locate executable file: adb. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.\n[Build and check/android_tests]   \u2753  ::endgroup::\n[Build and check/android_tests]   \u2757  ::error::The process '/usr/bin/sh' failed with exit code 1\n[Build and check/android_tests]   \u274c  Failure - Main Instrumentation Tests\n[Build and check/android_tests] exitcode '1': failure\n[Build and check/android_tests] \u2b50 Run Post Set up JDK\n[Build and check/android_tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v2/dist/cleanup/index.js] user= workdir=\n[Build and check/android_tests]   \u2705  Success - Post Set up JDK\n[Build and check/build        ]   | ...........10%............20%...........30%............40%...........50%............60%...........70%............80%...........90%............100%\n[Build and check/build        ]   | \n[Build and check/build        ]   | Welcome to Gradle 7.5!\n[Build and check/build        ]   | \n[Build and check/build        ]   | Here are the highlights of this release:\n[Build and check/build        ]   |  - Support for Java 18\n[Build and check/build        ]   |  - Support for building with Groovy 4\n[Build and check/build        ]   |  - Much more responsive continuous builds\n[Build and check/build        ]   |  - Improved diagnostics for dependency resolution\n[Build and check/build        ]   | \n[Build and check/build        ]   | For more details see https://docs.gradle.org/7.5/release-notes.html\n[Build and check/build        ]   | \n[Build and check/build        ]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[Build and check/android_tests] \ud83c\udfc1  Job failed\n[Build and check/build        ]   | \n[Build and check/build        ]   | > Configure project :poitest\n[Build and check/build        ]   | WARNING:The option setting 'android.jetifier.ignorelist=poishadow-all.jar' is experimental.\n[Build and check/build        ]   | \n[Build and check/build        ]   | FAILURE: Build failed with an exception.\n[Build and check/build        ]   | \n[Build and check/build        ]   | * What went wrong:\n[Build and check/build        ]   | Could not determine the dependencies of task ':poitest:compileDebugJavaWithJavac'.\n[Build and check/build        ]   | > SDK location not found. Define a valid SDK location with an ANDROID_HOME environment variable or by setting the sdk.dir path in your project's local properties file at '/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/centic9-poi-on-android/local.properties'.\n[Build and check/build        ]   | \n[Build and check/build        ]   | * Try:\n[Build and check/build        ]   | > Run with --stacktrace option to get the stack trace.\n[Build and check/build        ]   | > Run with --info or --debug option to get more log output.\n[Build and check/build        ]   | > Run with --scan to get full insights.\n[Build and check/build        ]   | \n[Build and check/build        ]   | * Get more help at https://help.gradle.org\n[Build and check/build        ]   | \n[Build and check/build        ]   | Deprecated Gradle features were used in this build, making it incompatible with Gradle 8.0.\n[Build and check/build        ]   | \n[Build and check/build        ]   | You can use '--warning-mode all' to show the individual deprecation warnings and determine if they come from your own scripts or plugins.\n[Build and check/build        ]   | \n[Build and check/build        ]   | \n[Build and check/build        ]   | BUILD FAILED in 39s\n[Build and check/build        ]   | See https://docs.gradle.org/7.5/userguide/command_line_interface.html#sec:command_line_warnings\n[Build and check/build        ]   \u274c  Failure - Main Build the app\n[Build and check/build        ] exitcode '1': failure\n[Build and check/build        ] \u2b50 Run Post Set up JDK\n[Build and check/build        ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v2/dist/cleanup/index.js] user= workdir=\n[Build and check/build        ]   \u2705  Success - Post Set up JDK\n[Build and check/build        ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'build' failed\n"
}