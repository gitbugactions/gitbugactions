{
    "repository": "lexica/lexica",
    "clone_url": "https://github.com/lexica/lexica.git",
    "timestamp": "2023-05-28T19:03:03.195152Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Build dictionaries and app, then run tests/build-and-check] \ud83d\ude80  Start image=crawlergpt:latest\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/lexica-lexica] user=0 workdir=\n[Build dictionaries and app, then run tests/build-and-check]   \u2601  git clone 'https://github.com/actions/setup-java' # ref=v1\n[Build dictionaries and app, then run tests/build-and-check] Non-terminating error while running 'git clone': some refs were not updated\n[Build dictionaries and app, then run tests/build-and-check]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v1\n[Build dictionaries and app, then run tests/build-and-check] \u2b50 Run Main actions/checkout@v2\n[Build dictionaries and app, then run tests/build-and-check]   \u2705  Success - Main actions/checkout@v2\n[Build dictionaries and app, then run tests/build-and-check] \u2b50 Run Main set up JDK 1.8\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-java@v1/ dst=/var/run/act/actions/actions-setup-java@v1/\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-java@v1/] user=0 workdir=\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/setup/index.js] user= workdir=\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udcac  ::debug::isExplicit: \n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udcac  ::debug::explicit? false\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udcac  ::debug::evaluating 0 versions\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udcac  ::debug::match not found\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udcac  ::debug::Downloading JDK from Azul\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udcac  ::debug::Searching for files with extension: -linux_x64.tar.gz\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udcac  ::debug::Downloading https://static.azul.com/zulu/bin/zulu8.70.0.23-ca-jdk8.0.372-linux_x64.tar.gz\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udcac  ::debug::Downloading /tmp/2cc1e1fe-7c3b-431c-bfd3-c9972592c079\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udcac  ::debug::download complete\n[Build dictionaries and app, then run tests/build-and-check]   | [command]/usr/bin/tar --version\n[Build dictionaries and app, then run tests/build-and-check]   | tar (GNU tar) 1.30\n[Build dictionaries and app, then run tests/build-and-check]   | Copyright (C) 2017 Free Software Foundation, Inc.\n[Build dictionaries and app, then run tests/build-and-check]   | License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\n[Build dictionaries and app, then run tests/build-and-check]   | This is free software: you are free to change and redistribute it.\n[Build dictionaries and app, then run tests/build-and-check]   | There is NO WARRANTY, to the extent permitted by law.\n[Build dictionaries and app, then run tests/build-and-check]   | \n[Build dictionaries and app, then run tests/build-and-check]   | Written by John Gilmore and Jay Fenlason.\n[Build dictionaries and app, then run tests/build-and-check]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/temp_1491962320 -f /tmp/2cc1e1fe-7c3b-431c-bfd3-c9972592c079\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udcac  ::debug::jdk extracted to /tmp/temp_1491962320/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udcac  ::debug::Caching tool jdk 8.0.372 x64\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udcac  ::debug::source dir: /tmp/temp_1491962320/zulu8.70.0.23-ca-jdk8.0.372-linux_x64\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/jdk/8.0.372/x64\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udcac  ::debug::finished caching tool\n[Build dictionaries and app, then run tests/build-and-check]   \u2753 add-matcher /run/act/actions/actions-setup-java@v1/.github/java.json\n[Build dictionaries and app, then run tests/build-and-check]   | creating settings.xml with server-id: github; environment variables: username=$GITHUB_ACTOR, password=$GITHUB_TOKEN, and gpg-passphrase=null\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udcac  ::debug::created directory /home/runneradmin/.m2\n[Build dictionaries and app, then run tests/build-and-check]   | writing /home/runneradmin/.m2/settings.xml\n[Build dictionaries and app, then run tests/build-and-check]   \u2705  Success - Main set up JDK 1.8\n[Build dictionaries and app, then run tests/build-and-check]   \u2699  ::set-env:: JAVA_HOME_8_0_372_X64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[Build dictionaries and app, then run tests/build-and-check]   \u2699  ::set-env:: JAVA_HOME_8.0.372_x64=/opt/hostedtoolcache/jdk/8.0.372/x64\n[Build dictionaries and app, then run tests/build-and-check]   \u2699  ::set-env:: JAVA_HOME=/opt/hostedtoolcache/jdk/8.0.372/x64\n[Build dictionaries and app, then run tests/build-and-check]   \u2699  ::set-output:: path=/opt/hostedtoolcache/jdk/8.0.372/x64\n[Build dictionaries and app, then run tests/build-and-check]   \u2699  ::set-output:: version=8.0.372\n[Build dictionaries and app, then run tests/build-and-check]   \u2699  ::add-path:: /opt/hostedtoolcache/jdk/8.0.372/x64/bin\n[Build dictionaries and app, then run tests/build-and-check] \u2b50 Run Main Gradle build dictionaries\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Build dictionaries and app, then run tests/build-and-check]   | Downloading https://services.gradle.org/distributions/gradle-6.5-all.zip\n[Build dictionaries and app, then run tests/build-and-check]   | .............10%..............20%..............30%..............40%..............50%..............60%..............70%..............80%..............90%..............100%\n[Build dictionaries and app, then run tests/build-and-check]   | \n[Build dictionaries and app, then run tests/build-and-check]   | Welcome to Gradle 6.5!\n[Build dictionaries and app, then run tests/build-and-check]   | \n[Build dictionaries and app, then run tests/build-and-check]   | Here are the highlights of this release:\n[Build dictionaries and app, then run tests/build-and-check]   |  - Experimental file-system watching\n[Build dictionaries and app, then run tests/build-and-check]   |  - Improved version ordering\n[Build dictionaries and app, then run tests/build-and-check]   |  - New samples\n[Build dictionaries and app, then run tests/build-and-check]   | \n[Build dictionaries and app, then run tests/build-and-check]   | For more details see https://docs.gradle.org/6.5/release-notes.html\n[Build dictionaries and app, then run tests/build-and-check]   | \n[Build dictionaries and app, then run tests/build-and-check]   | Starting a Gradle Daemon (subsequent builds will be faster)\n[Build dictionaries and app, then run tests/build-and-check]   | \n[Build dictionaries and app, then run tests/build-and-check]   | > Configure project :app\n[Build dictionaries and app, then run tests/build-and-check]   | Warning: The 'kotlin-android-extensions' Gradle plugin is deprecated. Please use this migration guide (https://goo.gle/kotlin-android-extensions-deprecation) to start working with View Binding (https://developer.android.com/topic/libraries/view-binding) and the 'kotlin-parcelize' plugin.\n[Build dictionaries and app, then run tests/build-and-check]   | \n[Build dictionaries and app, then run tests/build-and-check]   | > Configure project :trie-builder:app\n[Build dictionaries and app, then run tests/build-and-check]   | Warning: The 'kotlin-android-extensions' Gradle plugin is deprecated. Please use this migration guide (https://goo.gle/kotlin-android-extensions-deprecation) to start working with View Binding (https://developer.android.com/topic/libraries/view-binding) and the 'kotlin-parcelize' plugin.\n[Build dictionaries and app, then run tests/build-and-check]   | \n[Build dictionaries and app, then run tests/build-and-check]   | > Task :trie-builder:libraries:trie:compileKotlin\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :trie-builder:libraries:trie:compileJava\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :trie-builder:libraries:trie:processResources NO-SOURCE\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :trie-builder:libraries:trie:classes\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :trie-builder:libraries:trie:inspectClassesForKotlinIC\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :trie-builder:libraries:trie:jar\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :trie-builder:libraries:trie-builder:compileKotlin\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :trie-builder:libraries:trie-builder:compileJava\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :trie-builder:libraries:trie-builder:processResources NO-SOURCE\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :trie-builder:libraries:trie-builder:classes\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :trie-builder:libraries:trie-builder:shadowJar\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildTrieBuilder\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildDictionary_ca\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildDictionary_de_DE\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildDictionary_de_DE_no_diacritics\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildDictionary_en_GB\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildDictionary_en_US\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildDictionary_es\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildDictionary_es_solo_enne\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildDictionary_fa\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildDictionary_fr_FR\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildDictionary_fr_FR_no_diacritics\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildDictionary_hu\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildDictionary_it\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildDictionary_ja\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildDictionary_nl\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildDictionary_pl\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildDictionary_pt_BR\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildDictionary_pt_BR_no_diacritics\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildDictionary_ru\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildDictionary_ru_extended\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildDictionary_uk\n[Build dictionaries and app, then run tests/build-and-check]   | > Task :buildDictionaries\n[Build dictionaries and app, then run tests/build-and-check]   | \n[Build dictionaries and app, then run tests/build-and-check]   | BUILD SUCCESSFUL in 1m 30s\n[Build dictionaries and app, then run tests/build-and-check]   | 21 actionable tasks: 21 executed\n[Build dictionaries and app, then run tests/build-and-check]   \u2705  Success - Main Gradle build dictionaries\n[Build dictionaries and app, then run tests/build-and-check] \u2b50 Run Main Gradle build\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Build dictionaries and app, then run tests/build-and-check]   | \n[Build dictionaries and app, then run tests/build-and-check]   | > Configure project :app\n[Build dictionaries and app, then run tests/build-and-check]   | Warning: The 'kotlin-android-extensions' Gradle plugin is deprecated. Please use this migration guide (https://goo.gle/kotlin-android-extensions-deprecation) to start working with View Binding (https://developer.android.com/topic/libraries/view-binding) and the 'kotlin-parcelize' plugin.\n[Build dictionaries and app, then run tests/build-and-check]   | \n[Build dictionaries and app, then run tests/build-and-check]   | FAILURE: Build failed with an exception.\n[Build dictionaries and app, then run tests/build-and-check]   | \n[Build dictionaries and app, then run tests/build-and-check]   | * What went wrong:\n[Build dictionaries and app, then run tests/build-and-check]   | Could not determine the dependencies of task ':app:assemble'.\n[Build dictionaries and app, then run tests/build-and-check]   | > Could not create task ':app:assembleRelease'.\n[Build dictionaries and app, then run tests/build-and-check]   |    > Could not create task ':app:lintVitalRelease'.\n[Build dictionaries and app, then run tests/build-and-check]   |       > SDK location not found. Define location with an ANDROID_SDK_ROOT environment variable or by setting the sdk.dir path in your project's local properties file at '/tmp/bc275e72-fd77-11ed-a890-af2cc187fc11/lexica-lexica/local.properties'.\n[Build dictionaries and app, then run tests/build-and-check]   | \n[Build dictionaries and app, then run tests/build-and-check]   | * Try:\n[Build dictionaries and app, then run tests/build-and-check]   | Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.\n[Build dictionaries and app, then run tests/build-and-check]   | \n[Build dictionaries and app, then run tests/build-and-check]   | * Get more help at https://help.gradle.org\n[Build dictionaries and app, then run tests/build-and-check]   | \n[Build dictionaries and app, then run tests/build-and-check]   | BUILD FAILED in 1s\n[Build dictionaries and app, then run tests/build-and-check]   \u274c  Failure - Main Gradle build\n[Build dictionaries and app, then run tests/build-and-check] exitcode '1': failure\n[Build dictionaries and app, then run tests/build-and-check] \u2b50 Run Post set up JDK 1.8\n[Build dictionaries and app, then run tests/build-and-check]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-java@v1/dist/cleanup/index.js] user= workdir=\n[Build dictionaries and app, then run tests/build-and-check]   \u2705  Success - Post set up JDK 1.8\n[Build dictionaries and app, then run tests/build-and-check] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'build-and-check' failed\n"
}