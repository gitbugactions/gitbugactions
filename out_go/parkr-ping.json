{
    "repository": "parkr/ping",
    "clone_url": "https://github.com/parkr/ping.git",
    "timestamp": "2023-05-30T11:03:36.451337Z",
    "clone_success": true,
    "number of actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Build & test/Run Go Tests      ] \ud83d\ude80  Start image=crawlergpt:latest\n[Build & test/Build Docker Image] \ud83d\ude80  Start image=crawlergpt:latest\n[Build & test/Run Go Tests      ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build & test/Build Docker Image]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build & test/Run Go Tests      ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build & test/Build Docker Image]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build & test/Build Docker Image]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build & test/Run Go Tests      ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build & test/Build Docker Image]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/parkr-ping] user=0 workdir=\n[Build & test/Run Go Tests      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/parkr-ping] user=0 workdir=\n[Build & test/Build Docker Image]   \u2601  git clone 'https://github.com/docker/setup-qemu-action' # ref=v2\n[Build & test/Build Docker Image]   \u2601  git clone 'https://github.com/docker/setup-buildx-action' # ref=v2\n[Build & test/Build Docker Image]   \u2601  git clone 'https://github.com/docker/metadata-action' # ref=v4\n[Build & test/Build Docker Image]   \u2601  git clone 'https://github.com/docker/build-push-action' # ref=v4\n[Build & test/Build Docker Image]   \u2601  git clone 'https://github.com/docker/login-action' # ref=v2\n[Build & test/Build Docker Image]   \u2601  git clone 'https://github.com/docker/build-push-action' # ref=v4\n[Build & test/Build Docker Image] \u2b50 Run Main actions/checkout@v3\n[Build & test/Build Docker Image]   \u2705  Success - Main actions/checkout@v3\n[Build & test/Run Go Tests      ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v4\n[Build & test/Run Go Tests      ] \u2b50 Run Main actions/checkout@v3\n[Build & test/Run Go Tests      ]   \u2705  Success - Main actions/checkout@v3\n[Build & test/Build Docker Image] \u2b50 Run Main set up qemu virt with platforms\n[Build & test/Build Docker Image]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/docker-setup-qemu-action@v2/ dst=/var/run/act/actions/docker-setup-qemu-action@v2/\n[Build & test/Run Go Tests      ] \u2b50 Run Main actions/setup-go@v4\n[Build & test/Build Docker Image]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/docker-setup-qemu-action@v2/] user=0 workdir=\n[Build & test/Run Go Tests      ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v4/ dst=/var/run/act/actions/actions-setup-go@v4/\n[Build & test/Run Go Tests      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v4/] user=0 workdir=\n[Build & test/Run Go Tests      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v4/dist/setup/index.js] user= workdir=\n[Build & test/Build Docker Image]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/docker-setup-qemu-action@v2/dist/index.js] user= workdir=\n[Build & test/Build Docker Image]   \u2753  ::group::Docker info\n[Build & test/Build Docker Image]   | [command]/usr/bin/docker version\n[Build & test/Run Go Tests      ]   | Setup go version spec 1.20\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::isExplicit: \n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::explicit? false\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::explicit? true\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::explicit? true\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::explicit? true\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::match not found\n[Build & test/Run Go Tests      ]   | Attempting to download 1.20...\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::No manifest cached\n[Build & test/Build Docker Image]   | Client:\n[Build & test/Build Docker Image]   |  Version:           20.10.8+azure\n[Build & test/Build Docker Image]   |  API version:       1.41\n[Build & test/Build Docker Image]   |  Go version:        go1.16.7\n[Build & test/Build Docker Image]   |  Git commit:        3967b7d28e15a020e4ee344283128ead633b3e0c\n[Build & test/Build Docker Image]   |  Built:             Thu Jul 29 13:55:47 2021\n[Build & test/Build Docker Image]   |  OS/Arch:           linux/amd64\n[Build & test/Build Docker Image]   |  Context:           default\n[Build & test/Build Docker Image]   |  Experimental:      true\n[Build & test/Build Docker Image]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/version\": dial unix /var/run/docker.sock: connect: permission denied\n[Build & test/Build Docker Image]   \u2753  ::endgroup::\n[Build & test/Build Docker Image]   \u2757  ::error::The process '/usr/bin/docker' failed with exit code 1\n[Build & test/Build Docker Image]   \u274c  Failure - Main set up qemu virt with platforms\n[Build & test/Run Go Tests      ]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::HttpClientError: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v4/dist/setup/index.js:8907:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[Build & test/Run Go Tests      ]   | Falling back to download directly from Go\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.20\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::matched go1.20.4\n[Build & test/Run Go Tests      ]   | Install from dist\n[Build & test/Run Go Tests      ]   | Acquiring go1.20.4 from https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::Destination /tmp/7e930c69-2b3f-4a80-849f-27c1e3194a01\n[Build & test/Build Docker Image] exitcode '1': failure\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::download complete\n[Build & test/Run Go Tests      ]   | Extracting Go...\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::Checking tar --version\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Build & test/Run Go Tests      ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/d517e23a-2cba-4ee6-91a0-1d865f95ee7a -f /tmp/7e930c69-2b3f-4a80-849f-27c1e3194a01\n[Build & test/Run Go Tests      ]   | Successfully extracted go to /tmp/d517e23a-2cba-4ee6-91a0-1d865f95ee7a\n[Build & test/Run Go Tests      ]   | Adding to the cache ...\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::Caching tool go 1.20.4 x64\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::source dir: /tmp/d517e23a-2cba-4ee6-91a0-1d865f95ee7a/go\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.20.4/x64\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::finished caching tool\n[Build & test/Run Go Tests      ]   | Successfully cached go to /opt/hostedtoolcache/go/1.20.4/x64\n[Build & test/Run Go Tests      ]   | Added go to the path\n[Build & test/Run Go Tests      ]   | Successfully set up Go version 1.20\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.20.4/x64/bin/go:\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Build & test/Run Go Tests      ]   \ud83d\udcac  ::debug::add bin true\n[Build & test/Run Go Tests      ]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[Build & test/Run Go Tests      ]   \u2753 add-matcher /run/act/actions/actions-setup-go@v4/matchers.json\n[Build & test/Run Go Tests      ]   | go version go1.20.4 linux/amd64\n[Build & test/Run Go Tests      ]   | \n[Build & test/Run Go Tests      ]   \u2753  ::group::go env\n[Build & test/Run Go Tests      ]   | GO111MODULE=\"\"\n[Build & test/Run Go Tests      ]   | GOARCH=\"amd64\"\n[Build & test/Run Go Tests      ]   | GOBIN=\"\"\n[Build & test/Run Go Tests      ]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Build & test/Run Go Tests      ]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Build & test/Run Go Tests      ]   | GOEXE=\"\"\n[Build & test/Run Go Tests      ]   | GOEXPERIMENT=\"\"\n[Build & test/Run Go Tests      ]   | GOFLAGS=\"\"\n[Build & test/Run Go Tests      ]   | GOHOSTARCH=\"amd64\"\n[Build & test/Run Go Tests      ]   | GOHOSTOS=\"linux\"\n[Build & test/Run Go Tests      ]   | GOINSECURE=\"\"\n[Build & test/Run Go Tests      ]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Build & test/Run Go Tests      ]   | GONOPROXY=\"\"\n[Build & test/Run Go Tests      ]   | GONOSUMDB=\"\"\n[Build & test/Run Go Tests      ]   | GOOS=\"linux\"\n[Build & test/Run Go Tests      ]   | GOPATH=\"/home/runneradmin/go\"\n[Build & test/Run Go Tests      ]   | GOPRIVATE=\"\"\n[Build & test/Run Go Tests      ]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Build & test/Run Go Tests      ]   | GOROOT=\"/opt/hostedtoolcache/go/1.20.4/x64\"\n[Build & test/Run Go Tests      ]   | GOSUMDB=\"sum.golang.org\"\n[Build & test/Run Go Tests      ]   | GOTMPDIR=\"\"\n[Build & test/Run Go Tests      ]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.20.4/x64/pkg/tool/linux_amd64\"\n[Build & test/Run Go Tests      ]   | GOVCS=\"\"\n[Build & test/Run Go Tests      ]   | GOVERSION=\"go1.20.4\"\n[Build & test/Run Go Tests      ]   | GCCGO=\"gccgo\"\n[Build & test/Run Go Tests      ]   | GOAMD64=\"v1\"\n[Build & test/Run Go Tests      ]   | AR=\"ar\"\n[Build & test/Run Go Tests      ]   | CC=\"gcc\"\n[Build & test/Run Go Tests      ]   | CXX=\"g++\"\n[Build & test/Run Go Tests      ]   | CGO_ENABLED=\"1\"\n[Build & test/Run Go Tests      ]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/parkr-ping/go.mod\"\n[Build & test/Run Go Tests      ]   | GOWORK=\"\"\n[Build & test/Run Go Tests      ]   | CGO_CFLAGS=\"-O2 -g\"\n[Build & test/Run Go Tests      ]   | CGO_CPPFLAGS=\"\"\n[Build & test/Run Go Tests      ]   | CGO_CXXFLAGS=\"-O2 -g\"\n[Build & test/Run Go Tests      ]   | CGO_FFLAGS=\"-O2 -g\"\n[Build & test/Run Go Tests      ]   | CGO_LDFLAGS=\"-O2 -g\"\n[Build & test/Run Go Tests      ]   | PKG_CONFIG=\"pkg-config\"\n[Build & test/Run Go Tests      ]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build1815643037=/tmp/go-build -gno-record-gcc-switches\"\n[Build & test/Run Go Tests      ]   | \n[Build & test/Run Go Tests      ]   \u2753  ::endgroup::\n[Build & test/Run Go Tests      ]   \u2705  Success - Main actions/setup-go@v4\n[Build & test/Run Go Tests      ]   \u2699  ::set-output:: go-version=1.20.4\n[Build & test/Run Go Tests      ]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.20.4/x64/bin\n[Build & test/Run Go Tests      ]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Build & test/Run Go Tests      ] \u2b50 Run Main go test ./...\n[Build & test/Run Go Tests      ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Build & test/Run Go Tests      ]   | go: downloading github.com/jmoiron/sqlx v1.3.5\n[Build & test/Run Go Tests      ]   | go: downloading github.com/mattn/go-sqlite3 v2.0.3+incompatible\n[Build & test/Build Docker Image] \ud83c\udfc1  Job failed\n[Build & test/Run Go Tests      ]   | ?   \tgithub.com/parkr/ping/cmd/ping-healthcheck\t[no test files]\n[Build & test/Run Go Tests      ]   | ?   \tgithub.com/parkr/ping/cmd/ping-initialize-db\t[no test files]\n[Build & test/Run Go Tests      ]   | ?   \tgithub.com/parkr/ping/database\t[no test files]\n[Build & test/Run Go Tests      ]   | ok  \tgithub.com/parkr/ping\t0.021s\n[Build & test/Run Go Tests      ]   | ok  \tgithub.com/parkr/ping/analytics\t0.021s\n[Build & test/Run Go Tests      ]   \u2705  Success - Main go test ./...\n[Build & test/Run Go Tests      ] \u2b50 Run Post actions/setup-go@v4\n[Build & test/Run Go Tests      ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v4/dist/cache-save/index.js] user= workdir=\n[Build & test/Run Go Tests      ]   | [command]/opt/hostedtoolcache/go/1.20.4/x64/bin/go env GOMODCACHE\n[Build & test/Run Go Tests      ]   | [command]/opt/hostedtoolcache/go/1.20.4/x64/bin/go env GOCACHE\n[Build & test/Run Go Tests      ]   | /home/runneradmin/go/pkg/mod\n[Build & test/Run Go Tests      ]   | /home/runneradmin/.cache/go-build\n[Build & test/Run Go Tests      ]   | Primary key was not generated. Please check the log messages above for more errors or information\n[Build & test/Run Go Tests      ]   \u2705  Success - Post actions/setup-go@v4\n[Build & test/Run Go Tests      ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: Job 'Build Docker Image' failed\n"
}