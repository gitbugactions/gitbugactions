{
    "repository": "google/git-appraise",
    "clone_url": "https://github.com/google/git-appraise.git",
    "timestamp": "2023-05-30T11:15:23.223442Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Build and Test/test] \ud83d\ude80  Start image=crawlergpt:latest\n[Build and Test/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build and Test/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and Test/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and Test/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/google-git-appraise] user=0 workdir=\n[Build and Test/test]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v3\n[Build and Test/test] \ud83e\uddea  Matrix: map[go-version:1.18.x os:ubuntu-latest]\n[Build and Test/test] \u2b50 Run Main actions/setup-go@v3\n[Build and Test/test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v3/ dst=/var/run/act/actions/actions-setup-go@v3/\n[Build and Test/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v3/] user=0 workdir=\n[Build and Test/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v3/dist/setup/index.js] user= workdir=\n[Build and Test/test]   | Setup go version spec 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::isExplicit: \n[Build and Test/test]   \ud83d\udcac  ::debug::explicit? false\n[Build and Test/test]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Build and Test/test]   \ud83d\udcac  ::debug::explicit? true\n[Build and Test/test]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Build and Test/test]   \ud83d\udcac  ::debug::explicit? true\n[Build and Test/test]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Build and Test/test]   \ud83d\udcac  ::debug::explicit? true\n[Build and Test/test]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Build and Test/test]   \ud83d\udcac  ::debug::match not found\n[Build and Test/test]   | Attempting to download 1.18.x...\n[Build and Test/test]   \ud83d\udcac  ::debug::No manifest cached\n[Build and Test/test]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Build and Test/test]   \ud83d\udcac  ::debug::HttpClientError: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v3/dist/setup/index.js:8612:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[Build and Test/test]   | Falling back to download directly from Go\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.20.0-rc.3 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.20.0-rc.2 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.20.0-rc.1 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.19.8 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.19.7 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.19.6 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.19.5 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.19.4 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.19.3 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.19.2 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.19.1 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.19.0 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.19.0-rc.2 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.19.0-rc.1 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.19.0-beta.1 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::check 1.18.10 satisfies 1.18.x\n[Build and Test/test]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[Build and Test/test]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Build and Test/test]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Build and Test/test]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Build and Test/test]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Build and Test/test]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[Build and Test/test]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[Build and Test/test]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[Build and Test/test]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[Build and Test/test]   \ud83d\udcac  ::debug::matched go1.18.10\n[Build and Test/test]   | Install from dist\n[Build and Test/test]   | Acquiring go1.18.10 from https://storage.googleapis.com/golang/go1.18.10.linux-amd64.tar.gz\n[Build and Test/test]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.18.10.linux-amd64.tar.gz\n[Build and Test/test]   \ud83d\udcac  ::debug::Destination /tmp/24d5d41c-12b5-4114-a021-ba038d1eba22\n[Build and Test/test]   \ud83d\udcac  ::debug::download complete\n[Build and Test/test]   | Extracting Go...\n[Build and Test/test]   \ud83d\udcac  ::debug::Checking tar --version\n[Build and Test/test]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Build and Test/test]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/eda0009d-60bd-4f92-93f1-f2e9de82288c -f /tmp/24d5d41c-12b5-4114-a021-ba038d1eba22\n[Build and Test/test]   | Successfully extracted go to /tmp/eda0009d-60bd-4f92-93f1-f2e9de82288c\n[Build and Test/test]   | Adding to the cache ...\n[Build and Test/test]   \ud83d\udcac  ::debug::Caching tool go 1.18.10 x64\n[Build and Test/test]   \ud83d\udcac  ::debug::source dir: /tmp/eda0009d-60bd-4f92-93f1-f2e9de82288c/go\n[Build and Test/test]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.18.10/x64\n[Build and Test/test]   \ud83d\udcac  ::debug::finished caching tool\n[Build and Test/test]   | Successfully cached go to /opt/hostedtoolcache/go/1.18.10/x64\n[Build and Test/test]   | Added go to the path\n[Build and Test/test]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.18.10/x64/bin/go:\n[Build and Test/test]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Build and Test/test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Build and Test/test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Build and Test/test]   \ud83d\udcac  ::debug::add bin true\n[Build and Test/test]   | Successfully set up Go version 1.18.x\n[Build and Test/test]   \u2753 add-matcher /run/act/actions/actions-setup-go@v3/matchers.json\n[Build and Test/test]   | go version go1.18.10 linux/amd64\n[Build and Test/test]   | \n[Build and Test/test]   \u2753  ::group::go env\n[Build and Test/test]   | GO111MODULE=\"\"\n[Build and Test/test]   | GOARCH=\"amd64\"\n[Build and Test/test]   | GOBIN=\"\"\n[Build and Test/test]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Build and Test/test]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Build and Test/test]   | GOEXE=\"\"\n[Build and Test/test]   | GOEXPERIMENT=\"\"\n[Build and Test/test]   | GOFLAGS=\"\"\n[Build and Test/test]   | GOHOSTARCH=\"amd64\"\n[Build and Test/test]   | GOHOSTOS=\"linux\"\n[Build and Test/test]   | GOINSECURE=\"\"\n[Build and Test/test]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Build and Test/test]   | GONOPROXY=\"\"\n[Build and Test/test]   | GONOSUMDB=\"\"\n[Build and Test/test]   | GOOS=\"linux\"\n[Build and Test/test]   | GOPATH=\"/home/runneradmin/go\"\n[Build and Test/test]   | GOPRIVATE=\"\"\n[Build and Test/test]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Build and Test/test]   | GOROOT=\"/opt/hostedtoolcache/go/1.18.10/x64\"\n[Build and Test/test]   | GOSUMDB=\"sum.golang.org\"\n[Build and Test/test]   | GOTMPDIR=\"\"\n[Build and Test/test]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.18.10/x64/pkg/tool/linux_amd64\"\n[Build and Test/test]   | GOVCS=\"\"\n[Build and Test/test]   | GOVERSION=\"go1.18.10\"\n[Build and Test/test]   | GCCGO=\"gccgo\"\n[Build and Test/test]   | GOAMD64=\"v1\"\n[Build and Test/test]   | AR=\"ar\"\n[Build and Test/test]   | CC=\"gcc\"\n[Build and Test/test]   | CXX=\"g++\"\n[Build and Test/test]   | CGO_ENABLED=\"1\"\n[Build and Test/test]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/google-git-appraise/go.mod\"\n[Build and Test/test]   | GOWORK=\"\"\n[Build and Test/test]   | CGO_CFLAGS=\"-g -O2\"\n[Build and Test/test]   | CGO_CPPFLAGS=\"\"\n[Build and Test/test]   | CGO_CXXFLAGS=\"-g -O2\"\n[Build and Test/test]   | CGO_FFLAGS=\"-g -O2\"\n[Build and Test/test]   | CGO_LDFLAGS=\"-g -O2\"\n[Build and Test/test]   | PKG_CONFIG=\"pkg-config\"\n[Build and Test/test]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build2263469268=/tmp/go-build -gno-record-gcc-switches\"\n[Build and Test/test]   | \n[Build and Test/test]   \u2753  ::endgroup::\n[Build and Test/test]   \u2705  Success - Main actions/setup-go@v3\n[Build and Test/test]   \u2699  ::set-output:: go-version=1.18.10\n[Build and Test/test]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.18.10/x64/bin\n[Build and Test/test]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Build and Test/test] \u2b50 Run Main actions/checkout@v3\n[Build and Test/test]   \u2705  Success - Main actions/checkout@v3\n[Build and Test/test] \u2b50 Run Main go build ./...\ngo test -v ./...\n[Build and Test/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Build and Test/test]   | go: downloading golang.org/x/sys v0.0.0-20220406163625-3f8b81556e12\n[Build and Test/test]   | === RUN   TestGetDate\n[Build and Test/test]   | parsing time \"aaaa\" as \"Mon, 02 Jan 2006 15:04:05 -0700\": cannot parse \"aaaa\" as \"Mon\"\n[Build and Test/test]   | parsing time \"aaaa\" as \"2006-01-02T15:04:05Z07:00\": cannot parse \"aaaa\" as \"2006\"\n[Build and Test/test]   | parsing time \"aaaa\" as \"2006-01-02 15:04:05\": cannot parse \"aaaa\" as \"2006\"\n[Build and Test/test]   | parsing time \"aaaa\" as \"2006.01.02T15:04:05\": cannot parse \"aaaa\" as \"2006\"\n[Build and Test/test]   | parsing time \"aaaa\" as \"2005.04.07 15:04:05\": cannot parse \"aaaa\" as \"2\"\n[Build and Test/test]   | parsing time \"aaaa\" as \"01/02/2006T15:04:05\": cannot parse \"aaaa\" as \"01\"\n[Build and Test/test]   | parsing time \"aaaa\" as \"01/02/2006 15:04:05\": cannot parse \"aaaa\" as \"01\"\n[Build and Test/test]   | parsing time \"aaaa\" as \"02.01.2006T15:04:05\": cannot parse \"aaaa\" as \"02\"\n[Build and Test/test]   | parsing time \"aaaa\" as \"02.01.2006 15:04:05\": cannot parse \"aaaa\" as \"02\"\n[Build and Test/test]   | parsing time \"2005-04-07 22:13:13\" as \"Mon, 02 Jan 2006 15:04:05 -0700\": cannot parse \"2005-04-07 22:13:13\" as \"Mon\"\n[Build and Test/test]   | parsing time \"2005-04-07 22:13:13\" as \"2006-01-02T15:04:05Z07:00\": cannot parse \" 22:13:13\" as \"T\"\n[Build and Test/test]   | --- PASS: TestGetDate (0.00s)\n[Build and Test/test]   | === RUN   TestBuildRequestFromFlags\n[Build and Test/test]   | --- PASS: TestBuildRequestFromFlags (0.00s)\n[Build and Test/test]   | PASS\n[Build and Test/test]   | ok  \tgithub.com/google/git-appraise/commands\t0.124s\n[Build and Test/test]   | ?   \tgithub.com/google/git-appraise/commands/input\t[no test files]\n[Build and Test/test]   | ?   \tgithub.com/google/git-appraise/commands/output\t[no test files]\n[Build and Test/test]   | ?   \tgithub.com/google/git-appraise/git-appraise\t[no test files]\n[Build and Test/test]   | === RUN   TestSplitBatchCheckOutput\n[Build and Test/test]   | --- PASS: TestSplitBatchCheckOutput (0.00s)\n[Build and Test/test]   | === RUN   TestSplitBatchCatFileOutput\n[Build and Test/test]   | --- PASS: TestSplitBatchCatFileOutput (0.00s)\n[Build and Test/test]   | PASS\n[Build and Test/test]   | ok  \tgithub.com/google/git-appraise/repository\t0.467s\n[Build and Test/test]   | === RUN   TestCommentSorting\n[Build and Test/test]   | --- PASS: TestCommentSorting (0.00s)\n[Build and Test/test]   | === RUN   TestThreadSorting\n[Build and Test/test]   | --- PASS: TestThreadSorting (0.00s)\n[Build and Test/test]   | === RUN   TestRequestSorting\n[Build and Test/test]   | --- PASS: TestRequestSorting (0.00s)\n[Build and Test/test]   | === RUN   TestSimpleAcceptedThreadStatus\n[Build and Test/test]   | --- PASS: TestSimpleAcceptedThreadStatus (0.00s)\n[Build and Test/test]   | === RUN   TestSimpleRejectedThreadStatus\n[Build and Test/test]   | --- PASS: TestSimpleRejectedThreadStatus (0.00s)\n[Build and Test/test]   | === RUN   TestFYIThenAcceptedThreadStatus\n[Build and Test/test]   | --- PASS: TestFYIThenAcceptedThreadStatus (0.00s)\n[Build and Test/test]   | === RUN   TestFYIThenFYIThreadStatus\n[Build and Test/test]   | --- PASS: TestFYIThenFYIThreadStatus (0.00s)\n[Build and Test/test]   | === RUN   TestFYIThenRejectedThreadStatus\n[Build and Test/test]   | --- PASS: TestFYIThenRejectedThreadStatus (0.00s)\n[Build and Test/test]   | === RUN   TestAcceptedThenAcceptedThreadStatus\n[Build and Test/test]   | --- PASS: TestAcceptedThenAcceptedThreadStatus (0.00s)\n[Build and Test/test]   | === RUN   TestAcceptedThenFYIThreadStatus\n[Build and Test/test]   | --- PASS: TestAcceptedThenFYIThreadStatus (0.00s)\n[Build and Test/test]   | === RUN   TestAcceptedThenRejectedThreadStatus\n[Build and Test/test]   | --- PASS: TestAcceptedThenRejectedThreadStatus (0.00s)\n[Build and Test/test]   | === RUN   TestRejectedThenAcceptedThreadStatus\n[Build and Test/test]   | --- PASS: TestRejectedThenAcceptedThreadStatus (0.00s)\n[Build and Test/test]   | === RUN   TestRejectedThenFYIThreadStatus\n[Build and Test/test]   | --- PASS: TestRejectedThenFYIThreadStatus (0.00s)\n[Build and Test/test]   | === RUN   TestRejectedThenRejectedThreadStatus\n[Build and Test/test]   | --- PASS: TestRejectedThenRejectedThreadStatus (0.00s)\n[Build and Test/test]   | === RUN   TestRejectedThenAcceptedThreadsStatus\n[Build and Test/test]   | --- PASS: TestRejectedThenAcceptedThreadsStatus (0.00s)\n[Build and Test/test]   | === RUN   TestRejectedThenFYIThreadsStatus\n[Build and Test/test]   | --- PASS: TestRejectedThenFYIThreadsStatus (0.00s)\n[Build and Test/test]   | === RUN   TestRejectedThenRejectedThreadsStatus\n[Build and Test/test]   | --- PASS: TestRejectedThenRejectedThreadsStatus (0.00s)\n[Build and Test/test]   | === RUN   TestAcceptedThenAcceptedThreadsStatus\n[Build and Test/test]   | --- PASS: TestAcceptedThenAcceptedThreadsStatus (0.00s)\n[Build and Test/test]   | === RUN   TestAcceptedThenFYIThreadsStatus\n[Build and Test/test]   | --- PASS: TestAcceptedThenFYIThreadsStatus (0.00s)\n[Build and Test/test]   | === RUN   TestAcceptedThenRejectedThreadsStatus\n[Build and Test/test]   | --- PASS: TestAcceptedThenRejectedThreadsStatus (0.00s)\n[Build and Test/test]   | === RUN   TestFYIThenAcceptedThreadsStatus\n[Build and Test/test]   | --- PASS: TestFYIThenAcceptedThreadsStatus (0.00s)\n[Build and Test/test]   | === RUN   TestFYIThenFYIThreadsStatus\n[Build and Test/test]   | --- PASS: TestFYIThenFYIThreadsStatus (0.00s)\n[Build and Test/test]   | === RUN   TestFYIThenRejectedThreadsStatus\n[Build and Test/test]   | --- PASS: TestFYIThenRejectedThreadsStatus (0.00s)\n[Build and Test/test]   | === RUN   TestBuildCommentThreads\n[Build and Test/test]   | --- PASS: TestBuildCommentThreads (0.00s)\n[Build and Test/test]   | === RUN   TestGetHeadCommit\n[Build and Test/test]   | --- PASS: TestGetHeadCommit (0.00s)\n[Build and Test/test]   | === RUN   TestGetBaseCommit\n[Build and Test/test]   | --- PASS: TestGetBaseCommit (0.00s)\n[Build and Test/test]   | === RUN   TestGetRequests\n[Build and Test/test]   | --- PASS: TestGetRequests (0.00s)\n[Build and Test/test]   | === RUN   TestRebase\n[Build and Test/test]   | --- PASS: TestRebase (0.00s)\n[Build and Test/test]   | === RUN   TestRebaseDetachedHead\n[Build and Test/test]   | --- PASS: TestRebaseDetachedHead (0.00s)\n[Build and Test/test]   | PASS\n[Build and Test/test]   | ok  \tgithub.com/google/git-appraise/review\t0.119s\n[Build and Test/test]   | === RUN   TestGetLatestResult\n[Build and Test/test]   |     analyses_test.go:48: &{GET / HTTP/1.1 1 1 map[Accept-Encoding:[gzip] User-Agent:[Go-http-client/1.1]] {} <nil> 0 [] false 127.0.0.1:42947 map[] map[] <nil> map[] 127.0.0.1:34662 / <nil> <nil> <nil> 0xc00040c140}\n[Build and Test/test]   | 2023/05/30 11:20:42 http: superfluous response.WriteHeader call from github.com/google/git-appraise/review/analyses.mockHandler.func1 (analyses_test.go:50)\n[Build and Test/test]   | --- PASS: TestGetLatestResult (0.06s)\n[Build and Test/test]   | PASS\n[Build and Test/test]   | ok  \tgithub.com/google/git-appraise/review/analyses\t0.214s\n[Build and Test/test]   | === RUN   TestCIReport\n[Build and Test/test]   | --- PASS: TestCIReport (0.00s)\n[Build and Test/test]   | PASS\n[Build and Test/test]   | ok  \tgithub.com/google/git-appraise/review/ci\t0.216s\n[Build and Test/test]   | ?   \tgithub.com/google/git-appraise/review/comment\t[no test files]\n[Build and Test/test]   | ?   \tgithub.com/google/git-appraise/review/gpg\t[no test files]\n[Build and Test/test]   | ?   \tgithub.com/google/git-appraise/review/request\t[no test files]\n[Build and Test/test]   \u2705  Success - Main go build ./...\ngo test -v ./...\n[Build and Test/test] \u2b50 Run Post actions/setup-go@v3\n[Build and Test/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v3/dist/cache-save/index.js] user= workdir=\n[Build and Test/test]   \u2705  Success - Post actions/setup-go@v3\n[Build and Test/test] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}