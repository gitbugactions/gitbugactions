{
    "repository": "pkg/browser",
    "clone_url": "https://github.com/pkg/browser.git",
    "timestamp": "2023-05-30T10:45:04.858116Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Push Event/Go 1.15 test] \ud83d\ude80  Start image=crawlergpt:latest\n[Push Event/Go 1.15 test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Push Event/Go 1.15 test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Push Event/Go 1.15 test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Push Event/Go 1.15 test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/pkg-browser] user=0 workdir=\n[Push Event/Go 1.15 test]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v1\n[Push Event/Go 1.15 test] \ud83e\uddea  Matrix: map[go:1.15]\n[Push Event/Go 1.15 test] \u2b50 Run Main actions/checkout@v2\n[Push Event/Go 1.15 test]   \u2705  Success - Main actions/checkout@v2\n[Push Event/Go 1.15 test] \u2b50 Run Main Setup go\n[Push Event/Go 1.15 test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v1/ dst=/var/run/act/actions/actions-setup-go@v1/\n[Push Event/Go 1.15 test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v1/] user=0 workdir=\n[Push Event/Go 1.15 test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v1/lib/setup-go.js] user= workdir=\n[Push Event/Go 1.15 test]   \ud83d\udcac  ::debug::evaluating 19 versions\n[Push Event/Go 1.15 test]   \ud83d\udcac  ::debug::matched: 1.15.15\n[Push Event/Go 1.15 test]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Push Event/Go 1.15 test]   \ud83d\udcac  ::debug::explicit? true\n[Push Event/Go 1.15 test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.15.15/x64\n[Push Event/Go 1.15 test]   \ud83d\udcac  ::debug::Found tool in cache go 1.15.15 x64\n[Push Event/Go 1.15 test]   \u2753 add-matcher /run/act/actions/actions-setup-go@v1/.github/go.json\n[Push Event/Go 1.15 test]   \u2705  Success - Main Setup go\n[Push Event/Go 1.15 test]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.15.15/x64\n[Push Event/Go 1.15 test]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.15.15/x64/bin\n[Push Event/Go 1.15 test] \u2b50 Run Main go test -v ./...\n[Push Event/Go 1.15 test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Push Event/Go 1.15 test]   | testing: warning: no tests to run\n[Push Event/Go 1.15 test]   | PASS\n[Push Event/Go 1.15 test]   | ok  \tgithub.com/pkg/browser\t0.032s [no tests to run]\n[Push Event/Go 1.15 test]   | ?   \tgithub.com/pkg/browser/examples/Open\t[no test files]\n[Push Event/Go 1.15 test]   \u2705  Success - Main go test -v ./...\n[Push Event/Go 1.15 test] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/6b42e65b742b98d9382d205eb2bcae891bc5d900d4b8172b9ca9aa90bf5eb2e6/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Push Event/Go 1.15 test] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}