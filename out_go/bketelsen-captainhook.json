{
    "repository": "bketelsen/captainhook",
    "clone_url": "https://github.com/bketelsen/captainhook.git",
    "timestamp": "2023-05-30T10:41:41.357383Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Build Go/Go build (1.15)] \ud83d\ude80  Start image=crawlergpt:latest\n[Build Go/Go build (1.15)]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build Go/Go build (1.15)]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build Go/Go build (1.15)]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build Go/Go build (1.15)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/bketelsen-captainhook] user=0 workdir=\n[Build Go/Go build (1.15)]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[Build Go/Go build (1.15)] \ud83e\uddea  Matrix: map[go:1.15]\n[Build Go/Go build (1.15)] \u2b50 Run Main actions/checkout@v2\n[Build Go/Go build (1.15)]   \u2705  Success - Main actions/checkout@v2\n[Build Go/Go build (1.15)] \u2b50 Run Main Setup go\n[Build Go/Go build (1.15)]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[Build Go/Go build (1.15)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[Build Go/Go build (1.15)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[Build Go/Go build (1.15)]   | Setup go stable version spec 1.15\n[Build Go/Go build (1.15)]   \ud83d\udcac  ::debug::isExplicit: \n[Build Go/Go build (1.15)]   \ud83d\udcac  ::debug::explicit? false\n[Build Go/Go build (1.15)]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Build Go/Go build (1.15)]   \ud83d\udcac  ::debug::explicit? true\n[Build Go/Go build (1.15)]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Build Go/Go build (1.15)]   \ud83d\udcac  ::debug::explicit? true\n[Build Go/Go build (1.15)]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Build Go/Go build (1.15)]   \ud83d\udcac  ::debug::explicit? true\n[Build Go/Go build (1.15)]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Build Go/Go build (1.15)]   \ud83d\udcac  ::debug::matched: 1.15.15\n[Build Go/Go build (1.15)]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.15.15/x64\n[Build Go/Go build (1.15)]   \ud83d\udcac  ::debug::Found tool in cache go 1.15.15 x64\n[Build Go/Go build (1.15)]   | Found in cache @ /opt/hostedtoolcache/go/1.15.15/x64\n[Build Go/Go build (1.15)]   | Added go to the path\n[Build Go/Go build (1.15)]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.15.15/x64/bin/go:\n[Build Go/Go build (1.15)]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Build Go/Go build (1.15)]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Build Go/Go build (1.15)]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Build Go/Go build (1.15)]   \ud83d\udcac  ::debug::add bin true\n[Build Go/Go build (1.15)]   | Successfully setup go version 1.15\n[Build Go/Go build (1.15)]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[Build Go/Go build (1.15)]   | go version go1.15.15 linux/amd64\n[Build Go/Go build (1.15)]   | \n[Build Go/Go build (1.15)]   \u2753  ::group::go env\n[Build Go/Go build (1.15)]   | GO111MODULE=\"\"\n[Build Go/Go build (1.15)]   | GOARCH=\"amd64\"\n[Build Go/Go build (1.15)]   | GOBIN=\"\"\n[Build Go/Go build (1.15)]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Build Go/Go build (1.15)]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Build Go/Go build (1.15)]   | GOEXE=\"\"\n[Build Go/Go build (1.15)]   | GOFLAGS=\"\"\n[Build Go/Go build (1.15)]   | GOHOSTARCH=\"amd64\"\n[Build Go/Go build (1.15)]   | GOHOSTOS=\"linux\"\n[Build Go/Go build (1.15)]   | GOINSECURE=\"\"\n[Build Go/Go build (1.15)]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Build Go/Go build (1.15)]   | GONOPROXY=\"\"\n[Build Go/Go build (1.15)]   | GONOSUMDB=\"\"\n[Build Go/Go build (1.15)]   | GOOS=\"linux\"\n[Build Go/Go build (1.15)]   | GOPATH=\"/home/runneradmin/go\"\n[Build Go/Go build (1.15)]   | GOPRIVATE=\"\"\n[Build Go/Go build (1.15)]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Build Go/Go build (1.15)]   | GOROOT=\"/opt/hostedtoolcache/go/1.15.15/x64\"\n[Build Go/Go build (1.15)]   | GOSUMDB=\"sum.golang.org\"\n[Build Go/Go build (1.15)]   | GOTMPDIR=\"\"\n[Build Go/Go build (1.15)]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.15.15/x64/pkg/tool/linux_amd64\"\n[Build Go/Go build (1.15)]   | GCCGO=\"gccgo\"\n[Build Go/Go build (1.15)]   | AR=\"ar\"\n[Build Go/Go build (1.15)]   | CC=\"gcc\"\n[Build Go/Go build (1.15)]   | CXX=\"g++\"\n[Build Go/Go build (1.15)]   | CGO_ENABLED=\"1\"\n[Build Go/Go build (1.15)]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/bketelsen-captainhook/go.mod\"\n[Build Go/Go build (1.15)]   | CGO_CFLAGS=\"-g -O2\"\n[Build Go/Go build (1.15)]   | CGO_CPPFLAGS=\"\"\n[Build Go/Go build (1.15)]   | CGO_CXXFLAGS=\"-g -O2\"\n[Build Go/Go build (1.15)]   | CGO_FFLAGS=\"-g -O2\"\n[Build Go/Go build (1.15)]   | CGO_LDFLAGS=\"-g -O2\"\n[Build Go/Go build (1.15)]   | PKG_CONFIG=\"pkg-config\"\n[Build Go/Go build (1.15)]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build687021527=/tmp/go-build -gno-record-gcc-switches\"\n[Build Go/Go build (1.15)]   | \n[Build Go/Go build (1.15)]   \u2753  ::endgroup::\n[Build Go/Go build (1.15)]   \u2705  Success - Main Setup go\n[Build Go/Go build (1.15)]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.15.15/x64\n[Build Go/Go build (1.15)]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.15.15/x64/bin\n[Build Go/Go build (1.15)]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Build Go/Go build (1.15)] \u2b50 Run Main Go test\n[Build Go/Go build (1.15)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Build Go/Go build (1.15)]   | go: downloading github.com/gorilla/mux v1.6.1\n[Build Go/Go build (1.15)]   | === RUN   TestHookHandler\n[Build Go/Go build (1.15)]   | 2023/05/30 10:47:21 Received hook for id 'test' from 127.0.0.1:55876\n[Build Go/Go build (1.15)]   | 2023/05/30 10:47:21 Received hook for id 'test' from 127.0.0.1:55876\n[Build Go/Go build (1.15)]   | 2023/05/30 10:47:21 Hook id 'test' is not allowed from 127.0.0.1:55876\n[Build Go/Go build (1.15)]   | 2023/05/30 10:47:21 Received hook for id 'test' from 127.0.0.1:55876\n[Build Go/Go build (1.15)]   | 2023/05/30 10:47:21 Received hook for id 'test' from 127.0.0.1:55876\n[Build Go/Go build (1.15)]   | --- PASS: TestHookHandler (0.13s)\n[Build Go/Go build (1.15)]   | === RUN   TestClientIP\n[Build Go/Go build (1.15)]   | --- PASS: TestClientIP (0.00s)\n[Build Go/Go build (1.15)]   | === RUN   TestNetworkUnmarshalling\n[Build Go/Go build (1.15)]   | --- PASS: TestNetworkUnmarshalling (0.00s)\n[Build Go/Go build (1.15)]   | === RUN   TestAddrIsAllowed\n[Build Go/Go build (1.15)]   | --- PASS: TestAddrIsAllowed (0.00s)\n[Build Go/Go build (1.15)]   | PASS\n[Build Go/Go build (1.15)]   | ok  \tgithub.com/bketelsen/captainhook\t0.189s\n[Build Go/Go build (1.15)]   \u2705  Success - Main Go test\n[Build Go/Go build (1.15)] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}