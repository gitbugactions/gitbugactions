{
    "repository": "cloudflare/redoctober",
    "clone_url": "https://github.com/cloudflare/redoctober.git",
    "timestamp": "2023-05-30T10:33:07.019932Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Go Test/test] \ud83d\ude80  Start image=crawlergpt:latest\n[Go Test/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Go Test/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go Test/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go Test/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/cloudflare-redoctober] user=0 workdir=\n[Go Test/test]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[Go Test/test] \u2b50 Run Main actions/checkout@v2\n[Go Test/test]   \u2705  Success - Main actions/checkout@v2\n[Go Test/test] \u2b50 Run Main actions/setup-go@v2\n[Go Test/test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[Go Test/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[Go Test/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[Go Test/test]   | Setup go stable version spec 1.16\n[Go Test/test]   \ud83d\udcac  ::debug::isExplicit: \n[Go Test/test]   \ud83d\udcac  ::debug::explicit? false\n[Go Test/test]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Go Test/test]   \ud83d\udcac  ::debug::explicit? true\n[Go Test/test]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Go Test/test]   \ud83d\udcac  ::debug::explicit? true\n[Go Test/test]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Go Test/test]   \ud83d\udcac  ::debug::explicit? true\n[Go Test/test]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Go Test/test]   \ud83d\udcac  ::debug::matched: 1.16.7\n[Go Test/test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.16.7/x64\n[Go Test/test]   \ud83d\udcac  ::debug::Found tool in cache go 1.16.7 x64\n[Go Test/test]   | Found in cache @ /opt/hostedtoolcache/go/1.16.7/x64\n[Go Test/test]   | Added go to the path\n[Go Test/test]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.16.7/x64/bin/go:\n[Go Test/test]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Go Test/test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Go Test/test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Go Test/test]   \ud83d\udcac  ::debug::add bin true\n[Go Test/test]   | Successfully setup go version 1.16\n[Go Test/test]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[Go Test/test]   | go version go1.16.7 linux/amd64\n[Go Test/test]   | \n[Go Test/test]   \u2753  ::group::go env\n[Go Test/test]   | GO111MODULE=\"\"\n[Go Test/test]   | GOARCH=\"amd64\"\n[Go Test/test]   | GOBIN=\"\"\n[Go Test/test]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Go Test/test]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Go Test/test]   | GOEXE=\"\"\n[Go Test/test]   | GOFLAGS=\"\"\n[Go Test/test]   | GOHOSTARCH=\"amd64\"\n[Go Test/test]   | GOHOSTOS=\"linux\"\n[Go Test/test]   | GOINSECURE=\"\"\n[Go Test/test]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Go Test/test]   | GONOPROXY=\"\"\n[Go Test/test]   | GONOSUMDB=\"\"\n[Go Test/test]   | GOOS=\"linux\"\n[Go Test/test]   | GOPATH=\"/home/runneradmin/go\"\n[Go Test/test]   | GOPRIVATE=\"\"\n[Go Test/test]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Go Test/test]   | GOROOT=\"/opt/hostedtoolcache/go/1.16.7/x64\"\n[Go Test/test]   | GOSUMDB=\"sum.golang.org\"\n[Go Test/test]   | GOTMPDIR=\"\"\n[Go Test/test]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.16.7/x64/pkg/tool/linux_amd64\"\n[Go Test/test]   | GOVCS=\"\"\n[Go Test/test]   | GOVERSION=\"go1.16.7\"\n[Go Test/test]   | GCCGO=\"gccgo\"\n[Go Test/test]   | AR=\"ar\"\n[Go Test/test]   | CC=\"gcc\"\n[Go Test/test]   | CXX=\"g++\"\n[Go Test/test]   | CGO_ENABLED=\"1\"\n[Go Test/test]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/cloudflare-redoctober/go.mod\"\n[Go Test/test]   | CGO_CFLAGS=\"-g -O2\"\n[Go Test/test]   | CGO_CPPFLAGS=\"\"\n[Go Test/test]   | CGO_CXXFLAGS=\"-g -O2\"\n[Go Test/test]   | CGO_FFLAGS=\"-g -O2\"\n[Go Test/test]   | CGO_LDFLAGS=\"-g -O2\"\n[Go Test/test]   | PKG_CONFIG=\"pkg-config\"\n[Go Test/test]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build3162848501=/tmp/go-build -gno-record-gcc-switches\"\n[Go Test/test]   | \n[Go Test/test]   \u2753  ::endgroup::\n[Go Test/test]   \u2705  Success - Main actions/setup-go@v2\n[Go Test/test]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.16.7/x64\n[Go Test/test]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.16.7/x64/bin\n[Go Test/test]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Go Test/test] \u2b50 Run Main go mod vendor\n[Go Test/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Go Test/test]   | go: downloading golang.org/x/crypto v0.0.0-20210921155107-089bfa567519\n[Go Test/test]   | go: downloading github.com/prometheus/client_golang v1.11.0\n[Go Test/test]   | go: downloading github.com/getsentry/sentry-go v0.11.0\n[Go Test/test]   | go: downloading github.com/coreos/go-systemd v0.0.0-20191104093116-d3cd4ed1dbcf\n[Go Test/test]   | go: downloading github.com/prometheus/common v0.31.1\n[Go Test/test]   | go: downloading github.com/prometheus/client_model v0.2.0\n[Go Test/test]   | go: downloading github.com/beorn7/perks v1.0.1\n[Go Test/test]   | go: downloading golang.org/x/sys v0.0.0-20211013075003-97ac67df715c\n[Go Test/test]   | go: downloading github.com/golang/protobuf v1.5.2\n[Go Test/test]   | go: downloading github.com/cespare/xxhash/v2 v2.1.2\n[Go Test/test]   | go: downloading github.com/prometheus/procfs v0.7.3\n[Go Test/test]   | go: downloading google.golang.org/protobuf v1.27.1\n[Go Test/test]   | go: downloading github.com/matttproud/golang_protobuf_extensions v1.0.1\n[Go Test/test]   \u2705  Success - Main go mod vendor\n[Go Test/test] \u2b50 Run Main go build\n[Go Test/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Go Test/test]   \u2705  Success - Main go build\n[Go Test/test] \u2b50 Run Main go test -race  -coverprofile=coverage.out ./...\n[Go Test/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Go Test/test]   | ok  \tgithub.com/cloudflare/redoctober\t31.568s\tcoverage: 0.0% of statements\n[Go Test/test]   | ?   \tgithub.com/cloudflare/redoctober/client\t[no test files]\n[Go Test/test]   | ?   \tgithub.com/cloudflare/redoctober/cmd/ro\t[no test files]\n[Go Test/test]   | ?   \tgithub.com/cloudflare/redoctober/cmd/ro/gopass\t[no test files]\n[Go Test/test]   | ?   \tgithub.com/cloudflare/redoctober/cmd/ro/roagent\t[no test files]\n[Go Test/test]   | ok  \tgithub.com/cloudflare/redoctober/config\t0.319s\tcoverage: 100.0% of statements\n[Go Test/test]   \u274c  Failure - Main go test -race  -coverprofile=coverage.out ./...\n[Go Test/test] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/902847a3d1899386c35b9c039103b09192f5a835813327b1f01ef252b86056ab/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Go Test/test] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}