{
    "repository": "paulhammond/jp",
    "clone_url": "https://github.com/paulhammond/jp.git",
    "timestamp": "2023-05-30T10:28:05.244860Z",
    "clone_success": true,
    "number of actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Test/Go] \ud83d\ude80  Start image=crawlergpt:latest\n[Test/Go]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test/Go]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/Go]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/Go]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/paulhammond-jp] user=0 workdir=\n[Test/Go]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v1\n[Test/Go]   \u2601  git clone 'https://github.com/actions/cache' # ref=v1\n[Test/Go] \u2b50 Run Main Check out source code\n[Test/Go]   \u2705  Success - Main Check out source code\n[Test/Go] \u2b50 Run Main Set up Go 1.13\n[Test/Go]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v1/ dst=/var/run/act/actions/actions-setup-go@v1/\n[Test/Go]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v1/] user=0 workdir=\n[Test/Go]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v1/lib/setup-go.js] user= workdir=\n[Test/Go]   \ud83d\udcac  ::debug::evaluating 19 versions\n[Test/Go]   \ud83d\udcac  ::debug::matched: 1.13.15\n[Test/Go]   \ud83d\udcac  ::debug::isExplicit: 1.13.15\n[Test/Go]   \ud83d\udcac  ::debug::explicit? true\n[Test/Go]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.13.15/x64\n[Test/Go]   \ud83d\udcac  ::debug::not found\n[Test/Go]   \ud83d\udcac  ::debug::Downloading Go from: https://storage.googleapis.com/golang/go1.13.15.linux-amd64.tar.gz\n[Test/Go]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.13.15.linux-amd64.tar.gz\n[Test/Go]   \ud83d\udcac  ::debug::Downloading /tmp/a5948bef-74fc-4d44-8b3e-d0d55df130ee\n[Test/Go]   \ud83d\udcac  ::debug::download complete\n[Test/Go]   | [command]/usr/bin/tar xzC /tmp/3c4f2061-66d2-43d7-8ec8-ad98504abbbf -f /tmp/a5948bef-74fc-4d44-8b3e-d0d55df130ee\n[Test/Go]   \ud83d\udcac  ::debug::Caching tool go 1.13.15 x64\n[Test/Go]   \ud83d\udcac  ::debug::source dir: /tmp/3c4f2061-66d2-43d7-8ec8-ad98504abbbf/go\n[Test/Go]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.13.15/x64\n[Test/Go]   \ud83d\udcac  ::debug::finished caching tool\n[Test/Go]   \ud83d\udcac  ::debug::Go tool is cached under /opt/hostedtoolcache/go/1.13.15/x64\n[Test/Go]   \u2753 add-matcher /run/act/actions/actions-setup-go@v1/.github/go.json\n[Test/Go]   \u2705  Success - Main Set up Go 1.13\n[Test/Go]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.13.15/x64\n[Test/Go]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.13.15/x64/bin\n[Test/Go] \u2b50 Run Main Restore go cache\n[Test/Go]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v1/ dst=/var/run/act/actions/actions-cache@v1/\n[Test/Go]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v1/] user=0 workdir=\n[Test/Go]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v1/dist/restore/index.js] user= workdir=\n[Test/Go]   \ud83d\udcac  ::debug::Cache Path: /home/runneradmin/go/pkg/mod\n[Test/Go]   \ud83d\udcac  ::debug::Resolved Keys:\n[Test/Go]   \ud83d\udcac  ::debug::[\"Linux-go-4bdcd36152138974f9c7ce149341980070fdd4bfcac2c0c22deea7037b665878\",\"Linux-go-\"]\n[Test/Go]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Test/Go]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Test/Go]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[Test/Go]   \u2705  Success - Main Restore go cache\n[Test/Go]   \u2699  ::set-output:: cache-hit=false\n[Test/Go] \u2b50 Run Main Test\n[Test/Go]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Test/Go]   | === RUN   TestExpand\n[Test/Go]   | --- PASS: TestExpand (0.00s)\n[Test/Go]   | PASS\n[Test/Go]   | ok  \tgithub.com/paulhammond/jp\t0.208s\n[Test/Go]   \u2705  Success - Main Test\n[Test/Go] \u2b50 Run Post Restore go cache\n[Test/Go]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v1/dist/save/index.js] user= workdir=\n[Test/Go]   \ud83d\udcac  ::debug::State: \n[Test/Go]   \ud83d\udcac  ::debug::Reserving Cache\n[Test/Go]   \ud83d\udcac  ::debug::reserveCache - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Test/Go]   \ud83d\udcac  ::debug::reserveCache - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Test/Go]   | [warning]reserveCache failed: Cache Service Url not found, unable to restore cache.\n[Test/Go]   \u2705  Success - Post Restore go cache\n[Test/Go] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}