{
    "repository": "approvals/go-approval-tests",
    "clone_url": "https://github.com/approvals/go-approval-tests.git",
    "timestamp": "2023-05-30T11:50:20.646906Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Build and Test/build-and-test] \ud83d\ude80  Start image=crawlergpt:latest\n[Build and Test/build-and-test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build and Test/build-and-test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and Test/build-and-test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and Test/build-and-test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/approvals-go-approval-tests] user=0 workdir=\n[Build and Test/build-and-test]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2.2.0\n[Build and Test/build-and-test] \u2b50 Run Main Checkout\n[Build and Test/build-and-test]   \u2705  Success - Main Checkout\n[Build and Test/build-and-test] \u2b50 Run Main Setup Go environment\n[Build and Test/build-and-test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2.2.0/ dst=/var/run/act/actions/actions-setup-go@v2.2.0/\n[Build and Test/build-and-test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2.2.0/] user=0 workdir=\n[Build and Test/build-and-test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2.2.0/dist/index.js] user= workdir=\n[Build and Test/build-and-test]   | Setup go stable version spec \n[Build and Test/build-and-test]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2.2.0/matchers.json\n[Build and Test/build-and-test]   | go version go1.15.15 linux/amd64\n[Build and Test/build-and-test]   | \n[Build and Test/build-and-test]   \u2753  ::group::go env\n[Build and Test/build-and-test]   | GO111MODULE=\"\"\n[Build and Test/build-and-test]   | GOARCH=\"amd64\"\n[Build and Test/build-and-test]   | GOBIN=\"\"\n[Build and Test/build-and-test]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Build and Test/build-and-test]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Build and Test/build-and-test]   | GOEXE=\"\"\n[Build and Test/build-and-test]   | GOFLAGS=\"\"\n[Build and Test/build-and-test]   | GOHOSTARCH=\"amd64\"\n[Build and Test/build-and-test]   | GOHOSTOS=\"linux\"\n[Build and Test/build-and-test]   | GOINSECURE=\"\"\n[Build and Test/build-and-test]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Build and Test/build-and-test]   | GONOPROXY=\"\"\n[Build and Test/build-and-test]   | GONOSUMDB=\"\"\n[Build and Test/build-and-test]   | GOOS=\"linux\"\n[Build and Test/build-and-test]   | GOPATH=\"/home/runneradmin/go\"\n[Build and Test/build-and-test]   | GOPRIVATE=\"\"\n[Build and Test/build-and-test]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Build and Test/build-and-test]   | GOROOT=\"/opt/hostedtoolcache/go/1.15.15/x64\"\n[Build and Test/build-and-test]   | GOSUMDB=\"sum.golang.org\"\n[Build and Test/build-and-test]   | GOTMPDIR=\"\"\n[Build and Test/build-and-test]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.15.15/x64/pkg/tool/linux_amd64\"\n[Build and Test/build-and-test]   | GCCGO=\"gccgo\"\n[Build and Test/build-and-test]   | AR=\"ar\"\n[Build and Test/build-and-test]   | CC=\"gcc\"\n[Build and Test/build-and-test]   | CXX=\"g++\"\n[Build and Test/build-and-test]   | CGO_ENABLED=\"1\"\n[Build and Test/build-and-test]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/approvals-go-approval-tests/go.mod\"\n[Build and Test/build-and-test]   | CGO_CFLAGS=\"-g -O2\"\n[Build and Test/build-and-test]   | CGO_CPPFLAGS=\"\"\n[Build and Test/build-and-test]   | CGO_CXXFLAGS=\"-g -O2\"\n[Build and Test/build-and-test]   | CGO_FFLAGS=\"-g -O2\"\n[Build and Test/build-and-test]   | CGO_LDFLAGS=\"-g -O2\"\n[Build and Test/build-and-test]   | PKG_CONFIG=\"pkg-config\"\n[Build and Test/build-and-test]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build801553282=/tmp/go-build -gno-record-gcc-switches\"\n[Build and Test/build-and-test]   | \n[Build and Test/build-and-test]   \u2753  ::endgroup::\n[Build and Test/build-and-test]   \u2705  Success - Main Setup Go environment\n[Build and Test/build-and-test] \u2b50 Run Main Build\n[Build and Test/build-and-test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Build and Test/build-and-test]   | github.com/approvals/go-approval-tests/utils\n[Build and Test/build-and-test]   | github.com/approvals/go-approval-tests/reporters\n[Build and Test/build-and-test]   | github.com/approvals/go-approval-tests\n[Build and Test/build-and-test]   | # github.com/approvals/go-approval-tests\n[Build and Test/build-and-test]   | ./approvals.go:62:13: undefined: io.ReadAll\n[Build and Test/build-and-test]   \u274c  Failure - Main Build\n[Build and Test/build-and-test] exitcode '2': failure\n[Build and Test/build-and-test] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'build-and-test' failed\n"
}