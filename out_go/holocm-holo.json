{
    "repository": "holocm/holo",
    "clone_url": "https://github.com/holocm/holo.git",
    "timestamp": "2023-05-30T11:29:05.014594Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[tests/build-and-test] \ud83d\ude80  Start image=crawlergpt:latest\n[tests/build-and-test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[tests/build-and-test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/build-and-test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/build-and-test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/holocm-holo] user=0 workdir=\n[tests/build-and-test]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[tests/build-and-test]   \u2601  git clone 'https://github.com/jandelgado/gcov2lcov-action' # ref=v1.0.8\n[tests/build-and-test] \u2b50 Run Pre Translate coverage report\n[tests/build-and-test]   \u2705  Success - Pre Translate coverage report\n[tests/build-and-test]   \u2601  git clone 'https://github.com/coverallsapp/github-action' # ref=master\n[tests/build-and-test] \ud83e\uddea  Matrix: map[go:1.16]\n[tests/build-and-test] \u2b50 Run Main actions/checkout@v2\n[tests/build-and-test]   \u2705  Success - Main actions/checkout@v2\n[tests/build-and-test] \u2b50 Run Main Setup Go\n[tests/build-and-test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[tests/build-and-test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[tests/build-and-test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[tests/build-and-test]   | Setup go stable version spec 1.16\n[tests/build-and-test]   \ud83d\udcac  ::debug::isExplicit: \n[tests/build-and-test]   \ud83d\udcac  ::debug::explicit? false\n[tests/build-and-test]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[tests/build-and-test]   \ud83d\udcac  ::debug::explicit? true\n[tests/build-and-test]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[tests/build-and-test]   \ud83d\udcac  ::debug::explicit? true\n[tests/build-and-test]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[tests/build-and-test]   \ud83d\udcac  ::debug::explicit? true\n[tests/build-and-test]   \ud83d\udcac  ::debug::evaluating 3 versions\n[tests/build-and-test]   \ud83d\udcac  ::debug::matched: 1.16.7\n[tests/build-and-test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.16.7/x64\n[tests/build-and-test]   \ud83d\udcac  ::debug::Found tool in cache go 1.16.7 x64\n[tests/build-and-test]   | Found in cache @ /opt/hostedtoolcache/go/1.16.7/x64\n[tests/build-and-test]   | Added go to the path\n[tests/build-and-test]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.16.7/x64/bin/go:\n[tests/build-and-test]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[tests/build-and-test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[tests/build-and-test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[tests/build-and-test]   \ud83d\udcac  ::debug::add bin true\n[tests/build-and-test]   | Successfully setup go version 1.16\n[tests/build-and-test]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[tests/build-and-test]   | go version go1.16.7 linux/amd64\n[tests/build-and-test]   | \n[tests/build-and-test]   \u2753  ::group::go env\n[tests/build-and-test]   | GO111MODULE=\"\"\n[tests/build-and-test]   | GOARCH=\"amd64\"\n[tests/build-and-test]   | GOBIN=\"\"\n[tests/build-and-test]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[tests/build-and-test]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[tests/build-and-test]   | GOEXE=\"\"\n[tests/build-and-test]   | GOFLAGS=\"\"\n[tests/build-and-test]   | GOHOSTARCH=\"amd64\"\n[tests/build-and-test]   | GOHOSTOS=\"linux\"\n[tests/build-and-test]   | GOINSECURE=\"\"\n[tests/build-and-test]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[tests/build-and-test]   | GONOPROXY=\"\"\n[tests/build-and-test]   | GONOSUMDB=\"\"\n[tests/build-and-test]   | GOOS=\"linux\"\n[tests/build-and-test]   | GOPATH=\"/home/runneradmin/go\"\n[tests/build-and-test]   | GOPRIVATE=\"\"\n[tests/build-and-test]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[tests/build-and-test]   | GOROOT=\"/opt/hostedtoolcache/go/1.16.7/x64\"\n[tests/build-and-test]   | GOSUMDB=\"sum.golang.org\"\n[tests/build-and-test]   | GOTMPDIR=\"\"\n[tests/build-and-test]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.16.7/x64/pkg/tool/linux_amd64\"\n[tests/build-and-test]   | GOVCS=\"\"\n[tests/build-and-test]   | GOVERSION=\"go1.16.7\"\n[tests/build-and-test]   | GCCGO=\"gccgo\"\n[tests/build-and-test]   | AR=\"ar\"\n[tests/build-and-test]   | CC=\"gcc\"\n[tests/build-and-test]   | CXX=\"g++\"\n[tests/build-and-test]   | CGO_ENABLED=\"1\"\n[tests/build-and-test]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/holocm-holo/go.mod\"\n[tests/build-and-test]   | CGO_CFLAGS=\"-g -O2\"\n[tests/build-and-test]   | CGO_CPPFLAGS=\"\"\n[tests/build-and-test]   | CGO_CXXFLAGS=\"-g -O2\"\n[tests/build-and-test]   | CGO_FFLAGS=\"-g -O2\"\n[tests/build-and-test]   | CGO_LDFLAGS=\"-g -O2\"\n[tests/build-and-test]   | PKG_CONFIG=\"pkg-config\"\n[tests/build-and-test]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build601800514=/tmp/go-build -gno-record-gcc-switches\"\n[tests/build-and-test]   | \n[tests/build-and-test]   \u2753  ::endgroup::\n[tests/build-and-test]   \u2705  Success - Main Setup Go\n[tests/build-and-test]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.16.7/x64\n[tests/build-and-test]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.16.7/x64/bin\n[tests/build-and-test]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[tests/build-and-test] \u2b50 Run Main Build\n[tests/build-and-test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[tests/build-and-test]   | ./util/find_version.sh | util/write-ifchanged .version\n[tests/build-and-test]   | printf 'package entrypoint\\n\\nfunc init() {\\n\\tversion = \"%s\"\\n}\\n' \"$(cat .version)\" > cmd/holo/version.go\n[tests/build-and-test]   | go build -o build/holo  --ldflags '-s -w' github.com/holocm/holo\n[tests/build-and-test]   | pod2man --name=\"holorc\" --section=5 \\\n[tests/build-and-test]   | \t--center=\"Configuration Management\" --release=\"Holo $(cat .version)\" \\\n[tests/build-and-test]   | \tdoc/holorc.5.pod build/man/holorc.5\n[tests/build-and-test]   | pod2man --name=\"holo-generators\" --section=7 \\\n[tests/build-and-test]   | \t--center=\"Configuration Management\" --release=\"Holo $(cat .version)\" \\\n[tests/build-and-test]   | \tdoc/holo-generators.7.pod build/man/holo-generators.7\n[tests/build-and-test]   | pod2man --name=\"holo-plugin-interface\" --section=7 \\\n[tests/build-and-test]   | \t--center=\"Configuration Management\" --release=\"Holo $(cat .version)\" \\\n[tests/build-and-test]   | \tdoc/holo-plugin-interface.7.pod build/man/holo-plugin-interface.7\n[tests/build-and-test]   | pod2man --name=\"holo-test\" --section=7 \\\n[tests/build-and-test]   | \t--center=\"Configuration Management\" --release=\"Holo $(cat .version)\" \\\n[tests/build-and-test]   | \tdoc/holo-test.7.pod build/man/holo-test.7\n[tests/build-and-test]   | pod2man --name=\"holo\" --section=8 \\\n[tests/build-and-test]   | \t--center=\"Configuration Management\" --release=\"Holo $(cat .version)\" \\\n[tests/build-and-test]   | \tdoc/holo.8.pod build/man/holo.8\n[tests/build-and-test]   | pod2man --name=\"holo-files\" --section=8 \\\n[tests/build-and-test]   | \t--center=\"Configuration Management\" --release=\"Holo $(cat .version)\" \\\n[tests/build-and-test]   | \tdoc/holo-files.8.pod build/man/holo-files.8\n[tests/build-and-test]   | pod2man --name=\"holo-run-scripts\" --section=8 \\\n[tests/build-and-test]   | \t--center=\"Configuration Management\" --release=\"Holo $(cat .version)\" \\\n[tests/build-and-test]   | \tdoc/holo-run-scripts.8.pod build/man/holo-run-scripts.8\n[tests/build-and-test]   | pod2man --name=\"holo-ssh-keys\" --section=8 \\\n[tests/build-and-test]   | \t--center=\"Configuration Management\" --release=\"Holo $(cat .version)\" \\\n[tests/build-and-test]   | \tdoc/holo-ssh-keys.8.pod build/man/holo-ssh-keys.8\n[tests/build-and-test]   | pod2man --name=\"holo-users-groups\" --section=8 \\\n[tests/build-and-test]   | \t--center=\"Configuration Management\" --release=\"Holo $(cat .version)\" \\\n[tests/build-and-test]   | \tdoc/holo-users-groups.8.pod build/man/holo-users-groups.8\n[tests/build-and-test]   \u2705  Success - Main Build\n[tests/build-and-test] \u2b50 Run Main Test\n[tests/build-and-test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[tests/build-and-test]   | ./util/find_version.sh | util/write-ifchanged .version\n[tests/build-and-test]   | go build -o build/holo  --ldflags '-s -w' github.com/holocm/holo\n[tests/build-and-test]   | \u001b[1;36m>> golangci-lint skipped!\u001b[0m\n[tests/build-and-test]   | ok  \tgithub.com/holocm/holo/cmd/holo/internal\t0.030s\tcoverage: 5.4% of statements\n[tests/build-and-test]   | ok  \tgithub.com/holocm/holo/cmd/holo-ssh-keys/impl\t0.016s\tcoverage: 10.9% of statements\n[tests/build-and-test]   | go test -c -o build/holo.test -covermode=count -coverpkg=github.com/holocm/holo,github.com/holocm/holo/cmd/holo,github.com/holocm/holo/cmd/holo/internal,github.com/holocm/holo/cmd/holo-files,github.com/holocm/holo/cmd/holo-files/internal/common,github.com/holocm/holo/cmd/holo-files/internal/impl,github.com/holocm/holo/cmd/holo-files/internal/platform,github.com/holocm/holo/cmd/holo-ssh-keys,github.com/holocm/holo/cmd/holo-ssh-keys/impl,github.com/holocm/holo/cmd/holo-users-groups,github.com/holocm/holo/internal/fs,github.com/holocm/holo/util github.com/holocm/holo\n[tests/build-and-test]   | warning: no packages being tested depend on matches for pattern github.com/holocm/holo/util\n[tests/build-and-test]   | HOLO_BINARY=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/holocm-holo/build/holo.test\" HOLO_TEST_COVERDIR=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/holocm-holo/test/cov\" ./util/holo-test-help\n[tests/build-and-test]   | >> Running test case no args...\n[tests/build-and-test]   | >> Running test case bogus op...\n[tests/build-and-test]   | >> Running test case bogus flag...\n[tests/build-and-test]   | >> Running test case help op...\n[tests/build-and-test]   | >> Running test case help flag...\n[tests/build-and-test]   | >> Running test case version op...\n[tests/build-and-test]   | >> Running test case version flag...\n[tests/build-and-test]   | >> All tests for holo help text completed successfully.\n[tests/build-and-test]   | HOLO_BINARY=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/holocm-holo/build/holo.test\" HOLO_TEST_COVERDIR=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/holocm-holo/test/cov\" HOLO_TEST_SCRIPTPATH=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/holocm-holo/util\" ./util/holo-test holo-generators test/generators/01-basic test/generators/02-symlink-static test/generators/03-conflict test/generators/04-run-failure\n[tests/build-and-test]   | >> Running test case test/generators/01-basic...\n[tests/build-and-test]   | >> Running test case test/generators/02-symlink-static...\n[tests/build-and-test]   | >> Running test case test/generators/03-conflict...\n[tests/build-and-test]   | >> Running test case test/generators/04-run-failure...\n[tests/build-and-test]   | >> All tests for holo-generators completed successfully.\n[tests/build-and-test]   | HOLO_BINARY=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/holocm-holo/build/holo.test\" HOLO_TEST_COVERDIR=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/holocm-holo/test/cov\" HOLO_TEST_SCRIPTPATH=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/holocm-holo/util\" ./util/holo-test holo-run-scripts test/run-scripts/01-basic\n[tests/build-and-test]   | >> Running test case test/run-scripts/01-basic...\n[tests/build-and-test]   | >> All tests for holo-run-scripts completed successfully.\n[tests/build-and-test]   | HOLO_BINARY=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/holocm-holo/build/holo.test\" HOLO_TEST_COVERDIR=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/holocm-holo/test/cov\" HOLO_TEST_SCRIPTPATH=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/holocm-holo/util\" ./util/holo-test holo-ssh-keys test/ssh-keys/01-provision test/ssh-keys/02-reprovision test/ssh-keys/03-modify\n[tests/build-and-test]   | >> Running test case test/ssh-keys/01-provision...\n[tests/build-and-test]   | >> Running test case test/ssh-keys/02-reprovision...\n[tests/build-and-test]   | >> Running test case test/ssh-keys/03-modify...\n[tests/build-and-test]   | >> All tests for holo-ssh-keys completed successfully.\n[tests/build-and-test]   | HOLO_BINARY=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/holocm-holo/build/holo.test\" HOLO_TEST_COVERDIR=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/holocm-holo/test/cov\" HOLO_TEST_SCRIPTPATH=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/holocm-holo/util\" ./util/holo-test holo-files test/files/01-basic test/files/02-holoscripts test/files/03-stacked test/files/04-backup-files test/files/05-diff test/files/06-lazy-evaluation test/files/07-silent-apply test/files/08-disambiguator-ordering test/files/09-holorc-snippet test/files/10-fail-config test/files/11-fail-scan test/files/12-fail-args test/files/13-fail-lock test/files/14-noop-apply test/files/15-silent-apply-symlink test/files/16-new-entity-apply test/files/20-archlinux test/files/21-rpmbased test/files/22-dpkgbased test/files/23-alpm-hook test/files/24-alpinelinux\n[tests/build-and-test]   | >> Running test case test/files/01-basic...\n[tests/build-and-test]   | >> Running test case test/files/02-holoscripts...\n[tests/build-and-test]   | >> Running test case test/files/03-stacked...\n[tests/build-and-test]   | >> Running test case test/files/04-backup-files...\n[tests/build-and-test]   | >> Running test case test/files/05-diff...\n[tests/build-and-test]   | >> Running test case test/files/06-lazy-evaluation...\n[tests/build-and-test]   | >> Running test case test/files/07-silent-apply...\n[tests/build-and-test]   | >> Running test case test/files/08-disambiguator-ordering...\n[tests/build-and-test]   | >> Running test case test/files/09-holorc-snippet...\n[tests/build-and-test]   | >> Running test case test/files/10-fail-config...\n[tests/build-and-test]   | >> Running test case test/files/11-fail-scan...\n[tests/build-and-test]   | >> Running test case test/files/12-fail-args...\n[tests/build-and-test]   | >> Running test case test/files/13-fail-lock...\n[tests/build-and-test]   | >> Running test case test/files/14-noop-apply...\n[tests/build-and-test]   | >> Running test case test/files/15-silent-apply-symlink...\n[tests/build-and-test]   | >> Running test case test/files/16-new-entity-apply...\n[tests/build-and-test]   | >> Running test case test/files/20-archlinux...\n[tests/build-and-test]   | >> Running test case test/files/21-rpmbased...\n[tests/build-and-test]   | >> Running test case test/files/22-dpkgbased...\n[tests/build-and-test]   | >> Running test case test/files/23-alpm-hook...\n[tests/build-and-test]   | >> Running test case test/files/24-alpinelinux...\n[tests/build-and-test]   | >> All tests for holo-files completed successfully.\n[tests/build-and-test]   | HOLO_BINARY=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/holocm-holo/build/holo.test\" HOLO_TEST_COVERDIR=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/holocm-holo/test/cov\" HOLO_TEST_SCRIPTPATH=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/holocm-holo/util\" ./util/holo-test holo-users-groups test/users-groups/01-groups test/users-groups/02-users test/users-groups/03-stacked-entities test/users-groups/04-stack-conflicts test/users-groups/05-deleted-entities test/users-groups/06-provisioned-groups test/users-groups/07-provisioned-users test/users-groups/08-stacking-on-provisioned test/users-groups/09-migration-from-state.toml test/users-groups/10-provisioned-then-deleted test/users-groups/11-scrub-stacked test/users-groups/12-provisioned-then-modified\n[tests/build-and-test]   | >> Running test case test/users-groups/01-groups...\n[tests/build-and-test]   | >> Running test case test/users-groups/02-users...\n[tests/build-and-test]   | >> Running test case test/users-groups/03-stacked-entities...\n[tests/build-and-test]   | >> Running test case test/users-groups/04-stack-conflicts...\n[tests/build-and-test]   | >> Running test case test/users-groups/05-deleted-entities...\n[tests/build-and-test]   | >> Running test case test/users-groups/06-provisioned-groups...\n[tests/build-and-test]   | >> Running test case test/users-groups/07-provisioned-users...\n[tests/build-and-test]   | >> Running test case test/users-groups/08-stacking-on-provisioned...\n[tests/build-and-test]   | >> Running test case test/users-groups/09-migration-from-state.toml...\n[tests/build-and-test]   | >> Running test case test/users-groups/10-provisioned-then-deleted...\n[tests/build-and-test]   | >> Running test case test/users-groups/11-scrub-stacked...\n[tests/build-and-test]   | >> Running test case test/users-groups/12-provisioned-then-modified...\n[tests/build-and-test]   | >> All tests for holo-users-groups completed successfully.\n[tests/build-and-test]   | util/gocovcat.go test/cov/*.cov > test/cov.cov\n[tests/build-and-test]   | go tool cover -html test/cov.cov -o test/cov.html\n[tests/build-and-test]   | go tool cover -func test/cov.cov -o test/cov.func.txt\n[tests/build-and-test]   \u2705  Success - Main Test\n[tests/build-and-test] \u2b50 Run Main Translate coverage report\n[tests/build-and-test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/jandelgado-gcov2lcov-action@v1.0.8/ dst=/var/run/act/actions/jandelgado-gcov2lcov-action@v1.0.8/\n[tests/build-and-test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/jandelgado-gcov2lcov-action@v1.0.8/] user=0 workdir=\n[tests/build-and-test] \u2b50 Run Main set -x && curl -sLf \"$([ latest == latest ] && echo $LATEST_RELEASE || echo $RELEASE)/${NAME}.tar.gz\" | tar zxf - --strip 1\n[tests/build-and-test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4-composite-0.sh] user= workdir=/tmp\n[tests/build-and-test]   | ++ '[' latest == latest ']'\n[tests/build-and-test]   | ++ echo https://github.com/jandelgado/gcov2lcov/releases/latest/download\n[tests/build-and-test]   | + tar zxf - --strip 1\n[tests/build-and-test]   | + curl -sLf https://github.com/jandelgado/gcov2lcov/releases/latest/download/gcov2lcov-linux-amd64.tar.gz\n[tests/build-and-test]   \u2705  Success - Main set -x && curl -sLf \"$([ latest == latest ] && echo $LATEST_RELEASE || echo $RELEASE)/${NAME}.tar.gz\" | tar zxf - --strip 1\n[tests/build-and-test] \u2b50 Run Main set -x && /tmp/gcov2lcov-linux-amd64 -infile \"test/cov.cov\" -outfile \"test/cov.lcov\"\n[tests/build-and-test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4-composite-1.sh] user= workdir=\n[tests/build-and-test]   | + /tmp/gcov2lcov-linux-amd64 -infile test/cov.cov -outfile test/cov.lcov\n[tests/build-and-test]   \u2705  Success - Main set -x && /tmp/gcov2lcov-linux-amd64 -infile \"test/cov.cov\" -outfile \"test/cov.lcov\"\n[tests/build-and-test]   \u2705  Success - Main Translate coverage report\n[tests/build-and-test] \u2b50 Run Main Submit coverage report\n[tests/build-and-test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/coverallsapp-github-action@master/ dst=/var/run/act/actions/coverallsapp-github-action@master/\n[tests/build-and-test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/coverallsapp-github-action@master/] user=0 workdir=\n[tests/build-and-test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/coverallsapp-github-action@master/dist/index.js] user= workdir=\n[tests/build-and-test]   \u2757  ::error::'github-token' input missing, please include it in your workflow settings 'with' section as 'github-token: ${{ secrets.github_token }}'\n[tests/build-and-test]   \u274c  Failure - Main Submit coverage report\n[tests/build-and-test] exitcode '1': failure\n[tests/build-and-test] \u2b50 Run Post Translate coverage report\n[tests/build-and-test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/jandelgado-gcov2lcov-action@v1.0.8/ dst=/var/run/act/actions/jandelgado-gcov2lcov-action@v1.0.8/\n[tests/build-and-test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/jandelgado-gcov2lcov-action@v1.0.8/] user=0 workdir=\n[tests/build-and-test] context canceled\n[tests/build-and-test] context canceled\n[tests/build-and-test]   \u2705  Success - Post Translate coverage report\n[tests/build-and-test] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: context canceled\n"
}