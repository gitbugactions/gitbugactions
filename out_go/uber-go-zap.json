{
    "repository": "uber-go/zap",
    "clone_url": "https://github.com/uber-go/zap.git",
    "timestamp": "2023-05-30T11:32:38.935927Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Go/build-2] \ud83d\ude80  Start image=crawlergpt:latest\n[Go/build-1] \ud83d\ude80  Start image=crawlergpt:latest\n[Go/build-2]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Go/build-1]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Go/build-2]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/build-1]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/build-1]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/build-2]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/build-1]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/uber-go-zap] user=0 workdir=\n[Go/build-2]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/uber-go-zap] user=0 workdir=\n[Go/build-1]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v3\n[Go/build-1]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[Go/build-1] \ud83e\uddea  Matrix: map[go:1.19.x]\n[Go/build-1] \u2b50 Run Main Checkout code\n[Go/build-1]   \u2705  Success - Main Checkout code\n[Go/build-1] \u2b50 Run Main Setup Go\n[Go/build-1]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v3/ dst=/var/run/act/actions/actions-setup-go@v3/\n[Go/build-1]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v3/] user=0 workdir=\n[Go/build-2]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v3\n[Go/build-1]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v3/dist/setup/index.js] user= workdir=\n[Go/build-2]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[Go/build-2] \ud83e\uddea  Matrix: map[go:1.20.x latest:true]\n[Go/build-2] \u2b50 Run Main Checkout code\n[Go/build-1]   | Setup go version spec 1.19.x\n[Go/build-1]   \ud83d\udcac  ::debug::isExplicit: \n[Go/build-1]   \ud83d\udcac  ::debug::explicit? false\n[Go/build-1]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Go/build-1]   \ud83d\udcac  ::debug::explicit? true\n[Go/build-1]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Go/build-1]   \ud83d\udcac  ::debug::explicit? true\n[Go/build-1]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Go/build-1]   \ud83d\udcac  ::debug::explicit? true\n[Go/build-1]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Go/build-1]   \ud83d\udcac  ::debug::match not found\n[Go/build-1]   | Attempting to download 1.19.x...\n[Go/build-1]   \ud83d\udcac  ::debug::No manifest cached\n[Go/build-1]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Go/build-1]   \ud83d\udcac  ::debug::HttpClientError: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v3/dist/setup/index.js:8612:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[Go/build-1]   | Falling back to download directly from Go\n[Go/build-2]   \u2705  Success - Main Checkout code\n[Go/build-1]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.19.x\n[Go/build-1]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.19.x\n[Go/build-1]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.19.x\n[Go/build-1]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.19.x\n[Go/build-1]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.19.x\n[Go/build-1]   \ud83d\udcac  ::debug::check 1.20.0-rc.3 satisfies 1.19.x\n[Go/build-1]   \ud83d\udcac  ::debug::check 1.20.0-rc.2 satisfies 1.19.x\n[Go/build-1]   \ud83d\udcac  ::debug::check 1.20.0-rc.1 satisfies 1.19.x\n[Go/build-1]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.19.x\n[Go/build-1]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[Go/build-1]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Go/build-1]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Go/build-1]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Go/build-1]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Go/build-1]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[Go/build-1]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[Go/build-1]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[Go/build-1]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[Go/build-1]   \ud83d\udcac  ::debug::matched go1.19.9\n[Go/build-1]   | Install from dist\n[Go/build-1]   | Acquiring go1.19.9 from https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[Go/build-1]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[Go/build-1]   \ud83d\udcac  ::debug::Destination /tmp/31886810-55ee-4dca-a137-af7ad4107fbe\n[Go/build-1]   \ud83d\udcac  ::debug::download complete\n[Go/build-1]   | Extracting Go...\n[Go/build-1]   \ud83d\udcac  ::debug::Checking tar --version\n[Go/build-1]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Go/build-1]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/a3967c0e-d32e-42c7-b188-83dd85a70c4d -f /tmp/31886810-55ee-4dca-a137-af7ad4107fbe\n[Go/build-2] \u2b50 Run Main Setup Go\n[Go/build-2]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v3/ dst=/var/run/act/actions/actions-setup-go@v3/\n[Go/build-2]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v3/] user=0 workdir=\n[Go/build-1]   | Successfully extracted go to /tmp/a3967c0e-d32e-42c7-b188-83dd85a70c4d\n[Go/build-1]   | Adding to the cache ...\n[Go/build-1]   \ud83d\udcac  ::debug::Caching tool go 1.19.9 x64\n[Go/build-1]   \ud83d\udcac  ::debug::source dir: /tmp/a3967c0e-d32e-42c7-b188-83dd85a70c4d/go\n[Go/build-1]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.19.9/x64\n[Go/build-1]   \ud83d\udcac  ::debug::finished caching tool\n[Go/build-1]   | Successfully cached go to /opt/hostedtoolcache/go/1.19.9/x64\n[Go/build-1]   | Added go to the path\n[Go/build-1]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.19.9/x64/bin/go:\n[Go/build-1]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Go/build-1]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Go/build-1]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Go/build-1]   \ud83d\udcac  ::debug::add bin true\n[Go/build-1]   | Successfully set up Go version 1.19.x\n[Go/build-1]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[Go/build-1]   \u2753 add-matcher /run/act/actions/actions-setup-go@v3/matchers.json\n[Go/build-1]   | go version go1.19.9 linux/amd64\n[Go/build-1]   | \n[Go/build-1]   \u2753  ::group::go env\n[Go/build-1]   | GO111MODULE=\"\"\n[Go/build-1]   | GOARCH=\"amd64\"\n[Go/build-1]   | GOBIN=\"\"\n[Go/build-1]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Go/build-1]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Go/build-1]   | GOEXE=\"\"\n[Go/build-1]   | GOEXPERIMENT=\"\"\n[Go/build-1]   | GOFLAGS=\"\"\n[Go/build-1]   | GOHOSTARCH=\"amd64\"\n[Go/build-1]   | GOHOSTOS=\"linux\"\n[Go/build-1]   | GOINSECURE=\"\"\n[Go/build-1]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Go/build-1]   | GONOPROXY=\"\"\n[Go/build-1]   | GONOSUMDB=\"\"\n[Go/build-1]   | GOOS=\"linux\"\n[Go/build-1]   | GOPATH=\"/home/runneradmin/go\"\n[Go/build-1]   | GOPRIVATE=\"\"\n[Go/build-1]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Go/build-1]   | GOROOT=\"/opt/hostedtoolcache/go/1.19.9/x64\"\n[Go/build-1]   | GOSUMDB=\"sum.golang.org\"\n[Go/build-1]   | GOTMPDIR=\"\"\n[Go/build-1]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.19.9/x64/pkg/tool/linux_amd64\"\n[Go/build-1]   | GOVCS=\"\"\n[Go/build-1]   | GOVERSION=\"go1.19.9\"\n[Go/build-1]   | GCCGO=\"gccgo\"\n[Go/build-1]   | GOAMD64=\"v1\"\n[Go/build-1]   | AR=\"ar\"\n[Go/build-1]   | CC=\"gcc\"\n[Go/build-1]   | CXX=\"g++\"\n[Go/build-1]   | CGO_ENABLED=\"1\"\n[Go/build-1]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/uber-go-zap/go.mod\"\n[Go/build-1]   | GOWORK=\"\"\n[Go/build-1]   | CGO_CFLAGS=\"-g -O2\"\n[Go/build-1]   | CGO_CPPFLAGS=\"\"\n[Go/build-1]   | CGO_CXXFLAGS=\"-g -O2\"\n[Go/build-1]   | CGO_FFLAGS=\"-g -O2\"\n[Go/build-1]   | CGO_LDFLAGS=\"-g -O2\"\n[Go/build-1]   | PKG_CONFIG=\"pkg-config\"\n[Go/build-1]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build1750297157=/tmp/go-build -gno-record-gcc-switches\"\n[Go/build-1]   | \n[Go/build-1]   \u2753  ::endgroup::\n[Go/build-1]   \u2705  Success - Main Setup Go\n[Go/build-1]   \u2699  ::set-output:: go-version=1.19.9\n[Go/build-1]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.19.9/x64/bin\n[Go/build-1]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Go/build-1] \u2b50 Run Main Download Dependencies\n[Go/build-1]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Go/build-2]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v3/dist/setup/index.js] user= workdir=\n[Go/build-1]   \u2705  Success - Main Download Dependencies\n[Go/build-1] \u2b50 Run Main Test\n[Go/build-1]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Go/build-2]   | Setup go version spec 1.20.x\n[Go/build-2]   \ud83d\udcac  ::debug::isExplicit: \n[Go/build-2]   \ud83d\udcac  ::debug::explicit? false\n[Go/build-2]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Go/build-2]   \ud83d\udcac  ::debug::explicit? true\n[Go/build-2]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Go/build-2]   \ud83d\udcac  ::debug::explicit? true\n[Go/build-2]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Go/build-2]   \ud83d\udcac  ::debug::explicit? true\n[Go/build-2]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Go/build-2]   \ud83d\udcac  ::debug::match not found\n[Go/build-2]   | Attempting to download 1.20.x...\n[Go/build-2]   \ud83d\udcac  ::debug::No manifest cached\n[Go/build-1]   | go test -race -coverprofile=cover.out -coverpkg=./... ./...\n[Go/build-2]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Go/build-2]   \ud83d\udcac  ::debug::HttpClientError: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v3/dist/setup/index.js:8612:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[Go/build-2]   | Falling back to download directly from Go\n[Go/build-2]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.20.x\n[Go/build-2]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[Go/build-2]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Go/build-2]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Go/build-2]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Go/build-2]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Go/build-2]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[Go/build-2]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[Go/build-2]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[Go/build-2]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[Go/build-2]   \ud83d\udcac  ::debug::matched go1.20.4\n[Go/build-2]   | Install from dist\n[Go/build-2]   | Acquiring go1.20.4 from https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Go/build-2]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Go/build-2]   \ud83d\udcac  ::debug::Destination /tmp/4e5de786-9b25-4004-a8fa-de2f84e0940e\n[Go/build-2]   \ud83d\udcac  ::debug::download complete\n[Go/build-2]   | Extracting Go...\n[Go/build-2]   \ud83d\udcac  ::debug::Checking tar --version\n[Go/build-2]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Go/build-2]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/43ee1e6f-61f1-4f97-862f-852265db6e35 -f /tmp/4e5de786-9b25-4004-a8fa-de2f84e0940e\n[Go/build-2]   | Successfully extracted go to /tmp/43ee1e6f-61f1-4f97-862f-852265db6e35\n[Go/build-2]   | Adding to the cache ...\n[Go/build-2]   \ud83d\udcac  ::debug::Caching tool go 1.20.4 x64\n[Go/build-2]   \ud83d\udcac  ::debug::source dir: /tmp/43ee1e6f-61f1-4f97-862f-852265db6e35/go\n[Go/build-2]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.20.4/x64\n[Go/build-1]   | ok  \tgo.uber.org/zap\t5.837s\tcoverage: 70.6% of statements in ./...\n[Go/build-1]   | ok  \tgo.uber.org/zap/buffer\t0.100s\tcoverage: 4.0% of statements in ./...\n[Go/build-1]   | ?   \tgo.uber.org/zap/internal\t[no test files]\n[Go/build-1]   | ?   \tgo.uber.org/zap/internal/bufferpool\t[no test files]\n[Go/build-1]   | ok  \tgo.uber.org/zap/internal/color\t0.103s\tcoverage: 2.5% of statements in ./...\n[Go/build-1]   | ok  \tgo.uber.org/zap/internal/exit\t0.171s\tcoverage: 3.1% of statements in ./...\n[Go/build-1]   | ok  \tgo.uber.org/zap/internal/pool\t0.201s\tcoverage: 2.7% of statements in ./...\n[Go/build-1]   | ?   \tgo.uber.org/zap/internal/readme\t[no test files]\n[Go/build-1]   | ok  \tgo.uber.org/zap/internal/ztest\t0.211s\tcoverage: 2.7% of statements in ./...\n[Go/build-1]   | ok  \tgo.uber.org/zap/zapcore\t6.171s\tcoverage: 49.3% of statements in ./...\n[Go/build-1]   | ok  \tgo.uber.org/zap/zapgrpc\t0.174s\tcoverage: 9.1% of statements in ./...\n[Go/build-1]   | ok  \tgo.uber.org/zap/zapio\t0.188s\tcoverage: 13.0% of statements in ./...\n[Go/build-1]   | ok  \tgo.uber.org/zap/zaptest\t0.253s\tcoverage: 18.9% of statements in ./...\n[Go/build-1]   | ok  \tgo.uber.org/zap/zaptest/observer\t0.231s\tcoverage: 10.4% of statements in ./...\n[Go/build-1]   | go tool cover -html=cover.out -o cover.html\n[Go/build-1]   \u2705  Success - Main Test\n[Go/build-1] \u2b50 Run Main Upload coverage to codecov.io\n[Go/build-1]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/codecov-codecov-action@v3/ dst=/var/run/act/actions/codecov-codecov-action@v3/\n[Go/build-1]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/codecov-codecov-action@v3/] user=0 workdir=\n[Go/build-2]   \ud83d\udcac  ::debug::finished caching tool\n[Go/build-2]   | Successfully cached go to /opt/hostedtoolcache/go/1.20.4/x64\n[Go/build-2]   | Added go to the path\n[Go/build-2]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.20.4/x64/bin/go:\n[Go/build-2]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Go/build-2]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Go/build-2]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Go/build-2]   \ud83d\udcac  ::debug::add bin true\n[Go/build-2]   | Successfully set up Go version 1.20.x\n[Go/build-2]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[Go/build-2]   \u2753 add-matcher /run/act/actions/actions-setup-go@v3/matchers.json\n[Go/build-2]   | go version go1.20.4 linux/amd64\n[Go/build-2]   | \n[Go/build-2]   \u2753  ::group::go env\n[Go/build-2]   | GO111MODULE=\"\"\n[Go/build-2]   | GOARCH=\"amd64\"\n[Go/build-2]   | GOBIN=\"\"\n[Go/build-2]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Go/build-2]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Go/build-2]   | GOEXE=\"\"\n[Go/build-2]   | GOEXPERIMENT=\"\"\n[Go/build-2]   | GOFLAGS=\"\"\n[Go/build-2]   | GOHOSTARCH=\"amd64\"\n[Go/build-2]   | GOHOSTOS=\"linux\"\n[Go/build-2]   | GOINSECURE=\"\"\n[Go/build-2]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Go/build-2]   | GONOPROXY=\"\"\n[Go/build-2]   | GONOSUMDB=\"\"\n[Go/build-2]   | GOOS=\"linux\"\n[Go/build-2]   | GOPATH=\"/home/runneradmin/go\"\n[Go/build-2]   | GOPRIVATE=\"\"\n[Go/build-2]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Go/build-2]   | GOROOT=\"/opt/hostedtoolcache/go/1.20.4/x64\"\n[Go/build-2]   | GOSUMDB=\"sum.golang.org\"\n[Go/build-2]   | GOTMPDIR=\"\"\n[Go/build-2]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.20.4/x64/pkg/tool/linux_amd64\"\n[Go/build-2]   | GOVCS=\"\"\n[Go/build-2]   | GOVERSION=\"go1.20.4\"\n[Go/build-2]   | GCCGO=\"gccgo\"\n[Go/build-2]   | GOAMD64=\"v1\"\n[Go/build-2]   | AR=\"ar\"\n[Go/build-2]   | CC=\"gcc\"\n[Go/build-2]   | CXX=\"g++\"\n[Go/build-2]   | CGO_ENABLED=\"1\"\n[Go/build-2]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/uber-go-zap/go.mod\"\n[Go/build-2]   | GOWORK=\"\"\n[Go/build-2]   | CGO_CFLAGS=\"-O2 -g\"\n[Go/build-2]   | CGO_CPPFLAGS=\"\"\n[Go/build-2]   | CGO_CXXFLAGS=\"-O2 -g\"\n[Go/build-2]   | CGO_FFLAGS=\"-O2 -g\"\n[Go/build-2]   | CGO_LDFLAGS=\"-O2 -g\"\n[Go/build-2]   | PKG_CONFIG=\"pkg-config\"\n[Go/build-2]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build364662045=/tmp/go-build -gno-record-gcc-switches\"\n[Go/build-2]   | \n[Go/build-2]   \u2753  ::endgroup::\n[Go/build-2]   \u2705  Success - Main Setup Go\n[Go/build-2]   \u2699  ::set-output:: go-version=1.20.4\n[Go/build-2]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.20.4/x64/bin\n[Go/build-2]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Go/build-2] \u2b50 Run Main Download Dependencies\n[Go/build-2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Go/build-1]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v3/dist/index.js] user= workdir=\n[Go/build-1]   | Error: Cannot find module 'node:http'\n[Go/build-1]   | Require stack:\n[Go/build-1]   | - /run/act/actions/codecov-codecov-action@v3/dist/index.js\n[Go/build-1]   |     at Function.Module._resolveFilename (internal/modules/cjs/loader.js:889:15)\n[Go/build-1]   |     at Function.Module._load (internal/modules/cjs/loader.js:745:27)\n[Go/build-1]   |     at Module.require (internal/modules/cjs/loader.js:961:19)\n[Go/build-1]   |     at require (internal/modules/cjs/helpers.js:92:18)\n[Go/build-1]   |     at /run/act/actions/codecov-codecov-action@v3/webpack:/codecov-action/external node-commonjs \"node:http\":1:1\n[Go/build-1]   |     at /run/act/actions/codecov-codecov-action@v3/dist/index.js:24630:3\n[Go/build-1]   |     at Object.<anonymous> (/run/act/actions/codecov-codecov-action@v3/dist/index.js:24633:12)\n[Go/build-1]   |     at Module._compile (internal/modules/cjs/loader.js:1072:14)\n[Go/build-1]   |     at Object.Module._extensions..js (internal/modules/cjs/loader.js:1101:10)\n[Go/build-1]   |     at Module.load (internal/modules/cjs/loader.js:937:32)\n[Go/build-1]   \u274c  Failure - Main Upload coverage to codecov.io\n[Go/build-1] exitcode '1': failure\n[Go/build-2]   \u2705  Success - Main Download Dependencies\n[Go/build-2] \u2b50 Run Main Lint\n[Go/build-2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Go/build-2]   | cd tools && go install github.com/mgechev/revive\n[Go/build-1] \ud83c\udfc1  Job failed\n[Go/build-2]   | cd tools && go install honnef.co/go/tools/cmd/staticcheck\n[Go/build-2]   | Checking formatting...\n[Go/build-2]   | Checking vet...\n[Go/build-2]   | go: downloading go.uber.org/zap v1.24.0\n[Go/build-2]   | go: downloading golang.org/x/exp v0.0.0-20230425010034-47ecfdc1ba53\n[Go/build-2]   | go: downloading go.uber.org/atomic v1.10.0\n[Go/build-2]   | Checking lint...\n[Go/build-2]   | Checking staticcheck...\n[Go/build-2]   | Checking for unresolved FIXMEs...\n[Go/build-2]   | Checking for license headers...\n[Go/build-2]   | Checking 'go mod tidy'...\n[Go/build-2]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/uber-go-zap'\n[Go/build-2]   | go: downloading gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127\n[Go/build-2]   | go: downloading golang.org/x/lint v0.0.0-20190930215403-16217165b5de\n[Go/build-2]   | go: downloading golang.org/x/tools v0.1.5\n[Go/build-2]   | go: downloading github.com/kr/pretty v0.1.0\n[Go/build-2]   | go: downloading go.uber.org/goleak v1.1.11\n[Go/build-2]   | go: downloading github.com/pkg/errors v0.8.1\n[Go/build-2]   | go: downloading gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405\n[Go/build-2]   | go: downloading github.com/benbjohnson/clock v1.1.0\n[Go/build-2]   | go: downloading github.com/tj/assert v0.0.3\n[Go/build-2]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/uber-go-zap'\n[Go/build-2]   \u2705  Success - Main Lint\n[Go/build-2] \u2b50 Run Main Test\n[Go/build-2]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Go/build-2]   | go test -race -coverprofile=cover.out -coverpkg=./... ./...\n[Go/build-2]   | ?   \tgo.uber.org/zap/internal\t[no test files]\n[Go/build-2]   | ?   \tgo.uber.org/zap/internal/bufferpool\t[no test files]\n[Go/build-2]   | ?   \tgo.uber.org/zap/internal/readme\t[no test files]\n[Go/build-2]   | ok  \tgo.uber.org/zap\t5.732s\tcoverage: 99.5% of statements in ./...\n[Go/build-2]   | ok  \tgo.uber.org/zap/buffer\t0.073s\tcoverage: 89.7% of statements in ./...\n[Go/build-2]   | ok  \tgo.uber.org/zap/internal/color\t0.046s\tcoverage: 100.0% of statements in ./...\n[Go/build-2]   | ok  \tgo.uber.org/zap/internal/exit\t0.044s\tcoverage: 100.0% of statements in ./...\n[Go/build-2]   | ok  \tgo.uber.org/zap/internal/pool\t0.070s\tcoverage: 100.0% of statements in ./...\n[Go/build-2]   | ok  \tgo.uber.org/zap/internal/ztest\t0.047s\tcoverage: 15.4% of statements in ./...\n[Go/build-2]   | ok  \tgo.uber.org/zap/zapcore\t7.409s\tcoverage: 5.5% of statements in ./...\n[Go/build-2]   | ok  \tgo.uber.org/zap/zapgrpc\t0.099s\tcoverage: 8.2% of statements in ./...\n[Go/build-2]   | ok  \tgo.uber.org/zap/zapio\t0.101s\tcoverage: 5.8% of statements in ./...\n[Go/build-2]   | ok  \tgo.uber.org/zap/zaptest\t0.196s\tcoverage: 11.7% of statements in ./...\n[Go/build-2]   | ok  \tgo.uber.org/zap/zaptest/observer\t0.102s\tcoverage: 7.4% of statements in ./...\n[Go/build-2]   | go tool cover -html=cover.out -o cover.html\n[Go/build-2]   \u2705  Success - Main Test\n[Go/build-2] \u2b50 Run Main Upload coverage to codecov.io\n[Go/build-2]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/codecov-codecov-action@v3/ dst=/var/run/act/actions/codecov-codecov-action@v3/\n[Go/build-2]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/codecov-codecov-action@v3/] user=0 workdir=\n[Go/build-2]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v3/dist/index.js] user= workdir=\n[Go/build-2]   | Error: Cannot find module 'node:http'\n[Go/build-2]   | Require stack:\n[Go/build-2]   | - /run/act/actions/codecov-codecov-action@v3/dist/index.js\n[Go/build-2]   |     at Function.Module._resolveFilename (internal/modules/cjs/loader.js:889:15)\n[Go/build-2]   |     at Function.Module._load (internal/modules/cjs/loader.js:745:27)\n[Go/build-2]   |     at Module.require (internal/modules/cjs/loader.js:961:19)\n[Go/build-2]   |     at require (internal/modules/cjs/helpers.js:92:18)\n[Go/build-2]   |     at /run/act/actions/codecov-codecov-action@v3/webpack:/codecov-action/external node-commonjs \"node:http\":1:1\n[Go/build-2]   |     at /run/act/actions/codecov-codecov-action@v3/dist/index.js:24630:3\n[Go/build-2]   |     at Object.<anonymous> (/run/act/actions/codecov-codecov-action@v3/dist/index.js:24633:12)\n[Go/build-2]   |     at Module._compile (internal/modules/cjs/loader.js:1072:14)\n[Go/build-2]   |     at Object.Module._extensions..js (internal/modules/cjs/loader.js:1101:10)\n[Go/build-2]   |     at Module.load (internal/modules/cjs/loader.js:937:32)\n[Go/build-2]   \u274c  Failure - Main Upload coverage to codecov.io\n[Go/build-2] exitcode '1': failure\n[Go/build-2] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'build' failed\n"
}