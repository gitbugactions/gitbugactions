{
    "repository": "slackhq/go-audit",
    "clone_url": "https://github.com/slackhq/go-audit.git",
    "timestamp": "2023-05-30T12:02:08.068536Z",
    "clone_success": true,
    "number of actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Build and test/Build all and test] \ud83d\ude80  Start image=crawlergpt:latest\n[Build and test/Build all and test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build and test/Build all and test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and test/Build all and test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build and test/Build all and test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/slackhq-go-audit] user=0 workdir=\n[Build and test/Build all and test]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v1\n[Build and test/Build all and test]   \u2601  git clone 'https://github.com/actions/cache' # ref=v1\n[Build and test/Build all and test] \u2b50 Run Main Set up Go 1.20\n[Build and test/Build all and test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v1/ dst=/var/run/act/actions/actions-setup-go@v1/\n[Build and test/Build all and test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v1/] user=0 workdir=\n[Build and test/Build all and test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v1/lib/setup-go.js] user= workdir=\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::evaluating 9 versions\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::matched: 1.20.4\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::isExplicit: 1.20.4\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::explicit? true\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.20.4/x64\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::not found\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::Downloading Go from: https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::Downloading /tmp/08442f01-68ad-4fda-8f67-c7ccba35107f\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::download complete\n[Build and test/Build all and test]   | [command]/usr/bin/tar xzC /tmp/c812e761-e709-491e-a583-0bd9f0313ac1 -f /tmp/08442f01-68ad-4fda-8f67-c7ccba35107f\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::Caching tool go 1.20.4 x64\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::source dir: /tmp/c812e761-e709-491e-a583-0bd9f0313ac1/go\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.20.4/x64\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::finished caching tool\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::Go tool is cached under /opt/hostedtoolcache/go/1.20.4/x64\n[Build and test/Build all and test]   \u2753 add-matcher /run/act/actions/actions-setup-go@v1/.github/go.json\n[Build and test/Build all and test]   \u2705  Success - Main Set up Go 1.20\n[Build and test/Build all and test]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.20.4/x64\n[Build and test/Build all and test]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.20.4/x64/bin\n[Build and test/Build all and test] \u2b50 Run Main Check out code into the Go module directory\n[Build and test/Build all and test]   \u2705  Success - Main Check out code into the Go module directory\n[Build and test/Build all and test] \u2b50 Run Main actions/cache@v1\n[Build and test/Build all and test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v1/ dst=/var/run/act/actions/actions-cache@v1/\n[Build and test/Build all and test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v1/] user=0 workdir=\n[Build and test/Build all and test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v1/dist/restore/index.js] user= workdir=\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::Cache Path: /home/runneradmin/go/pkg/mod\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::Resolved Keys:\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::[\"Linux-go-017dbe0fdec4abbd63a1f72dc01b33c4fbc517b84dedaef58b909c7ebec48d4b\",\"Linux-go-\"]\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Build and test/Build all and test]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[Build and test/Build all and test]   \u2705  Success - Main actions/cache@v1\n[Build and test/Build all and test]   \u2699  ::set-output:: cache-hit=false\n[Build and test/Build all and test] \u2b50 Run Main Build\n[Build and test/Build all and test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Build and test/Build all and test]   | go build -ldflags \"-X main.Build=dev+20230530120800\"\n[Build and test/Build all and test]   | go: downloading github.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da\n[Build and test/Build all and test]   | go: downloading github.com/containerd/containerd v1.7.0\n[Build and test/Build all and test]   | go: downloading gopkg.in/Graylog2/go-gelf.v2 v2.0.0-20191017102106-1550ee647df0\n[Build and test/Build all and test]   | go: downloading github.com/spf13/viper v1.15.0\n[Build and test/Build all and test]   | go: downloading github.com/docker/docker v23.0.3+incompatible\n[Build and test/Build all and test]   | go: downloading github.com/mitchellh/mapstructure v1.5.0\n[Build and test/Build all and test]   | go: downloading github.com/spf13/jwalterweatherman v1.1.0\n[Build and test/Build all and test]   | go: downloading github.com/spf13/pflag v1.0.5\n[Build and test/Build all and test]   | go: downloading github.com/subosito/gotenv v1.4.2\n[Build and test/Build all and test]   | go: downloading github.com/fsnotify/fsnotify v1.6.0\n[Build and test/Build all and test]   | go: downloading github.com/magiconair/properties v1.8.7\n[Build and test/Build all and test]   | go: downloading github.com/pelletier/go-toml/v2 v2.0.7\n[Build and test/Build all and test]   | go: downloading gopkg.in/yaml.v3 v3.0.1\n[Build and test/Build all and test]   | go: downloading github.com/hashicorp/hcl v1.0.0\n[Build and test/Build all and test]   | go: downloading gopkg.in/ini.v1 v1.67.0\n[Build and test/Build all and test]   | go: downloading github.com/spf13/afero v1.9.5\n[Build and test/Build all and test]   | go: downloading github.com/spf13/cast v1.5.0\n[Build and test/Build all and test]   | go: downloading golang.org/x/sys v0.7.0\n[Build and test/Build all and test]   | go: downloading golang.org/x/text v0.8.0\n[Build and test/Build all and test]   | go: downloading google.golang.org/protobuf v1.28.1\n[Build and test/Build all and test]   | go: downloading golang.org/x/sync v0.1.0\n[Build and test/Build all and test]   | go: downloading google.golang.org/grpc v1.53.0\n[Build and test/Build all and test]   | go: downloading github.com/sirupsen/logrus v1.9.0\n[Build and test/Build all and test]   | go: downloading github.com/containerd/continuity v0.3.0\n[Build and test/Build all and test]   | go: downloading google.golang.org/genproto v0.0.0-20230306155012-7f2fa6fef1f4\n[Build and test/Build all and test]   | go: downloading github.com/docker/go-events v0.0.0-20190806004212-e31b211e4f1c\n[Build and test/Build all and test]   | go: downloading github.com/containerd/ttrpc v1.2.1\n[Build and test/Build all and test]   | go: downloading github.com/containerd/typeurl/v2 v2.1.0\n[Build and test/Build all and test]   | go: downloading github.com/containerd/fifo v1.1.0\n[Build and test/Build all and test]   | go: downloading go.opentelemetry.io/otel v1.14.0\n[Build and test/Build all and test]   | go: downloading github.com/opencontainers/image-spec v1.1.0-rc2.0.20221005185240-3a7f492d3f1b\n[Build and test/Build all and test]   | go: downloading github.com/moby/locker v1.0.1\n[Build and test/Build all and test]   | go: downloading github.com/klauspost/compress v1.16.0\n[Build and test/Build all and test]   | go: downloading github.com/opencontainers/runtime-spec v1.1.0-rc.1\n[Build and test/Build all and test]   | go: downloading github.com/moby/sys/signal v0.7.0\n[Build and test/Build all and test]   | go: downloading github.com/opencontainers/go-digest v1.0.0\n[Build and test/Build all and test]   | go: downloading github.com/opencontainers/selinux v1.11.0\n[Build and test/Build all and test]   | go: downloading github.com/moby/sys/mountinfo v0.6.2\n[Build and test/Build all and test]   | go: downloading github.com/google/go-cmp v0.5.9\n[Build and test/Build all and test]   | go: downloading github.com/google/uuid v1.3.0\n[Build and test/Build all and test]   | go: downloading go.opentelemetry.io/otel/trace v1.14.0\n[Build and test/Build all and test]   | go: downloading github.com/opencontainers/runc v1.1.5\n[Build and test/Build all and test]   | go: downloading github.com/gogo/protobuf v1.3.2\n[Build and test/Build all and test]   | go: downloading github.com/go-logr/logr v1.2.3\n[Build and test/Build all and test]   | go: downloading github.com/go-logr/stdr v1.2.2\n[Build and test/Build all and test]   | go: downloading github.com/docker/go-units v0.5.0\n[Build and test/Build all and test]   | go: downloading github.com/docker/go-connections v0.4.0\n[Build and test/Build all and test]   | go: downloading github.com/docker/distribution v2.8.2+incompatible\n[Build and test/Build all and test]   | go: downloading github.com/pkg/errors v0.9.1\n[Build and test/Build all and test]   | go: downloading golang.org/x/net v0.8.0\n[Build and test/Build all and test]   | go: downloading github.com/golang/protobuf v1.5.2\n[Build and test/Build all and test]   \u2705  Success - Main Build\n[Build and test/Build all and test] \u2b50 Run Main Test\n[Build and test/Build all and test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Build and test/Build all and test]   | go test -v\n[Build and test/Build all and test]   | go: downloading github.com/stretchr/testify v1.8.2\n[Build and test/Build all and test]   | go: downloading github.com/davecgh/go-spew v1.1.1\n[Build and test/Build all and test]   | go: downloading github.com/pmezard/go-difflib v1.0.0\n[Build and test/Build all and test]   | === RUN   Test_loadConfig\n[Build and test/Build all and test]   | --- PASS: Test_loadConfig (0.02s)\n[Build and test/Build all and test]   | === RUN   Test_setRules\n[Build and test/Build all and test]   | Flushed existing audit rules\n[Build and test/Build all and test]   | Flushed existing audit rules\n[Build and test/Build all and test]   | Flushed existing audit rules\n[Build and test/Build all and test]   | Added audit rule #1\n[Build and test/Build all and test]   | Added audit rule #3\n[Build and test/Build all and test]   | --- PASS: Test_setRules (0.00s)\n[Build and test/Build all and test]   | === RUN   Test_createFileOutput\n[Build and test/Build all and test]   | --- PASS: Test_createFileOutput (0.00s)\n[Build and test/Build all and test]   | === RUN   Test_createSyslogOutput\n[Build and test/Build all and test]   | --- PASS: Test_createSyslogOutput (0.02s)\n[Build and test/Build all and test]   | === RUN   Test_createStdOutOutput\n[Build and test/Build all and test]   | --- PASS: Test_createStdOutOutput (0.00s)\n[Build and test/Build all and test]   | === RUN   Test_createGELFOutput\n[Build and test/Build all and test]   | === RUN   Test_createGELFOutput/When_attempts_is_less_than_one,_should_retun_an_expected_error\n[Build and test/Build all and test]   | === RUN   Test_createGELFOutput/When_address_is_not_set,_should_return_an_expected_error\n[Build and test/Build all and test]   | === RUN   Test_createGELFOutput/When_using_UDP_network,_should_return_a_gelf.UDPWriter_writer\n[Build and test/Build all and test]   | === RUN   Test_createGELFOutput/When_using_TCP_network,_should_return_a_gelf.TCPWriter_writer\n[Build and test/Build all and test]   | === RUN   Test_createGELFOutput/When_using_an_unsupported_network_(not_UDP_or_TCP),_should_return_an_expected_error\n[Build and test/Build all and test]   | === RUN   Test_createGELFOutput/When_using_a_custom_compreession_settings,_should_return_a_gelf.UPDWriter_with_expected_compression_value\n[Build and test/Build all and test]   | --- PASS: Test_createGELFOutput (0.00s)\n[Build and test/Build all and test]   |     --- PASS: Test_createGELFOutput/When_attempts_is_less_than_one,_should_retun_an_expected_error (0.00s)\n[Build and test/Build all and test]   |     --- PASS: Test_createGELFOutput/When_address_is_not_set,_should_return_an_expected_error (0.00s)\n[Build and test/Build all and test]   |     --- PASS: Test_createGELFOutput/When_using_UDP_network,_should_return_a_gelf.UDPWriter_writer (0.00s)\n[Build and test/Build all and test]   |     --- PASS: Test_createGELFOutput/When_using_TCP_network,_should_return_a_gelf.TCPWriter_writer (0.00s)\n[Build and test/Build all and test]   |     --- PASS: Test_createGELFOutput/When_using_an_unsupported_network_(not_UDP_or_TCP),_should_return_an_expected_error (0.00s)\n[Build and test/Build all and test]   |     --- PASS: Test_createGELFOutput/When_using_a_custom_compreession_settings,_should_return_a_gelf.UPDWriter_with_expected_compression_value (0.00s)\n[Build and test/Build all and test]   | === RUN   Test_createOutput\n[Build and test/Build all and test]   | --- PASS: Test_createOutput (0.10s)\n[Build and test/Build all and test]   | === RUN   Test_createFilters\n[Build and test/Build all and test]   | --- PASS: Test_createFilters (0.00s)\n[Build and test/Build all and test]   | === RUN   TestNetlinkClient_KeepConnection\n[Build and test/Build all and test]   | --- PASS: TestNetlinkClient_KeepConnection (0.00s)\n[Build and test/Build all and test]   | === RUN   TestNetlinkClient_SendReceive\n[Build and test/Build all and test]   | --- PASS: TestNetlinkClient_SendReceive (0.00s)\n[Build and test/Build all and test]   | === RUN   TestNewNetlinkClient\n[Build and test/Build all and test]   | --- PASS: TestNewNetlinkClient (0.00s)\n[Build and test/Build all and test]   | === RUN   TestGetPid\n[Build and test/Build all and test]   | --- PASS: TestGetPid (0.00s)\n[Build and test/Build all and test]   | === RUN   TestContainerID\n[Build and test/Build all and test]   | --- PASS: TestContainerID (0.00s)\n[Build and test/Build all and test]   | === RUN   TestMarshallerConstants\n[Build and test/Build all and test]   | --- PASS: TestMarshallerConstants (0.00s)\n[Build and test/Build all and test]   | === RUN   TestAuditMarshaller_Consume\n[Build and test/Build all and test]   | --- PASS: TestAuditMarshaller_Consume (2.00s)\n[Build and test/Build all and test]   | === RUN   TestAuditMarshaller_completeMessage\n[Build and test/Build all and test]   |     marshaller_test.go:124: \n[Build and test/Build all and test]   | --- SKIP: TestAuditMarshaller_completeMessage (0.00s)\n[Build and test/Build all and test]   | === RUN   TestAuditConstants\n[Build and test/Build all and test]   | --- PASS: TestAuditConstants (0.00s)\n[Build and test/Build all and test]   | === RUN   TestNewAuditMessage\n[Build and test/Build all and test]   | --- PASS: TestNewAuditMessage (0.00s)\n[Build and test/Build all and test]   | === RUN   TestAuditMessageGroup_AddMessage\n[Build and test/Build all and test]   | --- PASS: TestAuditMessageGroup_AddMessage (0.00s)\n[Build and test/Build all and test]   | === RUN   TestNewAuditMessageGroup\n[Build and test/Build all and test]   | --- PASS: TestNewAuditMessageGroup (0.00s)\n[Build and test/Build all and test]   | === RUN   Test_getUsername\n[Build and test/Build all and test]   | --- PASS: Test_getUsername (0.00s)\n[Build and test/Build all and test]   | === RUN   TestAuditMessageGroup_mapUids\n[Build and test/Build all and test]   | --- PASS: TestAuditMessageGroup_mapUids (0.00s)\n[Build and test/Build all and test]   | PASS\n[Build and test/Build all and test]   | ok  \tgithub.com/slackhq/go-audit\t2.267s\n[Build and test/Build all and test]   \u2705  Success - Main Test\n[Build and test/Build all and test] \u2b50 Run Post actions/cache@v1\n[Build and test/Build all and test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v1/dist/save/index.js] user= workdir=\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::State: \n[Build and test/Build all and test]   \ud83d\udcac  ::debug::Reserving Cache\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::reserveCache - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Build and test/Build all and test]   \ud83d\udcac  ::debug::reserveCache - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Build and test/Build all and test]   | [warning]reserveCache failed: Cache Service Url not found, unable to restore cache.\n[Build and test/Build all and test]   \u2705  Success - Post actions/cache@v1\n[Build and test/Build all and test] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}