{
    "repository": "hellofresh/goengine",
    "clone_url": "https://github.com/hellofresh/goengine.git",
    "timestamp": "2023-05-30T11:59:07.250840Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Testing/Lint] \ud83d\ude80  Start image=crawlergpt:latest\n[Testing/Lint]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Testing/Lint]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Testing/Lint]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Testing/Lint]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/hellofresh-goengine] user=0 workdir=\n[Testing/Lint]   \u2601  git clone 'https://github.com/golangci/golangci-lint-action' # ref=v2\n[Testing/Lint] \u2b50 Run Main Check out code\n[Testing/Lint]   \u2705  Success - Main Check out code\n[Testing/Lint] \u2b50 Run Main golangci-lint\n[Testing/Lint]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/golangci-golangci-lint-action@v2/ dst=/var/run/act/actions/golangci-golangci-lint-action@v2/\n[Testing/Lint]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/golangci-golangci-lint-action@v2/] user=0 workdir=\n[Testing/Lint]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/golangci-golangci-lint-action@v2/dist/run/index.js] user= workdir=\n[Testing/Lint]   \u2753  ::group::prepare environment\n[Testing/Lint]   | Finding needed golangci-lint version...\n[Testing/Lint]   | Setup go stable version spec 1\n[Testing/Lint]   \ud83d\udcac  ::debug::isExplicit: \n[Testing/Lint]   \ud83d\udcac  ::debug::explicit? false\n[Testing/Lint]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Testing/Lint]   \ud83d\udcac  ::debug::explicit? true\n[Testing/Lint]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Testing/Lint]   \ud83d\udcac  ::debug::explicit? true\n[Testing/Lint]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Testing/Lint]   \ud83d\udcac  ::debug::explicit? true\n[Testing/Lint]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Testing/Lint]   \ud83d\udcac  ::debug::matched: 1.16.7\n[Testing/Lint]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.16.7/x64\n[Testing/Lint]   \ud83d\udcac  ::debug::Found tool in cache go 1.16.7 x64\n[Testing/Lint]   | Found in cache @ /opt/hostedtoolcache/go/1.16.7/x64\n[Testing/Lint]   | Added go to the path\n[Testing/Lint]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.16.7/x64/bin/go:\n[Testing/Lint]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Testing/Lint]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Testing/Lint]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Testing/Lint]   \ud83d\udcac  ::debug::add bin true\n[Testing/Lint]   | Successfully setup go version 1\n[Testing/Lint]   \u2753 add-matcher /run/act/actions/golangci-golangci-lint-action@v2/dist/matchers.json\n[Testing/Lint]   | go version go1.16.7 linux/amd64\n[Testing/Lint]   | \n[Testing/Lint]   \u2753  ::group::go env\n[Testing/Lint]   | GO111MODULE=\"\"\n[Testing/Lint]   | GOARCH=\"amd64\"\n[Testing/Lint]   | GOBIN=\"\"\n[Testing/Lint]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Testing/Lint]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Testing/Lint]   | GOEXE=\"\"\n[Testing/Lint]   | GOFLAGS=\"\"\n[Testing/Lint]   | GOHOSTARCH=\"amd64\"\n[Testing/Lint]   | GOHOSTOS=\"linux\"\n[Testing/Lint]   | GOINSECURE=\"\"\n[Testing/Lint]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Testing/Lint]   | GONOPROXY=\"\"\n[Testing/Lint]   | GONOSUMDB=\"\"\n[Testing/Lint]   | GOOS=\"linux\"\n[Testing/Lint]   | GOPATH=\"/home/runneradmin/go\"\n[Testing/Lint]   | GOPRIVATE=\"\"\n[Testing/Lint]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Testing/Lint]   | GOROOT=\"/opt/hostedtoolcache/go/1.16.7/x64\"\n[Testing/Lint]   | GOSUMDB=\"sum.golang.org\"\n[Testing/Lint]   | GOTMPDIR=\"\"\n[Testing/Lint]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.16.7/x64/pkg/tool/linux_amd64\"\n[Testing/Lint]   | GOVCS=\"\"\n[Testing/Lint]   | GOVERSION=\"go1.16.7\"\n[Testing/Lint]   | GCCGO=\"gccgo\"\n[Testing/Lint]   | AR=\"ar\"\n[Testing/Lint]   | CC=\"gcc\"\n[Testing/Lint]   | CXX=\"g++\"\n[Testing/Lint]   | CGO_ENABLED=\"1\"\n[Testing/Lint]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/hellofresh-goengine/go.mod\"\n[Testing/Lint]   | CGO_CFLAGS=\"-g -O2\"\n[Testing/Lint]   | CGO_CPPFLAGS=\"\"\n[Testing/Lint]   | CGO_CXXFLAGS=\"-g -O2\"\n[Testing/Lint]   | CGO_FFLAGS=\"-g -O2\"\n[Testing/Lint]   | CGO_LDFLAGS=\"-g -O2\"\n[Testing/Lint]   | PKG_CONFIG=\"pkg-config\"\n[Testing/Lint]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build2797625698=/tmp/go-build -gno-record-gcc-switches\"\n[Testing/Lint]   | \n[Testing/Lint]   \u2753  ::endgroup::\n[Testing/Lint]   | Installed Go in 1774ms\n[Testing/Lint]   \ud83d\udcbe  ::save-state name=CACHE_KEY::golangci-lint.cache-2786-af1d749d48ab6adcba9ba99a10acae8d2c000740\n[Testing/Lint]   \ud83d\udcac  ::debug::Resolved Keys:\n[Testing/Lint]   \ud83d\udcac  ::debug::[\"golangci-lint.cache-2786-af1d749d48ab6adcba9ba99a10acae8d2c000740\",\"golangci-lint.cache-2786-\",\"golangci-lint.cache-\"]\n[Testing/Lint]   \ud83d\udcac  ::debug::Checking zstd --version\n[Testing/Lint]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[Testing/Lint]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Testing/Lint]   | Requested golangci-lint 'latest', using 'v1.52.2', calculation took 2203ms\n[Testing/Lint]   | Installing golangci-lint v1.52.2...\n[Testing/Lint]   | Downloading https://github.com/golangci/golangci-lint/releases/download/v1.52.2/golangci-lint-1.52.2-linux-amd64.tar.gz ...\n[Testing/Lint]   \ud83d\udcac  ::debug::Downloading https://github.com/golangci/golangci-lint/releases/download/v1.52.2/golangci-lint-1.52.2-linux-amd64.tar.gz\n[Testing/Lint]   \ud83d\udcac  ::debug::Destination /tmp/f10ad2e8-1370-4e4f-b440-863059cb583d\n[Testing/Lint]   \ud83d\udcac  ::debug::download complete\n[Testing/Lint]   \ud83d\udcac  ::debug::Checking tar --version\n[Testing/Lint]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Testing/Lint]   | [command]/usr/bin/tar xz --overwrite --warning=no-unknown-keyword -C /home/runneradmin -f /tmp/f10ad2e8-1370-4e4f-b440-863059cb583d\n[Testing/Lint]   | Installed golangci-lint into /home/runneradmin/golangci-lint-1.52.2-linux-amd64/golangci-lint in 2421ms\n[Testing/Lint]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Testing/Lint]   \ud83d\udea7  ::warning::getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[Testing/Lint]   | Prepared env in 11998ms\n[Testing/Lint]   \u2753  ::endgroup::\n[Testing/Lint]   \u2753  ::group::run golangci-lint\n[Testing/Lint]   | Running [/home/runneradmin/golangci-lint-1.52.2-linux-amd64/golangci-lint run --out-format=github-actions] in [] ...\n[Testing/Lint]   \u2757  ::error file=eventstore.go,line=6,col=2:://go:build comment without // +build comment (typecheck)\n[Testing/Lint]   \u2757  ::error file=errors.go,line=1::: //go:build comment without // +build comment (typecheck)\n[Testing/Lint]   \u2757  ::error file=aggregate/aggregate.go,line=1::: //go:build comment without // +build comment (typecheck)\n[Testing/Lint]   \u2757  ::error file=driver/generic/query_executor.go,line=1::: //go:build comment without // +build comment (typecheck)\n[Testing/Lint]   \u2757  ::error file=driver/inmemory/payload_registry.go,line=7,col=2:://go:build comment without // +build comment (typecheck)\n[Testing/Lint]   \u2757  ::error file=example/aggregate/main.go,line=7,col=2::could not import github.com/hellofresh/goengine/v2/aggregate (-: //go:build comment without // +build comment) (typecheck)\n[Testing/Lint]   \u2757  ::error file=example/repository/main.go,line=9,col=2:://go:build comment without // +build comment (typecheck)\n[Testing/Lint]   \u2757  ::error file=example/repository/bank_account.go,line=6,col=2::could not import github.com/hellofresh/goengine/v2/aggregate (-: //go:build comment without // +build comment) (typecheck)\n[Testing/Lint]   \u2757  ::error file=example/repository/bank_account_repository.go,line=6,col=2::could not import github.com/hellofresh/goengine/v2 (-: //go:build comment without // +build comment) (typecheck)\n[Testing/Lint]   \u2757  ::error file=example/repository/main.go,line=8,col=2::could not import github.com/hellofresh/goengine/v2/driver/inmemory (-: //go:build comment without // +build comment) (typecheck)\n[Testing/Lint]   \u2757  ::error file=example/repository/bank_account_repository.go,line=19,col=37::undefined: goengine (typecheck)\n[Testing/Lint]   \u2757  ::error file=example/repository/main.go,line=18,col=17::undefined: goengine (typecheck)\n[Testing/Lint]   \u2757  ::error file=extension/pq/listener.go,line=11,col=2::could not import github.com/hellofresh/goengine/v2 (-: //go:build comment without // +build comment) (typecheck)\n[Testing/Lint]   \u2757  ::error file=extension/pq/listener.go,line=12,col=2::could not import github.com/hellofresh/goengine/v2/driver/sql (-: //go:build comment without // +build comment) (typecheck)\n[Testing/Lint]   \u2757  ::error file=extension/pq/listener.go,line=26,col=10::undefined: goengine (typecheck)\n[Testing/Lint]   \u2757  ::error file=mocks/event_store.go,line=12,col=11::could not import github.com/hellofresh/goengine/v2 (-: //go:build comment without // +build comment) (typecheck)\n[Testing/Lint]   \u2757  ::error file=mocks/aggregate/aggregate.go,line=11,col=12::could not import github.com/hellofresh/goengine/v2/aggregate (-: //go:build comment without // +build comment) (typecheck)\n[Testing/Lint]   \u2757  ::error file=mocks/driver/sql/notification_queue.go,line=12,col=6::could not import github.com/hellofresh/goengine/v2/driver/sql (-: //go:build comment without // +build comment) (typecheck)\n[Testing/Lint]   | \n[Testing/Lint]   | level=error msg=\"[linters_context] typechecking error: //go:build comment without // +build comment\"\n[Testing/Lint]   | \n[Testing/Lint]   \u2757  ::error::issues found\n[Testing/Lint]   | Ran golangci-lint in 27767ms\n[Testing/Lint]   \u2753  ::endgroup::\n[Testing/Lint]   \u274c  Failure - Main golangci-lint\n[Testing/Lint]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.16.7/x64\n[Testing/Lint]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.16.7/x64/bin\n[Testing/Lint]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Testing/Lint]   \u2699  ::add-path:: /home/runneradmin/golangci-lint-1.52.2-linux-amd64\n[Testing/Lint] exitcode '1': failure\n[Testing/Lint] \u2b50 Run Post golangci-lint\n[Testing/Lint]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/golangci-golangci-lint-action@v2/dist/post_run/index.js] user= workdir=\n[Testing/Lint]   \ud83d\udcac  ::debug::Checking zstd --version\n[Testing/Lint]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[Testing/Lint]   \ud83d\udcac  ::debug::Reserving Cache\n[Testing/Lint]   \ud83d\udcac  ::debug::reserveCache - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Testing/Lint]   \ud83d\udcac  ::debug::reserveCache - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Testing/Lint]   | [warning] reserveCache failed: Cache Service Url not found, unable to restore cache.\n[Testing/Lint]   \u2705  Success - Post golangci-lint\n[Testing/Lint] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'Lint' failed\n"
}