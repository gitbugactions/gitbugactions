{
    "repository": "google/cadvisor",
    "clone_url": "https://github.com/google/cadvisor.git",
    "timestamp": "2023-05-30T10:42:57.664801Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Test/test            ] \ud83d\ude80  Start image=crawlergpt:latest\n[Test/test-integration] \ud83d\ude80  Start image=crawlergpt:latest\n[Test/test-integration]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test/test            ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test/test-integration]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/test-integration]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/test            ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/test-integration]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/google-cadvisor] user=0 workdir=\n[Test/test            ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/test-integration]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v1\n[Test/test-integration] \ud83e\uddea  Matrix: map[environment-variables:build/config/plain.sh go-versions:1.20 platform:ubuntu-latest]\n[Test/test-integration] \u2b50 Run Main Checkout code\n[Test/test-integration]   \u2705  Success - Main Checkout code\n[Test/test-integration] \u2b50 Run Main Run integration tests\n[Test/test-integration]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[Test/test-integration]   | + source build/config/plain.sh\n[Test/test-integration]   | ++ unset GO_FLAGS\n[Test/test-integration]   | ++ unset PACKAGES\n[Test/test-integration]   | ++ unset BUILD_PACKAGES\n[Test/test-integration]   | ++ unset CADVISOR_ARGS\n[Test/test-integration]   | + make docker-test-integration\n[Test/test-integration]   | +++ dirname ./build/integration-in-docker.sh\n[Test/test-integration]   | ++ cd ./build/..\n[Test/test-integration]   | ++ pwd -P\n[Test/test-integration]   | + ROOT=/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/google-cadvisor\n[Test/test-integration]   | ++ mktemp -d\n[Test/test-integration]   | + TMPDIR=/tmp/tmp.382iRsXydP\n[Test/test-integration]   | + trap delete EXIT INT TERM\n[Test/test-integration]   | + GO_FLAGS='-tags=netgo -race'\n[Test/test-integration]   | + PACKAGES=sudo\n[Test/test-integration]   | + BUILD_PACKAGES=\n[Test/test-integration]   | + CADVISOR_ARGS=\n[Test/test-integration]   | + GOLANG_VERSION=1.20\n[Test/test-integration]   | + run_tests '-tags=netgo -race' sudo '' ''\n[Test/test-integration]   | + BUILD_CMD='git config --global safe.directory /go/src/github.com/google/cadvisor && env GOOS=linux GOARCH=amd64 GO_FLAGS='\\''-tags=netgo -race'\\'' ./build/build.sh &&     env GOOS=linux GOFLAGS='\\''-tags=netgo -race'\\'' go test -c github.com/google/cadvisor/integration/tests/api &&     env GOOS=linux GOFLAGS='\\''-tags=netgo -race'\\'' go test -c github.com/google/cadvisor/integration/tests/healthz'\n[Test/test-integration]   | + '[' '' '!=' '' ']'\n[Test/test-integration]   | + docker run --rm -w /go/src/github.com/google/cadvisor -v /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/google-cadvisor:/go/src/github.com/google/cadvisor golang:1.20-buster bash -c 'git config --global safe.directory /go/src/github.com/google/cadvisor && env GOOS=linux GOARCH=amd64 GO_FLAGS='\\''-tags=netgo -race'\\'' ./build/build.sh &&     env GOOS=linux GOFLAGS='\\''-tags=netgo -race'\\'' go test -c github.com/google/cadvisor/integration/tests/api &&     env GOOS=linux GOFLAGS='\\''-tags=netgo -race'\\'' go test -c github.com/google/cadvisor/integration/tests/healthz'\n[Test/test-integration]   | docker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/create\": dial unix /var/run/docker.sock: connect: permission denied.\n[Test/test-integration]   | See 'docker run --help'.\n[Test/test-integration]   | + delete\n[Test/test-integration]   | + echo 'Deleting /tmp/tmp.382iRsXydP...'\n[Test/test-integration]   | + [[ 1012 -ne 0 ]]\n[Test/test-integration]   | + sudo rm -rf /tmp/tmp.382iRsXydP\n[Test/test-integration]   | Deleting /tmp/tmp.382iRsXydP...\n[Test/test-integration]   | make: *** [Makefile:45: docker-test-integration] Error 126\n[Test/test-integration]   \u274c  Failure - Main Run integration tests\n[Test/test-integration] exitcode '2': failure\n[Test/test-integration] \u2b50 Run Main Upload cAdvisor log file\n[Test/test-integration]   \u274c  Failure - Main Upload cAdvisor log file\n[Test/test-integration] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/5178b14c3e2671f0c8ab4f95843128fc3bd89d0dd56e618ccc8b557619420ef4/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Test/test-integration] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}