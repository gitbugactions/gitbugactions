{
    "repository": "yanzay/tbot",
    "clone_url": "https://github.com/yanzay/tbot.git",
    "timestamp": "2023-05-30T11:17:08.221102Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Test/Go] \ud83d\ude80  Start image=crawlergpt:latest\n[Test/Go]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test/Go]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/Go]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/Go]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/yanzay-tbot] user=0 workdir=\n[Test/Go]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v1\n[Test/Go]   \u2601  git clone 'https://github.com/yanzay/notify-telegram' # ref=v0.1.0\n[Test/Go] \ud83e\uddea  Matrix: map[go_version:1.11]\n[Test/Go] \u2b50 Run Main Set up Go 1.11\n[Test/Go]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v1/ dst=/var/run/act/actions/actions-setup-go@v1/\n[Test/Go]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v1/] user=0 workdir=\n[Test/Go]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v1/lib/setup-go.js] user= workdir=\n[Test/Go]   \ud83d\udcac  ::debug::evaluating 19 versions\n[Test/Go]   \ud83d\udcac  ::debug::matched: 1.11.13\n[Test/Go]   \ud83d\udcac  ::debug::isExplicit: 1.11.13\n[Test/Go]   \ud83d\udcac  ::debug::explicit? true\n[Test/Go]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.11.13/x64\n[Test/Go]   \ud83d\udcac  ::debug::not found\n[Test/Go]   \ud83d\udcac  ::debug::Downloading Go from: https://storage.googleapis.com/golang/go1.11.13.linux-amd64.tar.gz\n[Test/Go]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.11.13.linux-amd64.tar.gz\n[Test/Go]   \ud83d\udcac  ::debug::Downloading /tmp/56cd425a-6f3f-4f7a-a582-06040be63e3d\n[Test/Go]   \ud83d\udcac  ::debug::download complete\n[Test/Go]   | [command]/usr/bin/tar xzC /tmp/1512dfab-175d-4f31-a0f0-1a5d3c136201 -f /tmp/56cd425a-6f3f-4f7a-a582-06040be63e3d\n[Test/Go]   \ud83d\udcac  ::debug::Caching tool go 1.11.13 x64\n[Test/Go]   \ud83d\udcac  ::debug::source dir: /tmp/1512dfab-175d-4f31-a0f0-1a5d3c136201/go\n[Test/Go]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.11.13/x64\n[Test/Go]   \ud83d\udcac  ::debug::finished caching tool\n[Test/Go]   \ud83d\udcac  ::debug::Go tool is cached under /opt/hostedtoolcache/go/1.11.13/x64\n[Test/Go]   \u2753 add-matcher /run/act/actions/actions-setup-go@v1/.github/go.json\n[Test/Go]   \u2705  Success - Main Set up Go 1.11\n[Test/Go]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.11.13/x64\n[Test/Go]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.11.13/x64/bin\n[Test/Go] \u2b50 Run Main Check out code into the Go module directory\n[Test/Go]   \u2705  Success - Main Check out code into the Go module directory\n[Test/Go] \u2b50 Run Main Run tests\n[Test/Go]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test/Go]   | === RUN   TestNewClient\n[Test/Go]   | --- PASS: TestNewClient (0.00s)\n[Test/Go]   | === RUN   TestGetMe\n[Test/Go]   | --- PASS: TestGetMe (0.00s)\n[Test/Go]   | === RUN   TestSendMessage\n[Test/Go]   | --- PASS: TestSendMessage (0.00s)\n[Test/Go]   | === RUN   TestSendMessageWithOptions\n[Test/Go]   | --- PASS: TestSendMessageWithOptions (0.03s)\n[Test/Go]   | === RUN   TestForwardMessage\n[Test/Go]   | --- PASS: TestForwardMessage (0.00s)\n[Test/Go]   | === RUN   TestSendAudio\n[Test/Go]   | --- PASS: TestSendAudio (0.00s)\n[Test/Go]   | === RUN   TestSendAudioFile\n[Test/Go]   | --- PASS: TestSendAudioFile (0.00s)\n[Test/Go]   | === RUN   TestSendPhoto\n[Test/Go]   | --- PASS: TestSendPhoto (0.00s)\n[Test/Go]   | === RUN   TestSendPhotoFile\n[Test/Go]   | --- PASS: TestSendPhotoFile (0.00s)\n[Test/Go]   | === RUN   TestSendDice\n[Test/Go]   | --- PASS: TestSendDice (0.00s)\n[Test/Go]   | PASS\n[Test/Go]   | ok  \tgithub.com/yanzay/tbot/v2\t1.400s\n[Test/Go]   \u2705  Success - Main Run tests\n[Test/Go] \u2b50 Run Main Notify\n[Test/Go]   \ud83d\udc33  docker build -t act-yanzay-notify-telegram-v0-1-0-dockeraction:latest /home/andre-silva/.cache/act/yanzay-notify-telegram@v0.1.0/\n[Test/Go]   \u274c  Failure - Main Notify\n[Test/Go] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/cc26c74ff986ab4c5ebf02695e266bcc2fd5eed79c2656b6680fcff27bb0e6b0/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Test/Go] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}