{
    "repository": "SebastiaanKlippert/go-foxpro-dbf",
    "clone_url": "https://github.com/SebastiaanKlippert/go-foxpro-dbf.git",
    "timestamp": "2023-05-30T11:18:36.207169Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Build & test/build-and-test] \ud83d\ude80  Start image=crawlergpt:latest\n[Build & test/build-and-test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build & test/build-and-test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build & test/build-and-test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build & test/build-and-test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/SebastiaanKlippert-go-foxpro-dbf] user=0 workdir=\n[Build & test/build-and-test]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v3\n[Build & test/build-and-test]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[Build & test/build-and-test] \u2b50 Run Main actions/checkout@v3\n[Build & test/build-and-test]   \u2705  Success - Main actions/checkout@v3\n[Build & test/build-and-test] \u2b50 Run Main Set up Go\n[Build & test/build-and-test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v3/ dst=/var/run/act/actions/actions-setup-go@v3/\n[Build & test/build-and-test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v3/] user=0 workdir=\n[Build & test/build-and-test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v3/dist/setup/index.js] user= workdir=\n[Build & test/build-and-test]   | Setup go version spec stable\n[Build & test/build-and-test]   | stable version resolved as 1.20.4\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::isExplicit: 1.20.4\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::explicit? true\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.20.4/x64\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::not found\n[Build & test/build-and-test]   | Attempting to download 1.20.4...\n[Build & test/build-and-test]   | matching 1.20.4...\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.20.4\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::matched 1.20.4\n[Build & test/build-and-test]   | Acquiring 1.20.4 from https://github.com/actions/go-versions/releases/download/1.20.4-4868896393/go-1.20.4-linux-x64.tar.gz\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/go-versions/releases/download/1.20.4-4868896393/go-1.20.4-linux-x64.tar.gz\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::Destination /tmp/ae0822ee-7fe0-48a1-a9e9-279df8fa3c79\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::download complete\n[Build & test/build-and-test]   | Extracting Go...\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::Checking tar --version\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Build & test/build-and-test]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/b6304c81-40dc-4817-9e5d-70ef7a1613a9 -f /tmp/ae0822ee-7fe0-48a1-a9e9-279df8fa3c79\n[Build & test/build-and-test]   | Successfully extracted go to /tmp/b6304c81-40dc-4817-9e5d-70ef7a1613a9\n[Build & test/build-and-test]   | Adding to the cache ...\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::Caching tool go 1.20.4 x64\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::source dir: /tmp/b6304c81-40dc-4817-9e5d-70ef7a1613a9\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.20.4/x64\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::finished caching tool\n[Build & test/build-and-test]   | Successfully cached go to /opt/hostedtoolcache/go/1.20.4/x64\n[Build & test/build-and-test]   | Added go to the path\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.20.4/x64/bin/go:\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Build & test/build-and-test]   \ud83d\udcac  ::debug::add bin true\n[Build & test/build-and-test]   | Successfully set up Go version stable\n[Build & test/build-and-test]   \u2753 add-matcher /run/act/actions/actions-setup-go@v3/matchers.json\n[Build & test/build-and-test]   | go version go1.20.4 linux/amd64\n[Build & test/build-and-test]   | \n[Build & test/build-and-test]   \u2753  ::group::go env\n[Build & test/build-and-test]   | GO111MODULE=\"\"\n[Build & test/build-and-test]   | GOARCH=\"amd64\"\n[Build & test/build-and-test]   | GOBIN=\"\"\n[Build & test/build-and-test]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Build & test/build-and-test]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Build & test/build-and-test]   | GOEXE=\"\"\n[Build & test/build-and-test]   | GOEXPERIMENT=\"\"\n[Build & test/build-and-test]   | GOFLAGS=\"\"\n[Build & test/build-and-test]   | GOHOSTARCH=\"amd64\"\n[Build & test/build-and-test]   | GOHOSTOS=\"linux\"\n[Build & test/build-and-test]   | GOINSECURE=\"\"\n[Build & test/build-and-test]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Build & test/build-and-test]   | GONOPROXY=\"\"\n[Build & test/build-and-test]   | GONOSUMDB=\"\"\n[Build & test/build-and-test]   | GOOS=\"linux\"\n[Build & test/build-and-test]   | GOPATH=\"/home/runneradmin/go\"\n[Build & test/build-and-test]   | GOPRIVATE=\"\"\n[Build & test/build-and-test]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Build & test/build-and-test]   | GOROOT=\"/opt/hostedtoolcache/go/1.20.4/x64\"\n[Build & test/build-and-test]   | GOSUMDB=\"sum.golang.org\"\n[Build & test/build-and-test]   | GOTMPDIR=\"\"\n[Build & test/build-and-test]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.20.4/x64/pkg/tool/linux_amd64\"\n[Build & test/build-and-test]   | GOVCS=\"\"\n[Build & test/build-and-test]   | GOVERSION=\"go1.20.4\"\n[Build & test/build-and-test]   | GCCGO=\"gccgo\"\n[Build & test/build-and-test]   | GOAMD64=\"v1\"\n[Build & test/build-and-test]   | AR=\"ar\"\n[Build & test/build-and-test]   | CC=\"gcc\"\n[Build & test/build-and-test]   | CXX=\"g++\"\n[Build & test/build-and-test]   | CGO_ENABLED=\"1\"\n[Build & test/build-and-test]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/SebastiaanKlippert-go-foxpro-dbf/go.mod\"\n[Build & test/build-and-test]   | GOWORK=\"\"\n[Build & test/build-and-test]   | CGO_CFLAGS=\"-O2 -g\"\n[Build & test/build-and-test]   | CGO_CPPFLAGS=\"\"\n[Build & test/build-and-test]   | CGO_CXXFLAGS=\"-O2 -g\"\n[Build & test/build-and-test]   | CGO_FFLAGS=\"-O2 -g\"\n[Build & test/build-and-test]   | CGO_LDFLAGS=\"-O2 -g\"\n[Build & test/build-and-test]   | PKG_CONFIG=\"pkg-config\"\n[Build & test/build-and-test]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build2556422909=/tmp/go-build -gno-record-gcc-switches\"\n[Build & test/build-and-test]   | \n[Build & test/build-and-test]   \u2753  ::endgroup::\n[Build & test/build-and-test]   \u2705  Success - Main Set up Go\n[Build & test/build-and-test]   \u2699  ::set-output:: go-version=1.20.4\n[Build & test/build-and-test]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.20.4/x64/bin\n[Build & test/build-and-test]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Build & test/build-and-test] \u2b50 Run Main Build\n[Build & test/build-and-test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Build & test/build-and-test]   | go: downloading golang.org/x/text v0.7.0\n[Build & test/build-and-test]   | internal/goarch\n[Build & test/build-and-test]   | internal/goexperiment\n[Build & test/build-and-test]   | internal/unsafeheader\n[Build & test/build-and-test]   | internal/coverage/rtcov\n[Build & test/build-and-test]   | internal/goos\n[Build & test/build-and-test]   | unicode\n[Build & test/build-and-test]   | unicode/utf8\n[Build & test/build-and-test]   | encoding\n[Build & test/build-and-test]   | internal/itoa\n[Build & test/build-and-test]   | golang.org/x/text/encoding/internal/identifier\n[Build & test/build-and-test]   | math/bits\n[Build & test/build-and-test]   | github.com/SebastiaanKlippert/go-foxpro-dbf/jd\n[Build & test/build-and-test]   | unicode/utf16\n[Build & test/build-and-test]   | internal/cpu\n[Build & test/build-and-test]   | internal/race\n[Build & test/build-and-test]   | runtime/internal/syscall\n[Build & test/build-and-test]   | runtime/internal/atomic\n[Build & test/build-and-test]   | runtime/internal/math\n[Build & test/build-and-test]   | internal/abi\n[Build & test/build-and-test]   | sync/atomic\n[Build & test/build-and-test]   | runtime/internal/sys\n[Build & test/build-and-test]   | internal/bytealg\n[Build & test/build-and-test]   | math\n[Build & test/build-and-test]   | runtime\n[Build & test/build-and-test]   | internal/reflectlite\n[Build & test/build-and-test]   | sync\n[Build & test/build-and-test]   | internal/testlog\n[Build & test/build-and-test]   | errors\n[Build & test/build-and-test]   | sort\n[Build & test/build-and-test]   | io\n[Build & test/build-and-test]   | internal/oserror\n[Build & test/build-and-test]   | internal/safefilepath\n[Build & test/build-and-test]   | path\n[Build & test/build-and-test]   | strconv\n[Build & test/build-and-test]   | syscall\n[Build & test/build-and-test]   | bytes\n[Build & test/build-and-test]   | strings\n[Build & test/build-and-test]   | reflect\n[Build & test/build-and-test]   | golang.org/x/text/transform\n[Build & test/build-and-test]   | golang.org/x/text/encoding\n[Build & test/build-and-test]   | golang.org/x/text/encoding/internal\n[Build & test/build-and-test]   | internal/syscall/execenv\n[Build & test/build-and-test]   | time\n[Build & test/build-and-test]   | internal/syscall/unix\n[Build & test/build-and-test]   | golang.org/x/text/encoding/charmap\n[Build & test/build-and-test]   | encoding/binary\n[Build & test/build-and-test]   | internal/fmtsort\n[Build & test/build-and-test]   | io/fs\n[Build & test/build-and-test]   | internal/poll\n[Build & test/build-and-test]   | encoding/base64\n[Build & test/build-and-test]   | os\n[Build & test/build-and-test]   | fmt\n[Build & test/build-and-test]   | path/filepath\n[Build & test/build-and-test]   | encoding/json\n[Build & test/build-and-test]   | github.com/SebastiaanKlippert/go-foxpro-dbf\n[Build & test/build-and-test]   \u2705  Success - Main Build\n[Build & test/build-and-test] \u2b50 Run Main Test\n[Build & test/build-and-test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Build & test/build-and-test]   | Running tests with file from disk...\n[Build & test/build-and-test]   | === RUN   TestToFloat64\n[Build & test/build-and-test]   | --- PASS: TestToFloat64 (0.00s)\n[Build & test/build-and-test]   | === RUN   TestToInt64\n[Build & test/build-and-test]   | --- PASS: TestToInt64 (0.00s)\n[Build & test/build-and-test]   | === RUN   TestToString\n[Build & test/build-and-test]   | --- PASS: TestToString (0.00s)\n[Build & test/build-and-test]   | === RUN   TestToTrimmedString\n[Build & test/build-and-test]   | --- PASS: TestToTrimmedString (0.00s)\n[Build & test/build-and-test]   | === RUN   TestToTime\n[Build & test/build-and-test]   | --- PASS: TestToTime (0.00s)\n[Build & test/build-and-test]   | === RUN   TestToBool\n[Build & test/build-and-test]   | --- PASS: TestToBool (0.00s)\n[Build & test/build-and-test]   | === RUN   TestUTF8Decoder_Decode\n[Build & test/build-and-test]   | --- PASS: TestUTF8Decoder_Decode (0.00s)\n[Build & test/build-and-test]   | === RUN   TestWin1250Decoder_Decode\n[Build & test/build-and-test]   | --- PASS: TestWin1250Decoder_Decode (0.00s)\n[Build & test/build-and-test]   | === RUN   TestUTF8UTF8Validator_Decode\n[Build & test/build-and-test]   | --- PASS: TestUTF8UTF8Validator_Decode (0.00s)\n[Build & test/build-and-test]   | === RUN   TestFieldHeader\n[Build & test/build-and-test]   | --- PASS: TestFieldHeader (0.00s)\n[Build & test/build-and-test]   | === RUN   TestStatAndFileSize\n[Build & test/build-and-test]   | --- PASS: TestStatAndFileSize (0.00s)\n[Build & test/build-and-test]   | === RUN   TestFieldNames\n[Build & test/build-and-test]   | --- PASS: TestFieldNames (0.00s)\n[Build & test/build-and-test]   | === RUN   TestNumFields\n[Build & test/build-and-test]   | --- PASS: TestNumFields (0.00s)\n[Build & test/build-and-test]   | === RUN   TestGoTo\n[Build & test/build-and-test]   | --- PASS: TestGoTo (0.00s)\n[Build & test/build-and-test]   | === RUN   TestSkip\n[Build & test/build-and-test]   | --- PASS: TestSkip (0.00s)\n[Build & test/build-and-test]   | === RUN   TestFieldPos\n[Build & test/build-and-test]   | --- PASS: TestFieldPos (0.00s)\n[Build & test/build-and-test]   | === RUN   TestRecord\n[Build & test/build-and-test]   | --- PASS: TestRecord (0.00s)\n[Build & test/build-and-test]   | === RUN   TestField\n[Build & test/build-and-test]   | --- PASS: TestField (0.00s)\n[Build & test/build-and-test]   | === RUN   TestRecordToJson\n[Build & test/build-and-test]   | --- PASS: TestRecordToJson (0.00s)\n[Build & test/build-and-test]   | === RUN   TestClose\n[Build & test/build-and-test]   | --- PASS: TestClose (0.00s)\n[Build & test/build-and-test]   | === RUN   TestDbase30\n[Build & test/build-and-test]   | --- PASS: TestDbase30 (0.00s)\n[Build & test/build-and-test]   | === RUN   TestDbase31\n[Build & test/build-and-test]   | --- PASS: TestDbase31 (0.00s)\n[Build & test/build-and-test]   | === RUN   TestDkeza\n[Build & test/build-and-test]   |     reader_test.go:516: DTIME: 2016-11-14 09:10:44 +0000 UTC\n[Build & test/build-and-test]   | --- PASS: TestDkeza (0.00s)\n[Build & test/build-and-test]   | === RUN   TestSetValidFileVersionFunc\n[Build & test/build-and-test]   | --- PASS: TestSetValidFileVersionFunc (0.00s)\n[Build & test/build-and-test]   | goos: linux\n[Build & test/build-and-test]   | goarch: amd64\n[Build & test/build-and-test]   | pkg: github.com/SebastiaanKlippert/go-foxpro-dbf\n[Build & test/build-and-test]   | cpu: AMD EPYC 7742 64-Core Processor                \n[Build & test/build-and-test]   | BenchmarkReadRecords\n[Build & test/build-and-test]   | BenchmarkReadRecords-128              \t     248\t   4340504 ns/op\n[Build & test/build-and-test]   | BenchmarkRecordToJSONWithTrim\n[Build & test/build-and-test]   | BenchmarkRecordToJSONWithTrim-128     \t    2160\t    499921 ns/op\n[Build & test/build-and-test]   | PASS\n[Build & test/build-and-test]   | \tgithub.com/SebastiaanKlippert/go-foxpro-dbf\tcoverage: 80.4% of statements\n[Build & test/build-and-test]   | Running tests with byte stream...\n[Build & test/build-and-test]   | === RUN   TestToFloat64\n[Build & test/build-and-test]   | --- PASS: TestToFloat64 (0.00s)\n[Build & test/build-and-test]   | === RUN   TestToInt64\n[Build & test/build-and-test]   | --- PASS: TestToInt64 (0.00s)\n[Build & test/build-and-test]   | === RUN   TestToString\n[Build & test/build-and-test]   | --- PASS: TestToString (0.00s)\n[Build & test/build-and-test]   | === RUN   TestToTrimmedString\n[Build & test/build-and-test]   | --- PASS: TestToTrimmedString (0.00s)\n[Build & test/build-and-test]   | === RUN   TestToTime\n[Build & test/build-and-test]   | --- PASS: TestToTime (0.00s)\n[Build & test/build-and-test]   | === RUN   TestToBool\n[Build & test/build-and-test]   | --- PASS: TestToBool (0.00s)\n[Build & test/build-and-test]   | === RUN   TestUTF8Decoder_Decode\n[Build & test/build-and-test]   | --- PASS: TestUTF8Decoder_Decode (0.00s)\n[Build & test/build-and-test]   | === RUN   TestWin1250Decoder_Decode\n[Build & test/build-and-test]   | --- PASS: TestWin1250Decoder_Decode (0.00s)\n[Build & test/build-and-test]   | === RUN   TestUTF8UTF8Validator_Decode\n[Build & test/build-and-test]   | --- PASS: TestUTF8UTF8Validator_Decode (0.00s)\n[Build & test/build-and-test]   | === RUN   TestFieldHeader\n[Build & test/build-and-test]   | --- PASS: TestFieldHeader (0.00s)\n[Build & test/build-and-test]   | === RUN   TestStatAndFileSize\n[Build & test/build-and-test]   |     reader_test.go:84: Stat and FileSize not testing when using stream\n[Build & test/build-and-test]   | --- SKIP: TestStatAndFileSize (0.00s)\n[Build & test/build-and-test]   | === RUN   TestFieldNames\n[Build & test/build-and-test]   | --- PASS: TestFieldNames (0.00s)\n[Build & test/build-and-test]   | === RUN   TestNumFields\n[Build & test/build-and-test]   | --- PASS: TestNumFields (0.00s)\n[Build & test/build-and-test]   | === RUN   TestGoTo\n[Build & test/build-and-test]   | --- PASS: TestGoTo (0.00s)\n[Build & test/build-and-test]   | === RUN   TestSkip\n[Build & test/build-and-test]   | --- PASS: TestSkip (0.00s)\n[Build & test/build-and-test]   | === RUN   TestFieldPos\n[Build & test/build-and-test]   | --- PASS: TestFieldPos (0.00s)\n[Build & test/build-and-test]   | === RUN   TestRecord\n[Build & test/build-and-test]   | --- PASS: TestRecord (0.00s)\n[Build & test/build-and-test]   | === RUN   TestField\n[Build & test/build-and-test]   | --- PASS: TestField (0.00s)\n[Build & test/build-and-test]   | === RUN   TestRecordToJson\n[Build & test/build-and-test]   | --- PASS: TestRecordToJson (0.00s)\n[Build & test/build-and-test]   | === RUN   TestClose\n[Build & test/build-and-test]   | --- PASS: TestClose (0.00s)\n[Build & test/build-and-test]   | === RUN   TestDbase30\n[Build & test/build-and-test]   |     reader_test.go:322: TestDbase30 is only tested from disk\n[Build & test/build-and-test]   | --- SKIP: TestDbase30 (0.00s)\n[Build & test/build-and-test]   | === RUN   TestDbase31\n[Build & test/build-and-test]   |     reader_test.go:392: TestDbase31 is only tested from disk\n[Build & test/build-and-test]   | --- SKIP: TestDbase31 (0.00s)\n[Build & test/build-and-test]   | === RUN   TestDkeza\n[Build & test/build-and-test]   |     reader_test.go:461: TestDkeza is only tested from disk\n[Build & test/build-and-test]   | --- SKIP: TestDkeza (0.00s)\n[Build & test/build-and-test]   | === RUN   TestSetValidFileVersionFunc\n[Build & test/build-and-test]   | --- PASS: TestSetValidFileVersionFunc (0.00s)\n[Build & test/build-and-test]   | BenchmarkReadRecords\n[Build & test/build-and-test]   | BenchmarkReadRecords-128              \t     204\t   5569363 ns/op\n[Build & test/build-and-test]   | BenchmarkRecordToJSONWithTrim\n[Build & test/build-and-test]   | BenchmarkRecordToJSONWithTrim-128     \t    2092\t    593596 ns/op\n[Build & test/build-and-test]   | PASS\n[Build & test/build-and-test]   | ok  \tgithub.com/SebastiaanKlippert/go-foxpro-dbf\t6.111s\n[Build & test/build-and-test]   \u2705  Success - Main Test\n[Build & test/build-and-test] \u2b50 Run Main CodeCov\n[Build & test/build-and-test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/codecov-codecov-action@v3/ dst=/var/run/act/actions/codecov-codecov-action@v3/\n[Build & test/build-and-test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/codecov-codecov-action@v3/] user=0 workdir=\n[Build & test/build-and-test] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/images/crawlergpt:latest/json\": context canceled\n",
    "actions_stderr": "panic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x48 pc=0xa13542]\n\ngoroutine 30 [running]:\ngithub.com/nektos/act/pkg/container.(*containerReference).extractFromImageEnv.func1({0xd3dd88, 0xc000897e30})\n\t/home/runner/work/act/act/pkg/container/docker_run.go:468 +0x1e2\ngithub.com/nektos/act/pkg/common.Executor.IfNot.func1({0xd3dd88, 0xc000897e30})\n\t/home/runner/work/act/act/pkg/common/executor.go:159 +0x56\ngithub.com/nektos/act/pkg/runner.(*RunContext).ApplyExtraPath(0xc000844500, {0xd3dd88, 0xc000897e30}, 0xc0005300d8)\n\t/home/runner/work/act/act/pkg/runner/run_context.go:305 +0x12b\ngithub.com/nektos/act/pkg/runner.runActionImpl.func1({0xd3dd88, 0xc000897e30})\n\t/home/runner/work/act/act/pkg/runner/action.go:159 +0x71d\ngithub.com/nektos/act/pkg/runner.(*stepActionRemote).main.func1({0xd3dd88, 0xc000897e30})\n\t/home/runner/work/act/act/pkg/runner/step_action_remote.go:127 +0x3cf\ngithub.com/nektos/act/pkg/runner.runStepExecutor.func1({0xd3dd88, 0xc000897e30})\n\t/home/runner/work/act/act/pkg/runner/step.go:137 +0xd39\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xd3dd88, 0xc000897e30})\n\t/home/runner/work/act/act/pkg/common/executor.go:141 +0x15b\ngithub.com/nektos/act/pkg/runner.newJobExecutor.func4({0xd3dd88, 0xc000897e30})\n\t/home/runner/work/act/act/pkg/runner/job_executor.go:77 +0x5a\ngithub.com/nektos/act/pkg/runner.useStepLogger.func1({0xd3dd88, 0xc000532780})\n\t/home/runner/work/act/act/pkg/runner/job_executor.go:191 +0x39e\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xd3dd88, 0xc000532780})\n\t/home/runner/work/act/act/pkg/common/executor.go:141 +0x15b\ngithub.com/nektos/act/pkg/common.Executor.Finally.func1({0xd3dd88, 0xc000532780})\n\t/home/runner/work/act/act/pkg/common/executor.go:175 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Finally.func1({0xd3dd88, 0xc000532780})\n\t/home/runner/work/act/act/pkg/common/executor.go:175 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Finally.func1({0xd3dd88, 0xc000532780})\n\t/home/runner/work/act/act/pkg/common/executor.go:175 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xd3dd88, 0xc000532780})\n\t/home/runner/work/act/act/pkg/common/executor.go:141 +0x15b\ngithub.com/nektos/act/pkg/runner.(*RunContext).Executor.func1({0xd3dd88, 0xc000532780})\n\t/home/runner/work/act/act/pkg/runner/run_context.go:442 +0x58\ngithub.com/nektos/act/pkg/runner.(*runnerImpl).NewPlanExecutor.func1.1({0xd3dd88, 0xc000745d70})\n\t/home/runner/work/act/act/pkg/runner/runner.go:145 +0x193\ngithub.com/nektos/act/pkg/common.NewParallelExecutor.func1.1(0x900000008?, 0x0?)\n\t/home/runner/work/act/act/pkg/common/executor.go:100 +0x5c\ncreated by github.com/nektos/act/pkg/common.NewParallelExecutor.func1\n\t/home/runner/work/act/act/pkg/common/executor.go:98 +0x89\n"
}