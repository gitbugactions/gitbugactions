{
    "repository": "maruel/panicparse",
    "clone_url": "https://github.com/maruel/panicparse.git",
    "timestamp": "2023-05-30T11:04:05.794455Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Run tests/lint: go1.20.x/ubuntu-latest  ] \ud83d\ude80  Start image=crawlergpt:latest\n[Run tests/test: go1.17.13/ubuntu-latest ] \ud83d\ude80  Start image=crawlergpt:latest\n[Run tests/test: go1.20.x/ubuntu-latest  ] \ud83d\ude80  Start image=crawlergpt:latest\n[Run tests/codeql: go1.20.x/ubuntu-latest] \ud83d\ude80  Start image=crawlergpt:latest\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/maruel-panicparse] user=0 workdir=\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/maruel-panicparse] user=0 workdir=\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/maruel-panicparse] user=0 workdir=\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/maruel-panicparse] user=0 workdir=\n[Run tests/test: go1.17.13/ubuntu-latest ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v4\n[Run tests/test: go1.17.13/ubuntu-latest ] \ud83e\uddea  Matrix: map[gover:1.17.13 os:ubuntu-latest]\n[Run tests/test: go1.17.13/ubuntu-latest ] \u2b50 Run Main actions/checkout@v3\n[Run tests/test: go1.17.13/ubuntu-latest ]   \u2705  Success - Main actions/checkout@v3\n[Run tests/test: go1.17.13/ubuntu-latest ] \u2b50 Run Main actions/setup-go@v4\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v4/ dst=/var/run/act/actions/actions-setup-go@v4/\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v4/] user=0 workdir=\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v4\n[Run tests/lint: go1.20.x/ubuntu-latest  ] \ud83e\uddea  Matrix: map[gover:1.20 os:ubuntu-latest]\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v4/dist/setup/index.js] user= workdir=\n[Run tests/lint: go1.20.x/ubuntu-latest  ] \u2b50 Run Main actions/checkout@v3\n[Run tests/test: go1.17.13/ubuntu-latest ]   | Setup go version spec =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::isExplicit: 1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.17.13/x64\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::not found\n[Run tests/test: go1.17.13/ubuntu-latest ]   | Attempting to download =1.17.13...\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::No manifest cached\n[Run tests/test: go1.17.13/ubuntu-latest ]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::HttpClientError: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v4/dist/setup/index.js:8907:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[Run tests/test: go1.17.13/ubuntu-latest ]   | Falling back to download directly from Go\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v4\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v4\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \u2705  Success - Main actions/checkout@v3\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.20.4 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.20.3 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.20.2 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.20.1 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.20.0 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.20.0-rc.3 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.20.0-rc.2 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.20.0-rc.1 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.19.9 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.19.8 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.19.7 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.19.6 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.19.5 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.19.4 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.19.3 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.19.2 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.19.1 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.19.0 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.19.0-rc.2 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.19.0-rc.1 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.19.0-beta.1 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.18.10 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.18.9 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.18.8 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.18.7 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.18.6 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.18.5 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.18.4 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.18.3 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.18.2 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.18.1 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.18.0 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.18.0-rc.1 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.18.0-beta.2 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.18.0-beta.1 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::check 1.17.13 satisfies =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::matched go1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   | Install from dist\n[Run tests/test: go1.17.13/ubuntu-latest ]   | Acquiring go1.17.13 from https://storage.googleapis.com/golang/go1.17.13.linux-amd64.tar.gz\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.17.13.linux-amd64.tar.gz\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::Destination /tmp/879f3168-13fd-4274-8234-c8574b852aa4\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \u2601  git clone 'https://github.com/github/codeql-action' # ref=v2\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[Run tests/lint: go1.20.x/ubuntu-latest  ] \u2b50 Run Main actions/setup-go@v4\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v4/ dst=/var/run/act/actions/actions-setup-go@v4/\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v4/] user=0 workdir=\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::download complete\n[Run tests/test: go1.17.13/ubuntu-latest ]   | Extracting Go...\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::Checking tar --version\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Run tests/test: go1.17.13/ubuntu-latest ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/f2a63404-239b-418f-b597-997629b325e0 -f /tmp/879f3168-13fd-4274-8234-c8574b852aa4\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \u2601  git clone 'https://github.com/github/codeql-action' # ref=v2\n[Run tests/test: go1.20.x/ubuntu-latest  ] \ud83e\uddea  Matrix: map[gover:1.20 os:ubuntu-latest]\n[Run tests/test: go1.20.x/ubuntu-latest  ] \u2b50 Run Main actions/checkout@v3\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \u2705  Success - Main actions/checkout@v3\n[Run tests/test: go1.17.13/ubuntu-latest ]   | Successfully extracted go to /tmp/f2a63404-239b-418f-b597-997629b325e0\n[Run tests/test: go1.17.13/ubuntu-latest ]   | Adding to the cache ...\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::Caching tool go 1.17.13 x64\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::source dir: /tmp/f2a63404-239b-418f-b597-997629b325e0/go\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.17.13/x64\n[Run tests/test: go1.20.x/ubuntu-latest  ] \u2b50 Run Main actions/setup-go@v4\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v4/ dst=/var/run/act/actions/actions-setup-go@v4/\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v4/] user=0 workdir=\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \u2601  git clone 'https://github.com/github/codeql-action' # ref=v2\n[Run tests/codeql: go1.20.x/ubuntu-latest] \ud83e\uddea  Matrix: map[gover:1.20 os:ubuntu-latest]\n[Run tests/codeql: go1.20.x/ubuntu-latest] \u2b50 Run Main actions/checkout@v3\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \u2705  Success - Main actions/checkout@v3\n[Run tests/codeql: go1.20.x/ubuntu-latest] \u2b50 Run Main actions/setup-go@v4\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v4/ dst=/var/run/act/actions/actions-setup-go@v4/\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v4/] user=0 workdir=\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::finished caching tool\n[Run tests/test: go1.17.13/ubuntu-latest ]   | Successfully cached go to /opt/hostedtoolcache/go/1.17.13/x64\n[Run tests/test: go1.17.13/ubuntu-latest ]   | Added go to the path\n[Run tests/test: go1.17.13/ubuntu-latest ]   | Successfully set up Go version =1.17.13\n[Run tests/test: go1.17.13/ubuntu-latest ]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.17.13/x64/bin/go:\n[Run tests/test: go1.17.13/ubuntu-latest ]   | go: unknown environment setting GO111MODULE=false\n[Run tests/test: go1.17.13/ubuntu-latest ]   \u2757  ::error::Command failed: go env GOPATH%0Ago: unknown environment setting GO111MODULE=false%0A\n[Run tests/test: go1.17.13/ubuntu-latest ]   \u274c  Failure - Main actions/setup-go@v4\n[Run tests/test: go1.17.13/ubuntu-latest ]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.17.13/x64/bin\n[Run tests/test: go1.17.13/ubuntu-latest ] exitcode '1': failure\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v4/dist/setup/index.js] user= workdir=\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v4/dist/setup/index.js] user= workdir=\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v4/dist/setup/index.js] user= workdir=\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | Setup go version spec ~1.20.0\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::isExplicit: \n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::explicit? false\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::match not found\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | Attempting to download ~1.20.0...\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::No manifest cached\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::HttpClientError: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v4/dist/setup/index.js:8907:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | Falling back to download directly from Go\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::check 1.20.4 satisfies ~1.20.0\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::matched go1.20.4\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | Install from dist\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | Acquiring go1.20.4 from https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::Destination /tmp/b37483c3-2b33-4374-a828-74916abc232e\n[Run tests/test: go1.17.13/ubuntu-latest ] \ud83c\udfc1  Job failed\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | Setup go version spec ~1.20.0\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::isExplicit: \n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::explicit? false\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::match not found\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | Attempting to download ~1.20.0...\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::No manifest cached\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::HttpClientError: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v4/dist/setup/index.js:8907:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | Falling back to download directly from Go\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::download complete\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | Extracting Go...\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::Checking tar --version\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/ae1c9281-780f-4348-ac2c-f99c615878a9 -f /tmp/b37483c3-2b33-4374-a828-74916abc232e\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::check 1.20.4 satisfies ~1.20.0\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::matched go1.20.4\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | Install from dist\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | Acquiring go1.20.4 from https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::Destination /tmp/e0f3e5d1-1f27-4bd2-b4af-b7e9514bba27\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | Successfully extracted go to /tmp/ae1c9281-780f-4348-ac2c-f99c615878a9\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | Adding to the cache ...\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::Caching tool go 1.20.4 x64\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::source dir: /tmp/ae1c9281-780f-4348-ac2c-f99c615878a9/go\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.20.4/x64\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::download complete\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | Extracting Go...\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::Checking tar --version\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/d4b99a21-6313-48e8-9449-39fd31376c32 -f /tmp/e0f3e5d1-1f27-4bd2-b4af-b7e9514bba27\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | Successfully extracted go to /tmp/d4b99a21-6313-48e8-9449-39fd31376c32\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | Adding to the cache ...\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::Caching tool go 1.20.4 x64\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::source dir: /tmp/d4b99a21-6313-48e8-9449-39fd31376c32/go\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.20.4/x64\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::finished caching tool\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | Successfully cached go to /opt/hostedtoolcache/go/1.20.4/x64\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | Added go to the path\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | Successfully set up Go version ~1.20.0\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.20.4/x64/bin/go:\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::add bin true\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \u2753 add-matcher /run/act/actions/actions-setup-go@v4/matchers.json\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go version go1.20.4 linux/amd64\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | \n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \u2753  ::group::go env\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GO111MODULE=\"\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOARCH=\"amd64\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOBIN=\"\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOEXE=\"\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOEXPERIMENT=\"\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOFLAGS=\"\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOHOSTARCH=\"amd64\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOHOSTOS=\"linux\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOINSECURE=\"\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GONOPROXY=\"\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GONOSUMDB=\"\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOOS=\"linux\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOPATH=\"/home/runneradmin/go\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOPRIVATE=\"\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOROOT=\"/opt/hostedtoolcache/go/1.20.4/x64\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOSUMDB=\"sum.golang.org\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOTMPDIR=\"\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.20.4/x64/pkg/tool/linux_amd64\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOVCS=\"\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOVERSION=\"go1.20.4\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GCCGO=\"gccgo\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOAMD64=\"v1\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | AR=\"ar\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | CC=\"gcc\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | CXX=\"g++\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | CGO_ENABLED=\"1\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/maruel-panicparse/go.mod\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOWORK=\"\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | CGO_CFLAGS=\"-O2 -g\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | CGO_CPPFLAGS=\"\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | CGO_CXXFLAGS=\"-O2 -g\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | CGO_FFLAGS=\"-O2 -g\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | CGO_LDFLAGS=\"-O2 -g\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | PKG_CONFIG=\"pkg-config\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build1281868273=/tmp/go-build -gno-record-gcc-switches\"\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | \n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \u2753  ::endgroup::\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \u2705  Success - Main actions/setup-go@v4\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \u2699  ::set-output:: go-version=1.20.4\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.20.4/x64/bin\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Run tests/lint: go1.20.x/ubuntu-latest  ] \u2b50 Run Main Debug\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::finished caching tool\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | Successfully cached go to /opt/hostedtoolcache/go/1.20.4/x64\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | Added go to the path\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | Successfully set up Go version ~1.20.0\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.20.4/x64/bin/go:\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udcac  ::debug::add bin true\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \u2753 add-matcher /run/act/actions/actions-setup-go@v4/matchers.json\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | go version go1.20.4 linux/amd64\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | \n[Run tests/test: go1.20.x/ubuntu-latest  ]   \u2753  ::group::go env\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3.sh] user= workdir=\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GO111MODULE=\"\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOARCH=\"amd64\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOBIN=\"\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOEXE=\"\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOEXPERIMENT=\"\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOFLAGS=\"\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOHOSTARCH=\"amd64\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOHOSTOS=\"linux\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOINSECURE=\"\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GONOPROXY=\"\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GONOSUMDB=\"\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOOS=\"linux\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOPATH=\"/home/runneradmin/go\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOPRIVATE=\"\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOROOT=\"/opt/hostedtoolcache/go/1.20.4/x64\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOSUMDB=\"sum.golang.org\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOTMPDIR=\"\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.20.4/x64/pkg/tool/linux_amd64\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOVCS=\"\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOVERSION=\"go1.20.4\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GCCGO=\"gccgo\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOAMD64=\"v1\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | AR=\"ar\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | CC=\"gcc\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | CXX=\"g++\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | CGO_ENABLED=\"1\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/maruel-panicparse/go.mod\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOWORK=\"\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | CGO_CFLAGS=\"-O2 -g\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | CGO_CPPFLAGS=\"\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | CGO_CXXFLAGS=\"-O2 -g\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | CGO_FFLAGS=\"-O2 -g\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | CGO_LDFLAGS=\"-O2 -g\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | PKG_CONFIG=\"pkg-config\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build2156870212=/tmp/go-build -gno-record-gcc-switches\"\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | \n[Run tests/test: go1.20.x/ubuntu-latest  ]   \u2753  ::endgroup::\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \u2705  Success - Main actions/setup-go@v4\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \u2699  ::set-output:: go-version=1.20.4\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.20.4/x64/bin\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Run tests/test: go1.20.x/ubuntu-latest  ] \u2b50 Run Main go install necessary tools\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3.sh] user= workdir=\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | Setup go version spec ~1.20.0\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: \n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::explicit? false\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::match not found\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | Attempting to download ~1.20.0...\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::No manifest cached\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | HOME = /home/runneradmin\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | GITHUB_WORKSPACE = /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/maruel-panicparse\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | PATH = /home/runneradmin/go/bin:/opt/hostedtoolcache/go/1.20.4/x64/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | \n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | $ ls -l /home/runneradmin/go/bin\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::HttpClientError: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v4/dist/setup/index.js:8907:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | Falling back to download directly from Go\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | total 8\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | drwxr-xr-x 2 runneradmin runneradmin 4096 May 30 11:09 .\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | drwxr-xr-x 3 runneradmin runneradmin 4096 May 30 11:09 ..\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \u2705  Success - Main Debug\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | go: downloading github.com/maruel/pat v0.0.4\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::check 1.20.4 satisfies ~1.20.0\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::matched go1.20.4\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | Install from dist\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | Acquiring go1.20.4 from https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::Destination /tmp/e52793a3-da2d-46fb-bf8a-0772a8435490\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | go: downloading golang.org/x/perf v0.0.0-20220411212318-84e58bfe0a7e\n[Run tests/lint: go1.20.x/ubuntu-latest  ] \u2b50 Run Main go install necessary tools\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4.sh] user= workdir=\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::download complete\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | Extracting Go...\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::Checking tar --version\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword --overwrite -C /tmp/6115989d-fb0e-4a1f-bd20-f7d61f637fa2 -f /tmp/e52793a3-da2d-46fb-bf8a-0772a8435490\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | Successfully extracted go to /tmp/6115989d-fb0e-4a1f-bd20-f7d61f637fa2\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | Adding to the cache ...\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::Caching tool go 1.20.4 x64\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::source dir: /tmp/6115989d-fb0e-4a1f-bd20-f7d61f637fa2/go\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.20.4/x64\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \u2705  Success - Main go install necessary tools\n[Run tests/test: go1.20.x/ubuntu-latest  ] \u2b50 Run Main Check: go test -cover\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4.sh] user= workdir=\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::finished caching tool\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | Successfully cached go to /opt/hostedtoolcache/go/1.20.4/x64\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | Added go to the path\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | Successfully set up Go version ~1.20.0\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.20.4/x64/bin/go:\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udcac  ::debug::add bin true\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \u2753 add-matcher /run/act/actions/actions-setup-go@v4/matchers.json\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | go version go1.20.4 linux/amd64\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | \n[Run tests/codeql: go1.20.x/ubuntu-latest]   \u2753  ::group::go env\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GO111MODULE=\"\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOARCH=\"amd64\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOBIN=\"\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOEXE=\"\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOEXPERIMENT=\"\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOFLAGS=\"\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOHOSTARCH=\"amd64\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOHOSTOS=\"linux\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOINSECURE=\"\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GONOPROXY=\"\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GONOSUMDB=\"\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOOS=\"linux\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOPATH=\"/home/runneradmin/go\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOPRIVATE=\"\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOROOT=\"/opt/hostedtoolcache/go/1.20.4/x64\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOSUMDB=\"sum.golang.org\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOTMPDIR=\"\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.20.4/x64/pkg/tool/linux_amd64\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOVCS=\"\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOVERSION=\"go1.20.4\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GCCGO=\"gccgo\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOAMD64=\"v1\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | AR=\"ar\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | CC=\"gcc\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | CXX=\"g++\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | CGO_ENABLED=\"1\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/maruel-panicparse/go.mod\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOWORK=\"\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | CGO_CFLAGS=\"-O2 -g\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | CGO_CPPFLAGS=\"\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | CGO_CXXFLAGS=\"-O2 -g\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | CGO_FFLAGS=\"-O2 -g\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | CGO_LDFLAGS=\"-O2 -g\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | PKG_CONFIG=\"pkg-config\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build2946373276=/tmp/go-build -gno-record-gcc-switches\"\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | \n[Run tests/codeql: go1.20.x/ubuntu-latest]   \u2753  ::endgroup::\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \u2705  Success - Main actions/setup-go@v4\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \u2699  ::set-output:: go-version=1.20.4\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.20.4/x64/bin\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Run tests/codeql: go1.20.x/ubuntu-latest] \u2b50 Run Main Initialize CodeQL\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/github-codeql-action-init@v2/ dst=/var/run/act/actions/github-codeql-action-init@v2/\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/github-codeql-action-init@v2/] user=0 workdir=\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | go: downloading github.com/mattn/go-colorable v0.1.13\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | go: downloading golang.org/x/sys v0.1.0\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | go: downloading github.com/mattn/go-isatty v0.0.16\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | go: downloading github.com/google/go-cmp v0.5.9\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | go: downloading github.com/mgutz/ansi v0.0.0-20200706080929-d51e80ef957d\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/github-codeql-action-init@v2/lib/init-action.js] user= workdir=\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading github.com/gordonklaus/ineffassign v0.0.0-20230107090616-13ace0543b28\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading golang.org/x/tools v0.1.5\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading golang.org/x/sys v0.0.0-20210510120138-977fb7262007\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading golang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading golang.org/x/mod v0.4.2\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading github.com/securego/gosec v0.0.0-20200401082031-e946c8c39989\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading github.com/securego/gosec/v2 v2.16.0\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | ?   \tgithub.com/maruel/panicparse/v2\t[no test files]\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading github.com/nbutton23/zxcvbn-go v0.0.0-20210217022336-fa2cb2858354\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading golang.org/x/tools v0.9.1\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | PASS\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | \tgithub.com/maruel/panicparse/v2/cmd/panic\tcoverage: 90.5% of statements\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading gopkg.in/yaml.v3 v3.0.1\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading github.com/gookit/color v1.5.3\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading github.com/google/uuid v1.3.0\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | ok  \tgithub.com/maruel/panicparse/v2/cmd/panic\t0.379s\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | ?   \tgithub.com/maruel/panicparse/v2/cmd/panic/internal\t[no test files]\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | ?   \tgithub.com/maruel/panicparse/v2/cmd/panic/internal/incorrect\t[no test files]\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | ?   \tgithub.com/maruel/panicparse/v2/cmd/panic/internal/utf8\t[no test files]\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | ?   \tgithub.com/maruel/panicparse/v2/cmd/panicweb\t[no test files]\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | ?   \tgithub.com/maruel/panicparse/v2/cmd/panicweb/internal\t[no test files]\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | ?   \tgithub.com/maruel/panicparse/v2/cmd/pp\t[no test files]\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading github.com/xo/terminfo v0.0.0-20210125001918-ca9a967f8778\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading golang.org/x/sys v0.8.0\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading golang.org/x/mod v0.10.0\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | PASS\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | \tgithub.com/maruel/panicparse/v2/internal\tcoverage: 55.0% of statements\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | ok  \tgithub.com/maruel/panicparse/v2/internal\t17.020s\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | ?   \tgithub.com/maruel/panicparse/v2/internal/internaltest\t[no test files]\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \u2757  ::error::init action failed: Input required and not supplied: token\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \u274c  Failure - Main Initialize CodeQL\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \u2699  ::set-env:: CODEQL_ACTION_FEATURE_MULTI_LANGUAGE=false\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \u2699  ::set-env:: CODEQL_ACTION_FEATURE_SANDWICH=false\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \u2699  ::set-env:: CODEQL_ACTION_FEATURE_SARIF_COMBINE=true\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \u2699  ::set-env:: CODEQL_ACTION_FEATURE_WILL_UPLOAD=true\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \u2699  ::set-env:: CODEQL_ACTION_VERSION=2.3.5\n[Run tests/codeql: go1.20.x/ubuntu-latest] exitcode '1': failure\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | goos: linux\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | goarch: amd64\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | pkg: github.com/maruel/panicparse/v2/stack\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | cpu: AMD EPYC 7742 64-Core Processor                \n[Run tests/test: go1.20.x/ubuntu-latest  ]   | BenchmarkAggregate-128                 \t       1\t    558874 ns/op\t  254200 B/op\t     565 allocs/op\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | BenchmarkScanSnapshot_Guess-128        \t       1\t   7744828 ns/op\t 1128824 B/op\t    7496 allocs/op\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | BenchmarkScanSnapshot_NoGuess-128      \t       1\t  10658942 ns/op\t 1091320 B/op\t    7488 allocs/op\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | BenchmarkScanSnapshot_Passthru-128     \t       1\t     21650 ns/op\t   18544 B/op\t       2 allocs/op\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading honnef.co/go/tools v0.4.3\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | BenchmarkAggregated_ToHTML-128         \t       1\t  13669074 ns/op\t 1051032 B/op\t   37138 allocs/op\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | PASS\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | \tgithub.com/maruel/panicparse/v2/stack\tcoverage: 91.9% of statements\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | ok  \tgithub.com/maruel/panicparse/v2/stack\t14.889s\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | goos: linux\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | goarch: amd64\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | pkg: github.com/maruel/panicparse/v2/stack/webstack\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | cpu: AMD EPYC 7742 64-Core Processor                \n[Run tests/test: go1.20.x/ubuntu-latest  ]   | BenchmarkSnapshotHandle-128     \t       1\t  15707903 ns/op\t 2713552 B/op\t   32938 allocs/op\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | PASS\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | \tgithub.com/maruel/panicparse/v2/stack/webstack\tcoverage: 93.9% of statements\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | ok  \tgithub.com/maruel/panicparse/v2/stack/webstack\t0.525s\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \u2705  Success - Main Check: go test -cover\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading github.com/BurntSushi/toml v1.2.1\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading golang.org/x/exp/typeparams v0.0.0-20221208152030-732eee02a75a\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading golang.org/x/tools v0.4.1-0.20221208213631-3f74d914ae6d\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading golang.org/x/sys v0.3.0\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading golang.org/x/mod v0.7.0\n[Run tests/codeql: go1.20.x/ubuntu-latest] \u2b50 Run Post Initialize CodeQL\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/github-codeql-action-init@v2/lib/init-action-post.js] user= workdir=\n[Run tests/test: go1.20.x/ubuntu-latest  ] \u2b50 Run Main codecov/codecov-action@v3\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/codecov-codecov-action@v3/ dst=/var/run/act/actions/codecov-codecov-action@v3/\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/codecov-codecov-action@v3/] user=0 workdir=\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \u2757  ::error::Input required and not supplied: token\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | (node:103) UnhandledPromiseRejectionWarning: Error: GITHUB_RUN_ATTEMPT environment variable must be set\n[Run tests/codeql: go1.20.x/ubuntu-latest]   |     at getRequiredEnvParam (/run/act/actions/github-codeql-action-init@v2/lib/util.js:353:15)\n[Run tests/codeql: go1.20.x/ubuntu-latest]   |     at getWorkflowRunAttempt (/run/act/actions/github-codeql-action-init@v2/lib/workflow.js:235:69)\n[Run tests/codeql: go1.20.x/ubuntu-latest]   |     at createStatusReportBase (/run/act/actions/github-codeql-action-init@v2/lib/actions-util.js:294:69)\n[Run tests/codeql: go1.20.x/ubuntu-latest]   |     at async runWrapper (/run/act/actions/github-codeql-action-init@v2/lib/init-action-post.js:54:52)\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | (Use `node --trace-warnings ...` to show where the warning was created)\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | (node:103) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 2)\n[Run tests/codeql: go1.20.x/ubuntu-latest]   | (node:103) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\n[Run tests/codeql: go1.20.x/ubuntu-latest]   \u274c  Failure - Post Initialize CodeQL\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \u2705  Success - Main go install necessary tools\n[Run tests/lint: go1.20.x/ubuntu-latest  ] \u2b50 Run Main go install necessary tools (ubuntu)\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5.sh] user= workdir=\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v3/dist/index.js] user= workdir=\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading github.com/client9/misspell v0.3.4\n[Run tests/codeql: go1.20.x/ubuntu-latest] \ud83c\udfc1  Job failed\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading github.com/google/addlicense v1.1.1\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading github.com/bmatcuk/doublestar/v4 v4.0.2\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading golang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \u2705  Success - Main go install necessary tools (ubuntu)\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | Error: Cannot find module 'node:http'\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | Require stack:\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | - /run/act/actions/codecov-codecov-action@v3/dist/index.js\n[Run tests/test: go1.20.x/ubuntu-latest  ]   |     at Function.Module._resolveFilename (internal/modules/cjs/loader.js:889:15)\n[Run tests/test: go1.20.x/ubuntu-latest  ]   |     at Function.Module._load (internal/modules/cjs/loader.js:745:27)\n[Run tests/test: go1.20.x/ubuntu-latest  ]   |     at Module.require (internal/modules/cjs/loader.js:961:19)\n[Run tests/test: go1.20.x/ubuntu-latest  ]   |     at require (internal/modules/cjs/helpers.js:92:18)\n[Run tests/test: go1.20.x/ubuntu-latest  ]   |     at /run/act/actions/codecov-codecov-action@v3/webpack:/codecov-action/external node-commonjs \"node:http\":1:1\n[Run tests/test: go1.20.x/ubuntu-latest  ]   |     at /run/act/actions/codecov-codecov-action@v3/dist/index.js:24630:3\n[Run tests/test: go1.20.x/ubuntu-latest  ]   |     at Object.<anonymous> (/run/act/actions/codecov-codecov-action@v3/dist/index.js:24633:12)\n[Run tests/test: go1.20.x/ubuntu-latest  ]   |     at Module._compile (internal/modules/cjs/loader.js:1072:14)\n[Run tests/test: go1.20.x/ubuntu-latest  ]   |     at Object.Module._extensions..js (internal/modules/cjs/loader.js:1101:10)\n[Run tests/test: go1.20.x/ubuntu-latest  ]   |     at Module.load (internal/modules/cjs/loader.js:937:32)\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \u274c  Failure - Main codecov/codecov-action@v3\n[Run tests/lint: go1.20.x/ubuntu-latest  ] \u2b50 Run Main Check: go vet\n[Run tests/test: go1.20.x/ubuntu-latest  ] exitcode '1': failure\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6.sh] user= workdir=\n[Run tests/test: go1.20.x/ubuntu-latest  ] \u2b50 Run Main Cleanup\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6.sh] user= workdir=\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \u2705  Success - Main Cleanup\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading github.com/mattn/go-colorable v0.1.13\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading github.com/mattn/go-isatty v0.0.16\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading github.com/mgutz/ansi v0.0.0-20200706080929-d51e80ef957d\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading github.com/google/go-cmp v0.5.9\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   | go: downloading golang.org/x/sys v0.1.0\n[Run tests/test: go1.20.x/ubuntu-latest  ] \u2b50 Run Main Check: tree is clean\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \u2705  Success - Main Check: go vet\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/11.sh] user= workdir=\n[Run tests/lint: go1.20.x/ubuntu-latest  ] \u2b50 Run Main Check: go vet shadow; shadowed variables\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/7.sh] user= workdir=\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | Oops, something touched these files, please cleanup:\n[Run tests/test: go1.20.x/ubuntu-latest  ]   | ?? .github/workflows/test-crawler.yml\n[Run tests/test: go1.20.x/ubuntu-latest  ]   \u274c  Failure - Main Check: tree is clean\n[Run tests/test: go1.20.x/ubuntu-latest  ] exitcode '1': failure\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \u2705  Success - Main Check: go vet shadow; shadowed variables\n[Run tests/lint: go1.20.x/ubuntu-latest  ] \u2b50 Run Main Check: inefficient variable assignment\n[Run tests/test: go1.20.x/ubuntu-latest  ] \ud83c\udfc1  Job failed\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/8.sh] user= workdir=\n[Run tests/lint: go1.20.x/ubuntu-latest  ]   \u274c  Failure - Main Check: inefficient variable assignment\n[Run tests/lint: go1.20.x/ubuntu-latest  ] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/dd8fd7ac90a7aea8ca329aac4842ce8aec66dc8978f1bb3f3969197d3b357c33/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Run tests/lint: go1.20.x/ubuntu-latest  ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}