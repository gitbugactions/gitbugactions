{
    "repository": "exercism/cli",
    "clone_url": "https://github.com/exercism/cli.git",
    "timestamp": "2023-05-30T10:29:21.569938Z",
    "clone_success": true,
    "number of actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/Go Format              ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Go 1.15 - ubuntu-latest] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Go Format              ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Go Format              ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Go Format              ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/exercism-cli] user=0 workdir=\n[CI/Go Format              ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/exercism-cli] user=0 workdir=\n[CI/Go 1.15 - ubuntu-latest]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=bfdd3570ce990073878bf10f6b2d79082de49492\n[CI/Go Format              ] \u2b50 Run Main actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b\n[CI/Go Format              ]   \u2705  Success - Main actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b\n[CI/Go Format              ] \u2b50 Run Main Check formatting\n[CI/Go 1.15 - ubuntu-latest] \ud83e\uddea  Matrix: map[go-version:1.15 os:ubuntu-latest]\n[CI/Go 1.15 - ubuntu-latest] \u2b50 Run Main actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b\n[CI/Go 1.15 - ubuntu-latest]   \u2705  Success - Main actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b\n[CI/Go Format              ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[CI/Go 1.15 - ubuntu-latest] \u2b50 Run Main actions/setup-go@bfdd3570ce990073878bf10f6b2d79082de49492\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@bfdd3570ce990073878bf10f6b2d79082de49492/ dst=/var/run/act/actions/actions-setup-go@bfdd3570ce990073878bf10f6b2d79082de49492/\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@bfdd3570ce990073878bf10f6b2d79082de49492/] user=0 workdir=\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@bfdd3570ce990073878bf10f6b2d79082de49492/dist/index.js] user= workdir=\n[CI/Go Format              ]   | go: downloading golang.org/x/text v0.0.0-20170730040918-3bd178b88a81\n[CI/Go Format              ]   | go: downloading golang.org/x/net v0.0.0-20170726083632-f5079bd7f6f7\n[CI/Go Format              ]   | go: downloading github.com/spf13/viper v0.0.0-20180507071007-15738813a09d\n[CI/Go Format              ]   | go: downloading github.com/spf13/pflag v1.0.0\n[CI/Go Format              ]   | go: downloading github.com/inconshreveable/go-update v0.0.0-20160112193335-8152e7eb6ccf\n[CI/Go Format              ]   | go: downloading github.com/spf13/cobra v0.0.0-20170731170427-b26b538f6930\n[CI/Go Format              ]   | go: downloading github.com/blang/semver v3.5.1+incompatible\n[CI/Go Format              ]   | go: downloading github.com/hashicorp/hcl v0.0.0-20170509225359-392dba7d905e\n[CI/Go Format              ]   | go: downloading github.com/fsnotify/fsnotify v1.4.2\n[CI/Go Format              ]   | go: downloading github.com/mitchellh/mapstructure v0.0.0-20170523030023-d0303fe80992\n[CI/Go Format              ]   | go: downloading github.com/magiconair/properties v1.7.3\n[CI/Go Format              ]   | go: downloading github.com/spf13/cast v1.1.0\n[CI/Go Format              ]   | go: downloading gopkg.in/yaml.v2 v2.0.0-20170721122051-25c4ec802a7d\n[CI/Go Format              ]   | go: downloading github.com/spf13/jwalterweatherman v0.0.0-20170523133247-0efa5202c046\n[CI/Go Format              ]   | go: downloading github.com/pelletier/go-toml v1.0.0\n[CI/Go Format              ]   | go: downloading github.com/spf13/afero v0.0.0-20170217164146-9be650865eab\n[CI/Go Format              ]   | go: downloading golang.org/x/sys v0.0.0-20201202213521-69691e467435\n[CI/Go Format              ]   | go: downloading github.com/pelletier/go-buffruneio v0.2.0\n[CI/Go Format              ]   \u2705  Success - Main Check formatting\n[CI/Go 1.15 - ubuntu-latest]   | Setup go stable version spec 1.15\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: \n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udcac  ::debug::explicit? false\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udcac  ::debug::explicit? true\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udcac  ::debug::explicit? true\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udcac  ::debug::explicit? true\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udcac  ::debug::evaluating 3 versions\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udcac  ::debug::matched: 1.15.15\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.15.15/x64\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udcac  ::debug::Found tool in cache go 1.15.15 x64\n[CI/Go 1.15 - ubuntu-latest]   | Found in cache @ /opt/hostedtoolcache/go/1.15.15/x64\n[CI/Go 1.15 - ubuntu-latest]   | Added go to the path\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.15.15/x64/bin/go:\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udcac  ::debug::add bin true\n[CI/Go 1.15 - ubuntu-latest]   | Successfully setup go version 1.15\n[CI/Go 1.15 - ubuntu-latest]   \u2753 add-matcher /run/act/actions/actions-setup-go@bfdd3570ce990073878bf10f6b2d79082de49492/matchers.json\n[CI/Go 1.15 - ubuntu-latest]   | go version go1.15.15 linux/amd64\n[CI/Go 1.15 - ubuntu-latest]   | \n[CI/Go 1.15 - ubuntu-latest]   \u2753  ::group::go env\n[CI/Go 1.15 - ubuntu-latest]   | GO111MODULE=\"\"\n[CI/Go 1.15 - ubuntu-latest]   | GOARCH=\"amd64\"\n[CI/Go 1.15 - ubuntu-latest]   | GOBIN=\"\"\n[CI/Go 1.15 - ubuntu-latest]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[CI/Go 1.15 - ubuntu-latest]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[CI/Go 1.15 - ubuntu-latest]   | GOEXE=\"\"\n[CI/Go 1.15 - ubuntu-latest]   | GOFLAGS=\"\"\n[CI/Go 1.15 - ubuntu-latest]   | GOHOSTARCH=\"amd64\"\n[CI/Go 1.15 - ubuntu-latest]   | GOHOSTOS=\"linux\"\n[CI/Go 1.15 - ubuntu-latest]   | GOINSECURE=\"\"\n[CI/Go 1.15 - ubuntu-latest]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[CI/Go 1.15 - ubuntu-latest]   | GONOPROXY=\"\"\n[CI/Go 1.15 - ubuntu-latest]   | GONOSUMDB=\"\"\n[CI/Go 1.15 - ubuntu-latest]   | GOOS=\"linux\"\n[CI/Go 1.15 - ubuntu-latest]   | GOPATH=\"/home/runneradmin/go\"\n[CI/Go 1.15 - ubuntu-latest]   | GOPRIVATE=\"\"\n[CI/Go 1.15 - ubuntu-latest]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[CI/Go 1.15 - ubuntu-latest]   | GOROOT=\"/opt/hostedtoolcache/go/1.15.15/x64\"\n[CI/Go 1.15 - ubuntu-latest]   | GOSUMDB=\"sum.golang.org\"\n[CI/Go 1.15 - ubuntu-latest]   | GOTMPDIR=\"\"\n[CI/Go 1.15 - ubuntu-latest]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.15.15/x64/pkg/tool/linux_amd64\"\n[CI/Go 1.15 - ubuntu-latest]   | GCCGO=\"gccgo\"\n[CI/Go 1.15 - ubuntu-latest]   | AR=\"ar\"\n[CI/Go 1.15 - ubuntu-latest]   | CC=\"gcc\"\n[CI/Go 1.15 - ubuntu-latest]   | CXX=\"g++\"\n[CI/Go 1.15 - ubuntu-latest]   | CGO_ENABLED=\"1\"\n[CI/Go 1.15 - ubuntu-latest]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/exercism-cli/go.mod\"\n[CI/Go 1.15 - ubuntu-latest]   | CGO_CFLAGS=\"-g -O2\"\n[CI/Go 1.15 - ubuntu-latest]   | CGO_CPPFLAGS=\"\"\n[CI/Go 1.15 - ubuntu-latest]   | CGO_CXXFLAGS=\"-g -O2\"\n[CI/Go 1.15 - ubuntu-latest]   | CGO_FFLAGS=\"-g -O2\"\n[CI/Go 1.15 - ubuntu-latest]   | CGO_LDFLAGS=\"-g -O2\"\n[CI/Go 1.15 - ubuntu-latest]   | PKG_CONFIG=\"pkg-config\"\n[CI/Go 1.15 - ubuntu-latest]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build832410306=/tmp/go-build -gno-record-gcc-switches\"\n[CI/Go 1.15 - ubuntu-latest]   | \n[CI/Go 1.15 - ubuntu-latest]   \u2753  ::endgroup::\n[CI/Go 1.15 - ubuntu-latest]   \u2705  Success - Main actions/setup-go@bfdd3570ce990073878bf10f6b2d79082de49492\n[CI/Go 1.15 - ubuntu-latest]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.15.15/x64\n[CI/Go 1.15 - ubuntu-latest]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.15.15/x64/bin\n[CI/Go 1.15 - ubuntu-latest]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[CI/Go 1.15 - ubuntu-latest] \u2b50 Run Main Run Tests\n[CI/Go 1.15 - ubuntu-latest]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2.sh] user= workdir=\n[CI/Go Format              ] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/905957815a35abf82120c08f7e6652c5c2e7d347826bbe2b56bfd1d03f7d6afa?force=1&v=1\": context deadline exceeded\n[CI/Go Format              ] \ud83c\udfc1  Job succeeded\n[CI/Go 1.15 - ubuntu-latest]   | go: downloading github.com/blang/semver v3.5.1+incompatible\n[CI/Go 1.15 - ubuntu-latest]   | go: downloading github.com/inconshreveable/go-update v0.0.0-20160112193335-8152e7eb6ccf\n[CI/Go 1.15 - ubuntu-latest]   | go: downloading github.com/spf13/cobra v0.0.0-20170731170427-b26b538f6930\n[CI/Go 1.15 - ubuntu-latest]   | go: downloading github.com/spf13/pflag v1.0.0\n[CI/Go 1.15 - ubuntu-latest]   | go: downloading github.com/stretchr/testify v1.1.4\n[CI/Go 1.15 - ubuntu-latest]   | go: downloading golang.org/x/net v0.0.0-20170726083632-f5079bd7f6f7\n[CI/Go 1.15 - ubuntu-latest]   | go: downloading github.com/spf13/viper v0.0.0-20180507071007-15738813a09d\n[CI/Go 1.15 - ubuntu-latest]   | go: downloading golang.org/x/text v0.0.0-20170730040918-3bd178b88a81\n[CI/Go 1.15 - ubuntu-latest]   | go: downloading github.com/fsnotify/fsnotify v1.4.2\n[CI/Go 1.15 - ubuntu-latest]   | go: downloading github.com/spf13/cast v1.1.0\n[CI/Go 1.15 - ubuntu-latest]   | go: downloading github.com/pelletier/go-toml v1.0.0\n[CI/Go 1.15 - ubuntu-latest]   | go: downloading github.com/mitchellh/mapstructure v0.0.0-20170523030023-d0303fe80992\n[CI/Go 1.15 - ubuntu-latest]   | go: downloading github.com/spf13/afero v0.0.0-20170217164146-9be650865eab\n[CI/Go 1.15 - ubuntu-latest]   | go: downloading gopkg.in/yaml.v2 v2.0.0-20170721122051-25c4ec802a7d\n[CI/Go 1.15 - ubuntu-latest]   | go: downloading github.com/magiconair/properties v1.7.3\n[CI/Go 1.15 - ubuntu-latest]   | go: downloading github.com/pmezard/go-difflib v1.0.0\n[CI/Go 1.15 - ubuntu-latest]   | go: downloading github.com/spf13/jwalterweatherman v0.0.0-20170523133247-0efa5202c046\n[CI/Go 1.15 - ubuntu-latest]   | go: downloading github.com/davecgh/go-spew v1.1.0\n[CI/Go 1.15 - ubuntu-latest]   | go: downloading github.com/hashicorp/hcl v0.0.0-20170509225359-392dba7d905e\n[CI/Go 1.15 - ubuntu-latest]   | go: downloading github.com/pelletier/go-buffruneio v0.2.0\n[CI/Go 1.15 - ubuntu-latest]   | go: downloading golang.org/x/sys v0.0.0-20201202213521-69691e467435\n[CI/Go 1.15 - ubuntu-latest]   | ok  \tgithub.com/exercism/cli/api\t0.154s\tcoverage: 30.2% of statements\n[CI/Go 1.15 - ubuntu-latest]   | ?   \tgithub.com/exercism/cli/browser\t[no test files]\n[CI/Go 1.15 - ubuntu-latest]   | ok  \tgithub.com/exercism/cli/cli\t0.185s\tcoverage: 18.3% of statements\n[CI/Go 1.15 - ubuntu-latest]   | ok  \tgithub.com/exercism/cli/cmd\t0.518s\tcoverage: 65.4% of statements\n[CI/Go 1.15 - ubuntu-latest]   | ok  \tgithub.com/exercism/cli/config\t0.334s\tcoverage: 31.8% of statements\n[CI/Go 1.15 - ubuntu-latest]   | ok  \tgithub.com/exercism/cli/debug\t0.211s\tcoverage: 86.8% of statements\n[CI/Go 1.15 - ubuntu-latest]   | ?   \tgithub.com/exercism/cli/exercism\t[no test files]\n[CI/Go 1.15 - ubuntu-latest]   | ok  \tgithub.com/exercism/cli/workspace\t0.290s\tcoverage: 72.4% of statements\n[CI/Go 1.15 - ubuntu-latest]   \u2705  Success - Main Run Tests\n[CI/Go 1.15 - ubuntu-latest] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: Error occurred running finally: Error occurred running finally: context deadline exceeded (original error: <nil>) (original error: <nil>)\n"
}