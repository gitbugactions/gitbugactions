{
    "repository": "golang/mock",
    "clone_url": "https://github.com/golang/mock.git",
    "timestamp": "2023-05-30T11:11:01.382104Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Run tests/test] \ud83d\ude80  Start image=crawlergpt:latest\n[Run tests/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Run tests/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run tests/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run tests/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/golang-mock] user=0 workdir=\n[Run tests/test]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[Run tests/test] \ud83e\uddea  Matrix: map[go-version:1.15.x os:ubuntu-latest]\n[Run tests/test] \u2b50 Run Main Install Go\n[Run tests/test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[Run tests/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[Run tests/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[Run tests/test]   | Setup go stable version spec 1.15.x\n[Run tests/test]   \ud83d\udcac  ::debug::isExplicit: \n[Run tests/test]   \ud83d\udcac  ::debug::explicit? false\n[Run tests/test]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Run tests/test]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/test]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Run tests/test]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/test]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Run tests/test]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/test]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Run tests/test]   \ud83d\udcac  ::debug::matched: 1.15.15\n[Run tests/test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.15.15/x64\n[Run tests/test]   \ud83d\udcac  ::debug::Found tool in cache go 1.15.15 x64\n[Run tests/test]   | Found in cache @ /opt/hostedtoolcache/go/1.15.15/x64\n[Run tests/test]   | Added go to the path\n[Run tests/test]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.15.15/x64/bin/go:\n[Run tests/test]   | go: unknown environment setting GO111MODULE=true\n[Run tests/test]   \u2757  ::error::Command failed: go env GOPATH%0Ago: unknown environment setting GO111MODULE=true%0A\n[Run tests/test]   \u274c  Failure - Main Install Go\n[Run tests/test]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.15.15/x64\n[Run tests/test]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.15.15/x64/bin\n[Run tests/test] exitcode '1': failure\n[Run tests/test] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'test' failed\n"
}