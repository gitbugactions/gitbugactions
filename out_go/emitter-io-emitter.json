{
    "repository": "emitter-io/emitter",
    "clone_url": "https://github.com/emitter-io/emitter.git",
    "timestamp": "2023-05-30T11:57:20.187794Z",
    "clone_success": true,
    "number of actions": 4,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Test/Test with Coverage] \ud83d\ude80  Start image=crawlergpt:latest\n[Test/Test with Coverage]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test/Test with Coverage]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/Test with Coverage]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/Test with Coverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/emitter-io-emitter] user=0 workdir=\n[Test/Test with Coverage]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v1\n[Test/Test with Coverage]   \u2601  git clone 'https://github.com/shogo82148/actions-goveralls' # ref=v1\n[Test/Test with Coverage] \u2b50 Run Main Set up Go\n[Test/Test with Coverage]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v1/ dst=/var/run/act/actions/actions-setup-go@v1/\n[Test/Test with Coverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v1/] user=0 workdir=\n[Test/Test with Coverage]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v1/lib/setup-go.js] user= workdir=\n[Test/Test with Coverage]   \ud83d\udcac  ::debug::evaluating 9 versions\n[Test/Test with Coverage]   \ud83d\udcac  ::debug::matched: 1.20.4\n[Test/Test with Coverage]   \ud83d\udcac  ::debug::isExplicit: 1.20.4\n[Test/Test with Coverage]   \ud83d\udcac  ::debug::explicit? true\n[Test/Test with Coverage]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.20.4/x64\n[Test/Test with Coverage]   \ud83d\udcac  ::debug::not found\n[Test/Test with Coverage]   \ud83d\udcac  ::debug::Downloading Go from: https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Test/Test with Coverage]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.20.4.linux-amd64.tar.gz\n[Test/Test with Coverage]   \ud83d\udcac  ::debug::Downloading /tmp/38531485-cc63-443c-9bd4-5e55b7a987af\n[Test/Test with Coverage]   \ud83d\udcac  ::debug::download complete\n[Test/Test with Coverage]   | [command]/usr/bin/tar xzC /tmp/728ad6ff-7d04-42b5-a814-1188659afc61 -f /tmp/38531485-cc63-443c-9bd4-5e55b7a987af\n[Test/Test with Coverage]   \ud83d\udcac  ::debug::Caching tool go 1.20.4 x64\n[Test/Test with Coverage]   \ud83d\udcac  ::debug::source dir: /tmp/728ad6ff-7d04-42b5-a814-1188659afc61/go\n[Test/Test with Coverage]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.20.4/x64\n[Test/Test with Coverage]   \ud83d\udcac  ::debug::finished caching tool\n[Test/Test with Coverage]   \ud83d\udcac  ::debug::Go tool is cached under /opt/hostedtoolcache/go/1.20.4/x64\n[Test/Test with Coverage]   \u2753 add-matcher /run/act/actions/actions-setup-go@v1/.github/go.json\n[Test/Test with Coverage]   \u2705  Success - Main Set up Go\n[Test/Test with Coverage]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.20.4/x64\n[Test/Test with Coverage]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.20.4/x64/bin\n[Test/Test with Coverage] \u2b50 Run Main Check out code\n[Test/Test with Coverage]   \u2705  Success - Main Check out code\n[Test/Test with Coverage] \u2b50 Run Main Install dependencies\n[Test/Test with Coverage]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test/Test with Coverage]   \u2705  Success - Main Install dependencies\n[Test/Test with Coverage] \u2b50 Run Main Run Unit Tests\n[Test/Test with Coverage]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Test/Test with Coverage]   | ?   \tgithub.com/emitter-io/emitter\t[no test files]\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/async\t0.050s\tcoverage: 100.0% of statements\n[Test/Test with Coverage]   | ?   \tgithub.com/emitter-io/emitter/internal/service\t[no test files]\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/broker\t1.982s\tcoverage: 79.6% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/command/license\t0.135s\tcoverage: 100.0% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/command/load\t0.152s\tcoverage: 92.5% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/command/version\t0.081s\tcoverage: 100.0% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/config\t0.423s\tcoverage: 75.0% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/errors\t0.081s\tcoverage: 100.0% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/event\t0.277s\tcoverage: 100.0% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/event/crdt\t0.426s\tcoverage: 93.3% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/message\t7.610s\tcoverage: 99.3% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/network/http\t0.255s\tcoverage: 98.1% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/network/listener\t0.255s\tcoverage: 81.6% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/network/mock\t0.079s\tcoverage: 100.0% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/network/mqtt\t0.510s\tcoverage: 93.9% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/network/websocket\t0.079s\tcoverage: 87.2% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/provider/contract\t0.149s\tcoverage: 95.8% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/provider/contract/mock\t0.121s\tcoverage: 100.0% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/provider/logging\t0.148s\tcoverage: 100.0% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/provider/monitor\t0.254s\tcoverage: 93.0% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/provider/storage\t2.120s\tcoverage: 93.9% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/provider/usage\t0.252s\tcoverage: 100.0% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/security\t0.278s\tcoverage: 99.1% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/security/cipher\t0.220s\tcoverage: 100.0% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/security/hash\t0.147s\tcoverage: 100.0% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/security/license\t0.203s\tcoverage: 95.2% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/service/cluster\t0.667s\tcoverage: 81.9% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/service/fake\t0.251s\tcoverage: 100.0% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/service/keyban\t0.234s\tcoverage: 100.0% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/service/keygen\t0.250s\tcoverage: 92.3% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/service/link\t0.250s\tcoverage: 100.0% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/service/me\t0.249s\tcoverage: 100.0% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/service/presence\t0.270s\tcoverage: 100.0% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/service/pubsub\t0.367s\tcoverage: 100.0% of statements\n[Test/Test with Coverage]   | ok  \tgithub.com/emitter-io/emitter/internal/service/survey\t0.249s\tcoverage: 100.0% of statements\n[Test/Test with Coverage]   \u2705  Success - Main Run Unit Tests\n[Test/Test with Coverage] \u2b50 Run Main Upload Coverage\n[Test/Test with Coverage]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/shogo82148-actions-goveralls@v1/ dst=/var/run/act/actions/shogo82148-actions-goveralls@v1/\n[Test/Test with Coverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/shogo82148-actions-goveralls@v1/] user=0 workdir=\n[Test/Test with Coverage]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/shogo82148-actions-goveralls@v1/lib/main.js] user= workdir=\n[Test/Test with Coverage]   | [command]/opt/hostedtoolcache/go/1.20.4/x64/bin/go env GOPATH\n[Test/Test with Coverage]   | /home/runneradmin/go\n[Test/Test with Coverage]   | [command]/opt/hostedtoolcache/go/1.20.4/x64/bin/go env GOBIN\n[Test/Test with Coverage]   | \n[Test/Test with Coverage]   | [command]/opt/hostedtoolcache/go/1.20.4/x64/bin/go env GOTMPDIR\n[Test/Test with Coverage]   | \n[Test/Test with Coverage]   | [command]/opt/hostedtoolcache/go/1.20.4/x64/bin/go env GOTOOLDIR\n[Test/Test with Coverage]   | /opt/hostedtoolcache/go/1.20.4/x64/pkg/tool/linux_amd64\n[Test/Test with Coverage]   | [command]/opt/hostedtoolcache/go/1.20.4/x64/bin/go env GOOS\n[Test/Test with Coverage]   | linux\n[Test/Test with Coverage]   | [command]/opt/hostedtoolcache/go/1.20.4/x64/bin/go env GOARCH\n[Test/Test with Coverage]   | amd64\n[Test/Test with Coverage]   | [command]/opt/hostedtoolcache/go/1.20.4/x64/bin/go env GOCACHE\n[Test/Test with Coverage]   | /home/runneradmin/.cache/go-build\n[Test/Test with Coverage]   | [command]/run/act/actions/shogo82148-actions-goveralls@v1/bin/goveralls_linux_amd64 -service=github -coverprofile=profile.cov\n[Test/Test with Coverage]   | bad response status from coveralls: 422\n[Test/Test with Coverage]   | {\"message\":\"Couldn't find a repository matching this job.\",\"error\":true}\n[Test/Test with Coverage]   \u2757  ::error::Error: The process '/run/act/actions/shogo82148-actions-goveralls@v1/bin/goveralls_linux_amd64' failed with exit code 1\n[Test/Test with Coverage]   \u274c  Failure - Main Upload Coverage\n[Test/Test with Coverage] exitcode '1': failure\n[Test/Test with Coverage] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'Test with Coverage' failed\n"
}