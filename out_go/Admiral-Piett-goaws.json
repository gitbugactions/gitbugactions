{
    "repository": "Admiral-Piett/goaws",
    "clone_url": "https://github.com/Admiral-Piett/goaws.git",
    "timestamp": "2023-05-30T11:42:47.509855Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[PR-Tests/Build] \ud83d\ude80  Start image=crawlergpt:latest\n[PR-Tests/Build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[PR-Tests/Build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[PR-Tests/Build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[PR-Tests/Build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/Admiral-Piett-goaws] user=0 workdir=\n[PR-Tests/Build]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v1\n[PR-Tests/Build] \u2b50 Run Main Set up Go 1.18\n[PR-Tests/Build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v1/ dst=/var/run/act/actions/actions-setup-go@v1/\n[PR-Tests/Build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v1/] user=0 workdir=\n[PR-Tests/Build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v1/lib/setup-go.js] user= workdir=\n[PR-Tests/Build]   \ud83d\udcac  ::debug::evaluating 14 versions\n[PR-Tests/Build]   \ud83d\udcac  ::debug::matched: 1.18.10\n[PR-Tests/Build]   \ud83d\udcac  ::debug::isExplicit: 1.18.10\n[PR-Tests/Build]   \ud83d\udcac  ::debug::explicit? true\n[PR-Tests/Build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.18.10/x64\n[PR-Tests/Build]   \ud83d\udcac  ::debug::not found\n[PR-Tests/Build]   \ud83d\udcac  ::debug::Downloading Go from: https://storage.googleapis.com/golang/go1.18.10.linux-amd64.tar.gz\n[PR-Tests/Build]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.18.10.linux-amd64.tar.gz\n[PR-Tests/Build]   \ud83d\udcac  ::debug::Downloading /tmp/70338ac8-a2dd-460c-b7a5-4df84410c194\n[PR-Tests/Build]   \ud83d\udcac  ::debug::download complete\n[PR-Tests/Build]   | [command]/usr/bin/tar xzC /tmp/c6a3637f-3be6-4e9b-9387-088416b2b9f9 -f /tmp/70338ac8-a2dd-460c-b7a5-4df84410c194\n[PR-Tests/Build]   \ud83d\udcac  ::debug::Caching tool go 1.18.10 x64\n[PR-Tests/Build]   \ud83d\udcac  ::debug::source dir: /tmp/c6a3637f-3be6-4e9b-9387-088416b2b9f9/go\n[PR-Tests/Build]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.18.10/x64\n[PR-Tests/Build]   \ud83d\udcac  ::debug::finished caching tool\n[PR-Tests/Build]   \ud83d\udcac  ::debug::Go tool is cached under /opt/hostedtoolcache/go/1.18.10/x64\n[PR-Tests/Build]   \u2753 add-matcher /run/act/actions/actions-setup-go@v1/.github/go.json\n[PR-Tests/Build]   \u2705  Success - Main Set up Go 1.18\n[PR-Tests/Build]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.18.10/x64\n[PR-Tests/Build]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.18.10/x64/bin\n[PR-Tests/Build] \u2b50 Run Main Check out code into the Go module directory\n[PR-Tests/Build]   \u2705  Success - Main Check out code into the Go module directory\n[PR-Tests/Build] \u2b50 Run Main Get dependencies\n[PR-Tests/Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[PR-Tests/Build]   | go: downloading github.com/sirupsen/logrus v1.9.0\n[PR-Tests/Build]   | go: downloading github.com/aws/aws-sdk-go v1.34.0\n[PR-Tests/Build]   | go: downloading github.com/gorilla/mux v1.8.0\n[PR-Tests/Build]   | go: downloading github.com/stretchr/testify v1.7.0\n[PR-Tests/Build]   | go: downloading github.com/ghodss/yaml v1.0.0\n[PR-Tests/Build]   | go: downloading gopkg.in/yaml.v2 v2.4.0\n[PR-Tests/Build]   | go: downloading golang.org/x/sys v0.5.0\n[PR-Tests/Build]   | go: downloading gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c\n[PR-Tests/Build]   | go: downloading github.com/davecgh/go-spew v1.1.1\n[PR-Tests/Build]   | go: downloading github.com/pmezard/go-difflib v1.0.0\n[PR-Tests/Build]   | go: downloading github.com/jmespath/go-jmespath v0.3.0\n[PR-Tests/Build]   \u2705  Success - Main Get dependencies\n[PR-Tests/Build] \u2b50 Run Main Unit Tests\n[PR-Tests/Build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[PR-Tests/Build]   | ok  \tgithub.com/Admiral-Piett/goaws/app\t0.225s\tcoverage: 51.0% of statements\n[PR-Tests/Build]   | ?   \tgithub.com/Admiral-Piett/goaws/app/cmd\t[no test files]\n[PR-Tests/Build]   | ok  \tgithub.com/Admiral-Piett/goaws/app/common\t0.074s\tcoverage: 40.0% of statements\n[PR-Tests/Build]   | ok  \tgithub.com/Admiral-Piett/goaws/app/conf\t0.148s\tcoverage: 74.6% of statements\n[PR-Tests/Build]   | ok  \tgithub.com/Admiral-Piett/goaws/app/gosns\t1.796s\tcoverage: 70.9% of statements\n[PR-Tests/Build]   | ok  \tgithub.com/Admiral-Piett/goaws/app/gosqs\t15.388s\tcoverage: 73.4% of statements\n[PR-Tests/Build]   | ok  \tgithub.com/Admiral-Piett/goaws/app/router\t1.007s\tcoverage: 90.0% of statements\n[PR-Tests/Build]   | ok  \tgithub.com/Admiral-Piett/goaws/app/servertest\t1.110s\tcoverage: 82.1% of statements\n[PR-Tests/Build]   \u2705  Success - Main Unit Tests\n[PR-Tests/Build] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}