{
    "repository": "DHowett/go-plist",
    "clone_url": "https://github.com/DHowett/go-plist.git",
    "timestamp": "2023-05-30T10:33:58.894177Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[ci/Build and Test (Go 1.13)] \ud83d\ude80  Start image=crawlergpt:latest\n[ci/Build and Test (Go 1.13)]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ci/Build and Test (Go 1.13)]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/Build and Test (Go 1.13)]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ci/Build and Test (Go 1.13)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/DHowett-go-plist] user=0 workdir=\n[ci/Build and Test (Go 1.13)]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v1\n[ci/Build and Test (Go 1.13)] \ud83e\uddea  Matrix: map[go:1.13]\n[ci/Build and Test (Go 1.13)] \u2b50 Run Main actions/checkout@v2\n[ci/Build and Test (Go 1.13)]   \u2705  Success - Main actions/checkout@v2\n[ci/Build and Test (Go 1.13)] \u2b50 Run Main Set up Go\n[ci/Build and Test (Go 1.13)]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v1/ dst=/var/run/act/actions/actions-setup-go@v1/\n[ci/Build and Test (Go 1.13)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v1/] user=0 workdir=\n[ci/Build and Test (Go 1.13)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v1/lib/setup-go.js] user= workdir=\n[ci/Build and Test (Go 1.13)]   \ud83d\udcac  ::debug::evaluating 19 versions\n[ci/Build and Test (Go 1.13)]   \ud83d\udcac  ::debug::matched: 1.13.15\n[ci/Build and Test (Go 1.13)]   \ud83d\udcac  ::debug::isExplicit: 1.13.15\n[ci/Build and Test (Go 1.13)]   \ud83d\udcac  ::debug::explicit? true\n[ci/Build and Test (Go 1.13)]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.13.15/x64\n[ci/Build and Test (Go 1.13)]   \ud83d\udcac  ::debug::not found\n[ci/Build and Test (Go 1.13)]   \ud83d\udcac  ::debug::Downloading Go from: https://storage.googleapis.com/golang/go1.13.15.linux-amd64.tar.gz\n[ci/Build and Test (Go 1.13)]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.13.15.linux-amd64.tar.gz\n[ci/Build and Test (Go 1.13)]   \ud83d\udcac  ::debug::Downloading /tmp/347625f4-018c-4674-b4ca-15c40c10eab1\n[ci/Build and Test (Go 1.13)]   \ud83d\udcac  ::debug::download complete\n[ci/Build and Test (Go 1.13)]   | [command]/usr/bin/tar xzC /tmp/c6152531-81e8-453d-b031-ad82b482442b -f /tmp/347625f4-018c-4674-b4ca-15c40c10eab1\n[ci/Build and Test (Go 1.13)]   \ud83d\udcac  ::debug::Caching tool go 1.13.15 x64\n[ci/Build and Test (Go 1.13)]   \ud83d\udcac  ::debug::source dir: /tmp/c6152531-81e8-453d-b031-ad82b482442b/go\n[ci/Build and Test (Go 1.13)]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.13.15/x64\n[ci/Build and Test (Go 1.13)]   \ud83d\udcac  ::debug::finished caching tool\n[ci/Build and Test (Go 1.13)]   \ud83d\udcac  ::debug::Go tool is cached under /opt/hostedtoolcache/go/1.13.15/x64\n[ci/Build and Test (Go 1.13)]   \u2753 add-matcher /run/act/actions/actions-setup-go@v1/.github/go.json\n[ci/Build and Test (Go 1.13)]   \u2705  Success - Main Set up Go\n[ci/Build and Test (Go 1.13)]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.13.15/x64\n[ci/Build and Test (Go 1.13)]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.13.15/x64/bin\n[ci/Build and Test (Go 1.13)] \u2b50 Run Main go test\n[ci/Build and Test (Go 1.13)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[ci/Build and Test (Go 1.13)]   | PASS\n[ci/Build and Test (Go 1.13)]   | ok  \thowett.net/plist\t0.247s\n[ci/Build and Test (Go 1.13)]   \u2705  Success - Main go test\n[ci/Build and Test (Go 1.13)] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}