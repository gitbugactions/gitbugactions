{
    "repository": "lestrrat-go/server-starter",
    "clone_url": "https://github.com/lestrrat-go/server-starter.git",
    "timestamp": "2023-05-30T11:00:06.649225Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[CI/Go 1.15 test] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Go 1.15 test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Go 1.15 test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Go 1.15 test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Go 1.15 test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/lestrrat-go-server-starter] user=0 workdir=\n[CI/Go 1.15 test]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[CI/Go 1.15 test]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v1\n[CI/Go 1.15 test] \ud83e\uddea  Matrix: map[go:1.15]\n[CI/Go 1.15 test] \u2b50 Run Main Checkout repository\n[CI/Go 1.15 test]   \u2705  Success - Main Checkout repository\n[CI/Go 1.15 test] \u2b50 Run Main Install Go stable version\n[CI/Go 1.15 test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[CI/Go 1.15 test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[CI/Go 1.15 test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[CI/Go 1.15 test]   | Setup go stable version spec 1.15\n[CI/Go 1.15 test]   \ud83d\udcac  ::debug::isExplicit: \n[CI/Go 1.15 test]   \ud83d\udcac  ::debug::explicit? false\n[CI/Go 1.15 test]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[CI/Go 1.15 test]   \ud83d\udcac  ::debug::explicit? true\n[CI/Go 1.15 test]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[CI/Go 1.15 test]   \ud83d\udcac  ::debug::explicit? true\n[CI/Go 1.15 test]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[CI/Go 1.15 test]   \ud83d\udcac  ::debug::explicit? true\n[CI/Go 1.15 test]   \ud83d\udcac  ::debug::evaluating 3 versions\n[CI/Go 1.15 test]   \ud83d\udcac  ::debug::matched: 1.15.15\n[CI/Go 1.15 test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.15.15/x64\n[CI/Go 1.15 test]   \ud83d\udcac  ::debug::Found tool in cache go 1.15.15 x64\n[CI/Go 1.15 test]   | Found in cache @ /opt/hostedtoolcache/go/1.15.15/x64\n[CI/Go 1.15 test]   | Added go to the path\n[CI/Go 1.15 test]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.15.15/x64/bin/go:\n[CI/Go 1.15 test]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[CI/Go 1.15 test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[CI/Go 1.15 test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[CI/Go 1.15 test]   \ud83d\udcac  ::debug::add bin true\n[CI/Go 1.15 test]   | Successfully setup go version 1.15\n[CI/Go 1.15 test]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[CI/Go 1.15 test]   | go version go1.15.15 linux/amd64\n[CI/Go 1.15 test]   | \n[CI/Go 1.15 test]   \u2753  ::group::go env\n[CI/Go 1.15 test]   | GO111MODULE=\"\"\n[CI/Go 1.15 test]   | GOARCH=\"amd64\"\n[CI/Go 1.15 test]   | GOBIN=\"\"\n[CI/Go 1.15 test]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[CI/Go 1.15 test]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[CI/Go 1.15 test]   | GOEXE=\"\"\n[CI/Go 1.15 test]   | GOFLAGS=\"\"\n[CI/Go 1.15 test]   | GOHOSTARCH=\"amd64\"\n[CI/Go 1.15 test]   | GOHOSTOS=\"linux\"\n[CI/Go 1.15 test]   | GOINSECURE=\"\"\n[CI/Go 1.15 test]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[CI/Go 1.15 test]   | GONOPROXY=\"\"\n[CI/Go 1.15 test]   | GONOSUMDB=\"\"\n[CI/Go 1.15 test]   | GOOS=\"linux\"\n[CI/Go 1.15 test]   | GOPATH=\"/home/runneradmin/go\"\n[CI/Go 1.15 test]   | GOPRIVATE=\"\"\n[CI/Go 1.15 test]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[CI/Go 1.15 test]   | GOROOT=\"/opt/hostedtoolcache/go/1.15.15/x64\"\n[CI/Go 1.15 test]   | GOSUMDB=\"sum.golang.org\"\n[CI/Go 1.15 test]   | GOTMPDIR=\"\"\n[CI/Go 1.15 test]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.15.15/x64/pkg/tool/linux_amd64\"\n[CI/Go 1.15 test]   | GCCGO=\"gccgo\"\n[CI/Go 1.15 test]   | AR=\"ar\"\n[CI/Go 1.15 test]   | CC=\"gcc\"\n[CI/Go 1.15 test]   | CXX=\"g++\"\n[CI/Go 1.15 test]   | CGO_ENABLED=\"1\"\n[CI/Go 1.15 test]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/lestrrat-go-server-starter/go.mod\"\n[CI/Go 1.15 test]   | CGO_CFLAGS=\"-g -O2\"\n[CI/Go 1.15 test]   | CGO_CPPFLAGS=\"\"\n[CI/Go 1.15 test]   | CGO_CXXFLAGS=\"-g -O2\"\n[CI/Go 1.15 test]   | CGO_FFLAGS=\"-g -O2\"\n[CI/Go 1.15 test]   | CGO_LDFLAGS=\"-g -O2\"\n[CI/Go 1.15 test]   | PKG_CONFIG=\"pkg-config\"\n[CI/Go 1.15 test]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build260702204=/tmp/go-build -gno-record-gcc-switches\"\n[CI/Go 1.15 test]   | \n[CI/Go 1.15 test]   \u2753  ::endgroup::\n[CI/Go 1.15 test]   \u2705  Success - Main Install Go stable version\n[CI/Go 1.15 test]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.15.15/x64\n[CI/Go 1.15 test]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.15.15/x64/bin\n[CI/Go 1.15 test]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[CI/Go 1.15 test] \u2b50 Run Main Test\n[CI/Go 1.15 test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/Go 1.15 test]   | go: downloading github.com/jessevdk/go-flags v1.4.0\n[CI/Go 1.15 test]   | === RUN   TestEnvdir\n[CI/Go 1.15 test]   | --- PASS: TestEnvdir (0.00s)\n[CI/Go 1.15 test]   | === RUN   TestRun\n[CI/Go 1.15 test]   | failed to load from envdir: stat /tmp/starter_test818836078: no such file or directory\n[CI/Go 1.15 test]   | starting new worker 1161\n[CI/Go 1.15 test]   | failed to load from envdir: stat /tmp/starter_test818836078: no such file or directory\n[CI/Go 1.15 test]   | received TERM, sending TERM to all workers:1161\n[CI/Go 1.15 test]   | worker 1161 died, status:15\n[CI/Go 1.15 test]   | exiting\n[CI/Go 1.15 test]   |     starter_test.go:137: Exiting...\n[CI/Go 1.15 test]   | 2023/05/30 11:06:09 Checking ports...\n[CI/Go 1.15 test]   | --- PASS: TestRun (7.82s)\n[CI/Go 1.15 test]   | === RUN   TestSigFromName\n[CI/Go 1.15 test]   | --- PASS: TestSigFromName (0.00s)\n[CI/Go 1.15 test]   | PASS\n[CI/Go 1.15 test]   | ok  \tgithub.com/lestrrat-go/server-starter\t8.017s\n[CI/Go 1.15 test]   | ?   \tgithub.com/lestrrat-go/server-starter/cmd/start_server\t[no test files]\n[CI/Go 1.15 test]   | === RUN   TestPort\n[CI/Go 1.15 test]   | --- PASS: TestPort (0.00s)\n[CI/Go 1.15 test]   | === RUN   TestPortNoEnv\n[CI/Go 1.15 test]   | --- PASS: TestPortNoEnv (0.00s)\n[CI/Go 1.15 test]   | PASS\n[CI/Go 1.15 test]   | ok  \tgithub.com/lestrrat-go/server-starter/listener\t0.182s\n[CI/Go 1.15 test]   \u2705  Success - Main Test\n[CI/Go 1.15 test] \u2b50 Run Main Upload code coverage to codecov\n[CI/Go 1.15 test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/codecov-codecov-action@v1/ dst=/var/run/act/actions/codecov-codecov-action@v1/\n[CI/Go 1.15 test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/codecov-codecov-action@v1/] user=0 workdir=\n[CI/Go 1.15 test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v1/dist/index.js] user= workdir=\n[CI/Go 1.15 test]   | [command]/usr/bin/bash codecov.sh -n  -F  -Q github-action-v1.5.2 -f ./coverage.out\n[CI/Go 1.15 test]   | \n[CI/Go 1.15 test]   |   _____          _\n[CI/Go 1.15 test]   |  / ____|        | |\n[CI/Go 1.15 test]   | | |     ___   __| | ___  ___ _____   __\n[CI/Go 1.15 test]   | | |    / _ \\ / _` |/ _ \\/ __/ _ \\ \\ / /\n[CI/Go 1.15 test]   | | |___| (_) | (_| |  __/ (_| (_) \\ V /\n[CI/Go 1.15 test]   |  \\_____\\___/ \\__,_|\\___|\\___\\___/ \\_/\n[CI/Go 1.15 test]   |                               Bash-1.0.3\n[CI/Go 1.15 test]   | \n[CI/Go 1.15 test]   | \n[CI/Go 1.15 test]   | \u001b[0;36m==>\u001b[0m git version 2.33.0 found\n[CI/Go 1.15 test]   | \u001b[0;36m==>\u001b[0m curl 7.68.0 (x86_64-pc-linux-gnu) libcurl/7.68.0 OpenSSL/1.1.1f zlib/1.2.11 brotli/1.0.7 libidn2/2.2.0 libpsl/0.21.0 (+libidn2/2.2.0) libssh/0.9.3/openssl/zlib nghttp2/1.40.0 librtmp/2.3\n[CI/Go 1.15 test]   | Release-Date: 2020-01-08\n[CI/Go 1.15 test]   | Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtmp rtsp scp sftp smb smbs smtp smtps telnet tftp \n[CI/Go 1.15 test]   | Features: AsynchDNS brotli GSS-API HTTP2 HTTPS-proxy IDN IPv6 Kerberos Largefile libz NTLM NTLM_WB PSL SPNEGO SSL TLS-SRP UnixSockets\n[CI/Go 1.15 test]   | \u001b[0;90m==>\u001b[0m GitHub Actions detected.\n[CI/Go 1.15 test]   |     Env vars used:\n[CI/Go 1.15 test]   |       -> GITHUB_ACTIONS:    true\n[CI/Go 1.15 test]   |       -> GITHUB_HEAD_REF:   \n[CI/Go 1.15 test]   |       -> GITHUB_REF:        refs/heads/master\n[CI/Go 1.15 test]   |       -> GITHUB_REPOSITORY: lestrrat-go/server-starter\n[CI/Go 1.15 test]   |       -> GITHUB_RUN_ID:     1\n[CI/Go 1.15 test]   |       -> GITHUB_SHA:        50cd1900b5bc470635a2b9efee6a141009bef4e2\n[CI/Go 1.15 test]   |       -> GITHUB_WORKFLOW:   CI\n[CI/Go 1.15 test]   |     \u001b[0;90mproject root:\u001b[0m .\n[CI/Go 1.15 test]   |     \u001b[0;32mYaml not found, that's ok! Learn more at\u001b[0m \u001b[0;36mhttp://docs.codecov.io/docs/codecov-yaml\u001b[0m\n[CI/Go 1.15 test]   |     \u001b[0;90m->\u001b[0m Found 1 reports\n[CI/Go 1.15 test]   | \u001b[0;90m==>\u001b[0m Detecting git/mercurial file structure\n[CI/Go 1.15 test]   | \u001b[0;90m==>\u001b[0m Reading reports\n[CI/Go 1.15 test]   |     \u001b[0;31m-\u001b[0m file not found at ./coverage.out\n[CI/Go 1.15 test]   | \u001b[0;31m-->\u001b[0m No coverage data found.\n[CI/Go 1.15 test]   |     Please visit \u001b[0;36mhttp://docs.codecov.io/docs/supported-languages\u001b[0m\n[CI/Go 1.15 test]   |     search for your projects language to learn how to collect reports.\n[CI/Go 1.15 test]   \u2705  Success - Main Upload code coverage to codecov\n[CI/Go 1.15 test] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}