{
    "repository": "ipfs/fs-repo-migrations",
    "clone_url": "https://github.com/ipfs/fs-repo-migrations.git",
    "timestamp": "2023-05-30T11:09:30.837909Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Tests/Tests] \ud83d\ude80  Start image=crawlergpt:latest\n[Tests/Tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Tests/Tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/Tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/Tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/ipfs-fs-repo-migrations] user=0 workdir=\n[Tests/Tests]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[Tests/Tests] \u2b50 Run Main actions/checkout@v2\n[Tests/Tests]   \u2705  Success - Main actions/checkout@v2\n[Tests/Tests] \u2b50 Run Main Set up Go\n[Tests/Tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[Tests/Tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[Tests/Tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[Tests/Tests]   | Setup go stable version spec 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::isExplicit: \n[Tests/Tests]   \ud83d\udcac  ::debug::explicit? false\n[Tests/Tests]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Tests/Tests]   \ud83d\udcac  ::debug::explicit? true\n[Tests/Tests]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Tests/Tests]   \ud83d\udcac  ::debug::explicit? true\n[Tests/Tests]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Tests/Tests]   \ud83d\udcac  ::debug::explicit? true\n[Tests/Tests]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Tests/Tests]   \ud83d\udcac  ::debug::match not found\n[Tests/Tests]   | Attempting to download 1.18...\n[Tests/Tests]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Tests/Tests]   \ud83d\udcac  ::debug::Error: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v2/dist/index.js:5294:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[Tests/Tests]   | Falling back to download directly from Go\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.20.0-rc3 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.20.0-rc2 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.20.0-rc1 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.19.8 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.19.7 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.19.6 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.19.5 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.19.4 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.19.3 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.19.2 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.19.1 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.19.0 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.19.0-rc2 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.19.0-rc1 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.19.0-beta1 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::check 1.18.10 satisfies 1.18\n[Tests/Tests]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[Tests/Tests]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Tests/Tests]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Tests/Tests]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Tests/Tests]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Tests/Tests]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[Tests/Tests]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[Tests/Tests]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[Tests/Tests]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[Tests/Tests]   \ud83d\udcac  ::debug::matched go1.18.10\n[Tests/Tests]   | Install from dist\n[Tests/Tests]   | Acquiring go1.18.10 from https://storage.googleapis.com/golang/go1.18.10.linux-amd64.tar.gz\n[Tests/Tests]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.18.10.linux-amd64.tar.gz\n[Tests/Tests]   \ud83d\udcac  ::debug::Destination /tmp/f0920735-4ad1-4113-a4fd-3c11e3e48d8f\n[Tests/Tests]   \ud83d\udcac  ::debug::download complete\n[Tests/Tests]   | Extracting Go...\n[Tests/Tests]   \ud83d\udcac  ::debug::Checking tar --version\n[Tests/Tests]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Tests/Tests]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/a8878b9d-161d-4333-bca9-3f6ad0d56c52 -f /tmp/f0920735-4ad1-4113-a4fd-3c11e3e48d8f\n[Tests/Tests]   | Successfully extracted go to /tmp/a8878b9d-161d-4333-bca9-3f6ad0d56c52\n[Tests/Tests]   | Adding to the cache ...\n[Tests/Tests]   \ud83d\udcac  ::debug::Caching tool go 1.18.10 x64\n[Tests/Tests]   \ud83d\udcac  ::debug::source dir: /tmp/a8878b9d-161d-4333-bca9-3f6ad0d56c52/go\n[Tests/Tests]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.18.10/x64\n[Tests/Tests]   \ud83d\udcac  ::debug::finished caching tool\n[Tests/Tests]   | Successfully cached go to /opt/hostedtoolcache/go/1.18.10/x64\n[Tests/Tests]   | Added go to the path\n[Tests/Tests]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.18.10/x64/bin/go:\n[Tests/Tests]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Tests/Tests]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Tests/Tests]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Tests/Tests]   \ud83d\udcac  ::debug::add bin true\n[Tests/Tests]   | Successfully setup go version 1.18\n[Tests/Tests]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[Tests/Tests]   | go version go1.18.10 linux/amd64\n[Tests/Tests]   | \n[Tests/Tests]   \u2753  ::group::go env\n[Tests/Tests]   | GO111MODULE=\"\"\n[Tests/Tests]   | GOARCH=\"amd64\"\n[Tests/Tests]   | GOBIN=\"\"\n[Tests/Tests]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Tests/Tests]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Tests/Tests]   | GOEXE=\"\"\n[Tests/Tests]   | GOEXPERIMENT=\"\"\n[Tests/Tests]   | GOFLAGS=\"\"\n[Tests/Tests]   | GOHOSTARCH=\"amd64\"\n[Tests/Tests]   | GOHOSTOS=\"linux\"\n[Tests/Tests]   | GOINSECURE=\"\"\n[Tests/Tests]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Tests/Tests]   | GONOPROXY=\"\"\n[Tests/Tests]   | GONOSUMDB=\"\"\n[Tests/Tests]   | GOOS=\"linux\"\n[Tests/Tests]   | GOPATH=\"/home/runneradmin/go\"\n[Tests/Tests]   | GOPRIVATE=\"\"\n[Tests/Tests]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Tests/Tests]   | GOROOT=\"/opt/hostedtoolcache/go/1.18.10/x64\"\n[Tests/Tests]   | GOSUMDB=\"sum.golang.org\"\n[Tests/Tests]   | GOTMPDIR=\"\"\n[Tests/Tests]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.18.10/x64/pkg/tool/linux_amd64\"\n[Tests/Tests]   | GOVCS=\"\"\n[Tests/Tests]   | GOVERSION=\"go1.18.10\"\n[Tests/Tests]   | GCCGO=\"gccgo\"\n[Tests/Tests]   | GOAMD64=\"v1\"\n[Tests/Tests]   | AR=\"ar\"\n[Tests/Tests]   | CC=\"gcc\"\n[Tests/Tests]   | CXX=\"g++\"\n[Tests/Tests]   | CGO_ENABLED=\"1\"\n[Tests/Tests]   | GOMOD=\"/dev/null\"\n[Tests/Tests]   | GOWORK=\"\"\n[Tests/Tests]   | CGO_CFLAGS=\"-g -O2\"\n[Tests/Tests]   | CGO_CPPFLAGS=\"\"\n[Tests/Tests]   | CGO_CXXFLAGS=\"-g -O2\"\n[Tests/Tests]   | CGO_FFLAGS=\"-g -O2\"\n[Tests/Tests]   | CGO_LDFLAGS=\"-g -O2\"\n[Tests/Tests]   | PKG_CONFIG=\"pkg-config\"\n[Tests/Tests]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build3452049462=/tmp/go-build -gno-record-gcc-switches\"\n[Tests/Tests]   | \n[Tests/Tests]   \u2753  ::endgroup::\n[Tests/Tests]   \u2705  Success - Main Set up Go\n[Tests/Tests]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.18.10/x64\n[Tests/Tests]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.18.10/x64/bin\n[Tests/Tests]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Tests/Tests] \u2b50 Run Main Test\n[Tests/Tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Tests/Tests]   | No Routing.Type field in config, skipping\n[Tests/Tests]   | No Reprovider.Interval field in config, skipping\n[Tests/Tests]   | No Swarm.ConnMgr.Type field in config, skipping\n[Tests/Tests]   | Routing.Type settings is different than the old default, skipping\n[Tests/Tests]   | Reprovider settings are different than the old default, skipping\n[Tests/Tests]   | Swarm.ConnMgr settings are different than the old defaults, skipping\n[Tests/Tests]   | PASS\n[Tests/Tests]   | ok  \tgithub.com/ipfs/fs-repo-migrations/fs-repo-12-to-13/migration\t0.068s\n[Tests/Tests]   | ?   \tgithub.com/ipfs/fs-repo-migrations/fs-repo-13-to-14/migration\t[no test files]\n[Tests/Tests]   | OK\n[Tests/Tests]   | make -C sharness\n[Tests/Tests]   | make[1]: Entering directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/ipfs-fs-repo-migrations/sharness'\n[Tests/Tests]   | *** clean-test-results ***\n[Tests/Tests]   | rm -rf test-results\n[Tests/Tests]   | rm -f ../actual_daemon ../daemon_err\n[Tests/Tests]   | *** checking sharness ***\n[Tests/Tests]   | lib/install-sharness.sh\n[Tests/Tests]   | Cloning into 'sharness'...\n[Tests/Tests]   | Note: switching to '35e1480425c022cb964b614621bdcd21ceaf2e94'.\n[Tests/Tests]   | \n[Tests/Tests]   | You are in 'detached HEAD' state. You can look around, make experimental\n[Tests/Tests]   | changes and commit them, and you can discard any commits you make in this\n[Tests/Tests]   | state without impacting any branches by switching back to a branch.\n[Tests/Tests]   | \n[Tests/Tests]   | If you want to create a new branch to retain commits you create, you may\n[Tests/Tests]   | do so (now or later) by using -c with the switch command. Example:\n[Tests/Tests]   | \n[Tests/Tests]   |   git switch -c <new-branch-name>\n[Tests/Tests]   | \n[Tests/Tests]   | Or undo this operation with:\n[Tests/Tests]   | \n[Tests/Tests]   |   git switch -\n[Tests/Tests]   | \n[Tests/Tests]   | Turn off this advice by setting config variable advice.detachedHead to false\n[Tests/Tests]   | \n[Tests/Tests]   | HEAD is now at 35e1480 Merge branch 'seveas-interactive-tests'\n[Tests/Tests]   | Sharness version 35e1480425c022cb964b614621bdcd21ceaf2e94 is checked out!\n[Tests/Tests]   | *** installing bin/ipfs-update ***\n[Tests/Tests]   | cd dependencies && go build  -o ../bin/ipfs-update github.com/ipfs/ipfs-update\n[Tests/Tests]   | go: downloading github.com/ipfs/ipfs-update v1.9.0\n[Tests/Tests]   | go: downloading github.com/urfave/cli/v2 v2.11.2\n[Tests/Tests]   | go: downloading github.com/whyrusleeping/stump v0.0.0-20160611222256-206f8f13aae1\n[Tests/Tests]   | go: downloading github.com/ipfs/kubo v0.15.0\n[Tests/Tests]   | go: downloading github.com/blang/semver/v4 v4.0.0\n[Tests/Tests]   | go: downloading github.com/ipfs/go-ipfs-api v0.3.0\n[Tests/Tests]   | go: downloading github.com/libp2p/go-libp2p-core v0.19.1\n[Tests/Tests]   | go: downloading github.com/whyrusleeping/tar-utils v0.0.0-20180509141711-8c6c8ba81d5c\n[Tests/Tests]   | go: downloading github.com/multiformats/go-multibase v0.1.1\n[Tests/Tests]   | go: downloading github.com/multiformats/go-multiaddr v0.8.0\n[Tests/Tests]   | go: downloading github.com/mitchellh/go-homedir v1.1.0\n[Tests/Tests]   | go: downloading github.com/ipfs/go-ipfs-files v0.1.1\n[Tests/Tests]   | go: downloading github.com/multiformats/go-base36 v0.1.0\n[Tests/Tests]   | go: downloading github.com/mr-tron/base58 v1.2.0\n[Tests/Tests]   | go: downloading github.com/multiformats/go-base32 v0.0.4\n[Tests/Tests]   | go: downloading github.com/multiformats/go-varint v0.0.6\n[Tests/Tests]   | go: downloading github.com/ipfs/go-cid v0.2.0\n[Tests/Tests]   | go: downloading github.com/multiformats/go-multihash v0.2.1\n[Tests/Tests]   | go: downloading github.com/crackcomm/go-gitignore v0.0.0-20170627025303-887ab5e44cc3\n[Tests/Tests]   | go: downloading github.com/multiformats/go-multicodec v0.5.0\n[Tests/Tests]   | go: downloading github.com/libp2p/go-buffer-pool v0.1.0\n[Tests/Tests]   | go: downloading github.com/btcsuite/btcd/btcec/v2 v2.2.0\n[Tests/Tests]   | go: downloading github.com/minio/sha256-simd v1.0.0\n[Tests/Tests]   | go: downloading github.com/gogo/protobuf v1.3.2\n[Tests/Tests]   | go: downloading github.com/libp2p/go-flow-metrics v0.0.3\n[Tests/Tests]   | go: downloading github.com/klauspost/cpuid/v2 v2.0.14\n[Tests/Tests]   | go: downloading github.com/spaolacci/murmur3 v1.1.0\n[Tests/Tests]   | go: downloading golang.org/x/crypto v0.0.0-20220525230936-793ad666bf5e\n[Tests/Tests]   | go: downloading lukechampine.com/blake3 v1.1.7\n[Tests/Tests]   | go: downloading github.com/decred/dcrd/dcrec/secp256k1/v4 v4.0.1\n[Tests/Tests]   | go: downloading github.com/cpuguy83/go-md2man/v2 v2.0.2\n[Tests/Tests]   | go: downloading github.com/xrash/smetrics v0.0.0-20201216005158-039620a65673\n[Tests/Tests]   | go: downloading github.com/russross/blackfriday/v2 v2.1.0\n[Tests/Tests]   | go: downloading github.com/hashicorp/go-multierror v1.1.1\n[Tests/Tests]   | go: downloading github.com/ipfs/interface-go-ipfs-core v0.7.0\n[Tests/Tests]   | go: downloading github.com/libp2p/go-libp2p-resource-manager v0.5.3\n[Tests/Tests]   | go: downloading github.com/hashicorp/errwrap v1.1.0\n[Tests/Tests]   | go: downloading golang.org/x/sys v0.0.0-20220829200755-d48e67d00261\n[Tests/Tests]   | go: downloading github.com/ipfs/go-log/v2 v2.5.1\n[Tests/Tests]   | go: downloading github.com/pbnjay/memory v0.0.0-20210728143218-7b4eea64cf58\n[Tests/Tests]   | go: downloading github.com/ipfs/go-merkledag v0.6.0\n[Tests/Tests]   | go: downloading github.com/ipfs/go-log v1.0.5\n[Tests/Tests]   | go: downloading github.com/ipfs/go-blockservice v0.4.0\n[Tests/Tests]   | go: downloading github.com/ipfs/go-block-format v0.0.3\n[Tests/Tests]   | go: downloading github.com/ipfs/go-ipfs-util v0.0.2\n[Tests/Tests]   | go: downloading github.com/ipld/go-ipld-prime v0.17.0\n[Tests/Tests]   | go: downloading github.com/ipld/go-codec-dagpb v1.4.1\n[Tests/Tests]   | go: downloading github.com/ipfs/go-ipld-cbor v0.0.5\n[Tests/Tests]   | go: downloading github.com/ipfs/go-ipld-legacy v0.1.1\n[Tests/Tests]   | go: downloading github.com/ipfs/go-ipld-format v0.4.0\n[Tests/Tests]   | go: downloading go.uber.org/zap v1.21.0\n[Tests/Tests]   | go: downloading github.com/mattn/go-isatty v0.0.14\n[Tests/Tests]   | go: downloading go.uber.org/multierr v1.8.0\n[Tests/Tests]   | go: downloading github.com/whyrusleeping/cbor-gen v0.0.0-20210219115102-f37d292932f2\n[Tests/Tests]   | go: downloading github.com/polydawn/refmt v0.0.0-20201211092308-30ac6d18308e\n[Tests/Tests]   | go: downloading google.golang.org/protobuf v1.28.0\n[Tests/Tests]   | go: downloading github.com/ipfs/go-ipfs-exchange-interface v0.2.0\n[Tests/Tests]   | go: downloading go.opentelemetry.io/otel/trace v1.7.0\n[Tests/Tests]   | go: downloading go.opentelemetry.io/otel v1.7.0\n[Tests/Tests]   | go: downloading github.com/ipfs/go-ipfs-blockstore v1.2.0\n[Tests/Tests]   | go: downloading github.com/ipfs/go-verifcid v0.0.2\n[Tests/Tests]   | go: downloading go.uber.org/atomic v1.9.0\n[Tests/Tests]   | go: downloading golang.org/x/xerrors v0.0.0-20220609144429-65e65417b02f\n[Tests/Tests]   | go: downloading github.com/ipfs/go-metrics-interface v0.0.1\n[Tests/Tests]   | go: downloading github.com/hashicorp/golang-lru v0.5.4\n[Tests/Tests]   | go: downloading github.com/ipfs/go-datastore v0.5.1\n[Tests/Tests]   | go: downloading github.com/ipfs/bbloom v0.0.4\n[Tests/Tests]   | go: downloading github.com/ipfs/go-ipfs-ds-help v1.1.0\n[Tests/Tests]   | go: downloading github.com/opentracing/opentracing-go v1.2.0\n[Tests/Tests]   | go: downloading github.com/jbenet/goprocess v0.1.4\n[Tests/Tests]   | go: downloading github.com/google/uuid v1.3.0\n[Tests/Tests]   | go: downloading github.com/go-logr/logr v1.2.3\n[Tests/Tests]   | go: downloading github.com/go-logr/stdr v1.2.2\n[Tests/Tests]   | *** installing bin/random-files ***\n[Tests/Tests]   | cd dependencies && go build  -o ../bin/random-files github.com/jbenet/go-random-files/random-files\n[Tests/Tests]   | go: downloading github.com/jbenet/go-random-files v0.0.0-20190219210431-31b3f20ebded\n[Tests/Tests]   | go: downloading github.com/jbenet/go-random v0.0.0-20190219211222-123a90aedc0c\n[Tests/Tests]   | *** installing bin/go-sleep ***\n[Tests/Tests]   | cd dependencies && go build  -o ../bin/go-sleep github.com/chriscool/go-sleep\n[Tests/Tests]   | go: downloading github.com/chriscool/go-sleep v0.0.0-20150606204034-743ab5f1bb48\n[Tests/Tests]   | *** installing bin/pollEndpoint ***\n[Tests/Tests]   | cd dependencies && go build  -o ../bin/pollEndpoint ./pollEndpoint\n[Tests/Tests]   | go: downloading github.com/whyrusleeping/go-logging v0.0.1\n[Tests/Tests]   | *** installing bin/fs-repo-migrations ***\n[Tests/Tests]   | cd ../fs-repo-migrations && go build  -o ../sharness/bin/fs-repo-migrations\n[Tests/Tests]   | go: downloading github.com/ipfs/go-ipfs v0.8.1-0.20210331232424-4cdb67f37daa\n[Tests/Tests]   | go: downloading github.com/ipfs/go-ipfs-api v0.2.0\n[Tests/Tests]   | go: downloading github.com/multiformats/go-multiaddr v0.3.1\n[Tests/Tests]   | go: downloading github.com/libp2p/go-libp2p-core v0.8.5\n[Tests/Tests]   | go: downloading github.com/ipfs/go-ipfs-files v0.0.8\n[Tests/Tests]   | go: downloading github.com/multiformats/go-multiaddr-net v0.2.0\n[Tests/Tests]   | go: downloading github.com/whyrusleeping/tar-utils v0.0.0-20201201191210-20a61371de5b\n[Tests/Tests]   | go: downloading github.com/ipfs/go-cid v0.0.7\n[Tests/Tests]   | go: downloading github.com/multiformats/go-multihash v0.0.14\n[Tests/Tests]   | go: downloading github.com/multiformats/go-multibase v0.0.3\n[Tests/Tests]   | go: downloading github.com/minio/blake2b-simd v0.0.0-20160723061019-3f5f724cb5b1\n[Tests/Tests]   | go: downloading golang.org/x/crypto v0.0.0-20210322153248-0c34fe9e7dc2\n[Tests/Tests]   | go: downloading github.com/minio/sha256-simd v0.1.1\n[Tests/Tests]   | go: downloading go.opencensus.io v0.23.0\n[Tests/Tests]   | go: downloading github.com/libp2p/go-buffer-pool v0.0.2\n[Tests/Tests]   | go: downloading github.com/btcsuite/btcd v0.20.1-beta\n[Tests/Tests]   | go: downloading github.com/multiformats/go-base32 v0.0.3\n[Tests/Tests]   | go: downloading golang.org/x/sys v0.0.0-20210309074719-68d13333faf2\n[Tests/Tests]   | cd ../fs-repo-12-to-13 && go build  -mod=vendor -o ../sharness/bin/\n[Tests/Tests]   | cd ../fs-repo-13-to-14 && go build  -mod=vendor -o ../sharness/bin/\n[Tests/Tests]   | ===> OK built migrations\n[Tests/Tests]   | *** t0000-sharness.sh ***\n[Tests/Tests]   | ./t0000-sharness.sh -v\n[Tests/Tests]   | expecting success: \n[Tests/Tests]   |     echo hello world | grep hello\n[Tests/Tests]   | \n[Tests/Tests]   | hello world\n[Tests/Tests]   | ok 1 - Success is reported like this\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   |     test x = 'x' &&\n[Tests/Tests]   |     test 2 -gt 1 &&\n[Tests/Tests]   |     echo success\n[Tests/Tests]   | \n[Tests/Tests]   | success\n[Tests/Tests]   | ok 2 - Commands are chained this way\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   |     test_expect_code 42 return_42\n[Tests/Tests]   | \n[Tests/Tests]   | Will return soon\n[Tests/Tests]   | ok 3 - You can test for a specific exit code\n[Tests/Tests]   | \n[Tests/Tests]   | checking known breakage: \n[Tests/Tests]   |     test 1 = 2\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 4 - We expect this to fail # TODO known breakage\n[Tests/Tests]   | \n[Tests/Tests]   | # still have 1 known breakage(s)\n[Tests/Tests]   | # passed all remaining 3 test(s)\n[Tests/Tests]   | 1..4\n[Tests/Tests]   | *** t0010-docker.sh ***\n[Tests/Tests]   | ./t0010-docker.sh -v\n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \ttype docker\n[Tests/Tests]   | \n[Tests/Tests]   | docker is /usr/bin/docker\n[Tests/Tests]   | ok 1 - docker is installed\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tdocker --version >actual\n[Tests/Tests]   | \n[Tests/Tests]   | ok 2 - 'docker --version' works\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tegrep \"^Docker version\" actual\n[Tests/Tests]   | \n[Tests/Tests]   | Docker version 20.10.8+azure, build 3967b7d28e15a020e4ee344283128ead633b3e0c\n[Tests/Tests]   | ok 3 - 'docker --version' output looks good\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tgroups | egrep \"\\bdocker\\b\"\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 4 - current user is in the 'docker' group\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\tgroups | egrep \"\bdocker\b\"\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tDOCID=$(start_docker)\n[Tests/Tests]   | \n[Tests/Tests]   | docker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/create\": dial unix /var/run/docker.sock: connect: permission denied.\n[Tests/Tests]   | See 'docker run --help'.\n[Tests/Tests]   | not ok 5 - start a docker container\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\tDOCID=$(start_docker)\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \texec_docker \"$DOCID\" \"echo \\\"Hello world!\\\"\" >actual\n[Tests/Tests]   | \n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | not ok 6 - exec a command in docker container\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\texec_docker \"$DOCID\" \"echo \\\"Hello world!\\\"\" >actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \techo \"Hello world!\" >expected &&\n[Tests/Tests]   | \ttest_cmp expected actual\n[Tests/Tests]   | \n[Tests/Tests]   | > diff -u expected actual\n[Tests/Tests]   | --- expected\t2023-05-30 11:14:52.898540195 +0000\n[Tests/Tests]   | +++ actual\t2023-05-30 11:14:52.834540695 +0000\n[Tests/Tests]   | @@ -1 +0,0 @@\n[Tests/Tests]   | -Hello world!\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 7 - command output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\techo \"Hello world!\" >expected &&\n[Tests/Tests]   | #\t\ttest_cmp expected actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tstop_docker \"$DOCID\"\n[Tests/Tests]   | \n[Tests/Tests]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/stop\": dial unix /var/run/docker.sock: connect: permission denied\n[Tests/Tests]   | not ok 8 - stop a docker container\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\tstop_docker \"$DOCID\"\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | # failed 5 among 8 test(s)\n[Tests/Tests]   | 1..8\n[Tests/Tests]   | make[1]: *** [Makefile:45: t0010-docker.sh] Error 1\n[Tests/Tests]   | *** t0020-ipfs-update.sh ***\n[Tests/Tests]   | ./t0020-ipfs-update.sh -v\n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \ttest -f \"$LOCAL_IPFS_UPDATE\"\n[Tests/Tests]   | \n[Tests/Tests]   | ok 1 - ipfs-update binary is here\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\"$LOCAL_IPFS_UPDATE\" versions >actual ||\n[Tests/Tests]   | \ttest_fsh cat actual\n[Tests/Tests]   | \n[Tests/Tests]   | ok 2 - 'ipfs-update versions' works\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tgrep v0.3.7 actual &&\n[Tests/Tests]   | \tgrep v0.3.8 actual &&\n[Tests/Tests]   | \tgrep v0.3.9 actual\n[Tests/Tests]   | \n[Tests/Tests]   | v0.3.7\n[Tests/Tests]   | v0.3.8\n[Tests/Tests]   | v0.3.9\n[Tests/Tests]   | ok 3 - 'ipfs-update versions' output looks good\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tDOCID=$(start_docker)\n[Tests/Tests]   | \n[Tests/Tests]   | docker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/create\": dial unix /var/run/docker.sock: connect: permission denied.\n[Tests/Tests]   | See 'docker run --help'.\n[Tests/Tests]   | not ok 4 - start a docker container\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\tDOCID=$(start_docker)\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \texec_docker \"$DOCID\" \"test -f $GUEST_IPFS_UPDATE\"\n[Tests/Tests]   | \n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | not ok 5 - ipfs-update binary is on the container\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\texec_docker \"$DOCID\" \"test -f $GUEST_IPFS_UPDATE\"\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \texec_docker \"$DOCID\" \"$GUEST_IPFS_UPDATE version\" >actual\n[Tests/Tests]   | \n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | not ok 6 - 'ipfs-update version' works\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\texec_docker \"$DOCID\" \"$GUEST_IPFS_UPDATE version\" >actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \techo \"none\" >expected &&\n[Tests/Tests]   | \ttest_cmp expected actual\n[Tests/Tests]   | \n[Tests/Tests]   | > diff -u expected actual\n[Tests/Tests]   | --- expected\t2023-05-30 11:14:53.338536762 +0000\n[Tests/Tests]   | +++ actual\t2023-05-30 11:14:53.270537293 +0000\n[Tests/Tests]   | @@ -1 +0,0 @@\n[Tests/Tests]   | -none\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 7 - 'ipfs-update version' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\techo \"none\" >expected &&\n[Tests/Tests]   | #\t\ttest_cmp expected actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \texec_docker \"$DOCID\" \"$GUEST_IPFS_UPDATE versions\" >actual\n[Tests/Tests]   | \n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | not ok 8 - 'ipfs-update versions' works\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\texec_docker \"$DOCID\" \"$GUEST_IPFS_UPDATE versions\" >actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tgrep v0.3.7 actual &&\n[Tests/Tests]   | \tgrep v0.3.8 actual &&\n[Tests/Tests]   | \tgrep v0.3.9 actual\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 9 - 'ipfs-update versions' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\tgrep v0.3.7 actual &&\n[Tests/Tests]   | #\t\tgrep v0.3.8 actual &&\n[Tests/Tests]   | #\t\tgrep v0.3.9 actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\tDOCPWD=$(exec_docker \"$DOCID\" \"pwd\") &&\n[Tests/Tests]   | \t\tDOCPATH=$(exec_docker \"$DOCID\" \"echo \\$PATH\") &&\n[Tests/Tests]   | \t\tNEWPATH=\"$DOCPWD/sharness/bin:$DOCPATH\" &&\n[Tests/Tests]   | \t\texec_docker \"$DOCID\" \"export PATH=\\\"$NEWPATH\\\" && $GUEST_IPFS_UPDATE --verbose install --allow-downgrade $VERSION\" >actual 2>&1 ||\n[Tests/Tests]   | \t\ttest_fsh cat actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | > cat actual\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 10 - 'ipfs-update install' works for v0.3.9\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\tDOCPWD=$(exec_docker \"$DOCID\" \"pwd\") &&\n[Tests/Tests]   | #\t\t\tDOCPATH=$(exec_docker \"$DOCID\" \"echo \\$PATH\") &&\n[Tests/Tests]   | #\t\t\tNEWPATH=\"$DOCPWD/sharness/bin:$DOCPATH\" &&\n[Tests/Tests]   | #\t\t\texec_docker \"$DOCID\" \"export PATH=\\\"$NEWPATH\\\" && $GUEST_IPFS_UPDATE --verbose install --allow-downgrade $VERSION\" >actual 2>&1 ||\n[Tests/Tests]   | #\t\t\ttest_fsh cat actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\tgrep \"fetching go-ipfs version $VERSION\" actual &&\n[Tests/Tests]   | \t\tgrep \"Installation complete!\" actual ||\n[Tests/Tests]   | \t\ttest_fsh cat actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | > cat actual\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 11 - 'ipfs-update install' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\tgrep \"fetching go-ipfs version $VERSION\" actual &&\n[Tests/Tests]   | #\t\t\tgrep \"Installation complete!\" actual ||\n[Tests/Tests]   | #\t\t\ttest_fsh cat actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\texec_docker \"$DOCID\" \"$GUEST_IPFS_UPDATE version\" >actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | not ok 12 - 'ipfs-update version' works for v0.3.9\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\texec_docker \"$DOCID\" \"$GUEST_IPFS_UPDATE version\" >actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\techo \"$VERSION\" >expected &&\n[Tests/Tests]   | \t\ttest_cmp expected actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | > diff -u expected actual\n[Tests/Tests]   | --- expected\t2023-05-30 11:14:53.530535263 +0000\n[Tests/Tests]   | +++ actual\t2023-05-30 11:14:53.474535700 +0000\n[Tests/Tests]   | @@ -1 +0,0 @@\n[Tests/Tests]   | -v0.3.9\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 13 - 'ipfs-update version' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\techo \"$VERSION\" >expected &&\n[Tests/Tests]   | #\t\t\ttest_cmp expected actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tstop_docker \"$DOCID\"\n[Tests/Tests]   | \n[Tests/Tests]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/stop\": dial unix /var/run/docker.sock: connect: permission denied\n[Tests/Tests]   | not ok 14 - stop docker container\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\tstop_docker \"$DOCID\"\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | # failed 11 among 14 test(s)\n[Tests/Tests]   | 1..14\n[Tests/Tests]   | make[1]: *** [Makefile:45: t0020-ipfs-update.sh] Error 1\n[Tests/Tests]   | *** t0030-simple-migration.sh ***\n[Tests/Tests]   | ./t0030-simple-migration.sh -v\n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \ttest -f \"$LOCAL_FS_REPO_MIG\"\n[Tests/Tests]   | \n[Tests/Tests]   | ok 1 - fs-repo-migrations binary is here\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\"$LOCAL_FS_REPO_MIG\" -v >actual\n[Tests/Tests]   | \n[Tests/Tests]   | ok 2 - 'fs-repo-migrations -v' works\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \techo \"$latestRepoVersion\" >expected &&\n[Tests/Tests]   | \ttest_cmp expected actual\n[Tests/Tests]   | \n[Tests/Tests]   | > diff -u expected actual\n[Tests/Tests]   | --- expected\t2023-05-30 11:14:53.814533047 +0000\n[Tests/Tests]   | +++ actual\t2023-05-30 11:14:53.806533109 +0000\n[Tests/Tests]   | @@ -1 +1 @@\n[Tests/Tests]   | -13\n[Tests/Tests]   | +14\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 3 - 'fs-repo-migrations -v' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\techo \"$latestRepoVersion\" >expected &&\n[Tests/Tests]   | #\t\ttest_cmp expected actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tDOCID=$(start_docker)\n[Tests/Tests]   | \n[Tests/Tests]   | docker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/create\": dial unix /var/run/docker.sock: connect: permission denied.\n[Tests/Tests]   | See 'docker run --help'.\n[Tests/Tests]   | not ok 4 - start a docker container\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\tDOCID=$(start_docker)\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \texec_docker \"$DOCID\" \"test -f $GUEST_FS_REPO_MIG\"\n[Tests/Tests]   | \n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | not ok 5 - fs-repo-migrations binary is on the container\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\texec_docker \"$DOCID\" \"test -f $GUEST_FS_REPO_MIG\"\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \texec_docker \"$DOCID\" \"$GUEST_FS_REPO_MIG -v\" >actual\n[Tests/Tests]   | \n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | not ok 6 - 'fs-repo-migrations -v' works\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\texec_docker \"$DOCID\" \"$GUEST_FS_REPO_MIG -v\" >actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \techo \"$latestRepoVersion\" >expected &&\n[Tests/Tests]   | \ttest_cmp expected actual\n[Tests/Tests]   | \n[Tests/Tests]   | > diff -u expected actual\n[Tests/Tests]   | --- expected\t2023-05-30 11:14:54.214529925 +0000\n[Tests/Tests]   | +++ actual\t2023-05-30 11:14:54.142530487 +0000\n[Tests/Tests]   | @@ -1 +0,0 @@\n[Tests/Tests]   | -13\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 7 - 'fs-repo-migrations -v' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\techo \"$latestRepoVersion\" >expected &&\n[Tests/Tests]   | #\t\ttest_cmp expected actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\tDOCPWD=$(exec_docker \"$DOCID\" \"pwd\") &&\n[Tests/Tests]   | \t\tDOCPATH=$(exec_docker \"$DOCID\" \"echo \\$PATH\") &&\n[Tests/Tests]   | \t\tNEWPATH=\"$DOCPWD/sharness/bin:$DOCPATH\" &&\n[Tests/Tests]   | \t\texec_docker \"$DOCID\" \"export PATH=\\\"$NEWPATH\\\" && $GUEST_IPFS_UPDATE --verbose install --allow-downgrade $VERSION\" >actual 2>&1 ||\n[Tests/Tests]   | \t\ttest_fsh cat actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | > cat actual\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 8 - 'ipfs-update install' works for v0.3.9\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\tDOCPWD=$(exec_docker \"$DOCID\" \"pwd\") &&\n[Tests/Tests]   | #\t\t\tDOCPATH=$(exec_docker \"$DOCID\" \"echo \\$PATH\") &&\n[Tests/Tests]   | #\t\t\tNEWPATH=\"$DOCPWD/sharness/bin:$DOCPATH\" &&\n[Tests/Tests]   | #\t\t\texec_docker \"$DOCID\" \"export PATH=\\\"$NEWPATH\\\" && $GUEST_IPFS_UPDATE --verbose install --allow-downgrade $VERSION\" >actual 2>&1 ||\n[Tests/Tests]   | #\t\t\ttest_fsh cat actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\tgrep \"fetching go-ipfs version $VERSION\" actual &&\n[Tests/Tests]   | \t\tgrep \"Installation complete!\" actual ||\n[Tests/Tests]   | \t\ttest_fsh cat actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | > cat actual\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 9 - 'ipfs-update install' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\tgrep \"fetching go-ipfs version $VERSION\" actual &&\n[Tests/Tests]   | #\t\t\tgrep \"Installation complete!\" actual ||\n[Tests/Tests]   | #\t\t\ttest_fsh cat actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\texec_docker \"$DOCID\" \"$GUEST_IPFS_UPDATE version\" >actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | not ok 10 - 'ipfs-update version' works for v0.3.9\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\texec_docker \"$DOCID\" \"$GUEST_IPFS_UPDATE version\" >actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\techo \"$VERSION\" >expected &&\n[Tests/Tests]   | \t\ttest_cmp expected actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | > diff -u expected actual\n[Tests/Tests]   | --- expected\t2023-05-30 11:14:54.406528427 +0000\n[Tests/Tests]   | +++ actual\t2023-05-30 11:14:54.318529113 +0000\n[Tests/Tests]   | @@ -1 +0,0 @@\n[Tests/Tests]   | -v0.3.9\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 11 - 'ipfs-update version' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\techo \"$VERSION\" >expected &&\n[Tests/Tests]   | #\t\t\ttest_cmp expected actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \texec_docker \"$DOCID\" \"IPFS_PATH=/root/.ipfs BITS=2048 ipfs init\" >actual 2>&1 ||\n[Tests/Tests]   | \ttest_fsh cat actual\n[Tests/Tests]   | \n[Tests/Tests]   | > cat actual\n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | \n[Tests/Tests]   | not ok 12 - 'ipfs init' succeeds\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\texec_docker \"$DOCID\" \"IPFS_PATH=/root/.ipfs BITS=2048 ipfs init\" >actual 2>&1 ||\n[Tests/Tests]   | #\t\ttest_fsh cat actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \texec_docker \"$DOCID\" \"test -d  /root/.ipfs && test -f /root/.ipfs/config\"\n[Tests/Tests]   | \texec_docker \"$DOCID\" \"test -d  /root/.ipfs/datastore && test -d /root/.ipfs/blocks\"\n[Tests/Tests]   | \n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | not ok 13 - .ipfs/ has been created\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\texec_docker \"$DOCID\" \"test -d  /root/.ipfs && test -f /root/.ipfs/config\"\n[Tests/Tests]   | #\t\texec_docker \"$DOCID\" \"test -d  /root/.ipfs/datastore && test -d /root/.ipfs/blocks\"\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \texec_docker \"$DOCID\" \"$GUEST_FS_REPO_MIG -y -to=3\" >actual 2>&1\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 14 - 'fs-repo-migrations -y' works\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\texec_docker \"$DOCID\" \"$GUEST_FS_REPO_MIG -y -to=3\" >actual 2>&1\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tgrep \"fs-repo migrated to version 3\" actual ||\n[Tests/Tests]   | \ttest_fsh cat actual\n[Tests/Tests]   | \n[Tests/Tests]   | > cat actual\n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | \n[Tests/Tests]   | not ok 15 - 'fs-repo-migrations -y' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\tgrep \"fs-repo migrated to version 3\" actual ||\n[Tests/Tests]   | #\t\ttest_fsh cat actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\tDOCPWD=$(exec_docker \"$DOCID\" \"pwd\") &&\n[Tests/Tests]   | \t\tDOCPATH=$(exec_docker \"$DOCID\" \"echo \\$PATH\") &&\n[Tests/Tests]   | \t\tNEWPATH=\"$DOCPWD/sharness/bin:$DOCPATH\" &&\n[Tests/Tests]   | \t\texec_docker \"$DOCID\" \"export PATH=\\\"$NEWPATH\\\" && $GUEST_IPFS_UPDATE --verbose install --allow-downgrade $VERSION\" >actual 2>&1 ||\n[Tests/Tests]   | \t\ttest_fsh cat actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | > cat actual\n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | \n[Tests/Tests]   | not ok 16 - 'ipfs-update install' works for v0.4.0\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\tDOCPWD=$(exec_docker \"$DOCID\" \"pwd\") &&\n[Tests/Tests]   | #\t\t\tDOCPATH=$(exec_docker \"$DOCID\" \"echo \\$PATH\") &&\n[Tests/Tests]   | #\t\t\tNEWPATH=\"$DOCPWD/sharness/bin:$DOCPATH\" &&\n[Tests/Tests]   | #\t\t\texec_docker \"$DOCID\" \"export PATH=\\\"$NEWPATH\\\" && $GUEST_IPFS_UPDATE --verbose install --allow-downgrade $VERSION\" >actual 2>&1 ||\n[Tests/Tests]   | #\t\t\ttest_fsh cat actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\tgrep \"fetching go-ipfs version $VERSION\" actual &&\n[Tests/Tests]   | \t\tgrep \"Installation complete!\" actual ||\n[Tests/Tests]   | \t\ttest_fsh cat actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | > cat actual\n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | \n[Tests/Tests]   | not ok 17 - 'ipfs-update install' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\tgrep \"fetching go-ipfs version $VERSION\" actual &&\n[Tests/Tests]   | #\t\t\tgrep \"Installation complete!\" actual ||\n[Tests/Tests]   | #\t\t\ttest_fsh cat actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\texec_docker \"$DOCID\" \"$GUEST_IPFS_UPDATE version\" >actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | not ok 18 - 'ipfs-update version' works for v0.4.0\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\texec_docker \"$DOCID\" \"$GUEST_IPFS_UPDATE version\" >actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\techo \"$VERSION\" >expected &&\n[Tests/Tests]   | \t\ttest_cmp expected actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | > diff -u expected actual\n[Tests/Tests]   | --- expected\t2023-05-30 11:14:55.110522932 +0000\n[Tests/Tests]   | +++ actual\t2023-05-30 11:14:55.042523462 +0000\n[Tests/Tests]   | @@ -1 +0,0 @@\n[Tests/Tests]   | -v0.4.0\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 19 - 'ipfs-update version' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\techo \"$VERSION\" >expected &&\n[Tests/Tests]   | #\t\t\ttest_cmp expected actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tstop_docker \"$DOCID\"\n[Tests/Tests]   | \n[Tests/Tests]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/stop\": dial unix /var/run/docker.sock: connect: permission denied\n[Tests/Tests]   | not ok 20 - stop docker container\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\tstop_docker \"$DOCID\"\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | # failed 18 among 20 test(s)\n[Tests/Tests]   | 1..20\n[Tests/Tests]   | make[1]: *** [Makefile:45: t0030-simple-migration.sh] Error 1\n[Tests/Tests]   | *** ..//sharness/t0000-sharness.sh ***\n[Tests/Tests]   | ./..//sharness/t0000-sharness.sh -v\n[Tests/Tests]   | expecting success: \n[Tests/Tests]   |     echo hello world | grep hello\n[Tests/Tests]   | \n[Tests/Tests]   | hello world\n[Tests/Tests]   | ok 1 - Success is reported like this\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   |     test x = 'x' &&\n[Tests/Tests]   |     test 2 -gt 1 &&\n[Tests/Tests]   |     echo success\n[Tests/Tests]   | \n[Tests/Tests]   | success\n[Tests/Tests]   | ok 2 - Commands are chained this way\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   |     test_expect_code 42 return_42\n[Tests/Tests]   | \n[Tests/Tests]   | Will return soon\n[Tests/Tests]   | ok 3 - You can test for a specific exit code\n[Tests/Tests]   | \n[Tests/Tests]   | checking known breakage: \n[Tests/Tests]   |     test 1 = 2\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 4 - We expect this to fail # TODO known breakage\n[Tests/Tests]   | \n[Tests/Tests]   | # still have 1 known breakage(s)\n[Tests/Tests]   | # passed all remaining 3 test(s)\n[Tests/Tests]   | 1..4\n[Tests/Tests]   | *** ..//sharness/t0010-docker.sh ***\n[Tests/Tests]   | ./..//sharness/t0010-docker.sh -v\n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \ttype docker\n[Tests/Tests]   | \n[Tests/Tests]   | docker is /usr/bin/docker\n[Tests/Tests]   | ok 1 - docker is installed\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tdocker --version >actual\n[Tests/Tests]   | \n[Tests/Tests]   | ok 2 - 'docker --version' works\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tegrep \"^Docker version\" actual\n[Tests/Tests]   | \n[Tests/Tests]   | Docker version 20.10.8+azure, build 3967b7d28e15a020e4ee344283128ead633b3e0c\n[Tests/Tests]   | ok 3 - 'docker --version' output looks good\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tgroups | egrep \"\\bdocker\\b\"\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 4 - current user is in the 'docker' group\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\tgroups | egrep \"\bdocker\b\"\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tDOCID=$(start_docker)\n[Tests/Tests]   | \n[Tests/Tests]   | docker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/create\": dial unix /var/run/docker.sock: connect: permission denied.\n[Tests/Tests]   | See 'docker run --help'.\n[Tests/Tests]   | not ok 5 - start a docker container\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\tDOCID=$(start_docker)\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \texec_docker \"$DOCID\" \"echo \\\"Hello world!\\\"\" >actual\n[Tests/Tests]   | \n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | not ok 6 - exec a command in docker container\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\texec_docker \"$DOCID\" \"echo \\\"Hello world!\\\"\" >actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \techo \"Hello world!\" >expected &&\n[Tests/Tests]   | \ttest_cmp expected actual\n[Tests/Tests]   | \n[Tests/Tests]   | > diff -u expected actual\n[Tests/Tests]   | --- expected\t2023-05-30 11:14:55.438520371 +0000\n[Tests/Tests]   | +++ actual\t2023-05-30 11:14:55.374520871 +0000\n[Tests/Tests]   | @@ -1 +0,0 @@\n[Tests/Tests]   | -Hello world!\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 7 - command output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\techo \"Hello world!\" >expected &&\n[Tests/Tests]   | #\t\ttest_cmp expected actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tstop_docker \"$DOCID\"\n[Tests/Tests]   | \n[Tests/Tests]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/stop\": dial unix /var/run/docker.sock: connect: permission denied\n[Tests/Tests]   | not ok 8 - stop a docker container\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\tstop_docker \"$DOCID\"\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | # failed 5 among 8 test(s)\n[Tests/Tests]   | 1..8\n[Tests/Tests]   | make[1]: *** [Makefile:45: ..//sharness/t0010-docker.sh] Error 1\n[Tests/Tests]   | *** ..//sharness/t0020-ipfs-update.sh ***\n[Tests/Tests]   | ./..//sharness/t0020-ipfs-update.sh -v\n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \ttest -f \"$LOCAL_IPFS_UPDATE\"\n[Tests/Tests]   | \n[Tests/Tests]   | ok 1 - ipfs-update binary is here\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\"$LOCAL_IPFS_UPDATE\" versions >actual ||\n[Tests/Tests]   | \ttest_fsh cat actual\n[Tests/Tests]   | \n[Tests/Tests]   | ok 2 - 'ipfs-update versions' works\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tgrep v0.3.7 actual &&\n[Tests/Tests]   | \tgrep v0.3.8 actual &&\n[Tests/Tests]   | \tgrep v0.3.9 actual\n[Tests/Tests]   | \n[Tests/Tests]   | v0.3.7\n[Tests/Tests]   | v0.3.8\n[Tests/Tests]   | v0.3.9\n[Tests/Tests]   | ok 3 - 'ipfs-update versions' output looks good\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tDOCID=$(start_docker)\n[Tests/Tests]   | \n[Tests/Tests]   | docker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/create\": dial unix /var/run/docker.sock: connect: permission denied.\n[Tests/Tests]   | See 'docker run --help'.\n[Tests/Tests]   | not ok 4 - start a docker container\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\tDOCID=$(start_docker)\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \texec_docker \"$DOCID\" \"test -f $GUEST_IPFS_UPDATE\"\n[Tests/Tests]   | \n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | not ok 5 - ipfs-update binary is on the container\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\texec_docker \"$DOCID\" \"test -f $GUEST_IPFS_UPDATE\"\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \texec_docker \"$DOCID\" \"$GUEST_IPFS_UPDATE version\" >actual\n[Tests/Tests]   | \n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | not ok 6 - 'ipfs-update version' works\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\texec_docker \"$DOCID\" \"$GUEST_IPFS_UPDATE version\" >actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \techo \"none\" >expected &&\n[Tests/Tests]   | \ttest_cmp expected actual\n[Tests/Tests]   | \n[Tests/Tests]   | > diff -u expected actual\n[Tests/Tests]   | --- expected\t2023-05-30 11:14:55.950516374 +0000\n[Tests/Tests]   | +++ actual\t2023-05-30 11:14:55.878516936 +0000\n[Tests/Tests]   | @@ -1 +0,0 @@\n[Tests/Tests]   | -none\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 7 - 'ipfs-update version' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\techo \"none\" >expected &&\n[Tests/Tests]   | #\t\ttest_cmp expected actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \texec_docker \"$DOCID\" \"$GUEST_IPFS_UPDATE versions\" >actual\n[Tests/Tests]   | \n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | not ok 8 - 'ipfs-update versions' works\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\texec_docker \"$DOCID\" \"$GUEST_IPFS_UPDATE versions\" >actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tgrep v0.3.7 actual &&\n[Tests/Tests]   | \tgrep v0.3.8 actual &&\n[Tests/Tests]   | \tgrep v0.3.9 actual\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 9 - 'ipfs-update versions' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\tgrep v0.3.7 actual &&\n[Tests/Tests]   | #\t\tgrep v0.3.8 actual &&\n[Tests/Tests]   | #\t\tgrep v0.3.9 actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\tDOCPWD=$(exec_docker \"$DOCID\" \"pwd\") &&\n[Tests/Tests]   | \t\tDOCPATH=$(exec_docker \"$DOCID\" \"echo \\$PATH\") &&\n[Tests/Tests]   | \t\tNEWPATH=\"$DOCPWD/sharness/bin:$DOCPATH\" &&\n[Tests/Tests]   | \t\texec_docker \"$DOCID\" \"export PATH=\\\"$NEWPATH\\\" && $GUEST_IPFS_UPDATE --verbose install --allow-downgrade $VERSION\" >actual 2>&1 ||\n[Tests/Tests]   | \t\ttest_fsh cat actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | > cat actual\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 10 - 'ipfs-update install' works for v0.3.9\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\tDOCPWD=$(exec_docker \"$DOCID\" \"pwd\") &&\n[Tests/Tests]   | #\t\t\tDOCPATH=$(exec_docker \"$DOCID\" \"echo \\$PATH\") &&\n[Tests/Tests]   | #\t\t\tNEWPATH=\"$DOCPWD/sharness/bin:$DOCPATH\" &&\n[Tests/Tests]   | #\t\t\texec_docker \"$DOCID\" \"export PATH=\\\"$NEWPATH\\\" && $GUEST_IPFS_UPDATE --verbose install --allow-downgrade $VERSION\" >actual 2>&1 ||\n[Tests/Tests]   | #\t\t\ttest_fsh cat actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\tgrep \"fetching go-ipfs version $VERSION\" actual &&\n[Tests/Tests]   | \t\tgrep \"Installation complete!\" actual ||\n[Tests/Tests]   | \t\ttest_fsh cat actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | > cat actual\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 11 - 'ipfs-update install' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\tgrep \"fetching go-ipfs version $VERSION\" actual &&\n[Tests/Tests]   | #\t\t\tgrep \"Installation complete!\" actual ||\n[Tests/Tests]   | #\t\t\ttest_fsh cat actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\texec_docker \"$DOCID\" \"$GUEST_IPFS_UPDATE version\" >actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | not ok 12 - 'ipfs-update version' works for v0.3.9\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\texec_docker \"$DOCID\" \"$GUEST_IPFS_UPDATE version\" >actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\techo \"$VERSION\" >expected &&\n[Tests/Tests]   | \t\ttest_cmp expected actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | > diff -u expected actual\n[Tests/Tests]   | --- expected\t2023-05-30 11:14:56.158514750 +0000\n[Tests/Tests]   | +++ actual\t2023-05-30 11:14:56.094515250 +0000\n[Tests/Tests]   | @@ -1 +0,0 @@\n[Tests/Tests]   | -v0.3.9\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 13 - 'ipfs-update version' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\techo \"$VERSION\" >expected &&\n[Tests/Tests]   | #\t\t\ttest_cmp expected actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tstop_docker \"$DOCID\"\n[Tests/Tests]   | \n[Tests/Tests]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/stop\": dial unix /var/run/docker.sock: connect: permission denied\n[Tests/Tests]   | not ok 14 - stop docker container\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\tstop_docker \"$DOCID\"\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | # failed 11 among 14 test(s)\n[Tests/Tests]   | 1..14\n[Tests/Tests]   | make[1]: *** [Makefile:45: ..//sharness/t0020-ipfs-update.sh] Error 1\n[Tests/Tests]   | *** ..//sharness/t0030-simple-migration.sh ***\n[Tests/Tests]   | ./..//sharness/t0030-simple-migration.sh -v\n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \ttest -f \"$LOCAL_FS_REPO_MIG\"\n[Tests/Tests]   | \n[Tests/Tests]   | ok 1 - fs-repo-migrations binary is here\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\"$LOCAL_FS_REPO_MIG\" -v >actual\n[Tests/Tests]   | \n[Tests/Tests]   | ok 2 - 'fs-repo-migrations -v' works\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \techo \"$latestRepoVersion\" >expected &&\n[Tests/Tests]   | \ttest_cmp expected actual\n[Tests/Tests]   | \n[Tests/Tests]   | > diff -u expected actual\n[Tests/Tests]   | --- expected\t2023-05-30 11:14:56.490512158 +0000\n[Tests/Tests]   | +++ actual\t2023-05-30 11:14:56.478512252 +0000\n[Tests/Tests]   | @@ -1 +1 @@\n[Tests/Tests]   | -13\n[Tests/Tests]   | +14\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 3 - 'fs-repo-migrations -v' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\techo \"$latestRepoVersion\" >expected &&\n[Tests/Tests]   | #\t\ttest_cmp expected actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tDOCID=$(start_docker)\n[Tests/Tests]   | \n[Tests/Tests]   | docker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/create\": dial unix /var/run/docker.sock: connect: permission denied.\n[Tests/Tests]   | See 'docker run --help'.\n[Tests/Tests]   | not ok 4 - start a docker container\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\tDOCID=$(start_docker)\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \texec_docker \"$DOCID\" \"test -f $GUEST_FS_REPO_MIG\"\n[Tests/Tests]   | \n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | not ok 5 - fs-repo-migrations binary is on the container\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\texec_docker \"$DOCID\" \"test -f $GUEST_FS_REPO_MIG\"\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \texec_docker \"$DOCID\" \"$GUEST_FS_REPO_MIG -v\" >actual\n[Tests/Tests]   | \n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | not ok 6 - 'fs-repo-migrations -v' works\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\texec_docker \"$DOCID\" \"$GUEST_FS_REPO_MIG -v\" >actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \techo \"$latestRepoVersion\" >expected &&\n[Tests/Tests]   | \ttest_cmp expected actual\n[Tests/Tests]   | \n[Tests/Tests]   | > diff -u expected actual\n[Tests/Tests]   | --- expected\t2023-05-30 11:14:56.714510409 +0000\n[Tests/Tests]   | +++ actual\t2023-05-30 11:14:56.614511190 +0000\n[Tests/Tests]   | @@ -1 +0,0 @@\n[Tests/Tests]   | -13\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 7 - 'fs-repo-migrations -v' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\techo \"$latestRepoVersion\" >expected &&\n[Tests/Tests]   | #\t\ttest_cmp expected actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\tDOCPWD=$(exec_docker \"$DOCID\" \"pwd\") &&\n[Tests/Tests]   | \t\tDOCPATH=$(exec_docker \"$DOCID\" \"echo \\$PATH\") &&\n[Tests/Tests]   | \t\tNEWPATH=\"$DOCPWD/sharness/bin:$DOCPATH\" &&\n[Tests/Tests]   | \t\texec_docker \"$DOCID\" \"export PATH=\\\"$NEWPATH\\\" && $GUEST_IPFS_UPDATE --verbose install --allow-downgrade $VERSION\" >actual 2>&1 ||\n[Tests/Tests]   | \t\ttest_fsh cat actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | > cat actual\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 8 - 'ipfs-update install' works for v0.3.9\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\tDOCPWD=$(exec_docker \"$DOCID\" \"pwd\") &&\n[Tests/Tests]   | #\t\t\tDOCPATH=$(exec_docker \"$DOCID\" \"echo \\$PATH\") &&\n[Tests/Tests]   | #\t\t\tNEWPATH=\"$DOCPWD/sharness/bin:$DOCPATH\" &&\n[Tests/Tests]   | #\t\t\texec_docker \"$DOCID\" \"export PATH=\\\"$NEWPATH\\\" && $GUEST_IPFS_UPDATE --verbose install --allow-downgrade $VERSION\" >actual 2>&1 ||\n[Tests/Tests]   | #\t\t\ttest_fsh cat actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\tgrep \"fetching go-ipfs version $VERSION\" actual &&\n[Tests/Tests]   | \t\tgrep \"Installation complete!\" actual ||\n[Tests/Tests]   | \t\ttest_fsh cat actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | > cat actual\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 9 - 'ipfs-update install' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\tgrep \"fetching go-ipfs version $VERSION\" actual &&\n[Tests/Tests]   | #\t\t\tgrep \"Installation complete!\" actual ||\n[Tests/Tests]   | #\t\t\ttest_fsh cat actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\texec_docker \"$DOCID\" \"$GUEST_IPFS_UPDATE version\" >actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | not ok 10 - 'ipfs-update version' works for v0.3.9\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\texec_docker \"$DOCID\" \"$GUEST_IPFS_UPDATE version\" >actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\techo \"$VERSION\" >expected &&\n[Tests/Tests]   | \t\ttest_cmp expected actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | > diff -u expected actual\n[Tests/Tests]   | --- expected\t2023-05-30 11:14:56.854509316 +0000\n[Tests/Tests]   | +++ actual\t2023-05-30 11:14:56.798509753 +0000\n[Tests/Tests]   | @@ -1 +0,0 @@\n[Tests/Tests]   | -v0.3.9\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 11 - 'ipfs-update version' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\techo \"$VERSION\" >expected &&\n[Tests/Tests]   | #\t\t\ttest_cmp expected actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \texec_docker \"$DOCID\" \"IPFS_PATH=/root/.ipfs BITS=2048 ipfs init\" >actual 2>&1 ||\n[Tests/Tests]   | \ttest_fsh cat actual\n[Tests/Tests]   | \n[Tests/Tests]   | > cat actual\n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | \n[Tests/Tests]   | not ok 12 - 'ipfs init' succeeds\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\texec_docker \"$DOCID\" \"IPFS_PATH=/root/.ipfs BITS=2048 ipfs init\" >actual 2>&1 ||\n[Tests/Tests]   | #\t\ttest_fsh cat actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \texec_docker \"$DOCID\" \"test -d  /root/.ipfs && test -f /root/.ipfs/config\"\n[Tests/Tests]   | \texec_docker \"$DOCID\" \"test -d  /root/.ipfs/datastore && test -d /root/.ipfs/blocks\"\n[Tests/Tests]   | \n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | not ok 13 - .ipfs/ has been created\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\texec_docker \"$DOCID\" \"test -d  /root/.ipfs && test -f /root/.ipfs/config\"\n[Tests/Tests]   | #\t\texec_docker \"$DOCID\" \"test -d  /root/.ipfs/datastore && test -d /root/.ipfs/blocks\"\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \texec_docker \"$DOCID\" \"$GUEST_FS_REPO_MIG -y -to=3\" >actual 2>&1\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 14 - 'fs-repo-migrations -y' works\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\texec_docker \"$DOCID\" \"$GUEST_FS_REPO_MIG -y -to=3\" >actual 2>&1\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tgrep \"fs-repo migrated to version 3\" actual ||\n[Tests/Tests]   | \ttest_fsh cat actual\n[Tests/Tests]   | \n[Tests/Tests]   | > cat actual\n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | \n[Tests/Tests]   | not ok 15 - 'fs-repo-migrations -y' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\tgrep \"fs-repo migrated to version 3\" actual ||\n[Tests/Tests]   | #\t\ttest_fsh cat actual\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\tDOCPWD=$(exec_docker \"$DOCID\" \"pwd\") &&\n[Tests/Tests]   | \t\tDOCPATH=$(exec_docker \"$DOCID\" \"echo \\$PATH\") &&\n[Tests/Tests]   | \t\tNEWPATH=\"$DOCPWD/sharness/bin:$DOCPATH\" &&\n[Tests/Tests]   | \t\texec_docker \"$DOCID\" \"export PATH=\\\"$NEWPATH\\\" && $GUEST_IPFS_UPDATE --verbose install --allow-downgrade $VERSION\" >actual 2>&1 ||\n[Tests/Tests]   | \t\ttest_fsh cat actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | > cat actual\n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | \n[Tests/Tests]   | not ok 16 - 'ipfs-update install' works for v0.4.0\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\tDOCPWD=$(exec_docker \"$DOCID\" \"pwd\") &&\n[Tests/Tests]   | #\t\t\tDOCPATH=$(exec_docker \"$DOCID\" \"echo \\$PATH\") &&\n[Tests/Tests]   | #\t\t\tNEWPATH=\"$DOCPWD/sharness/bin:$DOCPATH\" &&\n[Tests/Tests]   | #\t\t\texec_docker \"$DOCID\" \"export PATH=\\\"$NEWPATH\\\" && $GUEST_IPFS_UPDATE --verbose install --allow-downgrade $VERSION\" >actual 2>&1 ||\n[Tests/Tests]   | #\t\t\ttest_fsh cat actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\tgrep \"fetching go-ipfs version $VERSION\" actual &&\n[Tests/Tests]   | \t\tgrep \"Installation complete!\" actual ||\n[Tests/Tests]   | \t\ttest_fsh cat actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | > cat actual\n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | \n[Tests/Tests]   | not ok 17 - 'ipfs-update install' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\tgrep \"fetching go-ipfs version $VERSION\" actual &&\n[Tests/Tests]   | #\t\t\tgrep \"Installation complete!\" actual ||\n[Tests/Tests]   | #\t\t\ttest_fsh cat actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\texec_docker \"$DOCID\" \"$GUEST_IPFS_UPDATE version\" >actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | Error: No such container: \n[Tests/Tests]   | not ok 18 - 'ipfs-update version' works for v0.4.0\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\texec_docker \"$DOCID\" \"$GUEST_IPFS_UPDATE version\" >actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \t\techo \"$VERSION\" >expected &&\n[Tests/Tests]   | \t\ttest_cmp expected actual\n[Tests/Tests]   | \t\n[Tests/Tests]   | > diff -u expected actual\n[Tests/Tests]   | --- expected\t2023-05-30 11:14:57.234506349 +0000\n[Tests/Tests]   | +++ actual\t2023-05-30 11:14:57.170506848 +0000\n[Tests/Tests]   | @@ -1 +0,0 @@\n[Tests/Tests]   | -v0.4.0\n[Tests/Tests]   | \n[Tests/Tests]   | not ok 19 - 'ipfs-update version' output looks good\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\t\techo \"$VERSION\" >expected &&\n[Tests/Tests]   | #\t\t\ttest_cmp expected actual\n[Tests/Tests]   | #\t\t\n[Tests/Tests]   | \n[Tests/Tests]   | expecting success: \n[Tests/Tests]   | \tstop_docker \"$DOCID\"\n[Tests/Tests]   | \n[Tests/Tests]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/stop\": dial unix /var/run/docker.sock: connect: permission denied\n[Tests/Tests]   | not ok 20 - stop docker container\n[Tests/Tests]   | #\t\n[Tests/Tests]   | #\t\tstop_docker \"$DOCID\"\n[Tests/Tests]   | #\t\n[Tests/Tests]   | \n[Tests/Tests]   | # failed 18 among 20 test(s)\n[Tests/Tests]   | 1..20\n[Tests/Tests]   | make[1]: *** [Makefile:45: ..//sharness/t0030-simple-migration.sh] Error 1\n[Tests/Tests]   | make[1]: Target 'all' not remade because of errors.\n[Tests/Tests]   | make[1]: Leaving directory '/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/ipfs-fs-repo-migrations/sharness'\n[Tests/Tests]   | make: *** [Makefile:27: sharness] Error 2\n[Tests/Tests]   | + echo Migration 12 to 13 with pins\n[Tests/Tests]   | + cp -r repotest-init repotestMigration 12 to 13 with pins\n[Tests/Tests]   | \n[Tests/Tests]   | + go run .. -verbose -path=repotest\n[Tests/Tests]   | applying 12-to-13 repo migration\n[Tests/Tests]   | locking repo at \"repotest\"\n[Tests/Tests]   |   - verifying version is '12'\n[Tests/Tests]   | > Upgrading config to new format\n[Tests/Tests]   | updated version file\n[Tests/Tests]   | Migration 12 to 13 succeeded\n[Tests/Tests]   | + diff -r repotest-golden repotest\n[Tests/Tests]   | + go run .. -verbose -revert -path=repotest\n[Tests/Tests]   | reverting migration\n[Tests/Tests]   | lowered version number to 12\n[Tests/Tests]   | + diff -r repotest-init repotest\n[Tests/Tests]   | + FINISH=0\n[Tests/Tests]   | + rm -r repotest\n[Tests/Tests]   | + exit 0\n[Tests/Tests]   | + echo Migration 13 to 14\n[Tests/Tests]   | + cp -r repotest-init repotest\n[Tests/Tests]   | Migration 13 to 14\n[Tests/Tests]   | + go run .. -verbose -path=repotest\n[Tests/Tests]   | applying 13-to-14 repo migration\n[Tests/Tests]   | locking repo at \"repotest\"\n[Tests/Tests]   |   - verifying version is '13'\n[Tests/Tests]   | > Upgrading config to new format\n[Tests/Tests]   | updated version file\n[Tests/Tests]   | Migration 13 to 14 succeeded\n[Tests/Tests]   | + diff -r repotest-golden repotest\n[Tests/Tests]   | + go run .. -verbose -revert -path=repotest\n[Tests/Tests]   | reverting migration\n[Tests/Tests]   | lowered version number to 13\n[Tests/Tests]   | + diff -r repotest-init repotest\n[Tests/Tests]   | + FINISH=0\n[Tests/Tests]   | + rm -r repotest\n[Tests/Tests]   | + exit 0\n[Tests/Tests]   | make: Target 'test' not remade because of errors.\n[Tests/Tests]   \u274c  Failure - Main Test\n[Tests/Tests] exitcode '2': failure\n[Tests/Tests] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'Tests' failed\n"
}