{
    "repository": "kataras/go-sessions",
    "clone_url": "https://github.com/kataras/go-sessions.git",
    "timestamp": "2023-05-30T11:55:56.571687Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/Test] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/kataras-go-sessions] user=0 workdir=\n[CI/Test]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[CI/Test] \ud83e\uddea  Matrix: map[go_version:1.19.x]\n[CI/Test] \u2b50 Run Main Set up Go 1.x\n[CI/Test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[CI/Test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[CI/Test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[CI/Test]   | Setup go stable version spec 1.19.x\n[CI/Test]   \ud83d\udcac  ::debug::isExplicit: \n[CI/Test]   \ud83d\udcac  ::debug::explicit? false\n[CI/Test]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[CI/Test]   \ud83d\udcac  ::debug::explicit? true\n[CI/Test]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[CI/Test]   \ud83d\udcac  ::debug::explicit? true\n[CI/Test]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[CI/Test]   \ud83d\udcac  ::debug::explicit? true\n[CI/Test]   \ud83d\udcac  ::debug::evaluating 3 versions\n[CI/Test]   \ud83d\udcac  ::debug::match not found\n[CI/Test]   | Attempting to download 1.19.x...\n[CI/Test]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[CI/Test]   \ud83d\udcac  ::debug::Error: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v2/dist/index.js:5294:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[CI/Test]   | Falling back to download directly from Go\n[CI/Test]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.19.x\n[CI/Test]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.19.x\n[CI/Test]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.19.x\n[CI/Test]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.19.x\n[CI/Test]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.19.x\n[CI/Test]   \ud83d\udcac  ::debug::check 1.20.0-rc3 satisfies 1.19.x\n[CI/Test]   \ud83d\udcac  ::debug::check 1.20.0-rc2 satisfies 1.19.x\n[CI/Test]   \ud83d\udcac  ::debug::check 1.20.0-rc1 satisfies 1.19.x\n[CI/Test]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.19.x\n[CI/Test]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[CI/Test]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[CI/Test]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[CI/Test]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[CI/Test]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[CI/Test]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[CI/Test]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[CI/Test]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[CI/Test]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[CI/Test]   \ud83d\udcac  ::debug::matched go1.19.9\n[CI/Test]   | Install from dist\n[CI/Test]   | Acquiring go1.19.9 from https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[CI/Test]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[CI/Test]   \ud83d\udcac  ::debug::Destination /tmp/eee1f615-b00d-440f-8015-fd1e4e11ed65\n[CI/Test]   \ud83d\udcac  ::debug::download complete\n[CI/Test]   | Extracting Go...\n[CI/Test]   \ud83d\udcac  ::debug::Checking tar --version\n[CI/Test]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[CI/Test]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/3c46fb46-a7d9-4262-8ae1-bdaa1c57be02 -f /tmp/eee1f615-b00d-440f-8015-fd1e4e11ed65\n[CI/Test]   | Successfully extracted go to /tmp/3c46fb46-a7d9-4262-8ae1-bdaa1c57be02\n[CI/Test]   | Adding to the cache ...\n[CI/Test]   \ud83d\udcac  ::debug::Caching tool go 1.19.9 x64\n[CI/Test]   \ud83d\udcac  ::debug::source dir: /tmp/3c46fb46-a7d9-4262-8ae1-bdaa1c57be02/go\n[CI/Test]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.19.9/x64\n[CI/Test]   \ud83d\udcac  ::debug::finished caching tool\n[CI/Test]   | Successfully cached go to /opt/hostedtoolcache/go/1.19.9/x64\n[CI/Test]   | Added go to the path\n[CI/Test]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.19.9/x64/bin/go:\n[CI/Test]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[CI/Test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[CI/Test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[CI/Test]   \ud83d\udcac  ::debug::add bin true\n[CI/Test]   | Successfully setup go version 1.19.x\n[CI/Test]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[CI/Test]   | go version go1.19.9 linux/amd64\n[CI/Test]   | \n[CI/Test]   \u2753  ::group::go env\n[CI/Test]   | GO111MODULE=\"\"\n[CI/Test]   | GOARCH=\"amd64\"\n[CI/Test]   | GOBIN=\"\"\n[CI/Test]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[CI/Test]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[CI/Test]   | GOEXE=\"\"\n[CI/Test]   | GOEXPERIMENT=\"\"\n[CI/Test]   | GOFLAGS=\"\"\n[CI/Test]   | GOHOSTARCH=\"amd64\"\n[CI/Test]   | GOHOSTOS=\"linux\"\n[CI/Test]   | GOINSECURE=\"\"\n[CI/Test]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[CI/Test]   | GONOPROXY=\"\"\n[CI/Test]   | GONOSUMDB=\"\"\n[CI/Test]   | GOOS=\"linux\"\n[CI/Test]   | GOPATH=\"/home/runneradmin/go\"\n[CI/Test]   | GOPRIVATE=\"\"\n[CI/Test]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[CI/Test]   | GOROOT=\"/opt/hostedtoolcache/go/1.19.9/x64\"\n[CI/Test]   | GOSUMDB=\"sum.golang.org\"\n[CI/Test]   | GOTMPDIR=\"\"\n[CI/Test]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.19.9/x64/pkg/tool/linux_amd64\"\n[CI/Test]   | GOVCS=\"\"\n[CI/Test]   | GOVERSION=\"go1.19.9\"\n[CI/Test]   | GCCGO=\"gccgo\"\n[CI/Test]   | GOAMD64=\"v1\"\n[CI/Test]   | AR=\"ar\"\n[CI/Test]   | CC=\"gcc\"\n[CI/Test]   | CXX=\"g++\"\n[CI/Test]   | CGO_ENABLED=\"1\"\n[CI/Test]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/kataras-go-sessions/go.mod\"\n[CI/Test]   | GOWORK=\"\"\n[CI/Test]   | CGO_CFLAGS=\"-g -O2\"\n[CI/Test]   | CGO_CPPFLAGS=\"\"\n[CI/Test]   | CGO_CXXFLAGS=\"-g -O2\"\n[CI/Test]   | CGO_FFLAGS=\"-g -O2\"\n[CI/Test]   | CGO_LDFLAGS=\"-g -O2\"\n[CI/Test]   | PKG_CONFIG=\"pkg-config\"\n[CI/Test]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -Wl,--no-gc-sections -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build494503808=/tmp/go-build -gno-record-gcc-switches\"\n[CI/Test]   | \n[CI/Test]   \u2753  ::endgroup::\n[CI/Test]   \u2705  Success - Main Set up Go 1.x\n[CI/Test]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.19.9/x64\n[CI/Test]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.19.9/x64/bin\n[CI/Test]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[CI/Test] \u2b50 Run Main Check out code into the Go module directory\n[CI/Test]   \u2705  Success - Main Check out code into the Go module directory\n[CI/Test] \u2b50 Run Main Test\n[CI/Test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/Test]   | go: downloading github.com/dgraph-io/badger v1.6.2\n[CI/Test]   | go: downloading github.com/gomodule/redigo v1.8.9\n[CI/Test]   | go: downloading github.com/mna/redisc v1.3.2\n[CI/Test]   | go: downloading go.etcd.io/bbolt v1.3.7\n[CI/Test]   | go: downloading github.com/valyala/fasthttp v1.47.0\n[CI/Test]   | go: downloading github.com/google/uuid v1.3.0\n[CI/Test]   | go: downloading github.com/gavv/httpexpect v2.0.0+incompatible\n[CI/Test]   | go: downloading github.com/gorilla/securecookie v1.1.1\n[CI/Test]   | go: downloading github.com/fatih/structs v1.1.0\n[CI/Test]   | go: downloading github.com/imkira/go-interpol v1.1.0\n[CI/Test]   | go: downloading github.com/ajg/form v1.5.1\n[CI/Test]   | go: downloading github.com/google/go-querystring v1.1.0\n[CI/Test]   | go: downloading github.com/gorilla/websocket v1.5.0\n[CI/Test]   | go: downloading github.com/moul/http2curl v1.0.0\n[CI/Test]   | go: downloading github.com/stretchr/testify v1.8.1\n[CI/Test]   | go: downloading github.com/xeipuuv/gojsonschema v1.2.0\n[CI/Test]   | go: downloading github.com/yalp/jsonpath v0.0.0-20180802001716-5cc68e5049a0\n[CI/Test]   | go: downloading github.com/yudai/gojsondiff v1.0.0\n[CI/Test]   | go: downloading golang.org/x/net v0.8.0\n[CI/Test]   | go: downloading golang.org/x/sys v0.6.0\n[CI/Test]   | go: downloading github.com/yudai/golcs v0.0.0-20170316035057-ecda9a501e82\n[CI/Test]   | go: downloading github.com/sergi/go-diff v1.2.0\n[CI/Test]   | go: downloading github.com/valyala/bytebufferpool v1.0.0\n[CI/Test]   | go: downloading github.com/dgraph-io/ristretto v0.0.2\n[CI/Test]   | go: downloading github.com/andybalholm/brotli v1.0.5\n[CI/Test]   | go: downloading github.com/golang/protobuf v1.5.2\n[CI/Test]   | go: downloading github.com/AndreasBriese/bbloom v0.0.0-20190825152654-46b345b51c96\n[CI/Test]   | go: downloading github.com/pkg/errors v0.8.1\n[CI/Test]   | go: downloading github.com/klauspost/compress v1.16.3\n[CI/Test]   | go: downloading github.com/dustin/go-humanize v1.0.0\n[CI/Test]   | go: downloading gopkg.in/yaml.v3 v3.0.1\n[CI/Test]   | go: downloading github.com/davecgh/go-spew v1.1.1\n[CI/Test]   | go: downloading github.com/pmezard/go-difflib v1.0.0\n[CI/Test]   | go: downloading github.com/xeipuuv/gojsonreference v0.0.0-20180127040603-bd5ef7bd5415\n[CI/Test]   | go: downloading github.com/cespare/xxhash v1.1.0\n[CI/Test]   | go: downloading github.com/xeipuuv/gojsonpointer v0.0.0-20180127040702-4e3ac2762d5f\n[CI/Test]   | go: downloading google.golang.org/protobuf v1.28.0\n[CI/Test]   | === RUN   TestSessionsNetHTTP\n[CI/Test]   | --- PASS: TestSessionsNetHTTP (0.00s)\n[CI/Test]   | === RUN   TestSessionsEncodeDecodeNetHTTP\n[CI/Test]   | --- PASS: TestSessionsEncodeDecodeNetHTTP (0.00s)\n[CI/Test]   | === RUN   TestFlashMessages\n[CI/Test]   | --- PASS: TestFlashMessages (0.00s)\n[CI/Test]   | PASS\n[CI/Test]   | ok  \tgithub.com/kataras/go-sessions/v3\t0.029s\n[CI/Test]   | ?   \tgithub.com/kataras/go-sessions/v3/sessiondb/badger\t[no test files]\n[CI/Test]   | ?   \tgithub.com/kataras/go-sessions/v3/sessiondb/boltdb\t[no test files]\n[CI/Test]   | ?   \tgithub.com/kataras/go-sessions/v3/sessiondb/redis\t[no test files]\n[CI/Test]   | ?   \tgithub.com/kataras/go-sessions/v3/sessiondb/redis/service\t[no test files]\n[CI/Test]   | ?   \tgithub.com/kataras/go-sessions/v3/sessiondb/rediscluster\t[no test files]\n[CI/Test]   | ?   \tgithub.com/kataras/go-sessions/v3/sessiondb/rediscluster/service\t[no test files]\n[CI/Test]   \u2705  Success - Main Test\n[CI/Test] \u2b50 Run Main Setup examples for testing\n[CI/Test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/Test]   \u2705  Success - Main Setup examples for testing\n[CI/Test] \u2b50 Run Main Test examples\n[CI/Test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=_examples\n[CI/Test]   | OCI runtime exec failed: exec failed: unable to start container process: error executing setns process: exit status 1: unknown\r\n[CI/Test] Failed but continue next step\n[CI/Test]   \u274c  Failure - Main Test examples\n[CI/Test] Error response from daemon: No such container: 9d9809aee6cb455e1e72e20bd311e5c52bc43933ab55abc6a888e522257f6615\n[CI/Test] failed to remove container: Error response from daemon: No such container: 9d9809aee6cb455e1e72e20bd311e5c52bc43933ab55abc6a888e522257f6615\n[CI/Test] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Error occurred running finally: Error occurred running finally: Error response from daemon: get act-CI-Test-c8004701d7767271afe3e380ff368b034cbabac39f7de7db0bdf86634220d0e0-env: no such volume (original error: <nil>) (original error: <nil>)\n"
}