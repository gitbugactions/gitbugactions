{
    "repository": "oklog/ulid",
    "clone_url": "https://github.com/oklog/ulid.git",
    "timestamp": "2023-05-30T12:05:42.527577Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Test/lint] \ud83d\ude80  Start image=crawlergpt:latest\n[Test/test] \ud83d\ude80  Start image=crawlergpt:latest\n[Test/lint]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test/lint]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/lint]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/lint]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/oklog-ulid] user=0 workdir=\n[Test/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/lint]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v3\n[Test/lint]   \u2601  git clone 'https://github.com/dominikh/staticcheck-action' # ref=v1.3.0\n[Test/lint] \u2b50 Run Pre staticcheck\n[Test/lint]   \u2601  git clone 'https://github.com/WillAbides/setup-go-faster' # ref=v1.8.0\n[Test/lint] \u2b50 Run Pre WillAbides/setup-go-faster@v1.8.0\n[Test/lint]   \u2705  Success - Pre WillAbides/setup-go-faster@v1.8.0\n[Test/lint]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[Test/lint] Unable to checkout 88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8: invalid checksum\n[Test/lint] invalid checksum\n[Test/lint]   \u2705  Success - Pre staticcheck\n[Test/lint] \u2b50 Run Main Check out code\n[Test/lint]   \u2705  Success - Main Check out code\n[Test/lint] \u2b50 Run Main Install Go\n[Test/lint]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v3/ dst=/var/run/act/actions/actions-setup-go@v3/\n[Test/lint]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v3/] user=0 workdir=\n[Test/lint]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v3/dist/setup/index.js] user= workdir=\n[Test/lint]   | Setup go version spec 1.x\n[Test/lint]   \ud83d\udcac  ::debug::isExplicit: \n[Test/lint]   \ud83d\udcac  ::debug::explicit? false\n[Test/lint]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Test/lint]   \ud83d\udcac  ::debug::explicit? true\n[Test/lint]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Test/lint]   \ud83d\udcac  ::debug::explicit? true\n[Test/lint]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Test/lint]   \ud83d\udcac  ::debug::explicit? true\n[Test/lint]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Test/lint]   \ud83d\udcac  ::debug::matched: 1.16.7\n[Test/lint]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.16.7/x64\n[Test/lint]   \ud83d\udcac  ::debug::Found tool in cache go 1.16.7 x64\n[Test/lint]   | Found in cache @ /opt/hostedtoolcache/go/1.16.7/x64\n[Test/lint]   | Added go to the path\n[Test/lint]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.16.7/x64/bin/go:\n[Test/lint]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Test/lint]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Test/lint]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Test/lint]   \ud83d\udcac  ::debug::add bin true\n[Test/lint]   | Successfully set up Go version 1.x\n[Test/lint]   \u2753 add-matcher /run/act/actions/actions-setup-go@v3/matchers.json\n[Test/lint]   | go version go1.16.7 linux/amd64\n[Test/lint]   | \n[Test/lint]   \u2753  ::group::go env\n[Test/lint]   | GO111MODULE=\"\"\n[Test/lint]   | GOARCH=\"amd64\"\n[Test/lint]   | GOBIN=\"\"\n[Test/lint]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Test/lint]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Test/lint]   | GOEXE=\"\"\n[Test/lint]   | GOFLAGS=\"\"\n[Test/lint]   | GOHOSTARCH=\"amd64\"\n[Test/lint]   | GOHOSTOS=\"linux\"\n[Test/lint]   | GOINSECURE=\"\"\n[Test/lint]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Test/lint]   | GONOPROXY=\"\"\n[Test/lint]   | GONOSUMDB=\"\"\n[Test/lint]   | GOOS=\"linux\"\n[Test/lint]   | GOPATH=\"/home/runneradmin/go\"\n[Test/lint]   | GOPRIVATE=\"\"\n[Test/lint]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Test/lint]   | GOROOT=\"/opt/hostedtoolcache/go/1.16.7/x64\"\n[Test/lint]   | GOSUMDB=\"sum.golang.org\"\n[Test/lint]   | GOTMPDIR=\"\"\n[Test/lint]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.16.7/x64/pkg/tool/linux_amd64\"\n[Test/lint]   | GOVCS=\"\"\n[Test/lint]   | GOVERSION=\"go1.16.7\"\n[Test/lint]   | GCCGO=\"gccgo\"\n[Test/lint]   | AR=\"ar\"\n[Test/lint]   | CC=\"gcc\"\n[Test/lint]   | CXX=\"g++\"\n[Test/lint]   | CGO_ENABLED=\"1\"\n[Test/lint]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/oklog-ulid/go.mod\"\n[Test/lint]   | CGO_CFLAGS=\"-g -O2\"\n[Test/lint]   | CGO_CPPFLAGS=\"\"\n[Test/lint]   | CGO_CXXFLAGS=\"-g -O2\"\n[Test/lint]   | CGO_FFLAGS=\"-g -O2\"\n[Test/lint]   | CGO_LDFLAGS=\"-g -O2\"\n[Test/lint]   | PKG_CONFIG=\"pkg-config\"\n[Test/lint]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build1641510289=/tmp/go-build -gno-record-gcc-switches\"\n[Test/lint]   | \n[Test/lint]   \u2753  ::endgroup::\n[Test/lint]   \u2705  Success - Main Install Go\n[Test/lint]   \u2699  ::set-output:: go-version=1.16.7\n[Test/lint]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.16.7/x64/bin\n[Test/lint]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Test/lint] \u2b50 Run Main fmt\n[Test/lint]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test/lint]   \u2705  Success - Main fmt\n[Test/lint] \u2b50 Run Main vet\n[Test/lint]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Test/lint]   | go: downloading github.com/pborman/getopt v0.0.0-20170112200414-7148bc3a4c30\n[Test/lint]   \u2705  Success - Main vet\n[Test/lint] \u2b50 Run Main staticcheck\n[Test/lint]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dominikh-staticcheck-action@v1.3.0/ dst=/var/run/act/actions/dominikh-staticcheck-action@v1.3.0/\n[Test/lint]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dominikh-staticcheck-action@v1.3.0/] user=0 workdir=\n[Test/lint]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[Test/lint] Unable to checkout 88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8: invalid checksum\n[Test/lint] invalid checksum\n[Test/lint] \u2b50 Run Main export STATICCHECK_CACHE=\"/tmp/staticcheck\"\ngo install \"honnef.co/go/tools/cmd/staticcheck@${version}\"\necho \"::add-matcher::$GITHUB_ACTION_PATH/matchers.json\"\nwrite_output() {\n  if [ -z \"${file}\" ]; then\n    cat\n  else\n    cat >\"${file}\"\n  fi\n}\nif [ -z \"${merge}\" ]; then\n  $(go env GOPATH)/bin/staticcheck -tags \"${buildTags}\" -checks \"${checks}\" -f \"${format}\" -go \"${minGoVersion}\" ./... | write_output\nelse\n  IFS=$'\\n'\n  $(go env GOPATH)/bin/staticcheck -checks \"${checks}\" -f \"${format}\" -merge ${merge} | write_output\nfi\n[Test/lint]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4-composite-2.sh] user= workdir=.\n[Test/lint]   | go: downloading honnef.co/go/tools v0.4.3\n[Test/lint]   | go: downloading golang.org/x/tools v0.4.1-0.20221208213631-3f74d914ae6d\n[Test/lint]   | go: downloading github.com/BurntSushi/toml v1.2.1\n[Test/lint]   | go: downloading golang.org/x/exp/typeparams v0.0.0-20221208152030-732eee02a75a\n[Test/lint]   | go: downloading golang.org/x/sys v0.3.0\n[Test/lint]   | go: downloading golang.org/x/mod v0.7.0\n[Test/lint]   | /home/runneradmin/go/pkg/mod/honnef.co/go/tools@v0.4.3/unused/unused.go:18:2: //go:build comment without // +build comment\n[Test/lint]   | /home/runneradmin/go/pkg/mod/honnef.co/go/tools@v0.4.3/internal/renameio/renameio.go:16:2: //go:build comment without // +build comment\n[Test/lint]   \u274c  Failure - Main export STATICCHECK_CACHE=\"/tmp/staticcheck\"\ngo install \"honnef.co/go/tools/cmd/staticcheck@${version}\"\necho \"::add-matcher::$GITHUB_ACTION_PATH/matchers.json\"\nwrite_output() {\n  if [ -z \"${file}\" ]; then\n    cat\n  else\n    cat >\"${file}\"\n  fi\n}\nif [ -z \"${merge}\" ]; then\n  $(go env GOPATH)/bin/staticcheck -tags \"${buildTags}\" -checks \"${checks}\" -f \"${format}\" -go \"${minGoVersion}\" ./... | write_output\nelse\n  IFS=$'\\n'\n  $(go env GOPATH)/bin/staticcheck -checks \"${checks}\" -f \"${format}\" -merge ${merge} | write_output\nfi\n[Test/lint] exitcode '1': failure\n[Test/lint]   \u274c  Failure - Main staticcheck\n[Test/lint] exitcode '1': failure\n[Test/lint] \u2b50 Run Post staticcheck\n[Test/lint]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/dominikh-staticcheck-action@v1.3.0/ dst=/var/run/act/actions/dominikh-staticcheck-action@v1.3.0/\n[Test/lint]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/dominikh-staticcheck-action@v1.3.0/] user=0 workdir=\n[Test/lint]   \u2705  Success - Post staticcheck\n[Test/lint] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: failed to copy content to container: Error response from daemon: Could not find the file /var/run/act/ in container 897a42d40104f083d00088aab9173432ada31f089ac61d1e2c332072df96acf3\n"
}