{
    "repository": "jmcfarlane/notable",
    "clone_url": "https://github.com/jmcfarlane/notable.git",
    "timestamp": "2023-05-30T10:26:12.448571Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Go package/test ] \ud83d\ude80  Start image=crawlergpt:latest\n[Go package/build] \ud83d\ude80  Start image=crawlergpt:latest\n[Go package/test ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Go package/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Go package/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go package/test ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go package/test ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go package/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go package/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/jmcfarlane-notable] user=0 workdir=\n[Go package/test ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/jmcfarlane-notable] user=0 workdir=\n[Go package/build] \ud83e\uddea  Matrix: map[go-version:1.20.x os:ubuntu-latest]\n[Go package/test ] \ud83e\uddea  Matrix: map[go-version:1.20.x os:ubuntu-latest]\n[Go package/build] \u2b50 Run Main Install dependencies\n[Go package/test ] \u2b50 Run Main Go version\n[Go package/test ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/0] user= workdir=\n[Go package/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/0] user= workdir=\n[Go package/test ]   | go version go1.15.15 linux/amd64\n[Go package/test ]   \u2705  Success - Main Go version\n[Go package/test ] \u2b50 Run Main Go env\n[Go package/build]   | Reading package lists...\n[Go package/build]   | Building dependency tree...\n[Go package/build]   | Reading state information...\n[Go package/build]   | zip is already the newest version (3.0-11build1).\n[Go package/build]   | imagemagick is already the newest version (8:6.9.10.23+dfsg-2.1ubuntu11.4).\n[Go package/build]   | The following NEW packages will be installed:\n[Go package/build]   |   icnsutils libicns1 libopenjp2-7\n[Go package/build]   | 0 upgraded, 3 newly installed, 0 to remove and 20 not upgraded.\n[Go package/build]   | Need to get 185 kB of archives.\n[Go package/build]   | After this operation, 555 kB of additional disk space will be used.\n[Go package/build]   | Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libopenjp2-7 amd64 2.3.1-1ubuntu4.20.04.1 [141 kB]\n[Go package/test ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[Go package/build]   | Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 libicns1 amd64 0.8.1-3.1 [27.8 kB]\n[Go package/build]   | Get:3 http://archive.ubuntu.com/ubuntu focal/universe amd64 icnsutils amd64 0.8.1-3.1 [15.5 kB]\n[Go package/test ]   | GO111MODULE=\"\"\n[Go package/test ]   | GOARCH=\"amd64\"\n[Go package/test ]   | GOBIN=\"\"\n[Go package/test ]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Go package/test ]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Go package/test ]   | GOEXE=\"\"\n[Go package/test ]   | GOFLAGS=\"\"\n[Go package/test ]   | GOHOSTARCH=\"amd64\"\n[Go package/test ]   | GOHOSTOS=\"linux\"\n[Go package/test ]   | GOINSECURE=\"\"\n[Go package/test ]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Go package/test ]   | GONOPROXY=\"\"\n[Go package/test ]   | GONOSUMDB=\"\"\n[Go package/test ]   | GOOS=\"linux\"\n[Go package/test ]   | GOPATH=\"/home/runneradmin/go\"\n[Go package/test ]   | GOPRIVATE=\"\"\n[Go package/test ]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Go package/test ]   | GOROOT=\"/opt/hostedtoolcache/go/1.15.15/x64\"\n[Go package/test ]   | GOSUMDB=\"sum.golang.org\"\n[Go package/test ]   | GOTMPDIR=\"\"\n[Go package/test ]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.15.15/x64/pkg/tool/linux_amd64\"\n[Go package/test ]   | GCCGO=\"gccgo\"\n[Go package/test ]   | AR=\"ar\"\n[Go package/test ]   | CC=\"gcc\"\n[Go package/test ]   | CXX=\"g++\"\n[Go package/test ]   | CGO_ENABLED=\"1\"\n[Go package/test ]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/jmcfarlane-notable/go.mod\"\n[Go package/test ]   | CGO_CFLAGS=\"-g -O2\"\n[Go package/test ]   | CGO_CPPFLAGS=\"\"\n[Go package/test ]   | CGO_CXXFLAGS=\"-g -O2\"\n[Go package/test ]   | CGO_FFLAGS=\"-g -O2\"\n[Go package/test ]   | CGO_LDFLAGS=\"-g -O2\"\n[Go package/test ]   | PKG_CONFIG=\"pkg-config\"\n[Go package/test ]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build505113103=/tmp/go-build -gno-record-gcc-switches\"\n[Go package/test ]   \u2705  Success - Main Go env\n[Go package/build]   | Fetched 185 kB in 1s (209 kB/s)\n[Go package/test ] \u2b50 Run Main checkout repo\n[Go package/build]   | Selecting previously unselected package libopenjp2-7:amd64.\r\n[Go package/build]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 193678 files and directories currently installed.)\r\n[Go package/build]   | Preparing to unpack .../libopenjp2-7_2.3.1-1ubuntu4.20.04.1_amd64.deb ...\r\n[Go package/test ]   \u2705  Success - Main checkout repo\n[Go package/build]   | Unpacking libopenjp2-7:amd64 (2.3.1-1ubuntu4.20.04.1) ...\r\n[Go package/build]   | Selecting previously unselected package libicns1:amd64.\r\n[Go package/build]   | Preparing to unpack .../libicns1_0.8.1-3.1_amd64.deb ...\r\n[Go package/build]   | Unpacking libicns1:amd64 (0.8.1-3.1) ...\r\n[Go package/build]   | Selecting previously unselected package icnsutils.\r\n[Go package/build]   | Preparing to unpack .../icnsutils_0.8.1-3.1_amd64.deb ...\r\n[Go package/build]   | Unpacking icnsutils (0.8.1-3.1) ...\r\n[Go package/test ] \u2b50 Run Main Test\n[Go package/build]   | Setting up libopenjp2-7:amd64 (2.3.1-1ubuntu4.20.04.1) ...\r\n[Go package/build]   | Setting up libicns1:amd64 (0.8.1-3.1) ...\r\n[Go package/build]   | Setting up icnsutils (0.8.1-3.1) ...\r\n[Go package/test ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Go package/build]   | Processing triggers for libc-bin (2.31-0ubuntu9.2) ...\r\n[Go package/build]   \u2705  Success - Main Install dependencies\n[Go package/build] \u2b50 Run Main Go version\n[Go package/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[Go package/build]   | go version go1.15.15 linux/amd64\n[Go package/build]   \u2705  Success - Main Go version\n[Go package/test ]   | go: downloading github.com/drhodes/golorem v0.0.0-20160418191928-ecccc744c2d9\n[Go package/test ]   | go: downloading github.com/pkg/errors v0.9.1\n[Go package/test ]   | go: downloading github.com/mitchellh/go-homedir v1.1.0\n[Go package/test ]   | go: downloading go.etcd.io/bbolt v1.3.7\n[Go package/build] \u2b50 Run Main Go env\n[Go package/test ]   | go: downloading github.com/sirupsen/logrus v1.9.0\n[Go package/test ]   | go: downloading github.com/gtank/cryptopasta v0.0.0-20170601214702-1f550f6f2f69\n[Go package/test ]   | go: downloading golang.org/x/net v0.9.0\n[Go package/test ]   | go: downloading github.com/go-chi/chi v1.5.4\n[Go package/test ]   | go: downloading github.com/blevesearch/bleve/v2 v2.3.7\n[Go package/test ]   | go: downloading golang.org/x/sys v0.7.0\n[Go package/test ]   | go: downloading github.com/gofrs/uuid v4.4.0+incompatible\n[Go package/test ]   | go: downloading golang.org/x/crypto v0.8.0\n[Go package/test ]   | go: downloading github.com/blevesearch/bleve_index_api v1.0.5\n[Go package/test ]   | go: downloading github.com/blevesearch/upsidedown_store_api v1.0.2\n[Go package/test ]   | go: downloading github.com/blevesearch/snowballstem v0.9.0\n[Go package/test ]   | go: downloading github.com/blevesearch/geo v0.1.17\n[Go package/test ]   | go: downloading github.com/blevesearch/gtreap v0.1.1\n[Go package/test ]   | go: downloading github.com/RoaringBitmap/roaring v1.2.3\n[Go package/test ]   | go: downloading github.com/blevesearch/zapx/v12 v12.3.7\n[Go package/test ]   | go: downloading github.com/blevesearch/scorch_segment_api/v2 v2.1.4\n[Go package/test ]   | go: downloading github.com/blevesearch/vellum v1.0.9\n[Go package/test ]   | go: downloading github.com/blevesearch/zapx/v15 v15.3.9\n[Go package/test ]   | go: downloading github.com/golang/protobuf v1.5.3\n[Go package/test ]   | go: downloading github.com/blevesearch/zapx/v13 v13.3.7\n[Go package/test ]   | go: downloading github.com/blevesearch/zapx/v11 v11.3.7\n[Go package/test ]   | go: downloading github.com/golang/snappy v0.0.4\n[Go package/test ]   | go: downloading github.com/blevesearch/mmap-go v1.0.4\n[Go package/test ]   | go: downloading github.com/blevesearch/go-porterstemmer v1.0.3\n[Go package/test ]   | go: downloading github.com/blevesearch/segment v0.9.1\n[Go package/test ]   | go: downloading github.com/bits-and-blooms/bitset v1.6.0\n[Go package/test ]   | go: downloading google.golang.org/protobuf v1.30.0\n[Go package/test ]   | go: downloading github.com/golang/geo v0.0.0-20230421003525-6adc56603217\n[Go package/test ]   | go: downloading github.com/blevesearch/zapx/v14 v14.3.7\n[Go package/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Go package/test ]   | go: downloading github.com/json-iterator/go v1.1.12\n[Go package/test ]   | go: downloading github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd\n[Go package/test ]   | go: downloading github.com/modern-go/reflect2 v1.0.2\n[Go package/build]   | GO111MODULE=\"\"\n[Go package/build]   | GOARCH=\"amd64\"\n[Go package/build]   | GOBIN=\"\"\n[Go package/build]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Go package/build]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Go package/build]   | GOEXE=\"\"\n[Go package/build]   | GOFLAGS=\"\"\n[Go package/build]   | GOHOSTARCH=\"amd64\"\n[Go package/build]   | GOHOSTOS=\"linux\"\n[Go package/build]   | GOINSECURE=\"\"\n[Go package/build]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Go package/build]   | GONOPROXY=\"\"\n[Go package/build]   | GONOSUMDB=\"\"\n[Go package/build]   | GOOS=\"linux\"\n[Go package/build]   | GOPATH=\"/home/runneradmin/go\"\n[Go package/build]   | GOPRIVATE=\"\"\n[Go package/build]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Go package/build]   | GOROOT=\"/opt/hostedtoolcache/go/1.15.15/x64\"\n[Go package/build]   | GOSUMDB=\"sum.golang.org\"\n[Go package/build]   | GOTMPDIR=\"\"\n[Go package/build]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.15.15/x64/pkg/tool/linux_amd64\"\n[Go package/build]   | GCCGO=\"gccgo\"\n[Go package/build]   | AR=\"ar\"\n[Go package/build]   | CC=\"gcc\"\n[Go package/build]   | CXX=\"g++\"\n[Go package/build]   | CGO_ENABLED=\"1\"\n[Go package/build]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/jmcfarlane-notable/go.mod\"\n[Go package/build]   | CGO_CFLAGS=\"-g -O2\"\n[Go package/build]   | CGO_CPPFLAGS=\"\"\n[Go package/build]   | CGO_CXXFLAGS=\"-g -O2\"\n[Go package/build]   | CGO_FFLAGS=\"-g -O2\"\n[Go package/build]   | CGO_LDFLAGS=\"-g -O2\"\n[Go package/build]   | PKG_CONFIG=\"pkg-config\"\n[Go package/build]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build217448920=/tmp/go-build -gno-record-gcc-switches\"\n[Go package/build]   \u2705  Success - Main Go env\n[Go package/build] \u2b50 Run Main checkout repo\n[Go package/build]   \u2705  Success - Main checkout repo\n[Go package/build] \u2b50 Run Main Build\n[Go package/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Go package/build]   | go: downloading github.com/drhodes/golorem v0.0.0-20160418191928-ecccc744c2d9\n[Go package/build]   | go: downloading github.com/blevesearch/bleve/v2 v2.3.7\n[Go package/build]   | go: downloading github.com/sirupsen/logrus v1.9.0\n[Go package/build]   | go: downloading golang.org/x/net v0.9.0\n[Go package/build]   | go: downloading github.com/gofrs/uuid v4.4.0+incompatible\n[Go package/build]   | go: downloading github.com/gtank/cryptopasta v0.0.0-20170601214702-1f550f6f2f69\n[Go package/build]   | go: downloading github.com/mitchellh/go-homedir v1.1.0\n[Go package/build]   | go: downloading github.com/go-chi/chi v1.5.4\n[Go package/build]   | go: downloading go.etcd.io/bbolt v1.3.7\n[Go package/build]   | go: downloading github.com/pkg/errors v0.9.1\n[Go package/build]   | go: downloading golang.org/x/sys v0.7.0\n[Go package/build]   | go: downloading golang.org/x/crypto v0.8.0\n[Go package/build]   | go: downloading github.com/blevesearch/upsidedown_store_api v1.0.2\n[Go package/build]   | go: downloading github.com/blevesearch/bleve_index_api v1.0.5\n[Go package/build]   | go: downloading github.com/blevesearch/gtreap v0.1.1\n[Go package/build]   | go: downloading github.com/blevesearch/vellum v1.0.9\n[Go package/build]   | go: downloading github.com/blevesearch/zapx/v13 v13.3.7\n[Go package/build]   | go: downloading github.com/blevesearch/geo v0.1.17\n[Go package/build]   | go: downloading github.com/blevesearch/zapx/v11 v11.3.7\n[Go package/build]   | go: downloading github.com/blevesearch/zapx/v14 v14.3.7\n[Go package/build]   | go: downloading github.com/blevesearch/snowballstem v0.9.0\n[Go package/build]   | go: downloading github.com/blevesearch/zapx/v12 v12.3.7\n[Go package/build]   | go: downloading github.com/blevesearch/scorch_segment_api/v2 v2.1.4\n[Go package/build]   | go: downloading github.com/blevesearch/mmap-go v1.0.4\n[Go package/build]   | go: downloading github.com/golang/snappy v0.0.4\n[Go package/build]   | go: downloading github.com/blevesearch/go-porterstemmer v1.0.3\n[Go package/build]   | go: downloading github.com/golang/protobuf v1.5.3\n[Go package/build]   | go: downloading github.com/golang/geo v0.0.0-20230421003525-6adc56603217\n[Go package/build]   | go: downloading github.com/json-iterator/go v1.1.12\n[Go package/build]   | go: downloading github.com/blevesearch/segment v0.9.1\n[Go package/build]   | go: downloading github.com/RoaringBitmap/roaring v1.2.3\n[Go package/build]   | go: downloading github.com/blevesearch/zapx/v15 v15.3.9\n[Go package/build]   | go: downloading github.com/bits-and-blooms/bitset v1.6.0\n[Go package/build]   | go: downloading google.golang.org/protobuf v1.30.0\n[Go package/build]   | go: downloading github.com/modern-go/reflect2 v1.0.2\n[Go package/build]   | go: downloading github.com/modern-go/concurrent v0.0.0-20180306012644-bacd9c7ef1dd\n[Go package/test ]   | >> Purging existing coverage.txt\n[Go package/test ]   | rm -f coverage.txt\n[Go package/test ]   | >> Running tests\n[Go package/test ]   | go test -coverprofile=coverage.txt -covermode=atomic -v -timeout=90s\n[Go package/test ]   | go: downloading github.com/stretchr/testify v1.8.1\n[Go package/test ]   | go: downloading github.com/prometheus/common v0.0.0-20180426121432-d811d2e9bf89\n[Go package/test ]   | go: downloading github.com/davecgh/go-spew v1.1.1\n[Go package/test ]   | go: downloading github.com/pmezard/go-difflib v1.0.0\n[Go package/test ]   | go: downloading gopkg.in/yaml.v3 v3.0.1\n[Go package/test ]   | go: downloading gopkg.in/alecthomas/kingpin.v2 v2.2.6\n[Go package/test ]   | go: downloading github.com/alecthomas/template v0.0.0-20160405071501-a0175ee3bccc\n[Go package/test ]   | go: downloading github.com/alecthomas/units v0.0.0-20151022065526-2efee857e7cf\n[Go package/test ]   | main.go:4:2: package embed is not in GOROOT (/opt/hostedtoolcache/go/1.15.15/x64/src/embed)\n[Go package/test ]   | make: *** [Makefile:117: test] Error 1\n[Go package/test ]   \u274c  Failure - Main Test\n[Go package/test ] exitcode '2': failure\n[Go package/build]   | >> Purging ./target notable\n[Go package/build]   | rm -rf ./target\n[Go package/build]   | rm -f notable\n[Go package/build]   | go mod tidy\n[Go package/build]   | go mod tidy: go.mod file indicates go 1.20, but maximum supported version is 1.15\n[Go package/build]   | make: *** [Makefile:125: tidy] Error 1\n[Go package/build]   \u274c  Failure - Main Build\n[Go package/build] exitcode '2': failure\n[Go package/test ] \ud83c\udfc1  Job failed\n[Go package/build] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'build' failed\n"
}