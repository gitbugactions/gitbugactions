{
    "repository": "juju/errors",
    "clone_url": "https://github.com/juju/errors.git",
    "timestamp": "2023-05-30T10:40:49.124563Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Run `go test`/run-go-test] \ud83d\ude80  Start image=crawlergpt:latest\n[Run `go test`/run-go-test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Run `go test`/run-go-test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run `go test`/run-go-test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run `go test`/run-go-test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/juju-errors] user=0 workdir=\n[Run `go test`/run-go-test]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[Run `go test`/run-go-test] \u2b50 Run Main Checkout repo\n[Run `go test`/run-go-test]   \u2705  Success - Main Checkout repo\n[Run `go test`/run-go-test] \u2b50 Run Main Find required go version\n[Run `go test`/run-go-test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/go-version] user= workdir=\n[Run `go test`/run-go-test]   | ++ grep '^go ' go.mod\n[Run `go test`/run-go-test]   | ++ awk '{print $2}'\n[Run `go test`/run-go-test]   | + echo '::set-output name=version::1.18'\n[Run `go test`/run-go-test]   \u2699  ::set-output:: version=1.18\n[Run `go test`/run-go-test]   \u2705  Success - Main Find required go version\n[Run `go test`/run-go-test] \u2b50 Run Main Install Golang\n[Run `go test`/run-go-test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[Run `go test`/run-go-test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[Run `go test`/run-go-test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[Run `go test`/run-go-test]   | Setup go stable version spec 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::isExplicit: \n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::explicit? false\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::explicit? true\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::explicit? true\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::explicit? true\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::match not found\n[Run `go test`/run-go-test]   | Attempting to download 1.18...\n[Run `go test`/run-go-test]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::Error: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v2/dist/index.js:5294:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[Run `go test`/run-go-test]   | Falling back to download directly from Go\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.20.0-rc3 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.20.0-rc2 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.20.0-rc1 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.19.8 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.19.7 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.19.6 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.19.5 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.19.4 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.19.3 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.19.2 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.19.1 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.19.0 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.19.0-rc2 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.19.0-rc1 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.19.0-beta1 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::check 1.18.10 satisfies 1.18\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::matched go1.18.10\n[Run `go test`/run-go-test]   | Install from dist\n[Run `go test`/run-go-test]   | Acquiring go1.18.10 from https://storage.googleapis.com/golang/go1.18.10.linux-amd64.tar.gz\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.18.10.linux-amd64.tar.gz\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::Destination /tmp/41d0e135-38e6-4410-8b1c-666530e4c010\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::download complete\n[Run `go test`/run-go-test]   | Extracting Go...\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::Checking tar --version\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Run `go test`/run-go-test]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/a596af61-f12a-44c8-a080-011a654a001b -f /tmp/41d0e135-38e6-4410-8b1c-666530e4c010\n[Run `go test`/run-go-test]   | Successfully extracted go to /tmp/a596af61-f12a-44c8-a080-011a654a001b\n[Run `go test`/run-go-test]   | Adding to the cache ...\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::Caching tool go 1.18.10 x64\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::source dir: /tmp/a596af61-f12a-44c8-a080-011a654a001b/go\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.18.10/x64\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::finished caching tool\n[Run `go test`/run-go-test]   | Successfully cached go to /opt/hostedtoolcache/go/1.18.10/x64\n[Run `go test`/run-go-test]   | Added go to the path\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.18.10/x64/bin/go:\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[Run `go test`/run-go-test]   \ud83d\udcac  ::debug::add bin true\n[Run `go test`/run-go-test]   | Successfully setup go version 1.18\n[Run `go test`/run-go-test]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[Run `go test`/run-go-test]   | go version go1.18.10 linux/amd64\n[Run `go test`/run-go-test]   | \n[Run `go test`/run-go-test]   \u2753  ::group::go env\n[Run `go test`/run-go-test]   | GO111MODULE=\"\"\n[Run `go test`/run-go-test]   | GOARCH=\"amd64\"\n[Run `go test`/run-go-test]   | GOBIN=\"\"\n[Run `go test`/run-go-test]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[Run `go test`/run-go-test]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[Run `go test`/run-go-test]   | GOEXE=\"\"\n[Run `go test`/run-go-test]   | GOEXPERIMENT=\"\"\n[Run `go test`/run-go-test]   | GOFLAGS=\"\"\n[Run `go test`/run-go-test]   | GOHOSTARCH=\"amd64\"\n[Run `go test`/run-go-test]   | GOHOSTOS=\"linux\"\n[Run `go test`/run-go-test]   | GOINSECURE=\"\"\n[Run `go test`/run-go-test]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[Run `go test`/run-go-test]   | GONOPROXY=\"\"\n[Run `go test`/run-go-test]   | GONOSUMDB=\"\"\n[Run `go test`/run-go-test]   | GOOS=\"linux\"\n[Run `go test`/run-go-test]   | GOPATH=\"/home/runneradmin/go\"\n[Run `go test`/run-go-test]   | GOPRIVATE=\"\"\n[Run `go test`/run-go-test]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[Run `go test`/run-go-test]   | GOROOT=\"/opt/hostedtoolcache/go/1.18.10/x64\"\n[Run `go test`/run-go-test]   | GOSUMDB=\"sum.golang.org\"\n[Run `go test`/run-go-test]   | GOTMPDIR=\"\"\n[Run `go test`/run-go-test]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.18.10/x64/pkg/tool/linux_amd64\"\n[Run `go test`/run-go-test]   | GOVCS=\"\"\n[Run `go test`/run-go-test]   | GOVERSION=\"go1.18.10\"\n[Run `go test`/run-go-test]   | GCCGO=\"gccgo\"\n[Run `go test`/run-go-test]   | GOAMD64=\"v1\"\n[Run `go test`/run-go-test]   | AR=\"ar\"\n[Run `go test`/run-go-test]   | CC=\"gcc\"\n[Run `go test`/run-go-test]   | CXX=\"g++\"\n[Run `go test`/run-go-test]   | CGO_ENABLED=\"1\"\n[Run `go test`/run-go-test]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/juju-errors/go.mod\"\n[Run `go test`/run-go-test]   | GOWORK=\"\"\n[Run `go test`/run-go-test]   | CGO_CFLAGS=\"-g -O2\"\n[Run `go test`/run-go-test]   | CGO_CPPFLAGS=\"\"\n[Run `go test`/run-go-test]   | CGO_CXXFLAGS=\"-g -O2\"\n[Run `go test`/run-go-test]   | CGO_FFLAGS=\"-g -O2\"\n[Run `go test`/run-go-test]   | CGO_LDFLAGS=\"-g -O2\"\n[Run `go test`/run-go-test]   | PKG_CONFIG=\"pkg-config\"\n[Run `go test`/run-go-test]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build3975087831=/tmp/go-build -gno-record-gcc-switches\"\n[Run `go test`/run-go-test]   | \n[Run `go test`/run-go-test]   \u2753  ::endgroup::\n[Run `go test`/run-go-test]   \u2705  Success - Main Install Golang\n[Run `go test`/run-go-test]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.18.10/x64\n[Run `go test`/run-go-test]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.18.10/x64/bin\n[Run `go test`/run-go-test]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[Run `go test`/run-go-test] \u2b50 Run Main Run test suite\n[Run `go test`/run-go-test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Run `go test`/run-go-test]   | go: downloading gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c\n[Run `go test`/run-go-test]   | go: downloading github.com/kr/pretty v0.2.1\n[Run `go test`/run-go-test]   | go: downloading github.com/kr/text v0.2.0\n[Run `go test`/run-go-test]   | === RUN   Test\n[Run `go test`/run-go-test]   | OK: 32 passed\n[Run `go test`/run-go-test]   | --- PASS: Test (0.21s)\n[Run `go test`/run-go-test]   | === RUN   ExampleTrace\n[Run `go test`/run-go-test]   | --- PASS: ExampleTrace (0.00s)\n[Run `go test`/run-go-test]   | === RUN   ExampleHide\n[Run `go test`/run-go-test]   | --- PASS: ExampleHide (0.00s)\n[Run `go test`/run-go-test]   | === RUN   ExampleHasType\n[Run `go test`/run-go-test]   | --- PASS: ExampleHasType (0.00s)\n[Run `go test`/run-go-test]   | === RUN   ExampleAsType\n[Run `go test`/run-go-test]   | --- PASS: ExampleAsType (0.00s)\n[Run `go test`/run-go-test]   | PASS\n[Run `go test`/run-go-test]   | ok  \tgithub.com/juju/errors\t0.239s\n[Run `go test`/run-go-test]   \u2705  Success - Main Run test suite\n[Run `go test`/run-go-test] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/4b41db442768fa0a78ab9bbd922e6aa70b57851653eacfe901a6d66d02d1bb24/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[Run `go test`/run-go-test] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/4b41db442768fa0a78ab9bbd922e6aa70b57851653eacfe901a6d66d02d1bb24?force=1&v=1\": context deadline exceeded\n[Run `go test`/run-go-test] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: context canceled\n"
}