{
    "repository": "mailru/easyjson",
    "clone_url": "https://github.com/mailru/easyjson.git",
    "timestamp": "2023-05-30T11:32:49.791179Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[easyjson/Test with Go 1.17          ] \ud83d\ude80  Start image=crawlergpt:latest\n[easyjson/Test on ubuntu20.04 ppc64le] \ud83d\ude80  Start image=crawlergpt:latest\n[easyjson/Test on ubuntu20.04 ppc64le]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[easyjson/Test with Go 1.17          ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[easyjson/Test with Go 1.17          ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[easyjson/Test on ubuntu20.04 ppc64le]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[easyjson/Test on ubuntu20.04 ppc64le]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[easyjson/Test with Go 1.17          ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[easyjson/Test with Go 1.17          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/mailru-easyjson] user=0 workdir=\n[easyjson/Test with Go 1.17          ]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[easyjson/Test with Go 1.17          ] \ud83e\uddea  Matrix: map[go:1.17]\n[easyjson/Test on ubuntu20.04 ppc64le]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/mailru-easyjson] user=0 workdir=\n[easyjson/Test with Go 1.17          ] \u2b50 Run Main actions/checkout@v2\n[easyjson/Test with Go 1.17          ]   \u2705  Success - Main actions/checkout@v2\n[easyjson/Test on ubuntu20.04 ppc64le]   \u2601  git clone 'https://github.com/uraimo/run-on-arch-action' # ref=master\n[easyjson/Test on ubuntu20.04 ppc64le] \ud83e\uddea  Matrix: map[arch:ppc64le distro:ubuntu20.04]\n[easyjson/Test on ubuntu20.04 ppc64le] \u2b50 Run Main actions/checkout@v2\n[easyjson/Test on ubuntu20.04 ppc64le]   \u2705  Success - Main actions/checkout@v2\n[easyjson/Test with Go 1.17          ] \u2b50 Run Main Set up Go 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[easyjson/Test on ubuntu20.04 ppc64le] \u2b50 Run Main uraimo/run-on-arch-action@master\n[easyjson/Test with Go 1.17          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[easyjson/Test on ubuntu20.04 ppc64le]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/uraimo-run-on-arch-action@master/ dst=/var/run/act/actions/uraimo-run-on-arch-action@master/\n[easyjson/Test on ubuntu20.04 ppc64le]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/uraimo-run-on-arch-action@master/] user=0 workdir=\n[easyjson/Test on ubuntu20.04 ppc64le]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/uraimo-run-on-arch-action@master/src/run-on-arch.js] user= workdir=\n[easyjson/Test with Go 1.17          ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[easyjson/Test on ubuntu20.04 ppc64le]   | Configuring Docker for multi-architecture support\n[easyjson/Test with Go 1.17          ]   | Setup go stable version spec 1.17\n[easyjson/Test on ubuntu20.04 ppc64le]   | [command]/run/act/actions/uraimo-run-on-arch-action@master/src/run-on-arch.sh /run/act/actions/uraimo-run-on-arch-action@master/Dockerfiles/Dockerfile.ppc64le.ubuntu20.04 run-on-arch-mailru-easyjson-easyjson-ppc64le-ubuntu20-04\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::isExplicit: \n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::explicit? false\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::explicit? true\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::explicit? true\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::explicit? true\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::evaluating 3 versions\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::match not found\n[easyjson/Test with Go 1.17          ]   | Attempting to download 1.17...\n[easyjson/Test with Go 1.17          ]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::Error: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v2/dist/index.js:5294:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[easyjson/Test with Go 1.17          ]   | Falling back to download directly from Go\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.20.0-rc3 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.20.0-rc2 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.20.0-rc1 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.19.8 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.19.7 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.19.6 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.19.5 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.19.4 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.19.3 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.19.2 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.19.1 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.19.0 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.19.0-rc2 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.19.0-rc1 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.19.0-beta1 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.18.10 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.18.9 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.18.8 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.18.7 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.18.6 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.18.5 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.18.4 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.18.3 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.18.2 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.18.1 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.18.0 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.18.0-rc1 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.18.0-beta2 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.18.0-beta1 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::check 1.17.13 satisfies 1.17\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::matched go1.17.13\n[easyjson/Test with Go 1.17          ]   | Install from dist\n[easyjson/Test with Go 1.17          ]   | Acquiring go1.17.13 from https://storage.googleapis.com/golang/go1.17.13.linux-amd64.tar.gz\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.17.13.linux-amd64.tar.gz\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::Destination /tmp/49b42871-8cf8-421d-be5c-d6520ac7638e\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::download complete\n[easyjson/Test with Go 1.17          ]   | Extracting Go...\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::Checking tar --version\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[easyjson/Test with Go 1.17          ]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/d2c9ddd9-950d-492d-8ca3-62e728c172e8 -f /tmp/49b42871-8cf8-421d-be5c-d6520ac7638e\n[easyjson/Test with Go 1.17          ]   | Successfully extracted go to /tmp/d2c9ddd9-950d-492d-8ca3-62e728c172e8\n[easyjson/Test with Go 1.17          ]   | Adding to the cache ...\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::Caching tool go 1.17.13 x64\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::source dir: /tmp/d2c9ddd9-950d-492d-8ca3-62e728c172e8/go\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.17.13/x64\n[easyjson/Test on ubuntu20.04 ppc64le]   | Hit:1 http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu focal InRelease\n[easyjson/Test on ubuntu20.04 ppc64le]   | Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:3 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:4 https://packages.microsoft.com/ubuntu/20.04/prod focal InRelease [3611 B]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:5 https://dl.hhvm.com/ubuntu focal InRelease [3137 B]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:6 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ InRelease [3622 B]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:7 http://dl.google.com/linux/chrome/deb stable InRelease [1825 B]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:8 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:9 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Hit:10 https://adoptopenjdk.jfrog.io/adoptopenjdk/deb focal InRelease\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:11 https://packages.microsoft.com/ubuntu/20.04/prod focal/main amd64 Packages [201 kB]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:12 https://packages.microsoft.com/ubuntu/20.04/prod focal/main all Packages [2521 B]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:13 https://dl.hhvm.com/ubuntu focal/main amd64 Packages [1880 B]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:14 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ Packages [77.6 kB]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Err:7 http://dl.google.com/linux/chrome/deb stable InRelease\n[easyjson/Test on ubuntu20.04 ppc64le]   |   The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:15 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [31.2 kB]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:16 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [2412 kB]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:17 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [3207 kB]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:18 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1348 kB]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:19 http://security.ubuntu.com/ubuntu focal-security/restricted i386 Packages [36.9 kB]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:20 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [2731 kB]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:21 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [28.6 kB]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:22 http://archive.ubuntu.com/ubuntu focal-backports/main amd64 Packages [55.2 kB]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:23 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [28.5 kB]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:24 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [2274 kB]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:25 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [740 kB]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:26 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [742 kB]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:27 http://security.ubuntu.com/ubuntu focal-security/multiverse i386 Packages [8141 B]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Get:28 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [1053 kB]\n[easyjson/Test on ubuntu20.04 ppc64le]   | Fetched 15.3 MB in 22s (687 kB/s)\n[easyjson/Test on ubuntu20.04 ppc64le]   | Reading package lists...\n[easyjson/Test on ubuntu20.04 ppc64le]   | W: An error occurred during the signature verification. The repository is not updated and the previous index files will be used. GPG error: http://dl.google.com/linux/chrome/deb stable InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[easyjson/Test on ubuntu20.04 ppc64le]   | W: Failed to fetch http://dl.google.com/linux/chrome/deb/dists/stable/InRelease  The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[easyjson/Test on ubuntu20.04 ppc64le]   | W: Some index files failed to download. They have been ignored, or old ones used instead.\n[easyjson/Test on ubuntu20.04 ppc64le]   | Selecting previously unselected package qemu.\r\n[easyjson/Test on ubuntu20.04 ppc64le]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 193678 files and directories currently installed.)\r\n[easyjson/Test on ubuntu20.04 ppc64le]   | Preparing to unpack .../qemu_1%3a4.2-3ubuntu6.26_amd64.deb ...\r\n[easyjson/Test on ubuntu20.04 ppc64le]   | Unpacking qemu (1:4.2-3ubuntu6.26) ...\r\n[easyjson/Test on ubuntu20.04 ppc64le]   | Selecting previously unselected package qemu-user-static.\r\n[easyjson/Test on ubuntu20.04 ppc64le]   | Preparing to unpack .../qemu-user-static_1%3a4.2-3ubuntu6.26_amd64.deb ...\r\n[easyjson/Test on ubuntu20.04 ppc64le]   | Unpacking qemu-user-static (1:4.2-3ubuntu6.26) ...\r\n[easyjson/Test on ubuntu20.04 ppc64le]   | Setting up qemu (1:4.2-3ubuntu6.26) ...\r\n[easyjson/Test on ubuntu20.04 ppc64le]   | Setting up qemu-user-static (1:4.2-3ubuntu6.26) ...\r\n[easyjson/Test on ubuntu20.04 ppc64le]   | docker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/create\": dial unix /var/run/docker.sock: connect: permission denied.\n[easyjson/Test on ubuntu20.04 ppc64le]   | See 'docker run --help'.\n[easyjson/Test on ubuntu20.04 ppc64le]   \u2757  ::error::The process '/run/act/actions/uraimo-run-on-arch-action@master/src/run-on-arch.sh' failed with exit code 126\n[easyjson/Test on ubuntu20.04 ppc64le]   \u274c  Failure - Main uraimo/run-on-arch-action@master\n[easyjson/Test on ubuntu20.04 ppc64le] exitcode '1': failure\n[easyjson/Test on ubuntu20.04 ppc64le] \ud83c\udfc1  Job failed\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::finished caching tool\n[easyjson/Test with Go 1.17          ]   | Successfully cached go to /opt/hostedtoolcache/go/1.17.13/x64\n[easyjson/Test with Go 1.17          ]   | Added go to the path\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.17.13/x64/bin/go:\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[easyjson/Test with Go 1.17          ]   \ud83d\udcac  ::debug::add bin true\n[easyjson/Test with Go 1.17          ]   | Successfully setup go version 1.17\n[easyjson/Test with Go 1.17          ]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[easyjson/Test with Go 1.17          ]   | go version go1.17.13 linux/amd64\n[easyjson/Test with Go 1.17          ]   | \n[easyjson/Test with Go 1.17          ]   \u2753  ::group::go env\n[easyjson/Test with Go 1.17          ]   | GO111MODULE=\"\"\n[easyjson/Test with Go 1.17          ]   | GOARCH=\"amd64\"\n[easyjson/Test with Go 1.17          ]   | GOBIN=\"\"\n[easyjson/Test with Go 1.17          ]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[easyjson/Test with Go 1.17          ]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[easyjson/Test with Go 1.17          ]   | GOEXE=\"\"\n[easyjson/Test with Go 1.17          ]   | GOEXPERIMENT=\"\"\n[easyjson/Test with Go 1.17          ]   | GOFLAGS=\"\"\n[easyjson/Test with Go 1.17          ]   | GOHOSTARCH=\"amd64\"\n[easyjson/Test with Go 1.17          ]   | GOHOSTOS=\"linux\"\n[easyjson/Test with Go 1.17          ]   | GOINSECURE=\"\"\n[easyjson/Test with Go 1.17          ]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[easyjson/Test with Go 1.17          ]   | GONOPROXY=\"\"\n[easyjson/Test with Go 1.17          ]   | GONOSUMDB=\"\"\n[easyjson/Test with Go 1.17          ]   | GOOS=\"linux\"\n[easyjson/Test with Go 1.17          ]   | GOPATH=\"/home/runneradmin/go\"\n[easyjson/Test with Go 1.17          ]   | GOPRIVATE=\"\"\n[easyjson/Test with Go 1.17          ]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[easyjson/Test with Go 1.17          ]   | GOROOT=\"/opt/hostedtoolcache/go/1.17.13/x64\"\n[easyjson/Test with Go 1.17          ]   | GOSUMDB=\"sum.golang.org\"\n[easyjson/Test with Go 1.17          ]   | GOTMPDIR=\"\"\n[easyjson/Test with Go 1.17          ]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.17.13/x64/pkg/tool/linux_amd64\"\n[easyjson/Test with Go 1.17          ]   | GOVCS=\"\"\n[easyjson/Test with Go 1.17          ]   | GOVERSION=\"go1.17.13\"\n[easyjson/Test with Go 1.17          ]   | GCCGO=\"gccgo\"\n[easyjson/Test with Go 1.17          ]   | AR=\"ar\"\n[easyjson/Test with Go 1.17          ]   | CC=\"gcc\"\n[easyjson/Test with Go 1.17          ]   | CXX=\"g++\"\n[easyjson/Test with Go 1.17          ]   | CGO_ENABLED=\"1\"\n[easyjson/Test with Go 1.17          ]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/mailru-easyjson/go.mod\"\n[easyjson/Test with Go 1.17          ]   | CGO_CFLAGS=\"-g -O2\"\n[easyjson/Test with Go 1.17          ]   | CGO_CPPFLAGS=\"\"\n[easyjson/Test with Go 1.17          ]   | CGO_CXXFLAGS=\"-g -O2\"\n[easyjson/Test with Go 1.17          ]   | CGO_FFLAGS=\"-g -O2\"\n[easyjson/Test with Go 1.17          ]   | CGO_LDFLAGS=\"-g -O2\"\n[easyjson/Test with Go 1.17          ]   | PKG_CONFIG=\"pkg-config\"\n[easyjson/Test with Go 1.17          ]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build260327249=/tmp/go-build -gno-record-gcc-switches\"\n[easyjson/Test with Go 1.17          ]   | \n[easyjson/Test with Go 1.17          ]   \u2753  ::endgroup::\n[easyjson/Test with Go 1.17          ]   \u2705  Success - Main Set up Go 1.17\n[easyjson/Test with Go 1.17          ]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.17.13/x64\n[easyjson/Test with Go 1.17          ]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.17.13/x64/bin\n[easyjson/Test with Go 1.17          ]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[easyjson/Test with Go 1.17          ] \u2b50 Run Main Install golint\n[easyjson/Test with Go 1.17          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[easyjson/Test with Go 1.17          ]   | go: downloading golang.org/x/lint v0.0.0-20210508222113-6edffad5e616\n[easyjson/Test with Go 1.17          ]   | go: downloading golang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7\n[easyjson/Test with Go 1.17          ]   \u2705  Success - Main Install golint\n[easyjson/Test with Go 1.17          ] \u2b50 Run Main Build and Run tests\n[easyjson/Test with Go 1.17          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[easyjson/Test with Go 1.17          ]   | go build -o ./bin/easyjson ./easyjson\n[easyjson/Test with Go 1.17          ]   | go: downloading github.com/josharian/intern v1.0.0\n[easyjson/Test with Go 1.17          ]   | bin/easyjson -stubs \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/snake.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/data.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/omitempty.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/nothing.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/named_type.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/custom_map_key_type.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/embedded_type.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/reference_to_pointer.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/html.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/unknown_fields.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/type_declaration.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/type_declaration_skip.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/members_escaped.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/members_unescaped.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/intern.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/nocopy.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/escaping.go\n[easyjson/Test with Go 1.17          ]   | bin/easyjson -all \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/data.go \\\n[easyjson/Test with Go 1.17          ]   |  \t\t./tests/nothing.go \\\n[easyjson/Test with Go 1.17          ]   |  \t\t./tests/errors.go \\\n[easyjson/Test with Go 1.17          ]   |  \t\t./tests/html.go \\\n[easyjson/Test with Go 1.17          ]   |  \t\t./tests/type_declaration_skip.go\n[easyjson/Test with Go 1.17          ]   | bin/easyjson \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/nested_easy.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/named_type.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/custom_map_key_type.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/embedded_type.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/reference_to_pointer.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/key_marshaler_map.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/unknown_fields.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/type_declaration.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/members_escaped.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/intern.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/nocopy.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/escaping.go \\\n[easyjson/Test with Go 1.17          ]   | \t./tests/nested_marshaler.go\n[easyjson/Test with Go 1.17          ]   | bin/easyjson -snake_case ./tests/snake.go\n[easyjson/Test with Go 1.17          ]   | bin/easyjson -omit_empty ./tests/omitempty.go\n[easyjson/Test with Go 1.17          ]   | bin/easyjson -build_tags=use_easyjson -disable_members_unescape ./benchmark/data.go\n[easyjson/Test with Go 1.17          ]   | bin/easyjson -disallow_unknown_fields ./tests/disallow_unknown.go\n[easyjson/Test with Go 1.17          ]   | bin/easyjson -disable_members_unescape ./tests/members_unescaped.go\n[easyjson/Test with Go 1.17          ]   | go test \\\n[easyjson/Test with Go 1.17          ]   | \t./tests \\\n[easyjson/Test with Go 1.17          ]   | \t./jlexer \\\n[easyjson/Test with Go 1.17          ]   | \t./gen \\\n[easyjson/Test with Go 1.17          ]   | \t./buffer\n[easyjson/Test with Go 1.17          ]   | ok  \tgithub.com/mailru/easyjson/tests\t0.024s\n[easyjson/Test with Go 1.17          ]   | ok  \tgithub.com/mailru/easyjson/jlexer\t0.063s\n[easyjson/Test with Go 1.17          ]   | ok  \tgithub.com/mailru/easyjson/gen\t0.014s\n[easyjson/Test with Go 1.17          ]   | ok  \tgithub.com/mailru/easyjson/buffer\t0.038s\n[easyjson/Test with Go 1.17          ]   | cd benchmark && go test -benchmem -tags use_easyjson -bench .\n[easyjson/Test with Go 1.17          ]   | goos: linux\n[easyjson/Test with Go 1.17          ]   | goarch: amd64\n[easyjson/Test with Go 1.17          ]   | pkg: github.com/mailru/easyjson/benchmark\n[easyjson/Test with Go 1.17          ]   | cpu: AMD EPYC 7742 64-Core Processor                \n[easyjson/Test with Go 1.17          ]   | BenchmarkEJ_Unmarshal_M-128                     \t   14857\t     80911 ns/op\t 160.97 MB/s\t    9512 B/op\t     126 allocs/op\n[easyjson/Test with Go 1.17          ]   | BenchmarkEJ_Unmarshal_S-128                     \t  805899\t      1383 ns/op\t  59.31 MB/s\t     128 B/op\t       3 allocs/op\n[easyjson/Test with Go 1.17          ]   | BenchmarkEJ_Marshal_M-128                       \t   30290\t     34065 ns/op\t 262.64 MB/s\t   10653 B/op\t      10 allocs/op\n[easyjson/Test with Go 1.17          ]   | BenchmarkEJ_Marshal_L-128                       \t     646\t   2004601 ns/op\t 223.19 MB/s\t  471922 B/op\t      28 allocs/op\n[easyjson/Test with Go 1.17          ]   | BenchmarkEJ_Marshal_L_ToWriter-128              \t    1018\t   1623003 ns/op\t 275.67 MB/s\t  447953 B/op\t      26 allocs/op\n[easyjson/Test with Go 1.17          ]   | BenchmarkEJ_Marshal_M_Parallel-128              \t  229736\t      5829 ns/op\t2234.42 MB/s\t   10423 B/op\t       9 allocs/op\n[easyjson/Test with Go 1.17          ]   | BenchmarkEJ_Marshal_M_ToWriter-128              \t   31976\t     40265 ns/op\t 222.20 MB/s\t    8658 B/op\t       9 allocs/op\n[easyjson/Test with Go 1.17          ]   | BenchmarkEJ_Marshal_M_ToWriter_Parallel-128     \t  168901\t      7388 ns/op\t1211.02 MB/s\t    8650 B/op\t       9 allocs/op\n[easyjson/Test with Go 1.17          ]   | BenchmarkEJ_Marshal_L_Parallel-128              \t   15356\t     66800 ns/op\t6697.73 MB/s\t  460953 B/op\t      28 allocs/op\n[easyjson/Test with Go 1.17          ]   | BenchmarkEJ_Marshal_L_ToWriter_Parallel-128     \t   13480\t     91267 ns/op\t4902.20 MB/s\t  430452 B/op\t      25 allocs/op\n[easyjson/Test with Go 1.17          ]   | BenchmarkEJ_Marshal_S-128                       \t 2409943\t       507.5 ns/op\t 159.60 MB/s\t     128 B/op\t       1 allocs/op\n[easyjson/Test with Go 1.17          ]   | BenchmarkEJ_Marshal_S_Parallel-128              \t 9172570\t       136.2 ns/op\t 594.62 MB/s\t     128 B/op\t       1 allocs/op\n[easyjson/Test with Go 1.17          ]   | PASS\n[easyjson/Test with Go 1.17          ]   | ok  \tgithub.com/mailru/easyjson/benchmark\t20.419s\n[easyjson/Test with Go 1.17          ]   | golint -set_exit_status ./tests/*_easyjson.go\n[easyjson/Test with Go 1.17          ]   \u2705  Success - Main Build and Run tests\n[easyjson/Test with Go 1.17          ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: Job 'Test on ${{ matrix.distro }} ${{ matrix.arch }}' failed\n"
}