{
    "repository": "sideshow/apns2",
    "clone_url": "https://github.com/sideshow/apns2.git",
    "timestamp": "2023-05-30T11:30:05.234831Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[tests/test] \ud83d\ude80  Start image=crawlergpt:latest\n[tests/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[tests/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/sideshow-apns2] user=0 workdir=\n[tests/test]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[tests/test] \ud83e\uddea  Matrix: map[go:1.16.x]\n[tests/test] \u2b50 Run Main actions/checkout@v2\n[tests/test]   \u2705  Success - Main actions/checkout@v2\n[tests/test] \u2b50 Run Main Set up Go\n[tests/test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[tests/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[tests/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[tests/test]   | Setup go stable version spec 1.16.x\n[tests/test]   \ud83d\udcac  ::debug::isExplicit: \n[tests/test]   \ud83d\udcac  ::debug::explicit? false\n[tests/test]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[tests/test]   \ud83d\udcac  ::debug::explicit? true\n[tests/test]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[tests/test]   \ud83d\udcac  ::debug::explicit? true\n[tests/test]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[tests/test]   \ud83d\udcac  ::debug::explicit? true\n[tests/test]   \ud83d\udcac  ::debug::evaluating 3 versions\n[tests/test]   \ud83d\udcac  ::debug::matched: 1.16.7\n[tests/test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/go/1.16.7/x64\n[tests/test]   \ud83d\udcac  ::debug::Found tool in cache go 1.16.7 x64\n[tests/test]   | Found in cache @ /opt/hostedtoolcache/go/1.16.7/x64\n[tests/test]   | Added go to the path\n[tests/test]   \ud83d\udcac  ::debug::which go :/opt/hostedtoolcache/go/1.16.7/x64/bin/go:\n[tests/test]   \ud83d\udcac  ::debug::go env GOPATH :/home/runneradmin/go:\n[tests/test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go\n[tests/test]   \ud83d\udcac  ::debug::creating /home/runneradmin/go/bin\n[tests/test]   \ud83d\udcac  ::debug::add bin true\n[tests/test]   | Successfully setup go version 1.16.x\n[tests/test]   \u2753 add-matcher /run/act/actions/actions-setup-go@v2/matchers.json\n[tests/test]   | go version go1.16.7 linux/amd64\n[tests/test]   | \n[tests/test]   \u2753  ::group::go env\n[tests/test]   | GO111MODULE=\"\"\n[tests/test]   | GOARCH=\"amd64\"\n[tests/test]   | GOBIN=\"\"\n[tests/test]   | GOCACHE=\"/home/runneradmin/.cache/go-build\"\n[tests/test]   | GOENV=\"/home/runneradmin/.config/go/env\"\n[tests/test]   | GOEXE=\"\"\n[tests/test]   | GOFLAGS=\"\"\n[tests/test]   | GOHOSTARCH=\"amd64\"\n[tests/test]   | GOHOSTOS=\"linux\"\n[tests/test]   | GOINSECURE=\"\"\n[tests/test]   | GOMODCACHE=\"/home/runneradmin/go/pkg/mod\"\n[tests/test]   | GONOPROXY=\"\"\n[tests/test]   | GONOSUMDB=\"\"\n[tests/test]   | GOOS=\"linux\"\n[tests/test]   | GOPATH=\"/home/runneradmin/go\"\n[tests/test]   | GOPRIVATE=\"\"\n[tests/test]   | GOPROXY=\"https://proxy.golang.org,direct\"\n[tests/test]   | GOROOT=\"/opt/hostedtoolcache/go/1.16.7/x64\"\n[tests/test]   | GOSUMDB=\"sum.golang.org\"\n[tests/test]   | GOTMPDIR=\"\"\n[tests/test]   | GOTOOLDIR=\"/opt/hostedtoolcache/go/1.16.7/x64/pkg/tool/linux_amd64\"\n[tests/test]   | GOVCS=\"\"\n[tests/test]   | GOVERSION=\"go1.16.7\"\n[tests/test]   | GCCGO=\"gccgo\"\n[tests/test]   | AR=\"ar\"\n[tests/test]   | CC=\"gcc\"\n[tests/test]   | CXX=\"g++\"\n[tests/test]   | CGO_ENABLED=\"1\"\n[tests/test]   | GOMOD=\"/tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/sideshow-apns2/go.mod\"\n[tests/test]   | CGO_CFLAGS=\"-g -O2\"\n[tests/test]   | CGO_CPPFLAGS=\"\"\n[tests/test]   | CGO_CXXFLAGS=\"-g -O2\"\n[tests/test]   | CGO_FFLAGS=\"-g -O2\"\n[tests/test]   | CGO_LDFLAGS=\"-g -O2\"\n[tests/test]   | PKG_CONFIG=\"pkg-config\"\n[tests/test]   | GOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build2457620927=/tmp/go-build -gno-record-gcc-switches\"\n[tests/test]   | \n[tests/test]   \u2753  ::endgroup::\n[tests/test]   \u2705  Success - Main Set up Go\n[tests/test]   \u2699  ::set-env:: GOROOT=/opt/hostedtoolcache/go/1.16.7/x64\n[tests/test]   \u2699  ::add-path:: /opt/hostedtoolcache/go/1.16.7/x64/bin\n[tests/test]   \u2699  ::add-path:: /home/runneradmin/go/bin\n[tests/test] \u2b50 Run Main Install goveralls\n[tests/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[tests/test]   | go: downloading github.com/mattn/goveralls v0.0.12\n[tests/test]   | go: downloading golang.org/x/tools v0.8.0\n[tests/test]   | go: downloading golang.org/x/mod v0.10.0\n[tests/test]   \u2705  Success - Main Install goveralls\n[tests/test] \u2b50 Run Main Build\n[tests/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[tests/test]   | golang.org/x/text/transform\n[tests/test]   | golang.org/x/crypto/pkcs12/internal/rc2\n[tests/test]   | golang.org/x/net/http2/hpack\n[tests/test]   | golang.org/x/text/unicode/bidi\n[tests/test]   | github.com/alecthomas/units\n[tests/test]   | github.com/sideshow/apns2/payload\n[tests/test]   | github.com/alecthomas/template/parse\n[tests/test]   | github.com/golang-jwt/jwt/v4\n[tests/test]   | golang.org/x/text/unicode/norm\n[tests/test]   | golang.org/x/crypto/pkcs12\n[tests/test]   | github.com/sideshow/apns2/certificate\n[tests/test]   | golang.org/x/text/secure/bidirule\n[tests/test]   | github.com/sideshow/apns2/token\n[tests/test]   | github.com/alecthomas/template\n[tests/test]   | golang.org/x/net/idna\n[tests/test]   | golang.org/x/net/http/httpguts\n[tests/test]   | gopkg.in/alecthomas/kingpin.v2\n[tests/test]   | golang.org/x/net/http2\n[tests/test]   | github.com/sideshow/apns2\n[tests/test]   | github.com/sideshow/apns2/apns2\n[tests/test]   \u2705  Success - Main Build\n[tests/test] \u2b50 Run Main Run tests\n[tests/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[tests/test]   | === RUN   TestNewClientManager\n[tests/test]   | --- PASS: TestNewClientManager (0.00s)\n[tests/test]   | === RUN   TestClientManagerGetWithoutNew\n[tests/test]   | --- PASS: TestClientManagerGetWithoutNew (0.00s)\n[tests/test]   | === RUN   TestClientManagerAddWithoutNew\n[tests/test]   | --- PASS: TestClientManagerAddWithoutNew (0.00s)\n[tests/test]   | === RUN   TestClientManagerLenWithoutNew\n[tests/test]   | --- PASS: TestClientManagerLenWithoutNew (0.00s)\n[tests/test]   | === RUN   TestClientManagerGetDefaultOptions\n[tests/test]   | --- PASS: TestClientManagerGetDefaultOptions (0.00s)\n[tests/test]   | === RUN   TestClientManagerGetNilClientFactory\n[tests/test]   | --- PASS: TestClientManagerGetNilClientFactory (0.00s)\n[tests/test]   | === RUN   TestClientManagerGetMaxAgeExpiration\n[tests/test]   | --- PASS: TestClientManagerGetMaxAgeExpiration (0.00s)\n[tests/test]   | === RUN   TestClientManagerGetMaxAgeExpirationWithNilFactory\n[tests/test]   | --- PASS: TestClientManagerGetMaxAgeExpirationWithNilFactory (0.00s)\n[tests/test]   | === RUN   TestClientManagerGetMaxSizeExceeded\n[tests/test]   | --- PASS: TestClientManagerGetMaxSizeExceeded (0.10s)\n[tests/test]   | === RUN   TestClientManagerAdd\n[tests/test]   | --- PASS: TestClientManagerAdd (0.00s)\n[tests/test]   | === RUN   TestClientManagerAddTwice\n[tests/test]   | --- PASS: TestClientManagerAddTwice (0.00s)\n[tests/test]   | === RUN   TestClientDefaultHost\n[tests/test]   | --- PASS: TestClientDefaultHost (0.00s)\n[tests/test]   | === RUN   TestTokenDefaultHost\n[tests/test]   | --- PASS: TestTokenDefaultHost (0.01s)\n[tests/test]   | === RUN   TestClientDevelopmentHost\n[tests/test]   | --- PASS: TestClientDevelopmentHost (0.00s)\n[tests/test]   | === RUN   TestTokenClientDevelopmentHost\n[tests/test]   | --- PASS: TestTokenClientDevelopmentHost (0.00s)\n[tests/test]   | === RUN   TestClientProductionHost\n[tests/test]   | --- PASS: TestClientProductionHost (0.00s)\n[tests/test]   | === RUN   TestTokenClientProductionHost\n[tests/test]   | --- PASS: TestTokenClientProductionHost (0.00s)\n[tests/test]   | === RUN   TestClientBadUrlError\n[tests/test]   | --- PASS: TestClientBadUrlError (0.00s)\n[tests/test]   | === RUN   TestClientBadTransportError\n[tests/test]   | --- PASS: TestClientBadTransportError (0.00s)\n[tests/test]   | === RUN   TestClientBadDeviceToken\n[tests/test]   | --- PASS: TestClientBadDeviceToken (0.00s)\n[tests/test]   | === RUN   TestClientNameToCertificate\n[tests/test]   | --- PASS: TestClientNameToCertificate (0.05s)\n[tests/test]   | === RUN   TestDialTLSTimeout\n[tests/test]   | --- PASS: TestDialTLSTimeout (0.06s)\n[tests/test]   | === RUN   TestURL\n[tests/test]   | --- PASS: TestURL (0.03s)\n[tests/test]   | === RUN   TestDefaultHeaders\n[tests/test]   | --- PASS: TestDefaultHeaders (0.00s)\n[tests/test]   | === RUN   TestClientPushWithContextWithTimeout\n[tests/test]   | --- PASS: TestClientPushWithContextWithTimeout (0.00s)\n[tests/test]   | === RUN   TestClientPushWithContext\n[tests/test]   | --- PASS: TestClientPushWithContext (0.00s)\n[tests/test]   | === RUN   TestClientPushWithNilContext\n[tests/test]   | --- PASS: TestClientPushWithNilContext (0.00s)\n[tests/test]   | === RUN   TestHeaders\n[tests/test]   | --- PASS: TestHeaders (0.00s)\n[tests/test]   | === RUN   TestPushTypeAlertHeader\n[tests/test]   | --- PASS: TestPushTypeAlertHeader (0.00s)\n[tests/test]   | === RUN   TestPushTypeBackgroundHeader\n[tests/test]   | --- PASS: TestPushTypeBackgroundHeader (0.00s)\n[tests/test]   | === RUN   TestPushTypeLocationHeader\n[tests/test]   | --- PASS: TestPushTypeLocationHeader (0.00s)\n[tests/test]   | === RUN   TestPushTypeVOIPHeader\n[tests/test]   | --- PASS: TestPushTypeVOIPHeader (0.00s)\n[tests/test]   | === RUN   TestPushTypeComplicationHeader\n[tests/test]   | --- PASS: TestPushTypeComplicationHeader (0.00s)\n[tests/test]   | === RUN   TestPushTypeFileProviderHeader\n[tests/test]   | --- PASS: TestPushTypeFileProviderHeader (0.00s)\n[tests/test]   | === RUN   TestPushTypeMDMHeader\n[tests/test]   | --- PASS: TestPushTypeMDMHeader (0.00s)\n[tests/test]   | === RUN   TestAuthorizationHeader\n[tests/test]   | --- PASS: TestAuthorizationHeader (0.00s)\n[tests/test]   | === RUN   TestPayload\n[tests/test]   | --- PASS: TestPayload (0.00s)\n[tests/test]   | === RUN   TestBadPayload\n[tests/test]   | --- PASS: TestBadPayload (0.00s)\n[tests/test]   | === RUN   Test200SuccessResponse\n[tests/test]   | --- PASS: Test200SuccessResponse (0.00s)\n[tests/test]   | === RUN   Test400BadRequestPayloadEmptyResponse\n[tests/test]   | --- PASS: Test400BadRequestPayloadEmptyResponse (0.00s)\n[tests/test]   | === RUN   Test410UnregisteredResponse\n[tests/test]   | --- PASS: Test410UnregisteredResponse (0.00s)\n[tests/test]   | === RUN   TestMalformedJSONResponse\n[tests/test]   | --- PASS: TestMalformedJSONResponse (0.00s)\n[tests/test]   | === RUN   TestCloseIdleConnections\n[tests/test]   | --- PASS: TestCloseIdleConnections (0.00s)\n[tests/test]   | === RUN   TestMarshalJSON\n[tests/test]   | --- PASS: TestMarshalJSON (0.00s)\n[tests/test]   | === RUN   TestResponseSent\n[tests/test]   | --- PASS: TestResponseSent (0.00s)\n[tests/test]   | === RUN   TestIntTimestampParse\n[tests/test]   | --- PASS: TestIntTimestampParse (0.00s)\n[tests/test]   | === RUN   TestInvalidTimestampParse\n[tests/test]   | --- PASS: TestInvalidTimestampParse (0.00s)\n[tests/test]   | PASS\n[tests/test]   | coverage: 100.0% of statements\n[tests/test]   | ok  \tgithub.com/sideshow/apns2\t0.365s\tcoverage: 100.0% of statements\n[tests/test]   | ?   \tgithub.com/sideshow/apns2/apns2\t[no test files]\n[tests/test]   | === RUN   TestValidCertificateFromP12File\n[tests/test]   | --- PASS: TestValidCertificateFromP12File (0.06s)\n[tests/test]   | === RUN   TestValidCertificateFromP12Bytes\n[tests/test]   | --- PASS: TestValidCertificateFromP12Bytes (0.07s)\n[tests/test]   | === RUN   TestEncryptedValidCertificateFromP12File\n[tests/test]   | --- PASS: TestEncryptedValidCertificateFromP12File (0.07s)\n[tests/test]   | === RUN   TestNoSuchFileP12File\n[tests/test]   | --- PASS: TestNoSuchFileP12File (0.00s)\n[tests/test]   | === RUN   TestBadPasswordP12File\n[tests/test]   | --- PASS: TestBadPasswordP12File (0.02s)\n[tests/test]   | === RUN   TestValidCertificateFromPemFile\n[tests/test]   | --- PASS: TestValidCertificateFromPemFile (0.00s)\n[tests/test]   | === RUN   TestValidCertificateFromPemBytes\n[tests/test]   | --- PASS: TestValidCertificateFromPemBytes (0.00s)\n[tests/test]   | === RUN   TestValidCertificateFromPemFileWithPKCS8PrivateKey\n[tests/test]   | --- PASS: TestValidCertificateFromPemFileWithPKCS8PrivateKey (0.00s)\n[tests/test]   | === RUN   TestValidCertificateFromPemBytesWithPKCS8PrivateKey\n[tests/test]   | --- PASS: TestValidCertificateFromPemBytesWithPKCS8PrivateKey (0.00s)\n[tests/test]   | === RUN   TestEncryptedValidCertificateFromPemFile\n[tests/test]   | --- PASS: TestEncryptedValidCertificateFromPemFile (0.01s)\n[tests/test]   | === RUN   TestNoSuchFilePemFile\n[tests/test]   | --- PASS: TestNoSuchFilePemFile (0.00s)\n[tests/test]   | === RUN   TestBadPasswordPemFile\n[tests/test]   | --- PASS: TestBadPasswordPemFile (0.00s)\n[tests/test]   | === RUN   TestBadKeyPemFile\n[tests/test]   | --- PASS: TestBadKeyPemFile (0.00s)\n[tests/test]   | === RUN   TestNoKeyPemFile\n[tests/test]   | --- PASS: TestNoKeyPemFile (0.00s)\n[tests/test]   | === RUN   TestNoCertificatePemFile\n[tests/test]   | --- PASS: TestNoCertificatePemFile (0.00s)\n[tests/test]   | PASS\n[tests/test]   | coverage: 100.0% of statements\n[tests/test]   | ok  \tgithub.com/sideshow/apns2/certificate\t0.305s\tcoverage: 100.0% of statements\n[tests/test]   | === RUN   TestEmptyPayload\n[tests/test]   | --- PASS: TestEmptyPayload (0.00s)\n[tests/test]   | === RUN   TestAlert\n[tests/test]   | --- PASS: TestAlert (0.00s)\n[tests/test]   | === RUN   TestBadge\n[tests/test]   | --- PASS: TestBadge (0.00s)\n[tests/test]   | === RUN   TestZeroBadge\n[tests/test]   | --- PASS: TestZeroBadge (0.00s)\n[tests/test]   | === RUN   TestUnsetBadge\n[tests/test]   | --- PASS: TestUnsetBadge (0.00s)\n[tests/test]   | === RUN   TestSound\n[tests/test]   | --- PASS: TestSound (0.00s)\n[tests/test]   | === RUN   TestSoundDictionary\n[tests/test]   | --- PASS: TestSoundDictionary (0.00s)\n[tests/test]   | === RUN   TestContentAvailable\n[tests/test]   | --- PASS: TestContentAvailable (0.00s)\n[tests/test]   | === RUN   TestMutableContent\n[tests/test]   | --- PASS: TestMutableContent (0.00s)\n[tests/test]   | === RUN   TestCustom\n[tests/test]   | --- PASS: TestCustom (0.00s)\n[tests/test]   | === RUN   TestCustomMap\n[tests/test]   | --- PASS: TestCustomMap (0.00s)\n[tests/test]   | === RUN   TestAlertTitle\n[tests/test]   | --- PASS: TestAlertTitle (0.00s)\n[tests/test]   | === RUN   TestAlertTitleLocKey\n[tests/test]   | --- PASS: TestAlertTitleLocKey (0.00s)\n[tests/test]   | === RUN   TestAlertLocArgs\n[tests/test]   | --- PASS: TestAlertLocArgs (0.00s)\n[tests/test]   | === RUN   TestAlertTitleLocArgs\n[tests/test]   | --- PASS: TestAlertTitleLocArgs (0.00s)\n[tests/test]   | === RUN   TestAlertSubtitle\n[tests/test]   | --- PASS: TestAlertSubtitle (0.00s)\n[tests/test]   | === RUN   TestAlertBody\n[tests/test]   | --- PASS: TestAlertBody (0.00s)\n[tests/test]   | === RUN   TestAlertLaunchImage\n[tests/test]   | --- PASS: TestAlertLaunchImage (0.00s)\n[tests/test]   | === RUN   TestAlertLocKey\n[tests/test]   | --- PASS: TestAlertLocKey (0.00s)\n[tests/test]   | === RUN   TestAlertAction\n[tests/test]   | --- PASS: TestAlertAction (0.00s)\n[tests/test]   | === RUN   TestAlertActionLocKey\n[tests/test]   | --- PASS: TestAlertActionLocKey (0.00s)\n[tests/test]   | === RUN   TestCategory\n[tests/test]   | --- PASS: TestCategory (0.00s)\n[tests/test]   | === RUN   TestMdm\n[tests/test]   | --- PASS: TestMdm (0.00s)\n[tests/test]   | === RUN   TestThreadID\n[tests/test]   | --- PASS: TestThreadID (0.00s)\n[tests/test]   | === RUN   TestURLArgs\n[tests/test]   | --- PASS: TestURLArgs (0.00s)\n[tests/test]   | === RUN   TestSoundName\n[tests/test]   | --- PASS: TestSoundName (0.00s)\n[tests/test]   | === RUN   TestSoundVolume\n[tests/test]   | --- PASS: TestSoundVolume (0.00s)\n[tests/test]   | === RUN   TestAlertSummaryArg\n[tests/test]   | --- PASS: TestAlertSummaryArg (0.00s)\n[tests/test]   | === RUN   TestAlertSummaryArgCount\n[tests/test]   | --- PASS: TestAlertSummaryArgCount (0.00s)\n[tests/test]   | === RUN   TestInterruptionLevelPassive\n[tests/test]   | --- PASS: TestInterruptionLevelPassive (0.00s)\n[tests/test]   | === RUN   TestInterruptionLevelActive\n[tests/test]   | --- PASS: TestInterruptionLevelActive (0.00s)\n[tests/test]   | === RUN   TestInterruptionLevelTimeSensitive\n[tests/test]   | --- PASS: TestInterruptionLevelTimeSensitive (0.00s)\n[tests/test]   | === RUN   TestInterruptionLevelCritical\n[tests/test]   | --- PASS: TestInterruptionLevelCritical (0.00s)\n[tests/test]   | === RUN   TestRelevanceScore\n[tests/test]   | --- PASS: TestRelevanceScore (0.00s)\n[tests/test]   | === RUN   TestRelevanceScoreZero\n[tests/test]   | --- PASS: TestRelevanceScoreZero (0.00s)\n[tests/test]   | === RUN   TestUnsetRelevanceScore\n[tests/test]   | --- PASS: TestUnsetRelevanceScore (0.00s)\n[tests/test]   | === RUN   TestCombined\n[tests/test]   | --- PASS: TestCombined (0.00s)\n[tests/test]   | PASS\n[tests/test]   | coverage: 100.0% of statements\n[tests/test]   | ok  \tgithub.com/sideshow/apns2/payload\t0.090s\tcoverage: 100.0% of statements\n[tests/test]   | === RUN   TestValidTokenFromP8File\n[tests/test]   | --- PASS: TestValidTokenFromP8File (0.03s)\n[tests/test]   | === RUN   TestValidTokenFromP8Bytes\n[tests/test]   | --- PASS: TestValidTokenFromP8Bytes (0.00s)\n[tests/test]   | === RUN   TestNoSuchFileP8File\n[tests/test]   | --- PASS: TestNoSuchFileP8File (0.00s)\n[tests/test]   | === RUN   TestInvalidP8File\n[tests/test]   | --- PASS: TestInvalidP8File (0.00s)\n[tests/test]   | === RUN   TestInvalidPKCS8P8File\n[tests/test]   | --- PASS: TestInvalidPKCS8P8File (0.00s)\n[tests/test]   | === RUN   TestInvalidECDSAP8File\n[tests/test]   | --- PASS: TestInvalidECDSAP8File (0.00s)\n[tests/test]   | === RUN   TestExpired\n[tests/test]   | --- PASS: TestExpired (0.00s)\n[tests/test]   | === RUN   TestNotExpired\n[tests/test]   | --- PASS: TestNotExpired (0.00s)\n[tests/test]   | === RUN   TestExpiresBeforeAnHour\n[tests/test]   | --- PASS: TestExpiresBeforeAnHour (0.00s)\n[tests/test]   | === RUN   TestGenerateIfExpired\n[tests/test]   | --- PASS: TestGenerateIfExpired (0.00s)\n[tests/test]   | === RUN   TestGenerateWithNoAuthKey\n[tests/test]   | --- PASS: TestGenerateWithNoAuthKey (0.00s)\n[tests/test]   | === RUN   TestGenerateWithInvalidAuthKey\n[tests/test]   | --- PASS: TestGenerateWithInvalidAuthKey (0.30s)\n[tests/test]   | PASS\n[tests/test]   | coverage: 100.0% of statements\n[tests/test]   | ok  \tgithub.com/sideshow/apns2/token\t0.409s\tcoverage: 100.0% of statements\n[tests/test]   \u2705  Success - Main Run tests\n[tests/test] \u2b50 Run Main Update coverage\n[tests/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[tests/test]   | bad response status from coveralls: 422\n[tests/test]   | {\"message\":\"Couldn't find a repository matching this job.\",\"error\":true}\n[tests/test]   \u274c  Failure - Main Update coverage\n[tests/test] exitcode '1': failure\n[tests/test] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'test' failed\n"
}