{
    "repository": "klauspost/cpuid",
    "clone_url": "https://github.com/klauspost/cpuid.git",
    "timestamp": "2023-05-30T11:08:48.570601Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Go/build        ] \ud83d\ude80  Start image=crawlergpt:latest\n[Go/build-special] \ud83d\ude80  Start image=crawlergpt:latest\n[Go/build        ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Go/build-special]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Go/build        ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/build-special]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/build-special]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Go/build-special]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/c66e4e10-fed3-11ed-a890-af2cc187fc11/klauspost-cpuid] user=0 workdir=\n[Go/build-special]   \u2601  git clone 'https://github.com/actions/setup-go' # ref=v2\n[Go/build-special] \u2b50 Run Main Set up Go\n[Go/build-special]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-go@v2/ dst=/var/run/act/actions/actions-setup-go@v2/\n[Go/build-special]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-go@v2/] user=0 workdir=\n[Go/build-special]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-go@v2/dist/index.js] user= workdir=\n[Go/build-special]   | Setup go stable version spec 1.19.x\n[Go/build-special]   \ud83d\udcac  ::debug::isExplicit: \n[Go/build-special]   \ud83d\udcac  ::debug::explicit? false\n[Go/build-special]   \ud83d\udcac  ::debug::isExplicit: 1.14.15\n[Go/build-special]   \ud83d\udcac  ::debug::explicit? true\n[Go/build-special]   \ud83d\udcac  ::debug::isExplicit: 1.15.15\n[Go/build-special]   \ud83d\udcac  ::debug::explicit? true\n[Go/build-special]   \ud83d\udcac  ::debug::isExplicit: 1.16.7\n[Go/build-special]   \ud83d\udcac  ::debug::explicit? true\n[Go/build-special]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Go/build-special]   \ud83d\udcac  ::debug::match not found\n[Go/build-special]   | Attempting to download 1.19.x...\n[Go/build-special]   | API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Go/build-special]   \ud83d\udcac  ::debug::Error: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)%0A    at /run/act/actions/actions-setup-go@v2/dist/index.js:5294:27%0A    at processTicksAndRejections (internal/process/task_queues.js:95:5)\n[Go/build-special]   | Falling back to download directly from Go\n[Go/build-special]   \ud83d\udcac  ::debug::check 1.20.4 satisfies 1.19.x\n[Go/build-special]   \ud83d\udcac  ::debug::check 1.20.3 satisfies 1.19.x\n[Go/build-special]   \ud83d\udcac  ::debug::check 1.20.2 satisfies 1.19.x\n[Go/build-special]   \ud83d\udcac  ::debug::check 1.20.1 satisfies 1.19.x\n[Go/build-special]   \ud83d\udcac  ::debug::check 1.20.0 satisfies 1.19.x\n[Go/build-special]   \ud83d\udcac  ::debug::check 1.20.0-rc3 satisfies 1.19.x\n[Go/build-special]   \ud83d\udcac  ::debug::check 1.20.0-rc2 satisfies 1.19.x\n[Go/build-special]   \ud83d\udcac  ::debug::check 1.20.0-rc1 satisfies 1.19.x\n[Go/build-special]   \ud83d\udcac  ::debug::check 1.19.9 satisfies 1.19.x\n[Go/build-special]   \ud83d\udcac  ::debug::===amd64 && ===linux\n[Go/build-special]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Go/build-special]   \ud83d\udcac  ::debug::amd64===amd64 && darwin===linux\n[Go/build-special]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Go/build-special]   \ud83d\udcac  ::debug::arm64===amd64 && darwin===linux\n[Go/build-special]   \ud83d\udcac  ::debug::386===amd64 && freebsd===linux\n[Go/build-special]   \ud83d\udcac  ::debug::amd64===amd64 && freebsd===linux\n[Go/build-special]   \ud83d\udcac  ::debug::386===amd64 && linux===linux\n[Go/build-special]   \ud83d\udcac  ::debug::amd64===amd64 && linux===linux\n[Go/build-special]   \ud83d\udcac  ::debug::matched go1.19.9\n[Go/build-special]   | Install from dist\n[Go/build-special]   | Acquiring go1.19.9 from https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[Go/build-special]   \ud83d\udcac  ::debug::Downloading https://storage.googleapis.com/golang/go1.19.9.linux-amd64.tar.gz\n[Go/build-special]   \ud83d\udcac  ::debug::Destination /tmp/ad25d1c0-dc70-4359-a388-3c71b2c305e9\n[Go/build-special]   \ud83d\udcac  ::debug::download complete\n[Go/build-special]   | Extracting Go...\n[Go/build-special]   \ud83d\udcac  ::debug::Checking tar --version\n[Go/build-special]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[Go/build-special]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/569f7ca9-0552-4b6a-a7d5-e924ce969724 -f /tmp/ad25d1c0-dc70-4359-a388-3c71b2c305e9\n[Go/build-special]   | Successfully extracted go to /tmp/569f7ca9-0552-4b6a-a7d5-e924ce969724\n[Go/build-special]   | Adding to the cache ...\n[Go/build-special]   \ud83d\udcac  ::debug::Caching tool go 1.19.9 x64\n[Go/build-special]   \ud83d\udcac  ::debug::source dir: /tmp/569f7ca9-0552-4b6a-a7d5-e924ce969724/go\n[Go/build-special]   \ud83d\udcac  ::debug::destination /opt/hostedtoolcache/go/1.19.9/x64\n[Go/build-special]   \u274c  Failure - Main Set up Go\n[Go/build-special] Error response from daemon: Could not find the file /var/run/act/workflow/pathcmd.txt in container ec752c11e8c3da35320dc2da92d9fa58516584e041b940859b085021d7cdedb9\n[Go/build-special] failed to remove container: Error response from daemon: No such container: ec752c11e8c3da35320dc2da92d9fa58516584e041b940859b085021d7cdedb9\n[Go/build-special] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: failed to create container: 'Error response from daemon: Conflict. The container name \"/act-Go-build-071539628d24dcadcd374902e705ab0d223ffb4bca4cd4816d296fb408d6c7fe\" is already in use by container \"f042f5c8d571393bf58e6493b83055a40faf2dd7f0f0710f939507f0bc6d7f07\". You have to remove (or rename) that container to be able to reuse that name.'\n"
}