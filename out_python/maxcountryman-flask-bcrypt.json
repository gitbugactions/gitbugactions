{
    "repository": "maxcountryman/flask-bcrypt",
    "clone_url": "https://github.com/maxcountryman/flask-bcrypt.git",
    "timestamp": "2023-05-29T14:12:34.186893Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Tests/Run Tests with Python 3.7] \ud83d\ude80  Start image=crawlergpt:latest\n[Tests/Run Tests with Python 3.7]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Tests/Run Tests with Python 3.7]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/Run Tests with Python 3.7]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/Run Tests with Python 3.7]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/maxcountryman-flask-bcrypt] user=0 workdir=\n[Tests/Run Tests with Python 3.7]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v3\n[Tests/Run Tests with Python 3.7] \ud83e\uddea  Matrix: map[python-version:3.7]\n[Tests/Run Tests with Python 3.7] \u2b50 Run Main Checkout\n[Tests/Run Tests with Python 3.7]   \u2705  Success - Main Checkout\n[Tests/Run Tests with Python 3.7] \u2b50 Run Main Set up Python\n[Tests/Run Tests with Python 3.7]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v3/ dst=/var/run/act/actions/actions-setup-python@v3/\n[Tests/Run Tests with Python 3.7]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v3/] user=0 workdir=\n[Tests/Run Tests with Python 3.7]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/setup/index.js] user= workdir=\n[Tests/Run Tests with Python 3.7]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[Tests/Run Tests with Python 3.7]   \ud83d\udcac  ::debug::isExplicit: \n[Tests/Run Tests with Python 3.7]   \ud83d\udcac  ::debug::explicit? false\n[Tests/Run Tests with Python 3.7]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Tests/Run Tests with Python 3.7]   \ud83d\udcac  ::debug::explicit? true\n[Tests/Run Tests with Python 3.7]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Tests/Run Tests with Python 3.7]   \ud83d\udcac  ::debug::explicit? true\n[Tests/Run Tests with Python 3.7]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Tests/Run Tests with Python 3.7]   \ud83d\udcac  ::debug::explicit? true\n[Tests/Run Tests with Python 3.7]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Tests/Run Tests with Python 3.7]   \ud83d\udcac  ::debug::explicit? true\n[Tests/Run Tests with Python 3.7]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Tests/Run Tests with Python 3.7]   \ud83d\udcac  ::debug::explicit? true\n[Tests/Run Tests with Python 3.7]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Tests/Run Tests with Python 3.7]   \ud83d\udcac  ::debug::explicit? true\n[Tests/Run Tests with Python 3.7]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Tests/Run Tests with Python 3.7]   \ud83d\udcac  ::debug::matched: 3.7.11\n[Tests/Run Tests with Python 3.7]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[Tests/Run Tests with Python 3.7]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[Tests/Run Tests with Python 3.7]   | Successfully setup CPython (3.7.11)\n[Tests/Run Tests with Python 3.7]   \u2753 add-matcher /run/act/actions/actions-setup-python@v3/.github/python.json\n[Tests/Run Tests with Python 3.7]   \u2705  Success - Main Set up Python\n[Tests/Run Tests with Python 3.7]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[Tests/Run Tests with Python 3.7]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[Tests/Run Tests with Python 3.7]   \u2699  ::set-output:: python-version=3.7.11\n[Tests/Run Tests with Python 3.7]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[Tests/Run Tests with Python 3.7]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[Tests/Run Tests with Python 3.7] \u2b50 Run Main Install Dependencies\n[Tests/Run Tests with Python 3.7]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Tests/Run Tests with Python 3.7]   | Collecting flask\n[Tests/Run Tests with Python 3.7]   |   Downloading Flask-2.2.5-py3-none-any.whl (101 kB)\n[Tests/Run Tests with Python 3.7]   | Collecting nose\n[Tests/Run Tests with Python 3.7]   |   Downloading nose-1.3.7-py3-none-any.whl (154 kB)\n[Tests/Run Tests with Python 3.7]   | Collecting importlib-metadata>=3.6.0\n[Tests/Run Tests with Python 3.7]   |   Downloading importlib_metadata-6.6.0-py3-none-any.whl (22 kB)\n[Tests/Run Tests with Python 3.7]   | Collecting itsdangerous>=2.0\n[Tests/Run Tests with Python 3.7]   |   Downloading itsdangerous-2.1.2-py3-none-any.whl (15 kB)\n[Tests/Run Tests with Python 3.7]   | Collecting click>=8.0\n[Tests/Run Tests with Python 3.7]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[Tests/Run Tests with Python 3.7]   | Collecting Jinja2>=3.0\n[Tests/Run Tests with Python 3.7]   |   Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)\n[Tests/Run Tests with Python 3.7]   | Collecting Werkzeug>=2.2.2\n[Tests/Run Tests with Python 3.7]   |   Downloading Werkzeug-2.2.3-py3-none-any.whl (233 kB)\n[Tests/Run Tests with Python 3.7]   | Collecting typing-extensions>=3.6.4\n[Tests/Run Tests with Python 3.7]   |   Downloading typing_extensions-4.6.2-py3-none-any.whl (31 kB)\n[Tests/Run Tests with Python 3.7]   | Collecting zipp>=0.5\n[Tests/Run Tests with Python 3.7]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[Tests/Run Tests with Python 3.7]   | Collecting MarkupSafe>=2.0\n[Tests/Run Tests with Python 3.7]   |   Downloading MarkupSafe-2.1.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)\n[Tests/Run Tests with Python 3.7]   | Installing collected packages: zipp, typing-extensions, MarkupSafe, importlib-metadata, Werkzeug, Jinja2, itsdangerous, click, nose, flask\n[Tests/Run Tests with Python 3.7]   | Successfully installed Jinja2-3.1.2 MarkupSafe-2.1.2 Werkzeug-2.2.3 click-8.1.3 flask-2.2.5 importlib-metadata-6.6.0 itsdangerous-2.1.2 nose-1.3.7 typing-extensions-4.6.2 zipp-3.15.0\n[Tests/Run Tests with Python 3.7]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[Tests/Run Tests with Python 3.7]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[Tests/Run Tests with Python 3.7]   \u2705  Success - Main Install Dependencies\n[Tests/Run Tests with Python 3.7] \u2b50 Run Main Unit tests\n[Tests/Run Tests with Python 3.7]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Tests/Run Tests with Python 3.7]   | running test\n[Tests/Run Tests with Python 3.7]   | WARNING: Testing via this command is deprecated and will be removed in a future version. Users looking for a generic test entry point independent of test runner are encouraged to use tox.\n[Tests/Run Tests with Python 3.7]   | WARNING: The wheel package is not available.\n[Tests/Run Tests with Python 3.7]   | running egg_info\n[Tests/Run Tests with Python 3.7]   | creating Flask_Bcrypt.egg-info\n[Tests/Run Tests with Python 3.7]   | writing Flask_Bcrypt.egg-info/PKG-INFO\n[Tests/Run Tests with Python 3.7]   | writing dependency_links to Flask_Bcrypt.egg-info/dependency_links.txt\n[Tests/Run Tests with Python 3.7]   | writing requirements to Flask_Bcrypt.egg-info/requires.txt\n[Tests/Run Tests with Python 3.7]   | writing top-level names to Flask_Bcrypt.egg-info/top_level.txt\n[Tests/Run Tests with Python 3.7]   | writing manifest file 'Flask_Bcrypt.egg-info/SOURCES.txt'\n[Tests/Run Tests with Python 3.7]   | reading manifest file 'Flask_Bcrypt.egg-info/SOURCES.txt'\n[Tests/Run Tests with Python 3.7]   | reading manifest template 'MANIFEST.in'\n[Tests/Run Tests with Python 3.7]   | writing manifest file 'Flask_Bcrypt.egg-info/SOURCES.txt'\n[Tests/Run Tests with Python 3.7]   | running build_ext\n[Tests/Run Tests with Python 3.7]   | test_check_hash (test_bcrypt.BasicTestCase) ... ok\n[Tests/Run Tests with Python 3.7]   | test_check_hash_unicode_is_utf8 (test_bcrypt.BasicTestCase) ... ok\n[Tests/Run Tests with Python 3.7]   | test_custom_rounds (test_bcrypt.BasicTestCase) ... ok\n[Tests/Run Tests with Python 3.7]   | test_is_string (test_bcrypt.BasicTestCase) ... ok\n[Tests/Run Tests with Python 3.7]   | test_long_password (test_bcrypt.BasicTestCase)\n[Tests/Run Tests with Python 3.7]   | Test bcrypt maximum password length. ... ok\n[Tests/Run Tests with Python 3.7]   | test_rounds_set (test_bcrypt.BasicTestCase) ... ok\n[Tests/Run Tests with Python 3.7]   | test_unicode_hash (test_bcrypt.BasicTestCase) ... ok\n[Tests/Run Tests with Python 3.7]   | test_check_hash (test_bcrypt.LongPasswordsTestCase) ... ok\n[Tests/Run Tests with Python 3.7]   | test_check_hash_unicode_is_utf8 (test_bcrypt.LongPasswordsTestCase) ... ok\n[Tests/Run Tests with Python 3.7]   | test_custom_rounds (test_bcrypt.LongPasswordsTestCase) ... ok\n[Tests/Run Tests with Python 3.7]   | test_is_string (test_bcrypt.LongPasswordsTestCase) ... ok\n[Tests/Run Tests with Python 3.7]   | test_long_password (test_bcrypt.LongPasswordsTestCase)\n[Tests/Run Tests with Python 3.7]   | Test the work around bcrypt maximum password length. ... ok\n[Tests/Run Tests with Python 3.7]   | test_rounds_set (test_bcrypt.LongPasswordsTestCase) ... ok\n[Tests/Run Tests with Python 3.7]   | test_unicode_hash (test_bcrypt.LongPasswordsTestCase) ... ok\n[Tests/Run Tests with Python 3.7]   | \n[Tests/Run Tests with Python 3.7]   | ----------------------------------------------------------------------\n[Tests/Run Tests with Python 3.7]   | Ran 14 tests in 2.202s\n[Tests/Run Tests with Python 3.7]   | \n[Tests/Run Tests with Python 3.7]   | OK\n[Tests/Run Tests with Python 3.7]   \u2705  Success - Main Unit tests\n[Tests/Run Tests with Python 3.7] \u2b50 Run Post Set up Python\n[Tests/Run Tests with Python 3.7]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/cache-save/index.js] user= workdir=\n[Tests/Run Tests with Python 3.7]   \u2705  Success - Post Set up Python\n[Tests/Run Tests with Python 3.7] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}