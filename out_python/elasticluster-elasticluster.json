{
    "repository": "elasticluster/elasticluster",
    "clone_url": "https://github.com/elasticluster/elasticluster.git",
    "timestamp": "2023-05-29T14:45:24.581971Z",
    "clone_success": true,
    "number of actions": 4,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Tests/Run Unit Tests                     ] \ud83d\ude80  Start image=crawlergpt:latest\n[Tests/Test installation on different OSes] \ud83d\ude80  Start image=crawlergpt:latest\n[Tests/Test installation on different OSes]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Tests/Run Unit Tests                     ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Tests/Run Unit Tests                     ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/Test installation on different OSes]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/Run Unit Tests                     ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/Test installation on different OSes]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/Run Unit Tests                     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/elasticluster-elasticluster] user=0 workdir=\n[Tests/Test installation on different OSes]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/elasticluster-elasticluster] user=0 workdir=\n[Tests/Test installation on different OSes] \ud83e\uddea  Matrix: map[env:map[os:ubuntu-latest path:/home/runner/.local/bin prerequisites:'setuptools>=21' 'pip>=9.0.0']]\n[Tests/Run Unit Tests                     ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[Tests/Test installation on different OSes] \u2b50 Run Main Show Python location and version\n[Tests/Run Unit Tests                     ]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v1\n[Tests/Run Unit Tests                     ] \ud83e\uddea  Matrix: map[prerequisites:'setuptools<=44.1.1' 'pip==20.3.3' python:2.7]\n[Tests/Test installation on different OSes]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/0] user= workdir=\n[Tests/Run Unit Tests                     ] \u2b50 Run Main Show Python location and version\n[Tests/Run Unit Tests                     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/0] user= workdir=\n[Tests/Test installation on different OSes]   | Python executable: /usr/local/bin/python\n[Tests/Test installation on different OSes]   | Python version: Python 3.8.10\n[Tests/Test installation on different OSes]   \u2705  Success - Main Show Python location and version\n[Tests/Run Unit Tests                     ]   | Python executable: /usr/local/bin/python\n[Tests/Run Unit Tests                     ]   | Python version: Python 3.8.10\n[Tests/Run Unit Tests                     ]   \u2705  Success - Main Show Python location and version\n[Tests/Test installation on different OSes] \u2b50 Run Main Checkout ElastiCluster sources\n[Tests/Run Unit Tests                     ] \u2b50 Run Main Checkout ElastiCluster sources\n[Tests/Test installation on different OSes]   \u2705  Success - Main Checkout ElastiCluster sources\n[Tests/Run Unit Tests                     ]   \u2705  Success - Main Checkout ElastiCluster sources\n[Tests/Test installation on different OSes] \u2b50 Run Main Install `pip` and `setuptools`\n[Tests/Run Unit Tests                     ] \u2b50 Run Main actions/setup-python@v2\n[Tests/Run Unit Tests                     ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[Tests/Run Unit Tests                     ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[Tests/Test installation on different OSes]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Tests/Run Unit Tests                     ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[Tests/Test installation on different OSes]   | Collecting setuptools>=21\n[Tests/Test installation on different OSes]   |   Downloading setuptools-67.8.0-py3-none-any.whl (1.1 MB)\n[Tests/Test installation on different OSes]   | Collecting pip>=9.0.0\n[Tests/Test installation on different OSes]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[Tests/Test installation on different OSes]   | Installing collected packages: setuptools, pip\n[Tests/Test installation on different OSes]   |   WARNING: The scripts pip, pip3, pip3.10 and pip3.8 are installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[Tests/Test installation on different OSes]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[Tests/Test installation on different OSes]   | Successfully installed pip-23.1.2 setuptools-67.8.0\n[Tests/Test installation on different OSes]   \u2705  Success - Main Install `pip` and `setuptools`\n[Tests/Test installation on different OSes] \u2b50 Run Main Install ElastiCluster from sources\n[Tests/Test installation on different OSes]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Tests/Run Unit Tests                     ]   \ud83d\udcac  ::debug::Semantic version spec of 2.7 is 2.7\n[Tests/Run Unit Tests                     ]   \ud83d\udcac  ::debug::isExplicit: \n[Tests/Run Unit Tests                     ]   \ud83d\udcac  ::debug::explicit? false\n[Tests/Run Unit Tests                     ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Tests/Run Unit Tests                     ]   \ud83d\udcac  ::debug::explicit? true\n[Tests/Run Unit Tests                     ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Tests/Run Unit Tests                     ]   \ud83d\udcac  ::debug::explicit? true\n[Tests/Run Unit Tests                     ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Tests/Run Unit Tests                     ]   \ud83d\udcac  ::debug::explicit? true\n[Tests/Run Unit Tests                     ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Tests/Run Unit Tests                     ]   \ud83d\udcac  ::debug::explicit? true\n[Tests/Run Unit Tests                     ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Tests/Run Unit Tests                     ]   \ud83d\udcac  ::debug::explicit? true\n[Tests/Run Unit Tests                     ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Tests/Run Unit Tests                     ]   \ud83d\udcac  ::debug::explicit? true\n[Tests/Run Unit Tests                     ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Tests/Run Unit Tests                     ]   \ud83d\udcac  ::debug::matched: 2.7.18\n[Tests/Run Unit Tests                     ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/2.7.18/x64\n[Tests/Run Unit Tests                     ]   \ud83d\udcac  ::debug::Found tool in cache Python 2.7.18 x64\n[Tests/Run Unit Tests                     ]   | Successfully setup CPython (2.7.18)\n[Tests/Run Unit Tests                     ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[Tests/Run Unit Tests                     ]   \u2705  Success - Main actions/setup-python@v2\n[Tests/Run Unit Tests                     ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/2.7.18/x64\n[Tests/Run Unit Tests                     ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/2.7.18/x64/lib\n[Tests/Run Unit Tests                     ]   \u2699  ::set-output:: python-version=2.7.18\n[Tests/Run Unit Tests                     ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64\n[Tests/Run Unit Tests                     ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64/bin\n[Tests/Test installation on different OSes]   | Processing /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/elasticluster-elasticluster\n[Tests/Run Unit Tests                     ] \u2b50 Run Main Install `pip` and `setuptools`\n[Tests/Run Unit Tests                     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Tests/Test installation on different OSes]   | Collecting future\n[Tests/Test installation on different OSes]   |   Downloading future-0.18.3.tar.gz (840 kB)\n[Tests/Test installation on different OSes]   | Requirement already satisfied: pip>=9.0.0 in /usr/lib/python3/dist-packages (from elasticluster==1.3.dev28) (20.0.2)\n[Tests/Test installation on different OSes]   | Collecting PyCLI\n[Tests/Test installation on different OSes]   |   Downloading pyCLI-2.0.3.tar.gz (49 kB)\n[Tests/Test installation on different OSes]   | Collecting ansible<2.10,>=2.7\n[Tests/Test installation on different OSes]   |   Downloading ansible-2.9.27.tar.gz (14.8 MB)\n[Tests/Test installation on different OSes]   | Requirement already satisfied: click>=4.0 in /usr/local/lib/python3.8/dist-packages (from elasticluster==1.3.dev28) (8.0.1)\n[Tests/Test installation on different OSes]   | Collecting coloredlogs\n[Tests/Test installation on different OSes]   |   Downloading coloredlogs-15.0.1-py2.py3-none-any.whl (46 kB)\n[Tests/Test installation on different OSes]   | Collecting netaddr\n[Tests/Test installation on different OSes]   |   Downloading netaddr-0.8.0-py2.py3-none-any.whl (1.9 MB)\n[Tests/Test installation on different OSes]   | Collecting paramiko>=2.7\n[Tests/Test installation on different OSes]   |   Downloading paramiko-3.2.0-py3-none-any.whl (224 kB)\n[Tests/Test installation on different OSes]   | Collecting schema\n[Tests/Test installation on different OSes]   |   Downloading schema-0.7.5-py2.py3-none-any.whl (17 kB)\n[Tests/Test installation on different OSes]   | Collecting subprocess32\n[Tests/Test installation on different OSes]   |   Downloading subprocess32-3.5.4.tar.gz (97 kB)\n[Tests/Test installation on different OSes]   | Collecting azure-common\n[Tests/Test installation on different OSes]   |   Downloading azure_common-1.1.28-py2.py3-none-any.whl (14 kB)\n[Tests/Test installation on different OSes]   | Collecting azure-mgmt-compute\n[Tests/Test installation on different OSes]   |   Downloading azure_mgmt_compute-30.0.0-py3-none-any.whl (4.9 MB)\n[Tests/Test installation on different OSes]   | Collecting azure-mgmt-network\n[Tests/Test installation on different OSes]   |   Downloading azure_mgmt_network-23.1.0-py3-none-any.whl (653 kB)\n[Tests/Test installation on different OSes]   | Collecting azure-mgmt-resource\n[Tests/Test installation on different OSes]   |   Downloading azure_mgmt_resource-23.0.1-py3-none-any.whl (2.5 MB)\n[Tests/Test installation on different OSes]   | Collecting msrestazure\n[Tests/Test installation on different OSes]   |   Downloading msrestazure-0.6.4-py2.py3-none-any.whl (40 kB)\n[Tests/Test installation on different OSes]   | Collecting boto>=2.48\n[Tests/Test installation on different OSes]   |   Downloading boto-2.49.0-py2.py3-none-any.whl (1.4 MB)\n[Tests/Test installation on different OSes]   | Collecting pycrypto\n[Tests/Test installation on different OSes]   |   Downloading pycrypto-2.6.1.tar.gz (446 kB)\n[Tests/Test installation on different OSes]   | Collecting google-api-python-client\n[Tests/Test installation on different OSes]   |   Downloading google_api_python_client-2.87.0-py2.py3-none-any.whl (11.4 MB)\n[Tests/Run Unit Tests                     ]   | DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support pip 21.0 will remove support for this functionality.\n[Tests/Test installation on different OSes]   | Collecting google-compute-engine\n[Tests/Test installation on different OSes]   |   Downloading google-compute-engine-2.8.13.tar.gz (46 kB)\n[Tests/Test installation on different OSes]   | Collecting oauth2client\n[Tests/Test installation on different OSes]   |   Downloading oauth2client-4.1.3-py2.py3-none-any.whl (98 kB)\n[Tests/Test installation on different OSes]   | Collecting python-gflags\n[Tests/Test installation on different OSes]   |   Downloading python-gflags-3.1.2.tar.gz (52 kB)\n[Tests/Test installation on different OSes]   | Collecting pytz\n[Tests/Test installation on different OSes]   |   Using cached pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[Tests/Test installation on different OSes]   | Collecting simplejson>=2.5.0\n[Tests/Test installation on different OSes]   |   Downloading simplejson-3.19.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (136 kB)\n[Tests/Test installation on different OSes]   | Collecting netifaces\n[Tests/Test installation on different OSes]   |   Downloading netifaces-0.11.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl (33 kB)\n[Tests/Test installation on different OSes]   | Collecting apache-libcloud>=0.14.0\n[Tests/Test installation on different OSes]   |   Downloading apache_libcloud-3.7.0-py2.py3-none-any.whl (4.2 MB)\n[Tests/Run Unit Tests                     ]   | Collecting setuptools<=44.1.1\n[Tests/Run Unit Tests                     ]   |   Downloading setuptools-44.1.1-py2.py3-none-any.whl (583 kB)\n[Tests/Run Unit Tests                     ]   | Collecting pip==20.3.3\n[Tests/Run Unit Tests                     ]   |   Downloading pip-20.3.3-py2.py3-none-any.whl (1.5 MB)\n[Tests/Run Unit Tests                     ]   | Installing collected packages: setuptools, pip\n[Tests/Run Unit Tests                     ]   |   Attempting uninstall: setuptools\n[Tests/Run Unit Tests                     ]   |     Found existing installation: setuptools 41.2.0\n[Tests/Run Unit Tests                     ]   |     Uninstalling setuptools-41.2.0:\n[Tests/Run Unit Tests                     ]   |       Successfully uninstalled setuptools-41.2.0\n[Tests/Test installation on different OSes]   | Requirement already satisfied: requests~=2.16 in /usr/lib/python3/dist-packages (from elasticluster==1.3.dev28) (2.22.0)\n[Tests/Test installation on different OSes]   | Collecting python-keystoneclient\n[Tests/Test installation on different OSes]   |   Downloading python_keystoneclient-5.1.0-py3-none-any.whl (398 kB)\n[Tests/Run Unit Tests                     ]   |   Attempting uninstall: pip\n[Tests/Run Unit Tests                     ]   |     Found existing installation: pip 20.3.4\n[Tests/Run Unit Tests                     ]   |     Uninstalling pip-20.3.4:\n[Tests/Test installation on different OSes]   | Collecting python-glanceclient\n[Tests/Test installation on different OSes]   |   Downloading python_glanceclient-4.3.0-py3-none-any.whl (205 kB)\n[Tests/Test installation on different OSes]   | Collecting python-neutronclient\n[Tests/Test installation on different OSes]   |   Downloading python_neutronclient-10.0.0-py3-none-any.whl (293 kB)\n[Tests/Test installation on different OSes]   | Collecting python-cinderclient\n[Tests/Test installation on different OSes]   |   Downloading python_cinderclient-9.3.0-py3-none-any.whl (255 kB)\n[Tests/Test installation on different OSes]   | Collecting python-novaclient\n[Tests/Test installation on different OSes]   |   Downloading python_novaclient-18.3.0-py3-none-any.whl (335 kB)\n[Tests/Test installation on different OSes]   | Collecting Babel!=2.4.0,>=2.3.4\n[Tests/Test installation on different OSes]   |   Using cached Babel-2.12.1-py3-none-any.whl (10.1 MB)\n[Tests/Run Unit Tests                     ]   |       Successfully uninstalled pip-20.3.4\n[Tests/Test installation on different OSes]   | Collecting pbr!=2.1.0,>=2.0.0\n[Tests/Test installation on different OSes]   |   Downloading pbr-5.11.1-py2.py3-none-any.whl (112 kB)\n[Tests/Test installation on different OSes]   | Collecting ipaddress\n[Tests/Test installation on different OSes]   |   Downloading ipaddress-1.0.23-py2.py3-none-any.whl (18 kB)\n[Tests/Test installation on different OSes]   | Collecting scandir\n[Tests/Test installation on different OSes]   |   Downloading scandir-1.10.0.tar.gz (33 kB)\n[Tests/Test installation on different OSes]   | Collecting secretstorage<=2.3.1\n[Tests/Test installation on different OSes]   |   Downloading SecretStorage-2.3.1.tar.gz (16 kB)\n[Tests/Run Unit Tests                     ]   | Successfully installed pip-20.3.3 setuptools-44.1.1\n[Tests/Test installation on different OSes]   | Collecting jinja2\n[Tests/Test installation on different OSes]   |   Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)\n[Tests/Test installation on different OSes]   | Requirement already satisfied: PyYAML in /usr/lib/python3/dist-packages (from ansible<2.10,>=2.7->elasticluster==1.3.dev28) (5.3.1)\n[Tests/Run Unit Tests                     ]   \u2705  Success - Main Install `pip` and `setuptools`\n[Tests/Run Unit Tests                     ] \u2b50 Run Main Install ElastiCluster from sources\n[Tests/Test installation on different OSes]   | Collecting cryptography\n[Tests/Test installation on different OSes]   |   Downloading cryptography-40.0.2-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.7 MB)\n[Tests/Run Unit Tests                     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Tests/Test installation on different OSes]   | Collecting humanfriendly>=9.1\n[Tests/Test installation on different OSes]   |   Downloading humanfriendly-10.0-py2.py3-none-any.whl (86 kB)\n[Tests/Test installation on different OSes]   | Collecting bcrypt>=3.2\n[Tests/Test installation on different OSes]   |   Downloading bcrypt-4.0.1-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (593 kB)\n[Tests/Test installation on different OSes]   | Collecting pynacl>=1.5\n[Tests/Test installation on different OSes]   |   Downloading PyNaCl-1.5.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (856 kB)\n[Tests/Test installation on different OSes]   | Collecting contextlib2>=0.5.5\n[Tests/Test installation on different OSes]   |   Downloading contextlib2-21.6.0-py2.py3-none-any.whl (13 kB)\n[Tests/Test installation on different OSes]   | Collecting isodate<1.0.0,>=0.6.1\n[Tests/Test installation on different OSes]   |   Downloading isodate-0.6.1-py2.py3-none-any.whl (41 kB)\n[Tests/Test installation on different OSes]   | Collecting azure-mgmt-core<2.0.0,>=1.3.2\n[Tests/Test installation on different OSes]   |   Downloading azure_mgmt_core-1.4.0-py3-none-any.whl (27 kB)\n[Tests/Test installation on different OSes]   | Collecting msrest<2.0.0,>=0.6.0\n[Tests/Test installation on different OSes]   |   Downloading msrest-0.7.1-py3-none-any.whl (85 kB)\n[Tests/Test installation on different OSes]   | Collecting adal<2.0.0,>=0.6.0\n[Tests/Test installation on different OSes]   |   Downloading adal-1.2.7-py2.py3-none-any.whl (55 kB)\n[Tests/Test installation on different OSes]   | Requirement already satisfied: six in /usr/lib/python3/dist-packages (from msrestazure->elasticluster==1.3.dev28) (1.14.0)\n[Tests/Test installation on different OSes]   | Collecting httplib2<1dev,>=0.15.0\n[Tests/Test installation on different OSes]   |   Downloading httplib2-0.22.0-py3-none-any.whl (96 kB)\n[Tests/Test installation on different OSes]   | Collecting google-auth<3.0.0dev,>=1.19.0\n[Tests/Test installation on different OSes]   |   Downloading google_auth-2.19.0-py2.py3-none-any.whl (181 kB)\n[Tests/Test installation on different OSes]   | Collecting google-auth-httplib2>=0.1.0\n[Tests/Test installation on different OSes]   |   Downloading google_auth_httplib2-0.1.0-py2.py3-none-any.whl (9.3 kB)\n[Tests/Test installation on different OSes]   | Collecting google-api-core!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.0,<3.0.0dev,>=1.31.5\n[Tests/Test installation on different OSes]   |   Downloading google_api_core-2.11.0-py3-none-any.whl (120 kB)\n[Tests/Test installation on different OSes]   | Collecting uritemplate<5,>=3.0.1\n[Tests/Test installation on different OSes]   |   Downloading uritemplate-4.1.1-py2.py3-none-any.whl (10 kB)\n[Tests/Test installation on different OSes]   | Requirement already satisfied: setuptools in /home/runneradmin/.local/lib/python3.8/site-packages (from google-compute-engine->elasticluster==1.3.dev28) (67.8.0)\n[Tests/Test installation on different OSes]   | Collecting distro\n[Tests/Test installation on different OSes]   |   Downloading distro-1.8.0-py3-none-any.whl (20 kB)\n[Tests/Test installation on different OSes]   | Collecting pyasn1>=0.1.7\n[Tests/Test installation on different OSes]   |   Downloading pyasn1-0.5.0-py2.py3-none-any.whl (83 kB)\n[Tests/Test installation on different OSes]   | Collecting pyasn1-modules>=0.0.5\n[Tests/Test installation on different OSes]   |   Downloading pyasn1_modules-0.3.0-py2.py3-none-any.whl (181 kB)\n[Tests/Test installation on different OSes]   | Collecting rsa>=3.1.4\n[Tests/Test installation on different OSes]   |   Downloading rsa-4.9-py3-none-any.whl (34 kB)\n[Tests/Test installation on different OSes]   | Collecting debtcollector>=1.2.0\n[Tests/Test installation on different OSes]   |   Downloading debtcollector-2.5.0-py3-none-any.whl (23 kB)\n[Tests/Test installation on different OSes]   | Collecting keystoneauth1>=3.4.0\n[Tests/Test installation on different OSes]   |   Downloading keystoneauth1-5.2.0-py3-none-any.whl (322 kB)\n[Tests/Test installation on different OSes]   | Collecting oslo.config>=5.2.0\n[Tests/Test installation on different OSes]   |   Downloading oslo.config-9.1.1-py3-none-any.whl (128 kB)\n[Tests/Test installation on different OSes]   | Collecting oslo.i18n>=3.15.3\n[Tests/Test installation on different OSes]   |   Downloading oslo.i18n-6.0.0-py3-none-any.whl (46 kB)\n[Tests/Test installation on different OSes]   | Collecting oslo.serialization!=2.19.1,>=2.18.0\n[Tests/Test installation on different OSes]   |   Downloading oslo.serialization-5.1.1-py3-none-any.whl (25 kB)\n[Tests/Test installation on different OSes]   | Collecting oslo.utils>=3.33.0\n[Tests/Test installation on different OSes]   |   Downloading oslo.utils-6.1.0-py3-none-any.whl (100 kB)\n[Tests/Test installation on different OSes]   | Requirement already satisfied: packaging>=20.4 in /usr/local/lib/python3.8/dist-packages (from python-keystoneclient->elasticluster==1.3.dev28) (21.0)\n[Tests/Test installation on different OSes]   | Collecting stevedore>=1.20.0\n[Tests/Test installation on different OSes]   |   Downloading stevedore-5.1.0-py3-none-any.whl (49 kB)\n[Tests/Test installation on different OSes]   | Collecting PrettyTable>=0.7.1\n[Tests/Test installation on different OSes]   |   Downloading prettytable-3.7.0-py3-none-any.whl (27 kB)\n[Tests/Test installation on different OSes]   | Collecting pyOpenSSL>=17.1.0\n[Tests/Test installation on different OSes]   |   Downloading pyOpenSSL-23.1.1-py3-none-any.whl (57 kB)\n[Tests/Test installation on different OSes]   | Collecting warlock>=1.2.0\n[Tests/Test installation on different OSes]   |   Downloading warlock-2.0.1-py3-none-any.whl (9.8 kB)\n[Tests/Test installation on different OSes]   | Collecting wrapt>=1.7.0\n[Tests/Test installation on different OSes]   |   Downloading wrapt-1.15.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (81 kB)\n[Tests/Test installation on different OSes]   | Collecting cliff>=3.4.0\n[Tests/Test installation on different OSes]   |   Downloading cliff-4.3.0-py3-none-any.whl (80 kB)\n[Tests/Test installation on different OSes]   | Collecting iso8601>=0.1.11\n[Tests/Test installation on different OSes]   |   Downloading iso8601-1.1.0-py3-none-any.whl (9.9 kB)\n[Tests/Test installation on different OSes]   | Collecting openstacksdk>=1.0.0\n[Tests/Test installation on different OSes]   |   Downloading openstacksdk-1.2.0-py3-none-any.whl (1.6 MB)\n[Tests/Test installation on different OSes]   | Collecting os-client-config>=1.28.0\n[Tests/Test installation on different OSes]   |   Downloading os_client_config-2.1.0-py3-none-any.whl (31 kB)\n[Tests/Test installation on different OSes]   | Collecting osc-lib>=1.12.0\n[Tests/Test installation on different OSes]   |   Downloading osc_lib-2.8.0-py3-none-any.whl (89 kB)\n[Tests/Test installation on different OSes]   | Collecting oslo.log>=3.36.0\n[Tests/Test installation on different OSes]   |   Downloading oslo.log-5.2.0-py3-none-any.whl (71 kB)\n[Tests/Test installation on different OSes]   | Collecting MarkupSafe>=2.0\n[Tests/Test installation on different OSes]   |   Downloading MarkupSafe-2.1.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)\n[Tests/Test installation on different OSes]   | Collecting cffi>=1.12\n[Tests/Test installation on different OSes]   |   Downloading cffi-1.15.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (442 kB)\n[Tests/Test installation on different OSes]   | Collecting azure-core<2.0.0,>=1.26.2\n[Tests/Test installation on different OSes]   |   Downloading azure_core-1.26.4-py3-none-any.whl (173 kB)\n[Tests/Test installation on different OSes]   | Requirement already satisfied: certifi>=2017.4.17 in /usr/lib/python3/dist-packages (from msrest<2.0.0,>=0.6.0->msrestazure->elasticluster==1.3.dev28) (2019.11.28)\n[Tests/Test installation on different OSes]   | Collecting requests-oauthlib>=0.5.0\n[Tests/Test installation on different OSes]   |   Downloading requests_oauthlib-1.3.1-py2.py3-none-any.whl (23 kB)\n[Tests/Test installation on different OSes]   | Collecting PyJWT<3,>=1.0.0\n[Tests/Test installation on different OSes]   |   Downloading PyJWT-2.7.0-py3-none-any.whl (22 kB)\n[Tests/Test installation on different OSes]   | Collecting python-dateutil<3,>=2.1.0\n[Tests/Test installation on different OSes]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[Tests/Test installation on different OSes]   | Requirement already satisfied: pyparsing!=3.0.0,!=3.0.1,!=3.0.2,!=3.0.3,<4,>=2.4.2; python_version > \"3.0\" in /usr/local/lib/python3.8/dist-packages (from httplib2<1dev,>=0.15.0->google-api-python-client->elasticluster==1.3.dev28) (2.4.7)\n[Tests/Test installation on different OSes]   | Collecting cachetools<6.0,>=2.0.0\n[Tests/Test installation on different OSes]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[Tests/Test installation on different OSes]   | Requirement already satisfied: urllib3<2.0 in /usr/lib/python3/dist-packages (from google-auth<3.0.0dev,>=1.19.0->google-api-python-client->elasticluster==1.3.dev28) (1.25.8)\n[Tests/Test installation on different OSes]   | Collecting googleapis-common-protos<2.0dev,>=1.56.2\n[Tests/Test installation on different OSes]   |   Downloading googleapis_common_protos-1.59.0-py2.py3-none-any.whl (223 kB)\n[Tests/Test installation on different OSes]   | Collecting protobuf!=3.20.0,!=3.20.1,!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<5.0.0dev,>=3.19.5\n[Tests/Test installation on different OSes]   |   Downloading protobuf-4.23.2-cp37-abi3-manylinux2014_x86_64.whl (304 kB)\n[Tests/Test installation on different OSes]   | Collecting os-service-types>=1.2.0\n[Tests/Test installation on different OSes]   |   Downloading os_service_types-1.7.0-py2.py3-none-any.whl (24 kB)\n[Tests/Test installation on different OSes]   | Collecting rfc3986>=1.2.0\n[Tests/Test installation on different OSes]   |   Downloading rfc3986-2.0.0-py2.py3-none-any.whl (31 kB)\n[Tests/Test installation on different OSes]   | Collecting msgpack>=0.5.2\n[Tests/Test installation on different OSes]   |   Downloading msgpack-1.0.5-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (322 kB)\n[Tests/Test installation on different OSes]   | Collecting wcwidth\n[Tests/Test installation on different OSes]   |   Downloading wcwidth-0.2.6-py2.py3-none-any.whl (29 kB)\n[Tests/Test installation on different OSes]   | Collecting jsonpatch<2,>=1\n[Tests/Test installation on different OSes]   |   Downloading jsonpatch-1.32-py2.py3-none-any.whl (12 kB)\n[Tests/Test installation on different OSes]   | Collecting jsonschema<5,>=4\n[Tests/Test installation on different OSes]   |   Downloading jsonschema-4.17.3-py3-none-any.whl (90 kB)\n[Tests/Test installation on different OSes]   | Collecting autopage>=0.4.0\n[Tests/Test installation on different OSes]   |   Downloading autopage-0.5.1-py3-none-any.whl (29 kB)\n[Tests/Test installation on different OSes]   | Collecting cmd2>=1.0.0\n[Tests/Test installation on different OSes]   |   Downloading cmd2-2.4.3-py3-none-any.whl (147 kB)\n[Tests/Test installation on different OSes]   | Collecting importlib-metadata>=4.4\n[Tests/Test installation on different OSes]   |   Downloading importlib_metadata-6.6.0-py3-none-any.whl (22 kB)\n[Tests/Test installation on different OSes]   | Collecting appdirs>=1.3.0\n[Tests/Test installation on different OSes]   |   Downloading appdirs-1.4.4-py2.py3-none-any.whl (9.6 kB)\n[Tests/Test installation on different OSes]   | Collecting decorator>=4.4.1\n[Tests/Test installation on different OSes]   |   Downloading decorator-5.1.1-py3-none-any.whl (9.1 kB)\n[Tests/Test installation on different OSes]   | Collecting dogpile.cache>=0.6.5\n[Tests/Test installation on different OSes]   |   Downloading dogpile.cache-1.2.1-py3-none-any.whl (51 kB)\n[Tests/Test installation on different OSes]   | Collecting jmespath>=0.9.0\n[Tests/Test installation on different OSes]   |   Downloading jmespath-1.0.1-py3-none-any.whl (20 kB)\n[Tests/Test installation on different OSes]   | Collecting requestsexceptions>=1.2.0\n[Tests/Test installation on different OSes]   |   Downloading requestsexceptions-1.4.0-py2.py3-none-any.whl (3.8 kB)\n[Tests/Test installation on different OSes]   | Collecting oslo.context>=2.21.0\n[Tests/Test installation on different OSes]   |   Downloading oslo.context-5.1.1-py3-none-any.whl (20 kB)\n[Tests/Test installation on different OSes]   | Collecting pyinotify>=0.9.6; sys_platform != \"win32\" and sys_platform != \"darwin\" and sys_platform != \"sunos5\"\n[Tests/Test installation on different OSes]   |   Downloading pyinotify-0.9.6.tar.gz (60 kB)\n[Tests/Test installation on different OSes]   | Collecting pycparser\n[Tests/Test installation on different OSes]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[Tests/Test installation on different OSes]   | Collecting typing-extensions>=4.3.0\n[Tests/Test installation on different OSes]   |   Downloading typing_extensions-4.6.2-py3-none-any.whl (31 kB)\n[Tests/Test installation on different OSes]   | Collecting oauthlib>=3.0.0\n[Tests/Test installation on different OSes]   |   Downloading oauthlib-3.2.2-py3-none-any.whl (151 kB)\n[Tests/Test installation on different OSes]   | Collecting jsonpointer>=1.9\n[Tests/Test installation on different OSes]   |   Downloading jsonpointer-2.3-py2.py3-none-any.whl (7.8 kB)\n[Tests/Test installation on different OSes]   | Collecting attrs>=17.4.0\n[Tests/Test installation on different OSes]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[Tests/Test installation on different OSes]   | Collecting importlib-resources>=1.4.0; python_version < \"3.9\"\n[Tests/Test installation on different OSes]   |   Downloading importlib_resources-5.12.0-py3-none-any.whl (36 kB)\n[Tests/Test installation on different OSes]   | Collecting pkgutil-resolve-name>=1.3.10; python_version < \"3.9\"\n[Tests/Test installation on different OSes]   |   Downloading pkgutil_resolve_name-1.3.10-py3-none-any.whl (4.7 kB)\n[Tests/Test installation on different OSes]   | Collecting pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0\n[Tests/Test installation on different OSes]   |   Downloading pyrsistent-0.19.3-py3-none-any.whl (57 kB)\n[Tests/Test installation on different OSes]   | Collecting pyperclip>=1.6\n[Tests/Test installation on different OSes]   |   Downloading pyperclip-1.8.2.tar.gz (20 kB)\n[Tests/Test installation on different OSes]   | Collecting zipp>=0.5\n[Tests/Test installation on different OSes]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[Tests/Test installation on different OSes]   | Building wheels for collected packages: elasticluster, future, PyCLI, ansible, subprocess32, pycrypto, google-compute-engine, python-gflags, scandir, secretstorage, pyinotify, pyperclip\n[Tests/Test installation on different OSes]   |   Building wheel for elasticluster (setup.py): started\n[Tests/Test installation on different OSes]   |   Building wheel for elasticluster (setup.py): finished with status 'done'\n[Tests/Test installation on different OSes]   |   Created wheel for elasticluster: filename=elasticluster-1.3.dev28-py3-none-any.whl size=609142 sha256=bd8ec8efe92c2ab07c319348cbe8bcde66d2ec91ca8a3f3fdc840ea138a2da0a\n[Tests/Test installation on different OSes]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/ec/8a/98/6db1998fcfc5ce982d29f3a44d37f720dbed82a26034aad080\n[Tests/Test installation on different OSes]   |   Building wheel for future (setup.py): started\n[Tests/Test installation on different OSes]   |   Building wheel for future (setup.py): finished with status 'done'\n[Tests/Test installation on different OSes]   |   Created wheel for future: filename=future-0.18.3-py3-none-any.whl size=492025 sha256=3d3c94b9da4d19ab626e75cc71bba14dd37b4abc900b02a2737dc1920b5efcaa\n[Tests/Test installation on different OSes]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/a0/0b/ee/e6994fadb42c1354dcccb139b0bf2795271bddfe6253ccdf11\n[Tests/Test installation on different OSes]   |   Building wheel for PyCLI (setup.py): started\n[Tests/Test installation on different OSes]   |   Building wheel for PyCLI (setup.py): finished with status 'done'\n[Tests/Test installation on different OSes]   |   Created wheel for PyCLI: filename=pyCLI-2.0.3-py3-none-any.whl size=51813 sha256=06e7650e8bd4cd3c50123e93d70247a0a227de05a6ea52323f5ab6891ce7a20e\n[Tests/Test installation on different OSes]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/cf/93/87/6536347d76ab8f1be90937a813997ac12beaef70b4d8eaa8c6\n[Tests/Test installation on different OSes]   |   Building wheel for ansible (setup.py): started\n[Tests/Run Unit Tests                     ]   | DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support pip 21.0 will remove support for this functionality.\n[Tests/Run Unit Tests                     ]   | Obtaining file:///tmp/de65f406-fe28-11ed-a890-af2cc187fc11/elasticluster-elasticluster\n[Tests/Run Unit Tests                     ]   | Collecting future\n[Tests/Run Unit Tests                     ]   |   Downloading future-0.18.3.tar.gz (840 kB)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: pip>=9.0.0 in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from elasticluster==1.3.dev28) (20.3.3)\n[Tests/Run Unit Tests                     ]   | Collecting PyCLI\n[Tests/Run Unit Tests                     ]   |   Downloading pyCLI-2.0.3.tar.gz (49 kB)\n[Tests/Run Unit Tests                     ]   | Collecting ansible<2.10,>=2.7\n[Tests/Run Unit Tests                     ]   |   Downloading ansible-2.9.27.tar.gz (14.8 MB)\n[Tests/Test installation on different OSes]   |   Building wheel for ansible (setup.py): finished with status 'done'\n[Tests/Test installation on different OSes]   |   Created wheel for ansible: filename=ansible-2.9.27-py3-none-any.whl size=16206250 sha256=b6f8509d541f9e4dca2f96b7689e2af0295b534110ec3b4bffb8949dcd5960a8\n[Tests/Test installation on different OSes]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/11/8f/73/33b2c315514812e0bfdb109b1d5d0f1ab39f73f35e4fc85360\n[Tests/Test installation on different OSes]   |   Building wheel for subprocess32 (setup.py): started\n[Tests/Test installation on different OSes]   |   Building wheel for subprocess32 (setup.py): finished with status 'done'\n[Tests/Test installation on different OSes]   |   Created wheel for subprocess32: filename=subprocess32-3.5.4-py3-none-any.whl size=6488 sha256=2636525277f6811bba78df16e0c0a8e41db675767a80de60a4e830df79aba9dc\n[Tests/Test installation on different OSes]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/9f/69/d1/50b39b308a87998eaf5c1d9095e5a5bd2ad98501e2b7936d36\n[Tests/Test installation on different OSes]   |   Building wheel for pycrypto (setup.py): started\n[Tests/Run Unit Tests                     ]   | Collecting click>=4.0\n[Tests/Run Unit Tests                     ]   |   Downloading click-7.1.2-py2.py3-none-any.whl (82 kB)\n[Tests/Run Unit Tests                     ]   | Collecting coloredlogs\n[Tests/Run Unit Tests                     ]   |   Downloading coloredlogs-15.0.1-py2.py3-none-any.whl (46 kB)\n[Tests/Run Unit Tests                     ]   | Collecting netaddr\n[Tests/Run Unit Tests                     ]   |   Downloading netaddr-0.8.0-py2.py3-none-any.whl (1.9 MB)\n[Tests/Run Unit Tests                     ]   | Collecting paramiko>=2.7\n[Tests/Run Unit Tests                     ]   |   Downloading paramiko-2.12.0-py2.py3-none-any.whl (213 kB)\n[Tests/Run Unit Tests                     ]   | Collecting schema\n[Tests/Run Unit Tests                     ]   |   Downloading schema-0.7.5-py2.py3-none-any.whl (17 kB)\n[Tests/Run Unit Tests                     ]   | Collecting subprocess32\n[Tests/Run Unit Tests                     ]   |   Downloading subprocess32-3.5.4-cp27-cp27mu-manylinux2014_x86_64.whl (69 kB)\n[Tests/Run Unit Tests                     ]   | Collecting azure-common\n[Tests/Run Unit Tests                     ]   |   Downloading azure_common-1.1.28-py2.py3-none-any.whl (14 kB)\n[Tests/Run Unit Tests                     ]   | Collecting azure-mgmt-compute\n[Tests/Run Unit Tests                     ]   |   Downloading azure_mgmt_compute-23.1.0-py2.py3-none-any.whl (4.8 MB)\n[Tests/Run Unit Tests                     ]   | Collecting azure-mgmt-network\n[Tests/Run Unit Tests                     ]   |   Downloading azure_mgmt_network-19.3.0-py2.py3-none-any.whl (21.1 MB)\n[Tests/Run Unit Tests                     ]   | Collecting azure-mgmt-resource\n[Tests/Run Unit Tests                     ]   |   Downloading azure_mgmt_resource-20.0.0-py2.py3-none-any.whl (2.3 MB)\n[Tests/Run Unit Tests                     ]   | Collecting msrestazure\n[Tests/Run Unit Tests                     ]   |   Downloading msrestazure-0.6.4-py2.py3-none-any.whl (40 kB)\n[Tests/Run Unit Tests                     ]   | Collecting boto>=2.48\n[Tests/Run Unit Tests                     ]   |   Downloading boto-2.49.0-py2.py3-none-any.whl (1.4 MB)\n[Tests/Run Unit Tests                     ]   | Collecting pycrypto\n[Tests/Run Unit Tests                     ]   |   Downloading pycrypto-2.6.1.tar.gz (446 kB)\n[Tests/Run Unit Tests                     ]   | Collecting google-api-python-client\n[Tests/Run Unit Tests                     ]   |   Downloading google_api_python_client-1.12.11-py2.py3-none-any.whl (62 kB)\n[Tests/Run Unit Tests                     ]   | Collecting google-compute-engine\n[Tests/Run Unit Tests                     ]   |   Downloading google-compute-engine-2.8.13.tar.gz (46 kB)\n[Tests/Test installation on different OSes]   |   Building wheel for pycrypto (setup.py): finished with status 'done'\n[Tests/Test installation on different OSes]   |   Created wheel for pycrypto: filename=pycrypto-2.6.1-cp38-cp38-linux_x86_64.whl size=528530 sha256=c0a9cb8af005830a2b5592e0e339ab2d9c6700ca1b25e42c2a0e7ae089094125\n[Tests/Test installation on different OSes]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/d0/99/d0/0298ea019d63f1d63a0965b9944b719e875f9bd6ffc6dcf293\n[Tests/Test installation on different OSes]   |   Building wheel for google-compute-engine (setup.py): started\n[Tests/Run Unit Tests                     ]   | Collecting oauth2client\n[Tests/Run Unit Tests                     ]   |   Downloading oauth2client-4.1.3-py2.py3-none-any.whl (98 kB)\n[Tests/Run Unit Tests                     ]   | Collecting python-gflags\n[Tests/Run Unit Tests                     ]   |   Downloading python-gflags-3.1.2.tar.gz (52 kB)\n[Tests/Test installation on different OSes]   |   Building wheel for google-compute-engine (setup.py): finished with status 'done'\n[Tests/Test installation on different OSes]   |   Created wheel for google-compute-engine: filename=google_compute_engine-2.8.13-py2.py3-none-any.whl size=84069 sha256=58683b3adf17cfe6080ee2979efd8013e40eaca46c0a2d4f20d2febee5d1a19c\n[Tests/Test installation on different OSes]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/de/ca/73/f53d6155093714724c7f7241a1ea530064a50c6cdfa3b8f583\n[Tests/Test installation on different OSes]   |   Building wheel for python-gflags (setup.py): started\n[Tests/Test installation on different OSes]   |   Building wheel for python-gflags (setup.py): finished with status 'done'\n[Tests/Test installation on different OSes]   |   Created wheel for python-gflags: filename=python_gflags-3.1.2-py3-none-any.whl size=57371 sha256=32c613314abe369e67d559e54ad9a267df20b2e27e84a28789a625f358c04efa\n[Tests/Test installation on different OSes]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/16/a6/cf/da36af6c303a89e5705f483611057a7cd00c326b8a31bedb37\n[Tests/Test installation on different OSes]   |   Building wheel for scandir (setup.py): started\n[Tests/Run Unit Tests                     ]   | Collecting pytz\n[Tests/Run Unit Tests                     ]   |   Using cached pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[Tests/Run Unit Tests                     ]   | Collecting simplejson>=2.5.0\n[Tests/Run Unit Tests                     ]   |   Downloading simplejson-3.19.1-cp27-cp27mu-manylinux2010_x86_64.whl (134 kB)\n[Tests/Run Unit Tests                     ]   | Collecting netifaces\n[Tests/Run Unit Tests                     ]   |   Downloading netifaces-0.11.0-cp27-cp27mu-manylinux_2_5_x86_64.manylinux1_x86_64.whl (31 kB)\n[Tests/Run Unit Tests                     ]   | Collecting apache-libcloud>=0.14.0\n[Tests/Test installation on different OSes]   |   Building wheel for scandir (setup.py): finished with status 'done'\n[Tests/Test installation on different OSes]   |   Created wheel for scandir: filename=scandir-1.10.0-cp38-cp38-linux_x86_64.whl size=44301 sha256=7d70b54cc4fe59113abb66e390a0911a98f0691a0425f9f01f20b48614ec1d8e\n[Tests/Test installation on different OSes]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/3e/e7/c7/6dd4baff5095133cd03c550991ca8505b4972aa858122e6031\n[Tests/Test installation on different OSes]   |   Building wheel for secretstorage (setup.py): started\n[Tests/Run Unit Tests                     ]   |   Downloading apache_libcloud-2.8.3-py2.py3-none-any.whl (3.4 MB)\n[Tests/Test installation on different OSes]   |   Building wheel for secretstorage (setup.py): finished with status 'done'\n[Tests/Test installation on different OSes]   |   Created wheel for secretstorage: filename=SecretStorage-2.3.1-py3-none-any.whl size=13974 sha256=3725ff7ad440a4c7a56ca5c391fbb14d57d51ce910cd7ee0aef98f6e2059e47c\n[Tests/Test installation on different OSes]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/d8/d9/22/c89bc78fa6799311511478c08f2d22a152fd76aeb3c80ba6bd\n[Tests/Test installation on different OSes]   |   Building wheel for pyinotify (setup.py): started\n[Tests/Run Unit Tests                     ]   | Collecting requests~=2.16\n[Tests/Run Unit Tests                     ]   |   Downloading requests-2.27.1-py2.py3-none-any.whl (63 kB)\n[Tests/Test installation on different OSes]   |   Building wheel for pyinotify (setup.py): finished with status 'done'\n[Tests/Test installation on different OSes]   |   Created wheel for pyinotify: filename=pyinotify-0.9.6-py3-none-any.whl size=25342 sha256=f27aeb6bd41ae08cadf4921981b699c3c7d0d7c6e087faf3cfe4cf520d2d4ff8\n[Tests/Test installation on different OSes]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/9d/a0/4b/1a80814e4ad0b035c07831ea1b06b691046198492bbc5769b6\n[Tests/Test installation on different OSes]   |   Building wheel for pyperclip (setup.py): started\n[Tests/Run Unit Tests                     ]   | Collecting python-keystoneclient\n[Tests/Run Unit Tests                     ]   |   Downloading python_keystoneclient-3.22.0-py2.py3-none-any.whl (397 kB)\n[Tests/Test installation on different OSes]   |   Building wheel for pyperclip (setup.py): finished with status 'done'\n[Tests/Test installation on different OSes]   |   Created wheel for pyperclip: filename=pyperclip-1.8.2-py3-none-any.whl size=11124 sha256=830f0820505e4ed9709aeff68d1237338f16f7ba1950a1c3938f1ee90ea9c92b\n[Tests/Test installation on different OSes]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/7f/1a/65/84ff8c386bec21fca6d220ea1f5498a0367883a78dd5ba6122\n[Tests/Test installation on different OSes]   | Successfully built elasticluster future PyCLI ansible subprocess32 pycrypto google-compute-engine python-gflags scandir secretstorage pyinotify pyperclip\n[Tests/Run Unit Tests                     ]   | Collecting python-glanceclient\n[Tests/Run Unit Tests                     ]   |   Downloading python_glanceclient-3.0.0-py2.py3-none-any.whl (197 kB)\n[Tests/Test installation on different OSes]   | ERROR: apache-libcloud 3.7.0 has requirement requests>=2.26.0, but you'll have requests 2.22.0 which is incompatible.\n[Tests/Test installation on different OSes]   | ERROR: python-cinderclient 9.3.0 has requirement requests>=2.25.1, but you'll have requests 2.22.0 which is incompatible.\n[Tests/Test installation on different OSes]   | Installing collected packages: future, PyCLI, MarkupSafe, jinja2, pycparser, cffi, cryptography, ansible, humanfriendly, coloredlogs, netaddr, bcrypt, pynacl, paramiko, contextlib2, schema, subprocess32, azure-common, isodate, typing-extensions, azure-core, azure-mgmt-core, azure-mgmt-compute, azure-mgmt-network, azure-mgmt-resource, oauthlib, requests-oauthlib, msrest, PyJWT, python-dateutil, adal, msrestazure, boto, pycrypto, httplib2, cachetools, pyasn1, pyasn1-modules, rsa, google-auth, google-auth-httplib2, protobuf, googleapis-common-protos, google-api-core, uritemplate, google-api-python-client, distro, google-compute-engine, oauth2client, python-gflags, pytz, simplejson, netifaces, apache-libcloud, wrapt, debtcollector, iso8601, pbr, os-service-types, stevedore, keystoneauth1, oslo.i18n, rfc3986, oslo.config, msgpack, oslo.utils, oslo.serialization, python-keystoneclient, wcwidth, PrettyTable, pyOpenSSL, jsonpointer, jsonpatch, attrs, zipp, importlib-resources, pkgutil-resolve-name, pyrsistent, jsonschema, warlock, python-glanceclient, autopage, pyperclip, cmd2, importlib-metadata, cliff, appdirs, decorator, dogpile.cache, jmespath, requestsexceptions, openstacksdk, os-client-config, osc-lib, oslo.context, pyinotify, oslo.log, python-neutronclient, python-cinderclient, python-novaclient, Babel, ipaddress, scandir, secretstorage, elasticluster\n[Tests/Run Unit Tests                     ]   | Collecting python-neutronclient\n[Tests/Run Unit Tests                     ]   |   Downloading python-neutronclient-7.1.0.tar.gz (294 kB)\n[Tests/Test installation on different OSes]   |   WARNING: The scripts futurize and pasteurize are installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[Tests/Test installation on different OSes]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[Tests/Run Unit Tests                     ]   | Collecting python-cinderclient\n[Tests/Run Unit Tests                     ]   |   Downloading python_cinderclient-6.0.0-py2.py3-none-any.whl (274 kB)\n[Tests/Run Unit Tests                     ]   | Collecting python-novaclient\n[Tests/Run Unit Tests                     ]   |   Downloading python_novaclient-16.0.0-py2.py3-none-any.whl (330 kB)\n[Tests/Run Unit Tests                     ]   | Collecting Babel!=2.4.0,>=2.3.4\n[Tests/Run Unit Tests                     ]   |   Using cached Babel-2.9.1-py2.py3-none-any.whl (8.8 MB)\n[Tests/Run Unit Tests                     ]   | Collecting pbr!=2.1.0,>=2.0.0\n[Tests/Run Unit Tests                     ]   |   Using cached pbr-5.11.1-py2.py3-none-any.whl (112 kB)\n[Tests/Run Unit Tests                     ]   | Collecting ipaddress\n[Tests/Run Unit Tests                     ]   |   Downloading ipaddress-1.0.23-py2.py3-none-any.whl (18 kB)\n[Tests/Run Unit Tests                     ]   | Collecting scandir\n[Tests/Run Unit Tests                     ]   |   Downloading scandir-1.10.0.tar.gz (33 kB)\n[Tests/Run Unit Tests                     ]   | Collecting secretstorage<=2.3.1\n[Tests/Run Unit Tests                     ]   |   Downloading SecretStorage-2.3.1.tar.gz (16 kB)\n[Tests/Run Unit Tests                     ]   | Collecting enum34\n[Tests/Run Unit Tests                     ]   |   Downloading enum34-1.1.10-py2-none-any.whl (11 kB)\n[Tests/Run Unit Tests                     ]   | Collecting pathlib2\n[Tests/Run Unit Tests                     ]   |   Downloading pathlib2-2.3.7.post1-py2.py3-none-any.whl (18 kB)\n[Tests/Run Unit Tests                     ]   | Collecting functools32\n[Tests/Run Unit Tests                     ]   |   Downloading functools32-3.2.3-2.tar.gz (31 kB)\n[Tests/Run Unit Tests                     ]   | Collecting jinja2\n[Tests/Run Unit Tests                     ]   |   Downloading Jinja2-2.11.3-py2.py3-none-any.whl (125 kB)\n[Tests/Run Unit Tests                     ]   | Collecting PyYAML\n[Tests/Run Unit Tests                     ]   |   Downloading PyYAML-5.4.1-cp27-cp27mu-manylinux1_x86_64.whl (574 kB)\n[Tests/Run Unit Tests                     ]   | Collecting cryptography\n[Tests/Run Unit Tests                     ]   |   Downloading cryptography-3.3.2-cp27-cp27mu-manylinux2010_x86_64.whl (2.6 MB)\n[Tests/Run Unit Tests                     ]   | Collecting humanfriendly>=9.1\n[Tests/Run Unit Tests                     ]   |   Downloading humanfriendly-10.0-py2.py3-none-any.whl (86 kB)\n[Tests/Run Unit Tests                     ]   | Collecting importlib-resources; python_version < \"3.7\"\n[Tests/Run Unit Tests                     ]   |   Downloading importlib_resources-3.3.1-py2.py3-none-any.whl (26 kB)\n[Tests/Run Unit Tests                     ]   | Collecting six\n[Tests/Run Unit Tests                     ]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[Tests/Run Unit Tests                     ]   | Collecting pynacl>=1.0.1\n[Tests/Run Unit Tests                     ]   |   Downloading PyNaCl-1.4.0-cp27-cp27mu-manylinux1_x86_64.whl (964 kB)\n[Tests/Run Unit Tests                     ]   | Collecting bcrypt>=3.1.3\n[Tests/Run Unit Tests                     ]   |   Downloading bcrypt-3.1.7-cp27-cp27mu-manylinux1_x86_64.whl (59 kB)\n[Tests/Run Unit Tests                     ]   | Collecting contextlib2>=0.5.5\n[Tests/Run Unit Tests                     ]   |   Downloading contextlib2-0.6.0.post1-py2.py3-none-any.whl (9.8 kB)\n[Tests/Run Unit Tests                     ]   | Collecting azure-nspkg; python_version < \"3.0\"\n[Tests/Run Unit Tests                     ]   |   Downloading azure_nspkg-3.0.2-py2-none-any.whl (3.0 kB)\n[Tests/Run Unit Tests                     ]   | Collecting azure-mgmt-core<2.0.0,>=1.2.0\n[Tests/Run Unit Tests                     ]   |   Downloading azure_mgmt_core-1.3.0-py2.py3-none-any.whl (25 kB)\n[Tests/Run Unit Tests                     ]   | Collecting azure-mgmt-nspkg; python_version < \"3.0\"\n[Tests/Run Unit Tests                     ]   |   Downloading azure_mgmt_nspkg-3.0.2-py2-none-any.whl (3.1 kB)\n[Tests/Run Unit Tests                     ]   | Collecting msrest>=0.6.21\n[Tests/Run Unit Tests                     ]   |   Downloading msrest-0.6.21-py2.py3-none-any.whl (85 kB)\n[Tests/Run Unit Tests                     ]   | Collecting adal<2.0.0,>=0.6.0\n[Tests/Run Unit Tests                     ]   |   Downloading adal-1.2.7-py2.py3-none-any.whl (55 kB)\n[Tests/Run Unit Tests                     ]   | Collecting httplib2<1dev,>=0.15.0\n[Tests/Run Unit Tests                     ]   |   Downloading httplib2-0.22.0.tar.gz (351 kB)\n[Tests/Run Unit Tests                     ]   |   Installing build dependencies: started\n[Tests/Run Unit Tests                     ]   |   Installing build dependencies: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |   Getting requirements to build wheel: started\n[Tests/Run Unit Tests                     ]   |   Getting requirements to build wheel: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |     Preparing wheel metadata: started\n[Tests/Run Unit Tests                     ]   |     Preparing wheel metadata: finished with status 'done'\n[Tests/Run Unit Tests                     ]   | Collecting google-auth-httplib2>=0.0.3\n[Tests/Run Unit Tests                     ]   |   Downloading google_auth_httplib2-0.1.0-py2.py3-none-any.whl (9.3 kB)\n[Tests/Run Unit Tests                     ]   | Collecting uritemplate<4dev,>=3.0.0\n[Tests/Run Unit Tests                     ]   |   Downloading uritemplate-3.0.1-py2.py3-none-any.whl (15 kB)\n[Tests/Run Unit Tests                     ]   | Collecting google-auth<2dev,>=1.16.0; python_version < \"3\"\n[Tests/Run Unit Tests                     ]   |   Downloading google_auth-1.35.0-py2.py3-none-any.whl (152 kB)\n[Tests/Run Unit Tests                     ]   | Collecting google-api-core<2dev,>=1.21.0; python_version < \"3\"\n[Tests/Run Unit Tests                     ]   |   Downloading google_api_core-1.32.0-py2.py3-none-any.whl (93 kB)\n[Tests/Run Unit Tests                     ]   | Collecting rsa==4.5; python_version < \"3\"\n[Tests/Run Unit Tests                     ]   |   Downloading rsa-4.5-py2.py3-none-any.whl (36 kB)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from google-compute-engine->elasticluster==1.3.dev28) (44.1.1)\n[Tests/Run Unit Tests                     ]   | Collecting pyasn1>=0.1.7\n[Tests/Run Unit Tests                     ]   |   Downloading pyasn1-0.5.0-py2.py3-none-any.whl (83 kB)\n[Tests/Run Unit Tests                     ]   | Collecting pyasn1-modules>=0.0.5\n[Tests/Run Unit Tests                     ]   |   Downloading pyasn1_modules-0.3.0-py2.py3-none-any.whl (181 kB)\n[Tests/Run Unit Tests                     ]   | Collecting backports.ssl-match-hostname; python_version < \"2.7.9\"\n[Tests/Run Unit Tests                     ]   |   Downloading backports.ssl_match_hostname-3.7.0.1.tar.gz (5.7 kB)\n[Tests/Run Unit Tests                     ]   | Collecting typing; python_version < \"3.4.0\"\n[Tests/Run Unit Tests                     ]   |   Downloading typing-3.10.0.0-py2-none-any.whl (26 kB)\n[Tests/Run Unit Tests                     ]   | Collecting certifi>=2017.4.17\n[Tests/Run Unit Tests                     ]   |   Downloading certifi-2021.10.8-py2.py3-none-any.whl (149 kB)\n[Tests/Run Unit Tests                     ]   | Collecting urllib3<1.27,>=1.21.1\n[Tests/Run Unit Tests                     ]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[Tests/Run Unit Tests                     ]   | Collecting chardet<5,>=3.0.2; python_version < \"3\"\n[Tests/Run Unit Tests                     ]   |   Downloading chardet-4.0.0-py2.py3-none-any.whl (178 kB)\n[Tests/Run Unit Tests                     ]   | Collecting idna<3,>=2.5; python_version < \"3\"\n[Tests/Run Unit Tests                     ]   |   Downloading idna-2.10-py2.py3-none-any.whl (58 kB)\n[Tests/Run Unit Tests                     ]   | Collecting keystoneauth1>=3.4.0\n[Tests/Run Unit Tests                     ]   |   Downloading keystoneauth1-5.1.2.tar.gz (269 kB)\n[Tests/Run Unit Tests                     ]   | Collecting oslo.config>=5.2.0\n[Tests/Run Unit Tests                     ]   |   Downloading oslo.config-7.0.0-py2.py3-none-any.whl (125 kB)\n[Tests/Run Unit Tests                     ]   | Collecting debtcollector>=1.2.0\n[Tests/Run Unit Tests                     ]   |   Downloading debtcollector-1.22.0-py2.py3-none-any.whl (23 kB)\n[Tests/Run Unit Tests                     ]   | Collecting oslo.serialization!=2.19.1,>=2.18.0\n[Tests/Run Unit Tests                     ]   |   Downloading oslo.serialization-2.29.3-py2.py3-none-any.whl (28 kB)\n[Tests/Run Unit Tests                     ]   | Collecting oslo.i18n>=3.15.3\n[Tests/Run Unit Tests                     ]   |   Downloading oslo.i18n-3.25.1-py2.py3-none-any.whl (47 kB)\n[Tests/Run Unit Tests                     ]   | Collecting oslo.utils>=3.33.0\n[Tests/Run Unit Tests                     ]   |   Downloading oslo.utils-3.42.1-py2.py3-none-any.whl (100 kB)\n[Tests/Run Unit Tests                     ]   | Collecting stevedore>=1.20.0\n[Tests/Run Unit Tests                     ]   |   Downloading stevedore-1.32.0-py2.py3-none-any.whl (43 kB)\n[Tests/Run Unit Tests                     ]   | Collecting pyOpenSSL>=17.1.0\n[Tests/Run Unit Tests                     ]   |   Downloading pyOpenSSL-21.0.0-py2.py3-none-any.whl (55 kB)\n[Tests/Run Unit Tests                     ]   | Collecting PrettyTable<0.8,>=0.7.1\n[Tests/Run Unit Tests                     ]   |   Downloading prettytable-0.7.2.tar.bz2 (21 kB)\n[Tests/Run Unit Tests                     ]   | Collecting wrapt>=1.7.0\n[Tests/Run Unit Tests                     ]   |   Downloading wrapt-1.15.0-cp27-cp27mu-manylinux2010_x86_64.whl (75 kB)\n[Tests/Run Unit Tests                     ]   | Collecting warlock<2,>=1.2.0\n[Tests/Run Unit Tests                     ]   |   Downloading warlock-1.3.3.tar.gz (11 kB)\n[Tests/Run Unit Tests                     ]   | Collecting cliff!=2.9.0,>=2.8.0\n[Tests/Run Unit Tests                     ]   |   Downloading cliff-2.18.0-py2.py3-none-any.whl (79 kB)\n[Tests/Run Unit Tests                     ]   | Collecting iso8601>=0.1.11\n[Tests/Run Unit Tests                     ]   |   Downloading iso8601-0.1.16-py2.py3-none-any.whl (10 kB)\n[Tests/Run Unit Tests                     ]   | Collecting osc-lib>=1.8.0\n[Tests/Run Unit Tests                     ]   |   Downloading osc_lib-2.0.0-py2.py3-none-any.whl (89 kB)\n[Tests/Run Unit Tests                     ]   | Collecting oslo.log>=3.36.0\n[Tests/Run Unit Tests                     ]   |   Downloading oslo.log-3.45.2-py2.py3-none-any.whl (72 kB)\n[Tests/Run Unit Tests                     ]   | Collecting os-client-config>=1.28.0\n[Tests/Run Unit Tests                     ]   |   Downloading os-client-config-2.1.0.tar.gz (48 kB)\n[Tests/Test installation on different OSes]   |   WARNING: The script humanfriendly is installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[Tests/Test installation on different OSes]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[Tests/Test installation on different OSes]   |   WARNING: The script coloredlogs is installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[Tests/Test installation on different OSes]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[Tests/Test installation on different OSes]   |   WARNING: The script netaddr is installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[Tests/Test installation on different OSes]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[Tests/Run Unit Tests                     ]   | Collecting MarkupSafe>=0.23\n[Tests/Run Unit Tests                     ]   |   Downloading MarkupSafe-1.1.1-cp27-cp27mu-manylinux1_x86_64.whl (24 kB)\n[Tests/Run Unit Tests                     ]   | Collecting cffi>=1.12\n[Tests/Run Unit Tests                     ]   |   Downloading cffi-1.15.1-cp27-cp27mu-manylinux1_x86_64.whl (390 kB)\n[Tests/Run Unit Tests                     ]   | Collecting monotonic; python_version == \"2.7\"\n[Tests/Run Unit Tests                     ]   |   Downloading monotonic-1.6-py2.py3-none-any.whl (8.2 kB)\n[Tests/Run Unit Tests                     ]   | Collecting zipp>=0.4; python_version < \"3.8\"\n[Tests/Run Unit Tests                     ]   |   Downloading zipp-1.2.0-py2.py3-none-any.whl (4.8 kB)\n[Tests/Run Unit Tests                     ]   | Collecting singledispatch; python_version < \"3.4\"\n[Tests/Run Unit Tests                     ]   |   Downloading singledispatch-3.7.0-py2.py3-none-any.whl (9.2 kB)\n[Tests/Run Unit Tests                     ]   | Collecting azure-core<2.0.0,>=1.15.0\n[Tests/Run Unit Tests                     ]   |   Downloading azure_core-1.21.1-py2.py3-none-any.whl (178 kB)\n[Tests/Run Unit Tests                     ]   | Collecting requests-oauthlib>=0.5.0\n[Tests/Run Unit Tests                     ]   |   Downloading requests_oauthlib-1.3.1-py2.py3-none-any.whl (23 kB)\n[Tests/Run Unit Tests                     ]   | Collecting isodate>=0.6.0\n[Tests/Run Unit Tests                     ]   |   Downloading isodate-0.6.1-py2.py3-none-any.whl (41 kB)\n[Tests/Run Unit Tests                     ]   | Collecting PyJWT<3,>=1.0.0\n[Tests/Run Unit Tests                     ]   |   Downloading PyJWT-1.7.1-py2.py3-none-any.whl (18 kB)\n[Tests/Run Unit Tests                     ]   | Collecting python-dateutil<3,>=2.1.0\n[Tests/Run Unit Tests                     ]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[Tests/Run Unit Tests                     ]   | Collecting pyparsing<3,>=2.4.2; python_version < \"3.0\"\n[Tests/Run Unit Tests                     ]   |   Downloading pyparsing-2.4.7-py2.py3-none-any.whl (67 kB)\n[Tests/Run Unit Tests                     ]   | Collecting cachetools<5.0,>=2.0.0\n[Tests/Run Unit Tests                     ]   |   Downloading cachetools-3.1.1-py2.py3-none-any.whl (11 kB)\n[Tests/Run Unit Tests                     ]   | Collecting futures>=3.2.0; python_version < \"3.2\"\n[Tests/Run Unit Tests                     ]   |   Downloading futures-3.4.0-py2-none-any.whl (16 kB)\n[Tests/Run Unit Tests                     ]   | Collecting protobuf<3.18.0,>=3.12.0; python_version < \"3\"\n[Tests/Run Unit Tests                     ]   |   Downloading protobuf-3.17.3-cp27-cp27mu-manylinux_2_5_x86_64.manylinux1_x86_64.whl (1.0 MB)\n[Tests/Run Unit Tests                     ]   | Collecting googleapis-common-protos<2.0dev,>=1.6.0\n[Tests/Run Unit Tests                     ]   |   Downloading googleapis_common_protos-1.52.0-py2.py3-none-any.whl (100 kB)\n[Tests/Run Unit Tests                     ]   | Collecting packaging>=14.3\n[Tests/Run Unit Tests                     ]   |   Downloading packaging-20.9-py2.py3-none-any.whl (40 kB)\n[Tests/Run Unit Tests                     ]   | Collecting os-service-types>=1.2.0\n[Tests/Run Unit Tests                     ]   |   Downloading os_service_types-1.7.0-py2.py3-none-any.whl (24 kB)\n[Tests/Run Unit Tests                     ]   | Collecting rfc3986>=1.2.0\n[Tests/Run Unit Tests                     ]   |   Downloading rfc3986-1.5.0-py2.py3-none-any.whl (31 kB)\n[Tests/Run Unit Tests                     ]   | Collecting funcsigs>=1.0.0; python_version == \"2.7\" or python_version == \"2.6\"\n[Tests/Run Unit Tests                     ]   |   Downloading funcsigs-1.0.2-py2.py3-none-any.whl (17 kB)\n[Tests/Run Unit Tests                     ]   | Collecting msgpack>=0.5.2\n[Tests/Run Unit Tests                     ]   |   Downloading msgpack-1.0.5.tar.gz (127 kB)\n[Tests/Run Unit Tests                     ]   |   Installing build dependencies: started\n[Tests/Run Unit Tests                     ]   |   Installing build dependencies: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |   Getting requirements to build wheel: started\n[Tests/Run Unit Tests                     ]   |   Getting requirements to build wheel: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |   Installing backend dependencies: started\n[Tests/Run Unit Tests                     ]   |   Installing backend dependencies: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |     Preparing wheel metadata: started\n[Tests/Run Unit Tests                     ]   |     Preparing wheel metadata: finished with status 'done'\n[Tests/Run Unit Tests                     ]   | Collecting jsonschema<4,>=0.7\n[Tests/Run Unit Tests                     ]   |   Downloading jsonschema-3.2.0-py2.py3-none-any.whl (56 kB)\n[Tests/Run Unit Tests                     ]   | Collecting jsonpatch<2,>=0.10\n[Tests/Run Unit Tests                     ]   |   Downloading jsonpatch-1.32-py2.py3-none-any.whl (12 kB)\n[Tests/Run Unit Tests                     ]   | Collecting cmd2!=0.8.3,<0.9.0,>=0.8.0\n[Tests/Run Unit Tests                     ]   |   Downloading cmd2-0.8.9-py2.py3-none-any.whl (53 kB)\n[Tests/Run Unit Tests                     ]   | Collecting unicodecsv>=0.8.0; python_version < \"3.0\"\n[Tests/Run Unit Tests                     ]   |   Downloading unicodecsv-0.14.1.tar.gz (10 kB)\n[Tests/Run Unit Tests                     ]   | Collecting openstacksdk>=0.15.0\n[Tests/Run Unit Tests                     ]   |   Downloading openstacksdk-0.45.0-py2.py3-none-any.whl (1.3 MB)\n[Tests/Run Unit Tests                     ]   | Collecting pyinotify>=0.9.6; sys_platform != \"win32\" and sys_platform != \"darwin\" and sys_platform != \"sunos5\"\n[Tests/Run Unit Tests                     ]   |   Downloading pyinotify-0.9.6.tar.gz (60 kB)\n[Tests/Run Unit Tests                     ]   | Collecting oslo.context>=2.20.0\n[Tests/Run Unit Tests                     ]   |   Downloading oslo.context-2.23.1-py2.py3-none-any.whl (19 kB)\n[Tests/Run Unit Tests                     ]   | Collecting pycparser\n[Tests/Run Unit Tests                     ]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[Tests/Run Unit Tests                     ]   | Collecting oauthlib>=3.0.0\n[Tests/Run Unit Tests                     ]   |   Downloading oauthlib-3.1.0-py2.py3-none-any.whl (147 kB)\n[Tests/Run Unit Tests                     ]   | Collecting importlib-metadata; python_version < \"3.8\"\n[Tests/Run Unit Tests                     ]   |   Downloading importlib_metadata-2.1.3-py2.py3-none-any.whl (10 kB)\n[Tests/Run Unit Tests                     ]   | Collecting attrs>=17.4.0\n[Tests/Run Unit Tests                     ]   |   Downloading attrs-21.4.0-py2.py3-none-any.whl (60 kB)\n[Tests/Run Unit Tests                     ]   | Collecting pyrsistent>=0.14.0\n[Tests/Run Unit Tests                     ]   |   Downloading pyrsistent-0.16.1.tar.gz (108 kB)\n[Tests/Run Unit Tests                     ]   | Collecting jsonpointer>=1.9\n[Tests/Run Unit Tests                     ]   |   Downloading jsonpointer-2.3-py2.py3-none-any.whl (7.8 kB)\n[Tests/Run Unit Tests                     ]   | Collecting pyperclip\n[Tests/Run Unit Tests                     ]   |   Downloading pyperclip-1.8.2.tar.gz (20 kB)\n[Tests/Run Unit Tests                     ]   | Collecting wcwidth; sys_platform != \"win32\"\n[Tests/Run Unit Tests                     ]   |   Downloading wcwidth-0.2.6-py2.py3-none-any.whl (29 kB)\n[Tests/Run Unit Tests                     ]   | Collecting dogpile.cache>=0.6.5\n[Tests/Run Unit Tests                     ]   |   Downloading dogpile.cache-0.9.2.tar.gz (329 kB)\n[Tests/Run Unit Tests                     ]   | Collecting decorator>=4.4.1\n[Tests/Run Unit Tests                     ]   |   Downloading decorator-4.4.2-py2.py3-none-any.whl (9.2 kB)\n[Tests/Run Unit Tests                     ]   | Collecting appdirs>=1.3.0\n[Tests/Run Unit Tests                     ]   |   Downloading appdirs-1.4.4-py2.py3-none-any.whl (9.6 kB)\n[Tests/Run Unit Tests                     ]   | Collecting jmespath>=0.9.0\n[Tests/Run Unit Tests                     ]   |   Downloading jmespath-0.10.0-py2.py3-none-any.whl (24 kB)\n[Tests/Run Unit Tests                     ]   | Collecting requestsexceptions>=1.2.0\n[Tests/Run Unit Tests                     ]   |   Downloading requestsexceptions-1.4.0-py2.py3-none-any.whl (3.8 kB)\n[Tests/Run Unit Tests                     ]   | Collecting munch>=2.1.0\n[Tests/Run Unit Tests                     ]   |   Downloading munch-2.5.0-py2.py3-none-any.whl (10 kB)\n[Tests/Run Unit Tests                     ]   | Collecting configparser>=3.5; python_version < \"3\"\n[Tests/Run Unit Tests                     ]   |   Downloading configparser-4.0.2-py2.py3-none-any.whl (22 kB)\n[Tests/Run Unit Tests                     ]   | Collecting backports.functools-lru-cache>=1.2.1; python_version < \"3.2\"\n[Tests/Run Unit Tests                     ]   |   Downloading backports.functools_lru_cache-1.6.4-py2.py3-none-any.whl (5.9 kB)\n[Tests/Run Unit Tests                     ]   | Using legacy 'setup.py install' for future, since package 'wheel' is not installed.\n[Tests/Run Unit Tests                     ]   | Using legacy 'setup.py install' for PyCLI, since package 'wheel' is not installed.\n[Tests/Run Unit Tests                     ]   | Using legacy 'setup.py install' for ansible, since package 'wheel' is not installed.\n[Tests/Run Unit Tests                     ]   | Using legacy 'setup.py install' for pycrypto, since package 'wheel' is not installed.\n[Tests/Run Unit Tests                     ]   | Using legacy 'setup.py install' for google-compute-engine, since package 'wheel' is not installed.\n[Tests/Run Unit Tests                     ]   | Using legacy 'setup.py install' for python-gflags, since package 'wheel' is not installed.\n[Tests/Run Unit Tests                     ]   | Using legacy 'setup.py install' for python-neutronclient, since package 'wheel' is not installed.\n[Tests/Run Unit Tests                     ]   | Using legacy 'setup.py install' for scandir, since package 'wheel' is not installed.\n[Tests/Run Unit Tests                     ]   | Using legacy 'setup.py install' for secretstorage, since package 'wheel' is not installed.\n[Tests/Run Unit Tests                     ]   | Using legacy 'setup.py install' for functools32, since package 'wheel' is not installed.\n[Tests/Run Unit Tests                     ]   | Using legacy 'setup.py install' for backports.ssl-match-hostname, since package 'wheel' is not installed.\n[Tests/Run Unit Tests                     ]   | Using legacy 'setup.py install' for keystoneauth1, since package 'wheel' is not installed.\n[Tests/Run Unit Tests                     ]   | Using legacy 'setup.py install' for PrettyTable, since package 'wheel' is not installed.\n[Tests/Run Unit Tests                     ]   | Using legacy 'setup.py install' for warlock, since package 'wheel' is not installed.\n[Tests/Run Unit Tests                     ]   | Using legacy 'setup.py install' for os-client-config, since package 'wheel' is not installed.\n[Tests/Run Unit Tests                     ]   | Using legacy 'setup.py install' for unicodecsv, since package 'wheel' is not installed.\n[Tests/Run Unit Tests                     ]   | Using legacy 'setup.py install' for pyinotify, since package 'wheel' is not installed.\n[Tests/Run Unit Tests                     ]   | Using legacy 'setup.py install' for pyrsistent, since package 'wheel' is not installed.\n[Tests/Run Unit Tests                     ]   | Using legacy 'setup.py install' for pyperclip, since package 'wheel' is not installed.\n[Tests/Run Unit Tests                     ]   | Using legacy 'setup.py install' for dogpile.cache, since package 'wheel' is not installed.\n[Tests/Run Unit Tests                     ]   | Building wheels for collected packages: httplib2, msgpack\n[Tests/Run Unit Tests                     ]   |   Building wheel for httplib2 (PEP 517): started\n[Tests/Run Unit Tests                     ]   |   Building wheel for httplib2 (PEP 517): finished with status 'done'\n[Tests/Run Unit Tests                     ]   |   Created wheel for httplib2: filename=httplib2-0.22.0-py2-none-any.whl size=98115 sha256=16dbb6257aaada7d02fb26222372db0fb01623ee4f8d286a91d149dbc980b988\n[Tests/Run Unit Tests                     ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/79/54/65/99202f114f321b25b98e05897ff7ed0fb51b0d2c3cc9957863\n[Tests/Run Unit Tests                     ]   |   Building wheel for msgpack (PEP 517): started\n[Tests/Run Unit Tests                     ]   |   Building wheel for msgpack (PEP 517): finished with status 'done'\n[Tests/Run Unit Tests                     ]   |   Created wheel for msgpack: filename=msgpack-1.0.5-py2-none-any.whl size=15525 sha256=74f77026f30acd02597538b01035236362f78bd0dd000fe89b35584e145cb132\n[Tests/Run Unit Tests                     ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/55/2e/7b/e48f51e0ef56c411889c9a66f117431b572e79b74c8f18fd06\n[Tests/Run Unit Tests                     ]   | Successfully built httplib2 msgpack\n[Tests/Run Unit Tests                     ]   | Installing collected packages: future, PyCLI, MarkupSafe, jinja2, PyYAML, ipaddress, six, pycparser, cffi, enum34, cryptography, ansible, click, monotonic, humanfriendly, coloredlogs, contextlib2, zipp, typing, singledispatch, scandir, pathlib2, importlib-resources, netaddr, pynacl, bcrypt, paramiko, schema, subprocess32, azure-nspkg, azure-common, azure-mgmt-nspkg, certifi, urllib3, chardet, idna, requests, azure-core, azure-mgmt-core, oauthlib, requests-oauthlib, isodate, msrest, azure-mgmt-compute, azure-mgmt-network, azure-mgmt-resource, PyJWT, python-dateutil, adal, msrestazure, boto, pycrypto, pyparsing, httplib2, pyasn1, pyasn1-modules, rsa, cachetools, google-auth, google-auth-httplib2, uritemplate, futures, pytz, protobuf, googleapis-common-protos, packaging, google-api-core, google-api-python-client, google-compute-engine, oauth2client, python-gflags, simplejson, netifaces, backports.ssl-match-hostname, apache-libcloud, pbr, iso8601, stevedore, os-service-types, keystoneauth1, rfc3986, wrapt, funcsigs, debtcollector, Babel, oslo.i18n, oslo.config, oslo.utils, msgpack, oslo.serialization, python-keystoneclient, pyOpenSSL, PrettyTable, configparser, importlib-metadata, attrs, pyrsistent, functools32, jsonschema, jsonpointer, jsonpatch, warlock, python-glanceclient, pyperclip, backports.functools-lru-cache, wcwidth, cmd2, unicodecsv, cliff, decorator, dogpile.cache, appdirs, jmespath, requestsexceptions, munch, openstacksdk, osc-lib, pyinotify, oslo.context, oslo.log, os-client-config, python-neutronclient, python-cinderclient, python-novaclient, secretstorage, elasticluster\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for future: started\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for future: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for PyCLI: started\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for PyCLI: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for ansible: started\n[Tests/Test installation on different OSes]   |   WARNING: The scripts pyrsa-decrypt, pyrsa-encrypt, pyrsa-keygen, pyrsa-priv2pub, pyrsa-sign and pyrsa-verify are installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[Tests/Test installation on different OSes]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[Tests/Test installation on different OSes]   |   WARNING: The script distro is installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[Tests/Test installation on different OSes]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[Tests/Test installation on different OSes]   |   WARNING: The scripts google_accounts_daemon, google_clock_skew_daemon, google_instance_setup, google_metadata_script_runner and google_network_daemon are installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[Tests/Test installation on different OSes]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[Tests/Test installation on different OSes]   |   WARNING: The script pbr is installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[Tests/Test installation on different OSes]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[Tests/Test installation on different OSes]   |   WARNING: The scripts oslo-config-generator and oslo-config-validator are installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[Tests/Test installation on different OSes]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[Tests/Test installation on different OSes]   |   WARNING: The script jsonschema is installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[Tests/Test installation on different OSes]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[Tests/Test installation on different OSes]   |   WARNING: The script glance is installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[Tests/Test installation on different OSes]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[Tests/Test installation on different OSes]   |   WARNING: The script openstack-inventory is installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[Tests/Test installation on different OSes]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[Tests/Test installation on different OSes]   |   WARNING: The script convert-json is installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[Tests/Test installation on different OSes]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[Tests/Test installation on different OSes]   |   WARNING: The script cinder is installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[Tests/Test installation on different OSes]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[Tests/Test installation on different OSes]   |   WARNING: The script nova is installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[Tests/Test installation on different OSes]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[Tests/Test installation on different OSes]   |   WARNING: The script pybabel is installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[Tests/Test installation on different OSes]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[Tests/Test installation on different OSes]   |   WARNING: The script elasticluster is installed in '/home/runneradmin/.local/bin' which is not on PATH.\n[Tests/Test installation on different OSes]   |   Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for ansible: finished with status 'done'\n[Tests/Test installation on different OSes]   | Successfully installed Babel-2.12.1 MarkupSafe-2.1.2 PrettyTable-3.7.0 PyCLI-2.0.3 PyJWT-2.7.0 adal-1.2.7 ansible-2.9.27 apache-libcloud-3.7.0 appdirs-1.4.4 attrs-23.1.0 autopage-0.5.1 azure-common-1.1.28 azure-core-1.26.4 azure-mgmt-compute-30.0.0 azure-mgmt-core-1.4.0 azure-mgmt-network-23.1.0 azure-mgmt-resource-23.0.1 bcrypt-4.0.1 boto-2.49.0 cachetools-5.3.1 cffi-1.15.1 cliff-4.3.0 cmd2-2.4.3 coloredlogs-15.0.1 contextlib2-21.6.0 cryptography-40.0.2 debtcollector-2.5.0 decorator-5.1.1 distro-1.8.0 dogpile.cache-1.2.1 elasticluster-1.3.dev28 future-0.18.3 google-api-core-2.11.0 google-api-python-client-2.87.0 google-auth-2.19.0 google-auth-httplib2-0.1.0 google-compute-engine-2.8.13 googleapis-common-protos-1.59.0 httplib2-0.22.0 humanfriendly-10.0 importlib-metadata-6.6.0 importlib-resources-5.12.0 ipaddress-1.0.23 iso8601-1.1.0 isodate-0.6.1 jinja2-3.1.2 jmespath-1.0.1 jsonpatch-1.32 jsonpointer-2.3 jsonschema-4.17.3 keystoneauth1-5.2.0 msgpack-1.0.5 msrest-0.7.1 msrestazure-0.6.4 netaddr-0.8.0 netifaces-0.11.0 oauth2client-4.1.3 oauthlib-3.2.2 openstacksdk-1.2.0 os-client-config-2.1.0 os-service-types-1.7.0 osc-lib-2.8.0 oslo.config-9.1.1 oslo.context-5.1.1 oslo.i18n-6.0.0 oslo.log-5.2.0 oslo.serialization-5.1.1 oslo.utils-6.1.0 paramiko-3.2.0 pbr-5.11.1 pkgutil-resolve-name-1.3.10 protobuf-4.23.2 pyOpenSSL-23.1.1 pyasn1-0.5.0 pyasn1-modules-0.3.0 pycparser-2.21 pycrypto-2.6.1 pyinotify-0.9.6 pynacl-1.5.0 pyperclip-1.8.2 pyrsistent-0.19.3 python-cinderclient-9.3.0 python-dateutil-2.8.2 python-gflags-3.1.2 python-glanceclient-4.3.0 python-keystoneclient-5.1.0 python-neutronclient-10.0.0 python-novaclient-18.3.0 pytz-2023.3 requests-oauthlib-1.3.1 requestsexceptions-1.4.0 rfc3986-2.0.0 rsa-4.9 scandir-1.10.0 schema-0.7.5 secretstorage-2.3.1 simplejson-3.19.1 stevedore-5.1.0 subprocess32-3.5.4 typing-extensions-4.6.2 uritemplate-4.1.1 warlock-2.0.1 wcwidth-0.2.6 wrapt-1.15.0 zipp-3.15.0\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for scandir: started\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for scandir: finished with status 'done'\n[Tests/Test installation on different OSes]   \u2705  Success - Main Install ElastiCluster from sources\n[Tests/Test installation on different OSes] \u2b50 Run Main Try running `elasticluster` commands\n[Tests/Test installation on different OSes]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/try-run] user= workdir=\n[Tests/Test installation on different OSes]   | /var/run/act/workflow/try-run: line 5: elasticluster: command not found\n[Tests/Test installation on different OSes] Failed but continue next step\n[Tests/Test installation on different OSes]   \u274c  Failure - Main Try running `elasticluster` commands\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for pycrypto: started\n[Tests/Test installation on different OSes] \ud83c\udfc1  Job succeeded\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for pycrypto: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for google-compute-engine: started\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for google-compute-engine: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for python-gflags: started\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for python-gflags: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for backports.ssl-match-hostname: started\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for backports.ssl-match-hostname: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for keystoneauth1: started\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for keystoneauth1: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for PrettyTable: started\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for PrettyTable: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for pyrsistent: started\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for pyrsistent: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for functools32: started\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for functools32: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for warlock: started\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for warlock: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for pyperclip: started\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for pyperclip: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for unicodecsv: started\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for unicodecsv: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for dogpile.cache: started\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for dogpile.cache: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for pyinotify: started\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for pyinotify: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for os-client-config: started\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for os-client-config: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for python-neutronclient: started\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for python-neutronclient: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for secretstorage: started\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for secretstorage: finished with status 'done'\n[Tests/Run Unit Tests                     ]   |   Running setup.py develop for elasticluster\n[Tests/Run Unit Tests                     ]   | Successfully installed Babel-2.9.1 MarkupSafe-1.1.1 PrettyTable-0.7.2 PyCLI-2.0.3 PyJWT-1.7.1 PyYAML-5.4.1 adal-1.2.7 ansible-2.9.27 apache-libcloud-2.8.3 appdirs-1.4.4 attrs-21.4.0 azure-common-1.1.28 azure-core-1.21.1 azure-mgmt-compute-23.1.0 azure-mgmt-core-1.3.0 azure-mgmt-network-19.3.0 azure-mgmt-nspkg-3.0.2 azure-mgmt-resource-20.0.0 azure-nspkg-3.0.2 backports.functools-lru-cache-1.6.4 backports.ssl-match-hostname-3.7.0.1 bcrypt-3.1.7 boto-2.49.0 cachetools-3.1.1 certifi-2021.10.8 cffi-1.15.1 chardet-4.0.0 click-7.1.2 cliff-2.18.0 cmd2-0.8.9 coloredlogs-15.0.1 configparser-4.0.2 contextlib2-0.6.0.post1 cryptography-3.3.2 debtcollector-1.22.0 decorator-4.4.2 dogpile.cache-0.9.2 elasticluster enum34-1.1.10 funcsigs-1.0.2 functools32-3.2.3.post2 future-0.18.3 futures-3.4.0 google-api-core-1.32.0 google-api-python-client-1.12.11 google-auth-1.35.0 google-auth-httplib2-0.1.0 google-compute-engine-2.8.13 googleapis-common-protos-1.52.0 httplib2-0.22.0 humanfriendly-10.0 idna-2.10 importlib-metadata-2.1.3 importlib-resources-3.3.1 ipaddress-1.0.23 iso8601-0.1.16 isodate-0.6.1 jinja2-2.11.3 jmespath-0.10.0 jsonpatch-1.32 jsonpointer-2.3 jsonschema-3.2.0 keystoneauth1-5.1.2 monotonic-1.6 msgpack-1.0.5 msrest-0.6.21 msrestazure-0.6.4 munch-2.5.0 netaddr-0.8.0 netifaces-0.11.0 oauth2client-4.1.3 oauthlib-3.1.0 openstacksdk-0.45.0 os-client-config-2.1.0 os-service-types-1.7.0 osc-lib-2.0.0 oslo.config-7.0.0 oslo.context-2.23.1 oslo.i18n-3.25.1 oslo.log-3.45.2 oslo.serialization-2.29.3 oslo.utils-3.42.1 packaging-20.9 paramiko-2.12.0 pathlib2-2.3.7.post1 pbr-5.11.1 protobuf-3.17.3 pyOpenSSL-21.0.0 pyasn1-0.5.0 pyasn1-modules-0.3.0 pycparser-2.21 pycrypto-2.6.1 pyinotify-0.9.6 pynacl-1.4.0 pyparsing-2.4.7 pyperclip-1.8.2 pyrsistent-0.16.1 python-cinderclient-6.0.0 python-dateutil-2.8.2 python-gflags-3.1.2 python-glanceclient-3.0.0 python-keystoneclient-3.22.0 python-neutronclient-7.1.0 python-novaclient-16.0.0 pytz-2023.3 requests-2.27.1 requests-oauthlib-1.3.1 requestsexceptions-1.4.0 rfc3986-1.5.0 rsa-4.5 scandir-1.10.0 schema-0.7.5 secretstorage-2.3.1 simplejson-3.19.1 singledispatch-3.7.0 six-1.16.0 stevedore-1.32.0 subprocess32-3.5.4 typing-3.10.0.0 unicodecsv-0.14.1 uritemplate-3.0.1 urllib3-1.26.16 warlock-1.3.3 wcwidth-0.2.6 wrapt-1.15.0 zipp-1.2.0\n[Tests/Run Unit Tests                     ]   | WARNING: You are using pip version 20.3.3; however, version 20.3.4 is available.\n[Tests/Run Unit Tests                     ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/2.7.18/x64/bin/python -m pip install --upgrade pip' command.\n[Tests/Run Unit Tests                     ]   \u2705  Success - Main Install ElastiCluster from sources\n[Tests/Run Unit Tests                     ] \u2b50 Run Main Install test dependencies\n[Tests/Run Unit Tests                     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[Tests/Run Unit Tests                     ]   | DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support pip 21.0 will remove support for this functionality.\n[Tests/Run Unit Tests                     ]   | Collecting pytest>=2.10\n[Tests/Run Unit Tests                     ]   |   Downloading pytest-4.6.11-py2.py3-none-any.whl (231 kB)\n[Tests/Run Unit Tests                     ]   | Collecting pytest-cov\n[Tests/Run Unit Tests                     ]   |   Downloading pytest_cov-2.12.1-py2.py3-none-any.whl (20 kB)\n[Tests/Run Unit Tests                     ]   | Collecting mock\n[Tests/Run Unit Tests                     ]   |   Downloading mock-3.0.5-py2.py3-none-any.whl (25 kB)\n[Tests/Run Unit Tests                     ]   | Collecting tox\n[Tests/Run Unit Tests                     ]   |   Downloading tox-3.28.0-py2.py3-none-any.whl (86 kB)\n[Tests/Run Unit Tests                     ]   | Collecting codecov\n[Tests/Run Unit Tests                     ]   |   Downloading codecov-2.1.13-py2.py3-none-any.whl (16 kB)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: importlib-metadata>=0.12; python_version < \"3.8\" in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from pytest>=2.10) (2.1.3)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: pathlib2>=2.2.0; python_version < \"3.6\" in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from pytest>=2.10) (2.3.7.post1)\n[Tests/Run Unit Tests                     ]   | Collecting pluggy<1.0,>=0.12\n[Tests/Run Unit Tests                     ]   |   Downloading pluggy-0.13.1-py2.py3-none-any.whl (18 kB)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: packaging in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from pytest>=2.10) (20.9)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: wcwidth in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from pytest>=2.10) (0.2.6)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: six>=1.10.0 in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from pytest>=2.10) (1.16.0)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: funcsigs>=1.0; python_version < \"3.0\" in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from pytest>=2.10) (1.0.2)\n[Tests/Run Unit Tests                     ]   | Collecting atomicwrites>=1.0\n[Tests/Run Unit Tests                     ]   |   Downloading atomicwrites-1.4.1.tar.gz (14 kB)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: attrs>=17.4.0 in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from pytest>=2.10) (21.4.0)\n[Tests/Run Unit Tests                     ]   | Collecting py>=1.5.0\n[Tests/Run Unit Tests                     ]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[Tests/Run Unit Tests                     ]   | Collecting more-itertools<6.0.0,>=4.0.0; python_version <= \"2.7\"\n[Tests/Run Unit Tests                     ]   |   Downloading more_itertools-5.0.0-py2-none-any.whl (52 kB)\n[Tests/Run Unit Tests                     ]   | Collecting coverage>=5.2.1\n[Tests/Run Unit Tests                     ]   |   Downloading coverage-5.5-cp27-cp27mu-manylinux2010_x86_64.whl (236 kB)\n[Tests/Run Unit Tests                     ]   | Collecting toml\n[Tests/Run Unit Tests                     ]   |   Downloading toml-0.10.2-py2.py3-none-any.whl (16 kB)\n[Tests/Run Unit Tests                     ]   | Collecting filelock>=3.0.0\n[Tests/Run Unit Tests                     ]   |   Downloading filelock-3.2.1-py2.py3-none-any.whl (9.3 kB)\n[Tests/Run Unit Tests                     ]   | Collecting virtualenv!=20.0.0,!=20.0.1,!=20.0.2,!=20.0.3,!=20.0.4,!=20.0.5,!=20.0.6,!=20.0.7,>=16.0.0\n[Tests/Run Unit Tests                     ]   |   Downloading virtualenv-20.15.1-py2.py3-none-any.whl (10.1 MB)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: requests>=2.7.9 in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from codecov) (2.27.1)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: contextlib2; python_version < \"3\" in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from importlib-metadata>=0.12; python_version < \"3.8\"->pytest>=2.10) (0.6.0.post1)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: zipp>=0.5 in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from importlib-metadata>=0.12; python_version < \"3.8\"->pytest>=2.10) (1.2.0)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: configparser>=3.5; python_version < \"3\" in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from importlib-metadata>=0.12; python_version < \"3.8\"->pytest>=2.10) (4.0.2)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: typing; python_version < \"3.5\" in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from pathlib2>=2.2.0; python_version < \"3.6\"->pytest>=2.10) (3.10.0.0)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: scandir; python_version < \"3.5\" in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from pathlib2>=2.2.0; python_version < \"3.6\"->pytest>=2.10) (1.10.0)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: pyparsing>=2.0.2 in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from packaging->pytest>=2.10) (2.4.7)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: backports.functools-lru-cache>=1.2.1; python_version < \"3.2\" in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from wcwidth->pytest>=2.10) (1.6.4)\n[Tests/Run Unit Tests                     ]   | Collecting platformdirs<3,>=2\n[Tests/Run Unit Tests                     ]   |   Downloading platformdirs-2.0.2-py2.py3-none-any.whl (10 kB)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: importlib-resources>=1.0; python_version < \"3.7\" in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from virtualenv!=20.0.0,!=20.0.1,!=20.0.2,!=20.0.3,!=20.0.4,!=20.0.5,!=20.0.6,!=20.0.7,>=16.0.0->tox) (3.3.1)\n[Tests/Run Unit Tests                     ]   | Collecting distlib<1,>=0.3.1\n[Tests/Run Unit Tests                     ]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: certifi>=2017.4.17 in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from requests>=2.7.9->codecov) (2021.10.8)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: urllib3<1.27,>=1.21.1 in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from requests>=2.7.9->codecov) (1.26.16)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: chardet<5,>=3.0.2; python_version < \"3\" in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from requests>=2.7.9->codecov) (4.0.0)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: idna<3,>=2.5; python_version < \"3\" in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from requests>=2.7.9->codecov) (2.10)\n[Tests/Run Unit Tests                     ]   | Requirement already satisfied: singledispatch; python_version < \"3.4\" in /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages (from importlib-resources>=1.0; python_version < \"3.7\"->virtualenv!=20.0.0,!=20.0.1,!=20.0.2,!=20.0.3,!=20.0.4,!=20.0.5,!=20.0.6,!=20.0.7,>=16.0.0->tox) (3.7.0)\n[Tests/Run Unit Tests                     ]   | Using legacy 'setup.py install' for atomicwrites, since package 'wheel' is not installed.\n[Tests/Run Unit Tests                     ]   | Installing collected packages: pluggy, atomicwrites, py, more-itertools, pytest, coverage, toml, pytest-cov, mock, filelock, platformdirs, distlib, virtualenv, tox, codecov\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for atomicwrites: started\n[Tests/Run Unit Tests                     ]   |     Running setup.py install for atomicwrites: finished with status 'done'\n[Tests/Run Unit Tests                     ]   | Successfully installed atomicwrites-1.4.1 codecov-2.1.13 coverage-5.5 distlib-0.3.6 filelock-3.2.1 mock-3.0.5 more-itertools-5.0.0 platformdirs-2.0.2 pluggy-0.13.1 py-1.11.0 pytest-4.6.11 pytest-cov-2.12.1 toml-0.10.2 tox-3.28.0 virtualenv-20.15.1\n[Tests/Run Unit Tests                     ]   | WARNING: You are using pip version 20.3.3; however, version 20.3.4 is available.\n[Tests/Run Unit Tests                     ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/2.7.18/x64/bin/python -m pip install --upgrade pip' command.\n[Tests/Run Unit Tests                     ]   \u2705  Success - Main Install test dependencies\n[Tests/Run Unit Tests                     ] \u2b50 Run Main Run unit tests\n[Tests/Run Unit Tests                     ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[Tests/Run Unit Tests                     ]   | ============================= test session starts ==============================\n[Tests/Run Unit Tests                     ]   | platform linux2 -- Python 2.7.18, pytest-4.6.11, py-1.11.0, pluggy-0.13.1 -- /opt/hostedtoolcache/Python/2.7.18/x64/bin/python\n[Tests/Run Unit Tests                     ]   | cachedir: .pytest_cache\n[Tests/Run Unit Tests                     ]   | rootdir: /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/elasticluster-elasticluster, inifile: setup.cfg\n[Tests/Run Unit Tests                     ]   | plugins: cov-2.12.1\n[Tests/Run Unit Tests                     ]   | collecting ... collected 72 items\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tests/test_cli.py::test_cli_help PASSED                                  [  1%]\n[Tests/Run Unit Tests                     ]   | tests/test_cli.py::test_cli_version PASSED                               [  2%]\n[Tests/Run Unit Tests                     ]   | tests/test_cli.py::test_cli_list_default PASSED                          [  4%]\n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py::test_add_node FAILED                              [  5%]\n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py::test_add_node_with_custom_name FAILED             [  6%]\n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py::test_remove_node FAILED                           [  8%]\n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py::test_start PASSED                                 [  9%]\n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py::test_check_cluster_size_ok FAILED                 [ 11%]\n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py::test_check_cluster_size_fail FAILED               [ 12%]\n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py::test_get_all_nodes FAILED                         [ 13%]\n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py::test_stop PASSED                                  [ 15%]\n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py::test_get_ssh_to_node_with_class FAILED            [ 16%]\n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py::test_get_ssh_to_node_with_nodename FAILED         [ 18%]\n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py::test_get_ssh_to_node_with_defaults FAILED         [ 19%]\n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py::test_setup FAILED                                 [ 20%]\n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py::test_update PASSED                                [ 22%]\n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py::test_dict_mixin PASSED                            [ 23%]\n[Tests/Run Unit Tests                     ]   | tests/test_cluster_node.py::test_start PASSED                            [ 25%]\n[Tests/Run Unit Tests                     ]   | tests/test_cluster_node.py::test_stop PASSED                             [ 26%]\n[Tests/Run Unit Tests                     ]   | tests/test_cluster_node.py::test_stop_with_no_id PASSED                  [ 27%]\n[Tests/Run Unit Tests                     ]   | tests/test_cluster_node.py::test_is_alive PASSED                         [ 29%]\n[Tests/Run Unit Tests                     ]   | tests/test_cluster_node.py::test_connect PASSED                          [ 30%]\n[Tests/Run Unit Tests                     ]   | tests/test_cluster_node.py::test_update_ips PASSED                       [ 31%]\n[Tests/Run Unit Tests                     ]   | tests/test_cluster_node.py::test_dict_mixin PASSED                       [ 33%]\n[Tests/Run Unit Tests                     ]   | tests/test_conf.py::test_gce_accelerator1 PASSED                         [ 34%]\n[Tests/Run Unit Tests                     ]   | tests/test_conf.py::test_gce_accelerator2 PASSED                         [ 36%]\n[Tests/Run Unit Tests                     ]   | tests/test_conf.py::test_issue_376 PASSED                                [ 37%]\n[Tests/Run Unit Tests                     ]   | tests/test_conf.py::test_issue_415 PASSED                                [ 38%]\n[Tests/Run Unit Tests                     ]   | tests/test_conf.py::test_pr_378 PASSED                                   [ 40%]\n[Tests/Run Unit Tests                     ]   | tests/test_conf.py::test_invalid_ssh_to PASSED                           [ 41%]\n[Tests/Run Unit Tests                     ]   | tests/test_conf.py::test_get_cloud_provider_openstack FAILED             [ 43%]\n[Tests/Run Unit Tests                     ]   | tests/test_conf.py::test_get_cloud_provider_invalid PASSED               [ 44%]\n[Tests/Run Unit Tests                     ]   | tests/test_conf.py::test_default_setup_provider_is_ansible PASSED        [ 45%]\n[Tests/Run Unit Tests                     ]   | tests/test_config_reader.py::test_read_config_file PASSED                [ 47%]\n[Tests/Run Unit Tests                     ]   | tests/test_config_reader.py::test_arrange_config_tree PASSED             [ 48%]\n[Tests/Run Unit Tests                     ]   | tests/test_config_reader.py::test_perform_key_renames PASSED             [ 50%]\n[Tests/Run Unit Tests                     ]   | tests/test_config_reader.py::test_dereference_config_tree_evict PASSED   [ 51%]\n[Tests/Run Unit Tests                     ]   | tests/test_config_reader.py::test_dereference_config_tree_no_evict PASSED [ 52%]\n[Tests/Run Unit Tests                     ]   | tests/test_config_reader.py::test_build_node_section PASSED              [ 54%]\n[Tests/Run Unit Tests                     ]   | tests/test_config_reader.py::test_build_node_section_google PASSED       [ 55%]\n[Tests/Run Unit Tests                     ]   | tests/test_repository.py::MemRepositoryTests::test_delete PASSED         [ 56%]\n[Tests/Run Unit Tests                     ]   | tests/test_repository.py::MemRepositoryTests::test_get PASSED            [ 58%]\n[Tests/Run Unit Tests                     ]   | tests/test_repository.py::MemRepositoryTests::test_get_all PASSED        [ 59%]\n[Tests/Run Unit Tests                     ]   | tests/test_repository.py::PickleRepositoryTests::test_delete PASSED      [ 61%]\n[Tests/Run Unit Tests                     ]   | tests/test_repository.py::PickleRepositoryTests::test_get PASSED         [ 62%]\n[Tests/Run Unit Tests                     ]   | tests/test_repository.py::PickleRepositoryTests::test_get_all PASSED     [ 63%]\n[Tests/Run Unit Tests                     ]   | tests/test_repository.py::PickleRepositoryTests::test_save_and_delete PASSED [ 65%]\n[Tests/Run Unit Tests                     ]   | tests/test_repository.py::PickleRepositoryTests::test_saving_cluster_with_nodes PASSED [ 66%]\n[Tests/Run Unit Tests                     ]   | tests/test_repository.py::JsonRepositoryTests::test_delete PASSED        [ 68%]\n[Tests/Run Unit Tests                     ]   | tests/test_repository.py::JsonRepositoryTests::test_get PASSED           [ 69%]\n[Tests/Run Unit Tests                     ]   | tests/test_repository.py::JsonRepositoryTests::test_get_all PASSED       [ 70%]\n[Tests/Run Unit Tests                     ]   | tests/test_repository.py::JsonRepositoryTests::test_save_and_delete PASSED [ 72%]\n[Tests/Run Unit Tests                     ]   | tests/test_repository.py::JsonRepositoryTests::test_saving_cluster_with_nodes PASSED [ 73%]\n[Tests/Run Unit Tests                     ]   | tests/test_repository.py::YamlRepositoryTests::test_delete PASSED        [ 75%]\n[Tests/Run Unit Tests                     ]   | tests/test_repository.py::YamlRepositoryTests::test_get PASSED           [ 76%]\n[Tests/Run Unit Tests                     ]   | tests/test_repository.py::YamlRepositoryTests::test_get_all PASSED       [ 77%]\n[Tests/Run Unit Tests                     ]   | tests/test_repository.py::YamlRepositoryTests::test_save_and_delete PASSED [ 79%]\n[Tests/Run Unit Tests                     ]   | tests/test_repository.py::YamlRepositoryTests::test_saving_cluster_with_nodes PASSED [ 80%]\n[Tests/Run Unit Tests                     ]   | tests/test_repository.py::TestMultiDiskRepository::test_invalid_storage_type PASSED [ 81%]\n[Tests/Run Unit Tests                     ]   | tests/test_repository.py::TestMultiDiskRepository::test_repository_default_type PASSED [ 83%]\n[Tests/Run Unit Tests                     ]   | tests/test_smoke_imports.py::test_smoke_imports_top PASSED               [ 84%]\n[Tests/Run Unit Tests                     ]   | tests/test_smoke_imports.py::test_smoke_imports_providers PASSED         [ 86%]\n[Tests/Run Unit Tests                     ]   | tests/providers/test_ec2_boto.py::TestBotoCloudProvider::test_check_keypair_dsa PASSED [ 87%]\n[Tests/Run Unit Tests                     ]   | tests/providers/test_ec2_boto.py::TestBotoCloudProvider::test_check_keypair_rsa PASSED [ 88%]\n[Tests/Run Unit Tests                     ]   | tests/providers/test_ec2_boto.py::TestBotoCloudProvider::test_check_security_group PASSED [ 90%]\n[Tests/Run Unit Tests                     ]   | tests/providers/test_ec2_boto.py::TestBotoCloudProvider::test_check_subnet PASSED [ 91%]\n[Tests/Run Unit Tests                     ]   | tests/providers/test_ec2_boto.py::TestBotoCloudProvider::test_find_image_id PASSED [ 93%]\n[Tests/Run Unit Tests                     ]   | tests/providers/test_ec2_boto.py::TestBotoCloudProvider::test_get_ips PASSED [ 94%]\n[Tests/Run Unit Tests                     ]   | tests/providers/test_ec2_boto.py::TestBotoCloudProvider::test_is_instance_running PASSED [ 95%]\n[Tests/Run Unit Tests                     ]   | tests/providers/test_ec2_boto.py::TestBotoCloudProvider::test_load_instance PASSED [ 97%]\n[Tests/Run Unit Tests                     ]   | tests/providers/test_ec2_boto.py::TestBotoCloudProvider::test_start_instance PASSED [ 98%]\n[Tests/Run Unit Tests                     ]   | tests/providers/test_ec2_boto.py::TestBotoCloudProvider::test_stop_instance PASSED [100%]\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | =================================== FAILURES ===================================\n[Tests/Run Unit Tests                     ]   | ________________________________ test_add_node _________________________________\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tmpdir = local('/tmp/pytest-of-runneradmin/pytest-0/test_add_node0')\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     def test_add_node(tmpdir):\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         Add node and let ElastiCluster choose the name.\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         clean_os_environ_openstack()\n[Tests/Run Unit Tests                     ]   | >       cluster = make_cluster(tmpdir)\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py:51: \n[Tests/Run Unit Tests                     ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Tests/Run Unit Tests                     ]   | tests/_helpers/config.py:302: in make_cluster\n[Tests/Run Unit Tests                     ]   |     cluster = creator.create_cluster(template, cloud=cloud, setup=Mock())\n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:1064: in create_cluster\n[Tests/Run Unit Tests                     ]   |     cloud = self.create_cloud_provider(template)\n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:985: in create_cloud_provider\n[Tests/Run Unit Tests                     ]   |     ctor = _get_provider(provider, CLOUD_PROVIDERS)\n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:312: in _get_provider\n[Tests/Run Unit Tests                     ]   |     mod = import_module(modname)\n[Tests/Run Unit Tests                     ]   | /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/importlib/__init__.py:37: in import_module\n[Tests/Run Unit Tests                     ]   |     __import__(name)\n[Tests/Run Unit Tests                     ]   | elasticluster/providers/openstack.py:76: in <module>\n[Tests/Run Unit Tests                     ]   |     from cinderclient import client as cinder_client\n[Tests/Run Unit Tests                     ]   | /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages/cinderclient/client.py:34: in <module>\n[Tests/Run Unit Tests                     ]   |     from keystoneauth1.identity import base\n[Tests/Run Unit Tests                     ]   | /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages/keystoneauth1/identity/__init__.py:14: in <module>\n[Tests/Run Unit Tests                     ]   |     from keystoneauth1.identity import generic\n[Tests/Run Unit Tests                     ]   | /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages/keystoneauth1/identity/generic/__init__.py:14: in <module>\n[Tests/Run Unit Tests                     ]   |     from keystoneauth1.identity.generic.password import Password  # noqa\n[Tests/Run Unit Tests                     ]   | /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages/keystoneauth1/identity/generic/password.py:16: in <module>\n[Tests/Run Unit Tests                     ]   |     from keystoneauth1.identity import v3\n[Tests/Run Unit Tests                     ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     from keystoneauth1.identity.v3.application_credential import *  # noqa\n[Tests/Run Unit Tests                     ]   |     from keystoneauth1.identity.v3.base import *  # noqa\n[Tests/Run Unit Tests                     ]   |     from keystoneauth1.identity.v3.federation import *  # noqa\n[Tests/Run Unit Tests                     ]   |     from keystoneauth1.identity.v3.k2k import *  # noqa\n[Tests/Run Unit Tests                     ]   |     from keystoneauth1.identity.v3.multi_factor import *  # noqa\n[Tests/Run Unit Tests                     ]   |     from keystoneauth1.identity.v3.oidc import *  # noqa\n[Tests/Run Unit Tests                     ]   |     from keystoneauth1.identity.v3.password import *  # noqa\n[Tests/Run Unit Tests                     ]   |     from keystoneauth1.identity.v3.receipt import *  # noqa\n[Tests/Run Unit Tests                     ]   |     from keystoneauth1.identity.v3.token import *  # noqa\n[Tests/Run Unit Tests                     ]   |     from keystoneauth1.identity.v3.totp import *  # noqa\n[Tests/Run Unit Tests                     ]   |     from keystoneauth1.identity.v3.tokenless_auth import *  # noqa\n[Tests/Run Unit Tests                     ]   | >   from keystoneauth1.identity.v3.oauth2_client_credential import *  # noqa\n[Tests/Run Unit Tests                     ]   | E     File \"/opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages/keystoneauth1/identity/v3/oauth2_client_credential.py\", line 119\n[Tests/Run Unit Tests                     ]   | E       headers['Authorization'] = f'Bearer {oauth2_token}'\n[Tests/Run Unit Tests                     ]   | E                                                         ^\n[Tests/Run Unit Tests                     ]   | E   SyntaxError: invalid syntax\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages/keystoneauth1/identity/v3/__init__.py:26: SyntaxError\n[Tests/Run Unit Tests                     ]   | ________________________ test_add_node_with_custom_name ________________________\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tmpdir = local('/tmp/pytest-of-runneradmin/pytest-0/test_add_node_with_custom_name0')\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     def test_add_node_with_custom_name(tmpdir):\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         Add node with a given name.\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   | >       cluster = make_cluster(tmpdir)\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py:65: \n[Tests/Run Unit Tests                     ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Tests/Run Unit Tests                     ]   | tests/_helpers/config.py:302: in make_cluster\n[Tests/Run Unit Tests                     ]   |     cluster = creator.create_cluster(template, cloud=cloud, setup=Mock())\n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:1064: in create_cluster\n[Tests/Run Unit Tests                     ]   |     cloud = self.create_cloud_provider(template)\n[Tests/Run Unit Tests                     ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | self = <elasticluster.conf.Creator object at 0x7f92b0e2cd50>\n[Tests/Run Unit Tests                     ]   | cluster_template = 'example_openstack'\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     def create_cloud_provider(self, cluster_template):\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         Return cloud provider instance for the given cluster template.\n[Tests/Run Unit Tests                     ]   |     \n[Tests/Run Unit Tests                     ]   |         :param str cluster_template: name of cluster template to use\n[Tests/Run Unit Tests                     ]   |         :return: cloud provider instance that fulfills the contract of\n[Tests/Run Unit Tests                     ]   |                  :py:class:`elasticluster.providers.AbstractCloudProvider`\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             conf_template = self.cluster_conf[cluster_template]\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No cluster template `{0}` found in configuration file\"\n[Tests/Run Unit Tests                     ]   |                 .format(cluster_template))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             cloud_conf = conf_template['cloud']\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No cloud section for cluster template `{0}`\"\n[Tests/Run Unit Tests                     ]   |                 \" found in configuration file\"\n[Tests/Run Unit Tests                     ]   |                 .format(cluster_template))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             provider = cloud_conf['provider']\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No `provider` configuration defined\"\n[Tests/Run Unit Tests                     ]   |                 \" in cloud section `{0}`\"\n[Tests/Run Unit Tests                     ]   |                 \" of cluster template `{1}`\"\n[Tests/Run Unit Tests                     ]   |                 .format(\n[Tests/Run Unit Tests                     ]   |                     cloud_conf.get('name', '***'),\n[Tests/Run Unit Tests                     ]   |                     cluster_template\n[Tests/Run Unit Tests                     ]   |                 ))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             ctor = _get_provider(provider, CLOUD_PROVIDERS)\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"Unknown cloud provider `{0}` for cluster `{1}`\"\n[Tests/Run Unit Tests                     ]   |                 .format(provider, cluster_template))\n[Tests/Run Unit Tests                     ]   |         except (ImportError, AttributeError) as err:\n[Tests/Run Unit Tests                     ]   |             raise RuntimeError(\n[Tests/Run Unit Tests                     ]   |                 \"Unable to load cloud provider `{0}`: {1}: {2}\"\n[Tests/Run Unit Tests                     ]   | >               .format(provider, err.__class__.__name__, err))\n[Tests/Run Unit Tests                     ]   | E           RuntimeError: Unable to load cloud provider `openstack`: ImportError: cannot import name base\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:994: RuntimeError\n[Tests/Run Unit Tests                     ]   | _______________________________ test_remove_node _______________________________\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tmpdir = local('/tmp/pytest-of-runneradmin/pytest-0/test_remove_node0')\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     def test_remove_node(tmpdir):\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         Remove node\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   | >       cluster = make_cluster(tmpdir)\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py:78: \n[Tests/Run Unit Tests                     ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Tests/Run Unit Tests                     ]   | tests/_helpers/config.py:302: in make_cluster\n[Tests/Run Unit Tests                     ]   |     cluster = creator.create_cluster(template, cloud=cloud, setup=Mock())\n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:1064: in create_cluster\n[Tests/Run Unit Tests                     ]   |     cloud = self.create_cloud_provider(template)\n[Tests/Run Unit Tests                     ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | self = <elasticluster.conf.Creator object at 0x7f92b0f44b10>\n[Tests/Run Unit Tests                     ]   | cluster_template = 'example_openstack'\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     def create_cloud_provider(self, cluster_template):\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         Return cloud provider instance for the given cluster template.\n[Tests/Run Unit Tests                     ]   |     \n[Tests/Run Unit Tests                     ]   |         :param str cluster_template: name of cluster template to use\n[Tests/Run Unit Tests                     ]   |         :return: cloud provider instance that fulfills the contract of\n[Tests/Run Unit Tests                     ]   |                  :py:class:`elasticluster.providers.AbstractCloudProvider`\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             conf_template = self.cluster_conf[cluster_template]\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No cluster template `{0}` found in configuration file\"\n[Tests/Run Unit Tests                     ]   |                 .format(cluster_template))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             cloud_conf = conf_template['cloud']\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No cloud section for cluster template `{0}`\"\n[Tests/Run Unit Tests                     ]   |                 \" found in configuration file\"\n[Tests/Run Unit Tests                     ]   |                 .format(cluster_template))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             provider = cloud_conf['provider']\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No `provider` configuration defined\"\n[Tests/Run Unit Tests                     ]   |                 \" in cloud section `{0}`\"\n[Tests/Run Unit Tests                     ]   |                 \" of cluster template `{1}`\"\n[Tests/Run Unit Tests                     ]   |                 .format(\n[Tests/Run Unit Tests                     ]   |                     cloud_conf.get('name', '***'),\n[Tests/Run Unit Tests                     ]   |                     cluster_template\n[Tests/Run Unit Tests                     ]   |                 ))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             ctor = _get_provider(provider, CLOUD_PROVIDERS)\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"Unknown cloud provider `{0}` for cluster `{1}`\"\n[Tests/Run Unit Tests                     ]   |                 .format(provider, cluster_template))\n[Tests/Run Unit Tests                     ]   |         except (ImportError, AttributeError) as err:\n[Tests/Run Unit Tests                     ]   |             raise RuntimeError(\n[Tests/Run Unit Tests                     ]   |                 \"Unable to load cloud provider `{0}`: {1}: {2}\"\n[Tests/Run Unit Tests                     ]   | >               .format(provider, err.__class__.__name__, err))\n[Tests/Run Unit Tests                     ]   | E           RuntimeError: Unable to load cloud provider `openstack`: ImportError: cannot import name base\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:994: RuntimeError\n[Tests/Run Unit Tests                     ]   | __________________________ test_check_cluster_size_ok __________________________\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tmpdir = local('/tmp/pytest-of-runneradmin/pytest-0/test_check_cluster_size_ok0')\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     def test_check_cluster_size_ok(tmpdir):\n[Tests/Run Unit Tests                     ]   | >       cluster = make_cluster(tmpdir)\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py:120: \n[Tests/Run Unit Tests                     ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Tests/Run Unit Tests                     ]   | tests/_helpers/config.py:302: in make_cluster\n[Tests/Run Unit Tests                     ]   |     cluster = creator.create_cluster(template, cloud=cloud, setup=Mock())\n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:1064: in create_cluster\n[Tests/Run Unit Tests                     ]   |     cloud = self.create_cloud_provider(template)\n[Tests/Run Unit Tests                     ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | self = <elasticluster.conf.Creator object at 0x7f92b0d74ed0>\n[Tests/Run Unit Tests                     ]   | cluster_template = 'example_openstack'\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     def create_cloud_provider(self, cluster_template):\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         Return cloud provider instance for the given cluster template.\n[Tests/Run Unit Tests                     ]   |     \n[Tests/Run Unit Tests                     ]   |         :param str cluster_template: name of cluster template to use\n[Tests/Run Unit Tests                     ]   |         :return: cloud provider instance that fulfills the contract of\n[Tests/Run Unit Tests                     ]   |                  :py:class:`elasticluster.providers.AbstractCloudProvider`\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             conf_template = self.cluster_conf[cluster_template]\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No cluster template `{0}` found in configuration file\"\n[Tests/Run Unit Tests                     ]   |                 .format(cluster_template))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             cloud_conf = conf_template['cloud']\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No cloud section for cluster template `{0}`\"\n[Tests/Run Unit Tests                     ]   |                 \" found in configuration file\"\n[Tests/Run Unit Tests                     ]   |                 .format(cluster_template))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             provider = cloud_conf['provider']\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No `provider` configuration defined\"\n[Tests/Run Unit Tests                     ]   |                 \" in cloud section `{0}`\"\n[Tests/Run Unit Tests                     ]   |                 \" of cluster template `{1}`\"\n[Tests/Run Unit Tests                     ]   |                 .format(\n[Tests/Run Unit Tests                     ]   |                     cloud_conf.get('name', '***'),\n[Tests/Run Unit Tests                     ]   |                     cluster_template\n[Tests/Run Unit Tests                     ]   |                 ))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             ctor = _get_provider(provider, CLOUD_PROVIDERS)\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"Unknown cloud provider `{0}` for cluster `{1}`\"\n[Tests/Run Unit Tests                     ]   |                 .format(provider, cluster_template))\n[Tests/Run Unit Tests                     ]   |         except (ImportError, AttributeError) as err:\n[Tests/Run Unit Tests                     ]   |             raise RuntimeError(\n[Tests/Run Unit Tests                     ]   |                 \"Unable to load cloud provider `{0}`: {1}: {2}\"\n[Tests/Run Unit Tests                     ]   | >               .format(provider, err.__class__.__name__, err))\n[Tests/Run Unit Tests                     ]   | E           RuntimeError: Unable to load cloud provider `openstack`: ImportError: cannot import name base\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:994: RuntimeError\n[Tests/Run Unit Tests                     ]   | _________________________ test_check_cluster_size_fail _________________________\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tmpdir = local('/tmp/pytest-of-runneradmin/pytest-0/test_check_cluster_size_fail0')\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     def test_check_cluster_size_fail(tmpdir):\n[Tests/Run Unit Tests                     ]   | >       cluster = make_cluster(tmpdir)\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py:130: \n[Tests/Run Unit Tests                     ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Tests/Run Unit Tests                     ]   | tests/_helpers/config.py:302: in make_cluster\n[Tests/Run Unit Tests                     ]   |     cluster = creator.create_cluster(template, cloud=cloud, setup=Mock())\n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:1064: in create_cluster\n[Tests/Run Unit Tests                     ]   |     cloud = self.create_cloud_provider(template)\n[Tests/Run Unit Tests                     ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | self = <elasticluster.conf.Creator object at 0x7f92b0f662d0>\n[Tests/Run Unit Tests                     ]   | cluster_template = 'example_openstack'\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     def create_cloud_provider(self, cluster_template):\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         Return cloud provider instance for the given cluster template.\n[Tests/Run Unit Tests                     ]   |     \n[Tests/Run Unit Tests                     ]   |         :param str cluster_template: name of cluster template to use\n[Tests/Run Unit Tests                     ]   |         :return: cloud provider instance that fulfills the contract of\n[Tests/Run Unit Tests                     ]   |                  :py:class:`elasticluster.providers.AbstractCloudProvider`\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             conf_template = self.cluster_conf[cluster_template]\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No cluster template `{0}` found in configuration file\"\n[Tests/Run Unit Tests                     ]   |                 .format(cluster_template))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             cloud_conf = conf_template['cloud']\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No cloud section for cluster template `{0}`\"\n[Tests/Run Unit Tests                     ]   |                 \" found in configuration file\"\n[Tests/Run Unit Tests                     ]   |                 .format(cluster_template))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             provider = cloud_conf['provider']\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No `provider` configuration defined\"\n[Tests/Run Unit Tests                     ]   |                 \" in cloud section `{0}`\"\n[Tests/Run Unit Tests                     ]   |                 \" of cluster template `{1}`\"\n[Tests/Run Unit Tests                     ]   |                 .format(\n[Tests/Run Unit Tests                     ]   |                     cloud_conf.get('name', '***'),\n[Tests/Run Unit Tests                     ]   |                     cluster_template\n[Tests/Run Unit Tests                     ]   |                 ))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             ctor = _get_provider(provider, CLOUD_PROVIDERS)\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"Unknown cloud provider `{0}` for cluster `{1}`\"\n[Tests/Run Unit Tests                     ]   |                 .format(provider, cluster_template))\n[Tests/Run Unit Tests                     ]   |         except (ImportError, AttributeError) as err:\n[Tests/Run Unit Tests                     ]   |             raise RuntimeError(\n[Tests/Run Unit Tests                     ]   |                 \"Unable to load cloud provider `{0}`: {1}: {2}\"\n[Tests/Run Unit Tests                     ]   | >               .format(provider, err.__class__.__name__, err))\n[Tests/Run Unit Tests                     ]   | E           RuntimeError: Unable to load cloud provider `openstack`: ImportError: cannot import name base\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:994: RuntimeError\n[Tests/Run Unit Tests                     ]   | ______________________________ test_get_all_nodes ______________________________\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tmpdir = local('/tmp/pytest-of-runneradmin/pytest-0/test_get_all_nodes0')\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     def test_get_all_nodes(tmpdir):\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         Check that `Cluster.get_all_nodes()` returns all nodes in the cluster.\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   | >       cluster = make_cluster(tmpdir)\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py:147: \n[Tests/Run Unit Tests                     ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Tests/Run Unit Tests                     ]   | tests/_helpers/config.py:302: in make_cluster\n[Tests/Run Unit Tests                     ]   |     cluster = creator.create_cluster(template, cloud=cloud, setup=Mock())\n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:1064: in create_cluster\n[Tests/Run Unit Tests                     ]   |     cloud = self.create_cloud_provider(template)\n[Tests/Run Unit Tests                     ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | self = <elasticluster.conf.Creator object at 0x7f92b0f40690>\n[Tests/Run Unit Tests                     ]   | cluster_template = 'example_openstack'\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     def create_cloud_provider(self, cluster_template):\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         Return cloud provider instance for the given cluster template.\n[Tests/Run Unit Tests                     ]   |     \n[Tests/Run Unit Tests                     ]   |         :param str cluster_template: name of cluster template to use\n[Tests/Run Unit Tests                     ]   |         :return: cloud provider instance that fulfills the contract of\n[Tests/Run Unit Tests                     ]   |                  :py:class:`elasticluster.providers.AbstractCloudProvider`\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             conf_template = self.cluster_conf[cluster_template]\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No cluster template `{0}` found in configuration file\"\n[Tests/Run Unit Tests                     ]   |                 .format(cluster_template))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             cloud_conf = conf_template['cloud']\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No cloud section for cluster template `{0}`\"\n[Tests/Run Unit Tests                     ]   |                 \" found in configuration file\"\n[Tests/Run Unit Tests                     ]   |                 .format(cluster_template))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             provider = cloud_conf['provider']\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No `provider` configuration defined\"\n[Tests/Run Unit Tests                     ]   |                 \" in cloud section `{0}`\"\n[Tests/Run Unit Tests                     ]   |                 \" of cluster template `{1}`\"\n[Tests/Run Unit Tests                     ]   |                 .format(\n[Tests/Run Unit Tests                     ]   |                     cloud_conf.get('name', '***'),\n[Tests/Run Unit Tests                     ]   |                     cluster_template\n[Tests/Run Unit Tests                     ]   |                 ))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             ctor = _get_provider(provider, CLOUD_PROVIDERS)\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"Unknown cloud provider `{0}` for cluster `{1}`\"\n[Tests/Run Unit Tests                     ]   |                 .format(provider, cluster_template))\n[Tests/Run Unit Tests                     ]   |         except (ImportError, AttributeError) as err:\n[Tests/Run Unit Tests                     ]   |             raise RuntimeError(\n[Tests/Run Unit Tests                     ]   |                 \"Unable to load cloud provider `{0}`: {1}: {2}\"\n[Tests/Run Unit Tests                     ]   | >               .format(provider, err.__class__.__name__, err))\n[Tests/Run Unit Tests                     ]   | E           RuntimeError: Unable to load cloud provider `openstack`: ImportError: cannot import name base\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:994: RuntimeError\n[Tests/Run Unit Tests                     ]   | _______________________ test_get_ssh_to_node_with_class ________________________\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tmpdir = local('/tmp/pytest-of-runneradmin/pytest-0/test_get_ssh_to_node_with_clas0')\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     def test_get_ssh_to_node_with_class(tmpdir):\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         Get frontend node\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   | >       cluster = make_cluster(tmpdir)\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py:188: \n[Tests/Run Unit Tests                     ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Tests/Run Unit Tests                     ]   | tests/_helpers/config.py:302: in make_cluster\n[Tests/Run Unit Tests                     ]   |     cluster = creator.create_cluster(template, cloud=cloud, setup=Mock())\n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:1064: in create_cluster\n[Tests/Run Unit Tests                     ]   |     cloud = self.create_cloud_provider(template)\n[Tests/Run Unit Tests                     ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | self = <elasticluster.conf.Creator object at 0x7f92b0d74410>\n[Tests/Run Unit Tests                     ]   | cluster_template = 'example_openstack'\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     def create_cloud_provider(self, cluster_template):\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         Return cloud provider instance for the given cluster template.\n[Tests/Run Unit Tests                     ]   |     \n[Tests/Run Unit Tests                     ]   |         :param str cluster_template: name of cluster template to use\n[Tests/Run Unit Tests                     ]   |         :return: cloud provider instance that fulfills the contract of\n[Tests/Run Unit Tests                     ]   |                  :py:class:`elasticluster.providers.AbstractCloudProvider`\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             conf_template = self.cluster_conf[cluster_template]\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No cluster template `{0}` found in configuration file\"\n[Tests/Run Unit Tests                     ]   |                 .format(cluster_template))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             cloud_conf = conf_template['cloud']\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No cloud section for cluster template `{0}`\"\n[Tests/Run Unit Tests                     ]   |                 \" found in configuration file\"\n[Tests/Run Unit Tests                     ]   |                 .format(cluster_template))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             provider = cloud_conf['provider']\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No `provider` configuration defined\"\n[Tests/Run Unit Tests                     ]   |                 \" in cloud section `{0}`\"\n[Tests/Run Unit Tests                     ]   |                 \" of cluster template `{1}`\"\n[Tests/Run Unit Tests                     ]   |                 .format(\n[Tests/Run Unit Tests                     ]   |                     cloud_conf.get('name', '***'),\n[Tests/Run Unit Tests                     ]   |                     cluster_template\n[Tests/Run Unit Tests                     ]   |                 ))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             ctor = _get_provider(provider, CLOUD_PROVIDERS)\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"Unknown cloud provider `{0}` for cluster `{1}`\"\n[Tests/Run Unit Tests                     ]   |                 .format(provider, cluster_template))\n[Tests/Run Unit Tests                     ]   |         except (ImportError, AttributeError) as err:\n[Tests/Run Unit Tests                     ]   |             raise RuntimeError(\n[Tests/Run Unit Tests                     ]   |                 \"Unable to load cloud provider `{0}`: {1}: {2}\"\n[Tests/Run Unit Tests                     ]   | >               .format(provider, err.__class__.__name__, err))\n[Tests/Run Unit Tests                     ]   | E           RuntimeError: Unable to load cloud provider `openstack`: ImportError: cannot import name base\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:994: RuntimeError\n[Tests/Run Unit Tests                     ]   | ______________________ test_get_ssh_to_node_with_nodename ______________________\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tmpdir = local('/tmp/pytest-of-runneradmin/pytest-0/test_get_ssh_to_node_with_node0')\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     def test_get_ssh_to_node_with_nodename(tmpdir):\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         Get frontend node\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   | >       cluster = make_cluster(tmpdir)\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py:198: \n[Tests/Run Unit Tests                     ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Tests/Run Unit Tests                     ]   | tests/_helpers/config.py:302: in make_cluster\n[Tests/Run Unit Tests                     ]   |     cluster = creator.create_cluster(template, cloud=cloud, setup=Mock())\n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:1064: in create_cluster\n[Tests/Run Unit Tests                     ]   |     cloud = self.create_cloud_provider(template)\n[Tests/Run Unit Tests                     ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | self = <elasticluster.conf.Creator object at 0x7f92b0f23d90>\n[Tests/Run Unit Tests                     ]   | cluster_template = 'example_openstack'\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     def create_cloud_provider(self, cluster_template):\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         Return cloud provider instance for the given cluster template.\n[Tests/Run Unit Tests                     ]   |     \n[Tests/Run Unit Tests                     ]   |         :param str cluster_template: name of cluster template to use\n[Tests/Run Unit Tests                     ]   |         :return: cloud provider instance that fulfills the contract of\n[Tests/Run Unit Tests                     ]   |                  :py:class:`elasticluster.providers.AbstractCloudProvider`\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             conf_template = self.cluster_conf[cluster_template]\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No cluster template `{0}` found in configuration file\"\n[Tests/Run Unit Tests                     ]   |                 .format(cluster_template))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             cloud_conf = conf_template['cloud']\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No cloud section for cluster template `{0}`\"\n[Tests/Run Unit Tests                     ]   |                 \" found in configuration file\"\n[Tests/Run Unit Tests                     ]   |                 .format(cluster_template))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             provider = cloud_conf['provider']\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No `provider` configuration defined\"\n[Tests/Run Unit Tests                     ]   |                 \" in cloud section `{0}`\"\n[Tests/Run Unit Tests                     ]   |                 \" of cluster template `{1}`\"\n[Tests/Run Unit Tests                     ]   |                 .format(\n[Tests/Run Unit Tests                     ]   |                     cloud_conf.get('name', '***'),\n[Tests/Run Unit Tests                     ]   |                     cluster_template\n[Tests/Run Unit Tests                     ]   |                 ))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             ctor = _get_provider(provider, CLOUD_PROVIDERS)\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"Unknown cloud provider `{0}` for cluster `{1}`\"\n[Tests/Run Unit Tests                     ]   |                 .format(provider, cluster_template))\n[Tests/Run Unit Tests                     ]   |         except (ImportError, AttributeError) as err:\n[Tests/Run Unit Tests                     ]   |             raise RuntimeError(\n[Tests/Run Unit Tests                     ]   |                 \"Unable to load cloud provider `{0}`: {1}: {2}\"\n[Tests/Run Unit Tests                     ]   | >               .format(provider, err.__class__.__name__, err))\n[Tests/Run Unit Tests                     ]   | E           RuntimeError: Unable to load cloud provider `openstack`: ImportError: cannot import name base\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:994: RuntimeError\n[Tests/Run Unit Tests                     ]   | ______________________ test_get_ssh_to_node_with_defaults ______________________\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tmpdir = local('/tmp/pytest-of-runneradmin/pytest-0/test_get_ssh_to_node_with_defa0')\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     def test_get_ssh_to_node_with_defaults(tmpdir):\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         Get frontend node\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   | >       cluster = make_cluster(tmpdir)\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py:208: \n[Tests/Run Unit Tests                     ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Tests/Run Unit Tests                     ]   | tests/_helpers/config.py:302: in make_cluster\n[Tests/Run Unit Tests                     ]   |     cluster = creator.create_cluster(template, cloud=cloud, setup=Mock())\n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:1064: in create_cluster\n[Tests/Run Unit Tests                     ]   |     cloud = self.create_cloud_provider(template)\n[Tests/Run Unit Tests                     ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | self = <elasticluster.conf.Creator object at 0x7f92b0c57790>\n[Tests/Run Unit Tests                     ]   | cluster_template = 'example_openstack'\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     def create_cloud_provider(self, cluster_template):\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         Return cloud provider instance for the given cluster template.\n[Tests/Run Unit Tests                     ]   |     \n[Tests/Run Unit Tests                     ]   |         :param str cluster_template: name of cluster template to use\n[Tests/Run Unit Tests                     ]   |         :return: cloud provider instance that fulfills the contract of\n[Tests/Run Unit Tests                     ]   |                  :py:class:`elasticluster.providers.AbstractCloudProvider`\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             conf_template = self.cluster_conf[cluster_template]\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No cluster template `{0}` found in configuration file\"\n[Tests/Run Unit Tests                     ]   |                 .format(cluster_template))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             cloud_conf = conf_template['cloud']\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No cloud section for cluster template `{0}`\"\n[Tests/Run Unit Tests                     ]   |                 \" found in configuration file\"\n[Tests/Run Unit Tests                     ]   |                 .format(cluster_template))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             provider = cloud_conf['provider']\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No `provider` configuration defined\"\n[Tests/Run Unit Tests                     ]   |                 \" in cloud section `{0}`\"\n[Tests/Run Unit Tests                     ]   |                 \" of cluster template `{1}`\"\n[Tests/Run Unit Tests                     ]   |                 .format(\n[Tests/Run Unit Tests                     ]   |                     cloud_conf.get('name', '***'),\n[Tests/Run Unit Tests                     ]   |                     cluster_template\n[Tests/Run Unit Tests                     ]   |                 ))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             ctor = _get_provider(provider, CLOUD_PROVIDERS)\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"Unknown cloud provider `{0}` for cluster `{1}`\"\n[Tests/Run Unit Tests                     ]   |                 .format(provider, cluster_template))\n[Tests/Run Unit Tests                     ]   |         except (ImportError, AttributeError) as err:\n[Tests/Run Unit Tests                     ]   |             raise RuntimeError(\n[Tests/Run Unit Tests                     ]   |                 \"Unable to load cloud provider `{0}`: {1}: {2}\"\n[Tests/Run Unit Tests                     ]   | >               .format(provider, err.__class__.__name__, err))\n[Tests/Run Unit Tests                     ]   | E           RuntimeError: Unable to load cloud provider `openstack`: ImportError: cannot import name base\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:994: RuntimeError\n[Tests/Run Unit Tests                     ]   | __________________________________ test_setup __________________________________\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tmpdir = local('/tmp/pytest-of-runneradmin/pytest-0/test_setup0')\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     def test_setup(tmpdir):\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         Setup the nodes of a cluster\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         # pylint: disable=protected-access\n[Tests/Run Unit Tests                     ]   | >       cluster = make_cluster(tmpdir)\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tests/test_cluster.py:219: \n[Tests/Run Unit Tests                     ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Tests/Run Unit Tests                     ]   | tests/_helpers/config.py:302: in make_cluster\n[Tests/Run Unit Tests                     ]   |     cluster = creator.create_cluster(template, cloud=cloud, setup=Mock())\n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:1064: in create_cluster\n[Tests/Run Unit Tests                     ]   |     cloud = self.create_cloud_provider(template)\n[Tests/Run Unit Tests                     ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | self = <elasticluster.conf.Creator object at 0x7f92b0f1e710>\n[Tests/Run Unit Tests                     ]   | cluster_template = 'example_openstack'\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     def create_cloud_provider(self, cluster_template):\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         Return cloud provider instance for the given cluster template.\n[Tests/Run Unit Tests                     ]   |     \n[Tests/Run Unit Tests                     ]   |         :param str cluster_template: name of cluster template to use\n[Tests/Run Unit Tests                     ]   |         :return: cloud provider instance that fulfills the contract of\n[Tests/Run Unit Tests                     ]   |                  :py:class:`elasticluster.providers.AbstractCloudProvider`\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             conf_template = self.cluster_conf[cluster_template]\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No cluster template `{0}` found in configuration file\"\n[Tests/Run Unit Tests                     ]   |                 .format(cluster_template))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             cloud_conf = conf_template['cloud']\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No cloud section for cluster template `{0}`\"\n[Tests/Run Unit Tests                     ]   |                 \" found in configuration file\"\n[Tests/Run Unit Tests                     ]   |                 .format(cluster_template))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             provider = cloud_conf['provider']\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No `provider` configuration defined\"\n[Tests/Run Unit Tests                     ]   |                 \" in cloud section `{0}`\"\n[Tests/Run Unit Tests                     ]   |                 \" of cluster template `{1}`\"\n[Tests/Run Unit Tests                     ]   |                 .format(\n[Tests/Run Unit Tests                     ]   |                     cloud_conf.get('name', '***'),\n[Tests/Run Unit Tests                     ]   |                     cluster_template\n[Tests/Run Unit Tests                     ]   |                 ))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             ctor = _get_provider(provider, CLOUD_PROVIDERS)\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"Unknown cloud provider `{0}` for cluster `{1}`\"\n[Tests/Run Unit Tests                     ]   |                 .format(provider, cluster_template))\n[Tests/Run Unit Tests                     ]   |         except (ImportError, AttributeError) as err:\n[Tests/Run Unit Tests                     ]   |             raise RuntimeError(\n[Tests/Run Unit Tests                     ]   |                 \"Unable to load cloud provider `{0}`: {1}: {2}\"\n[Tests/Run Unit Tests                     ]   | >               .format(provider, err.__class__.__name__, err))\n[Tests/Run Unit Tests                     ]   | E           RuntimeError: Unable to load cloud provider `openstack`: ImportError: cannot import name base\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:994: RuntimeError\n[Tests/Run Unit Tests                     ]   | ______________________ test_get_cloud_provider_openstack _______________________\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tmpdir = local('/tmp/pytest-of-runneradmin/pytest-0/test_get_cloud_provider_openst0')\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     def test_get_cloud_provider_openstack(tmpdir):\n[Tests/Run Unit Tests                     ]   |         wd = tmpdir.strpath\n[Tests/Run Unit Tests                     ]   |         ssh_key_path = os.path.join(wd, 'id_rsa.pem')\n[Tests/Run Unit Tests                     ]   |         with open(ssh_key_path, 'w+') as ssh_key_file:\n[Tests/Run Unit Tests                     ]   |             # don't really care about SSH key, just that the file exists\n[Tests/Run Unit Tests                     ]   |             ssh_key_file.write('')\n[Tests/Run Unit Tests                     ]   |             ssh_key_file.flush()\n[Tests/Run Unit Tests                     ]   |         config_path = os.path.join(wd, 'config.ini')\n[Tests/Run Unit Tests                     ]   |         with open(config_path, 'w+') as config_file:\n[Tests/Run Unit Tests                     ]   |             config_file.write(\n[Tests/Run Unit Tests                     ]   |                 \"\"\"\n[Tests/Run Unit Tests                     ]   |     [cloud/openstack]\n[Tests/Run Unit Tests                     ]   |     provider = openstack\n[Tests/Run Unit Tests                     ]   |     auth_url = http://openstack.example.com:5000/v2.0\n[Tests/Run Unit Tests                     ]   |     username = ${USER}\n[Tests/Run Unit Tests                     ]   |     password = XXXXXX\n[Tests/Run Unit Tests                     ]   |     project_name = test\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |                 + make_config_snippet(\"cluster\", \"example_openstack\")\n[Tests/Run Unit Tests                     ]   |                 + make_config_snippet(\"login\", \"ubuntu\", keyname='test', valid_path=ssh_key_path)\n[Tests/Run Unit Tests                     ]   |                 + make_config_snippet(\"setup\", \"slurm_setup_old\")\n[Tests/Run Unit Tests                     ]   |             )\n[Tests/Run Unit Tests                     ]   |         creator = make_creator(config_path)\n[Tests/Run Unit Tests                     ]   | >       cloud = creator.create_cloud_provider('example_openstack')\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | tests/test_conf.py:313: \n[Tests/Run Unit Tests                     ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | self = <elasticluster.conf.Creator object at 0x7f92b0a7ca90>\n[Tests/Run Unit Tests                     ]   | cluster_template = 'example_openstack'\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   |     def create_cloud_provider(self, cluster_template):\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         Return cloud provider instance for the given cluster template.\n[Tests/Run Unit Tests                     ]   |     \n[Tests/Run Unit Tests                     ]   |         :param str cluster_template: name of cluster template to use\n[Tests/Run Unit Tests                     ]   |         :return: cloud provider instance that fulfills the contract of\n[Tests/Run Unit Tests                     ]   |                  :py:class:`elasticluster.providers.AbstractCloudProvider`\n[Tests/Run Unit Tests                     ]   |         \"\"\"\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             conf_template = self.cluster_conf[cluster_template]\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No cluster template `{0}` found in configuration file\"\n[Tests/Run Unit Tests                     ]   |                 .format(cluster_template))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             cloud_conf = conf_template['cloud']\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No cloud section for cluster template `{0}`\"\n[Tests/Run Unit Tests                     ]   |                 \" found in configuration file\"\n[Tests/Run Unit Tests                     ]   |                 .format(cluster_template))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             provider = cloud_conf['provider']\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"No `provider` configuration defined\"\n[Tests/Run Unit Tests                     ]   |                 \" in cloud section `{0}`\"\n[Tests/Run Unit Tests                     ]   |                 \" of cluster template `{1}`\"\n[Tests/Run Unit Tests                     ]   |                 .format(\n[Tests/Run Unit Tests                     ]   |                     cloud_conf.get('name', '***'),\n[Tests/Run Unit Tests                     ]   |                     cluster_template\n[Tests/Run Unit Tests                     ]   |                 ))\n[Tests/Run Unit Tests                     ]   |         try:\n[Tests/Run Unit Tests                     ]   |             ctor = _get_provider(provider, CLOUD_PROVIDERS)\n[Tests/Run Unit Tests                     ]   |         except KeyError:\n[Tests/Run Unit Tests                     ]   |             # this should have been caught during config validation!\n[Tests/Run Unit Tests                     ]   |             raise ConfigurationError(\n[Tests/Run Unit Tests                     ]   |                 \"Unknown cloud provider `{0}` for cluster `{1}`\"\n[Tests/Run Unit Tests                     ]   |                 .format(provider, cluster_template))\n[Tests/Run Unit Tests                     ]   |         except (ImportError, AttributeError) as err:\n[Tests/Run Unit Tests                     ]   |             raise RuntimeError(\n[Tests/Run Unit Tests                     ]   |                 \"Unable to load cloud provider `{0}`: {1}: {2}\"\n[Tests/Run Unit Tests                     ]   | >               .format(provider, err.__class__.__name__, err))\n[Tests/Run Unit Tests                     ]   | E           RuntimeError: Unable to load cloud provider `openstack`: ImportError: cannot import name base\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py:994: RuntimeError\n[Tests/Run Unit Tests                     ]   | =============================== warnings summary ===============================\n[Tests/Run Unit Tests                     ]   | /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages/paramiko/transport.py:33\n[Tests/Run Unit Tests                     ]   |   /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages/paramiko/transport.py:33: CryptographyDeprecationWarning: Python 2 is no longer supported by the Python core team. Support for it is now deprecated in cryptography, and will be removed in the next release.\n[Tests/Run Unit Tests                     ]   |     from cryptography.hazmat.backends import default_backend\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | -- Docs: https://docs.pytest.org/en/latest/warnings.html\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | ---------- coverage: platform linux2, python 2.7.18-final-0 ----------\n[Tests/Run Unit Tests                     ]   | Name                                           Stmts   Miss Branch BrPart  Cover\n[Tests/Run Unit Tests                     ]   | --------------------------------------------------------------------------------\n[Tests/Run Unit Tests                     ]   | elasticluster/__init__.py                          6      0      0      0   100%\n[Tests/Run Unit Tests                     ]   | elasticluster/__main__.py                         95     23     22      7    71%\n[Tests/Run Unit Tests                     ]   | elasticluster/cluster.py                         591    245    222     35    54%\n[Tests/Run Unit Tests                     ]   | elasticluster/conf.py                            371     82    164     20    75%\n[Tests/Run Unit Tests                     ]   | elasticluster/exceptions.py                       38      1      0      0    97%\n[Tests/Run Unit Tests                     ]   | elasticluster/gc3pie_config.py                   126    107     58      1    11%\n[Tests/Run Unit Tests                     ]   | elasticluster/migration_tools.py                  59     38     22      0    26%\n[Tests/Run Unit Tests                     ]   | elasticluster/providers/__init__.py               29     10      0      0    66%\n[Tests/Run Unit Tests                     ]   | elasticluster/providers/ansible_provider.py      227    171    102      6    20%\n[Tests/Run Unit Tests                     ]   | elasticluster/providers/azure_provider.py        195    151     36      1    19%\n[Tests/Run Unit Tests                     ]   | elasticluster/providers/ec2_boto.py              287    108     98     15    60%\n[Tests/Run Unit Tests                     ]   | elasticluster/providers/gce.py                   252    186     74      0    20%\n[Tests/Run Unit Tests                     ]   | elasticluster/providers/libcloud_provider.py     132    107     46      0    14%\n[Tests/Run Unit Tests                     ]   | elasticluster/providers/opennebula.py            176    176     64      0     0%\n[Tests/Run Unit Tests                     ]   | elasticluster/providers/openstack.py             540    522    162      0     3%\n[Tests/Run Unit Tests                     ]   | elasticluster/repository.py                      183     58     40      7    62%\n[Tests/Run Unit Tests                     ]   | elasticluster/subcommands.py                     542    391    137      1    22%\n[Tests/Run Unit Tests                     ]   | elasticluster/utils.py                           240    117     66      7    46%\n[Tests/Run Unit Tests                     ]   | elasticluster/validate.py                         79     29     18      4    58%\n[Tests/Run Unit Tests                     ]   | --------------------------------------------------------------------------------\n[Tests/Run Unit Tests                     ]   | TOTAL                                           4168   2522   1331    104    36%\n[Tests/Run Unit Tests                     ]   | \n[Tests/Run Unit Tests                     ]   | ============== 11 failed, 61 passed, 1 warnings in 13.21 seconds ===============\n[Tests/Run Unit Tests                     ]   \u274c  Failure - Main Run unit tests\n[Tests/Run Unit Tests                     ] exitcode '1': failure\n[Tests/Run Unit Tests                     ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'Run Unit Tests' failed\n"
}