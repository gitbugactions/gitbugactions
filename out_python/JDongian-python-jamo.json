{
    "repository": "JDongian/python-jamo",
    "clone_url": "https://github.com/JDongian/python-jamo.git",
    "timestamp": "2023-05-29T15:48:41.713004Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Test and lint/Run linters and formatters] \ud83d\ude80  Start image=crawlergpt:latest\n[Test and lint/Run unit tests            ] \ud83d\ude80  Start image=crawlergpt:latest\n[Test and lint/Run linters and formatters]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test and lint/Run unit tests            ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test and lint/Run unit tests            ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test and lint/Run linters and formatters]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test and lint/Run unit tests            ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test and lint/Run linters and formatters]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test and lint/Run linters and formatters]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/JDongian-python-jamo] user=0 workdir=\n[Test and lint/Run unit tests            ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/JDongian-python-jamo] user=0 workdir=\n[Test and lint/Run linters and formatters]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[Test and lint/Run unit tests            ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[Test and lint/Run linters and formatters] \u2b50 Run Main actions/checkout@v2\n[Test and lint/Run unit tests            ] \ud83e\uddea  Matrix: map[python-version:pypy-3.7]\n[Test and lint/Run unit tests            ] \u2b50 Run Main actions/checkout@v2\n[Test and lint/Run linters and formatters]   \u2705  Success - Main actions/checkout@v2\n[Test and lint/Run unit tests            ]   \u2705  Success - Main actions/checkout@v2\n[Test and lint/Run linters and formatters] \u2b50 Run Main Set up Python\n[Test and lint/Run linters and formatters]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[Test and lint/Run unit tests            ] \u2b50 Run Main Set up Python pypy-3.7\n[Test and lint/Run unit tests            ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[Test and lint/Run linters and formatters]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[Test and lint/Run unit tests            ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[Test and lint/Run unit tests            ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[Test and lint/Run linters and formatters]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[Test and lint/Run linters and formatters]   \ud83d\udcac  ::debug::Semantic version spec of 3.10 is 3.10\n[Test and lint/Run linters and formatters]   \ud83d\udcac  ::debug::isExplicit: \n[Test and lint/Run linters and formatters]   \ud83d\udcac  ::debug::explicit? false\n[Test and lint/Run linters and formatters]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Test and lint/Run linters and formatters]   \ud83d\udcac  ::debug::explicit? true\n[Test and lint/Run linters and formatters]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Test and lint/Run linters and formatters]   \ud83d\udcac  ::debug::explicit? true\n[Test and lint/Run linters and formatters]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Test and lint/Run linters and formatters]   \ud83d\udcac  ::debug::explicit? true\n[Test and lint/Run linters and formatters]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Test and lint/Run linters and formatters]   \ud83d\udcac  ::debug::explicit? true\n[Test and lint/Run unit tests            ]   \ud83d\udcac  ::debug::isExplicit: \n[Test and lint/Run linters and formatters]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Test and lint/Run linters and formatters]   \ud83d\udcac  ::debug::explicit? true\n[Test and lint/Run linters and formatters]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Test and lint/Run linters and formatters]   \ud83d\udcac  ::debug::explicit? true\n[Test and lint/Run linters and formatters]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Test and lint/Run linters and formatters]   \ud83d\udcac  ::debug::match not found\n[Test and lint/Run unit tests            ]   \ud83d\udcac  ::debug::explicit? false\n[Test and lint/Run unit tests            ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Test and lint/Run unit tests            ]   \ud83d\udcac  ::debug::explicit? true\n[Test and lint/Run unit tests            ]   \ud83d\udcac  ::debug::isExplicit: 3.6.12\n[Test and lint/Run unit tests            ]   \ud83d\udcac  ::debug::explicit? true\n[Test and lint/Run unit tests            ]   \ud83d\udcac  ::debug::isExplicit: 3.7.10\n[Test and lint/Run unit tests            ]   \ud83d\udcac  ::debug::explicit? true\n[Test and lint/Run unit tests            ]   \ud83d\udcac  ::debug::evaluating 3 versions\n[Test and lint/Run linters and formatters]   | Version 3.10 was not found in the local cache\n[Test and lint/Run unit tests            ]   \ud83d\udcac  ::debug::matched: 3.7.10\n[Test and lint/Run unit tests            ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/PyPy/3.7.10/x64\n[Test and lint/Run unit tests            ]   \ud83d\udcac  ::debug::Found tool in cache PyPy 3.7.10 x64\n[Test and lint/Run unit tests            ]   | Successfully setup PyPy 7.3.5\n[Test and lint/Run unit tests            ]   |  with Python (3.7.10)\n[Test and lint/Run unit tests            ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[Test and lint/Run unit tests            ]   \u2705  Success - Main Set up Python pypy-3.7\n[Test and lint/Run linters and formatters]   \u2757  ::error::API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Test and lint/Run linters and formatters]   \u274c  Failure - Main Set up Python\n[Test and lint/Run unit tests            ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/PyPy/3.7.10/x64/bin\n[Test and lint/Run unit tests            ]   \u2699  ::add-path:: /opt/hostedtoolcache/PyPy/3.7.10/x64/bin\n[Test and lint/Run unit tests            ]   \u2699  ::add-path:: /opt/hostedtoolcache/PyPy/3.7.10/x64/bin\n[Test and lint/Run unit tests            ] \u2b50 Run Main Install tox\n[Test and lint/Run linters and formatters] exitcode '1': failure\n[Test and lint/Run unit tests            ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test and lint/Run unit tests            ]   | Collecting tox\n[Test and lint/Run unit tests            ]   |   Downloading tox-4.5.2-py3-none-any.whl (148 kB)\n[Test and lint/Run unit tests            ]   | Collecting tox-gh-actions\n[Test and lint/Run unit tests            ]   |   Downloading tox_gh_actions-3.1.1-py2.py3-none-any.whl (9.8 kB)\n[Test and lint/Run unit tests            ]   | Collecting cachetools>=5.3\n[Test and lint/Run unit tests            ]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[Test and lint/Run unit tests            ]   | Collecting chardet>=5.1\n[Test and lint/Run unit tests            ]   |   Downloading chardet-5.1.0-py3-none-any.whl (199 kB)\n[Test and lint/Run unit tests            ]   | Collecting colorama>=0.4.6\n[Test and lint/Run unit tests            ]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[Test and lint/Run unit tests            ]   | Collecting filelock>=3.12\n[Test and lint/Run unit tests            ]   |   Downloading filelock-3.12.0-py3-none-any.whl (10 kB)\n[Test and lint/Run unit tests            ]   | Collecting importlib-metadata>=6.6\n[Test and lint/Run unit tests            ]   |   Downloading importlib_metadata-6.6.0-py3-none-any.whl (22 kB)\n[Test and lint/Run unit tests            ]   | Collecting packaging>=23.1\n[Test and lint/Run unit tests            ]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[Test and lint/Run unit tests            ]   | Collecting platformdirs>=3.5.1\n[Test and lint/Run unit tests            ]   |   Downloading platformdirs-3.5.1-py3-none-any.whl (15 kB)\n[Test and lint/Run unit tests            ]   | Collecting pluggy>=1\n[Test and lint/Run unit tests            ]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[Test and lint/Run unit tests            ]   | Collecting pyproject-api>=1.5.1\n[Test and lint/Run unit tests            ]   |   Downloading pyproject_api-1.5.1-py3-none-any.whl (12 kB)\n[Test and lint/Run unit tests            ]   | Collecting tomli>=2.0.1\n[Test and lint/Run unit tests            ]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[Test and lint/Run unit tests            ]   | Collecting typing-extensions>=4.6.2\n[Test and lint/Run unit tests            ]   |   Downloading typing_extensions-4.6.2-py3-none-any.whl (31 kB)\n[Test and lint/Run unit tests            ]   | Collecting virtualenv>=20.23\n[Test and lint/Run unit tests            ]   |   Downloading virtualenv-20.23.0-py3-none-any.whl (3.3 MB)\n[Test and lint/Run unit tests            ]   | Collecting zipp>=0.5\n[Test and lint/Run unit tests            ]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[Test and lint/Run unit tests            ]   | Collecting distlib<1,>=0.3.6\n[Test and lint/Run unit tests            ]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[Test and lint/Run unit tests            ]   | Installing collected packages: zipp, typing-extensions, tomli, platformdirs, packaging, importlib-metadata, filelock, distlib, virtualenv, pyproject-api, pluggy, colorama, chardet, cachetools, tox, tox-gh-actions\n[Test and lint/Run unit tests            ]   | Successfully installed cachetools-5.3.1 chardet-5.1.0 colorama-0.4.6 distlib-0.3.6 filelock-3.12.0 importlib-metadata-6.6.0 packaging-23.1 platformdirs-3.5.1 pluggy-1.0.0 pyproject-api-1.5.1 tomli-2.0.1 tox-4.5.2 tox-gh-actions-3.1.1 typing-extensions-4.6.2 virtualenv-20.23.0 zipp-3.15.0\n[Test and lint/Run unit tests            ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[Test and lint/Run unit tests            ]   | You should consider upgrading via the '/opt/hostedtoolcache/PyPy/3.7.10/x64/bin/python -m pip install --upgrade pip' command.\n[Test and lint/Run unit tests            ]   \u2705  Success - Main Install tox\n[Test and lint/Run unit tests            ] \u2b50 Run Main Run tests with tox\n[Test and lint/Run unit tests            ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Test and lint/Run linters and formatters] \ud83c\udfc1  Job failed\n[Test and lint/Run unit tests            ]   | ROOT: tox-gh-actions couldn't understand the parallel option. ignoring the given option: 0\n[Test and lint/Run unit tests            ]   | pypy3.7: install_deps> python -I -m pip install nose2\n[Test and lint/Run unit tests            ]   | .pkg: install_requires> python -I -m pip install 'setuptools>=40.8.0' wheel\n[Test and lint/Run unit tests            ]   | .pkg: _optional_hooks> python /opt/hostedtoolcache/PyPy/3.7.10/x64/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[Test and lint/Run unit tests            ]   | .pkg: get_requires_for_build_sdist> python /opt/hostedtoolcache/PyPy/3.7.10/x64/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[Test and lint/Run unit tests            ]   | .pkg: freeze> python -m pip freeze --all\n[Test and lint/Run unit tests            ]   | .pkg: cffi==1.14.5,greenlet==0.4.13,pip==23.1.2,readline==6.2.4.1,setuptools==67.7.2,wheel==0.40.0\n[Test and lint/Run unit tests            ]   | .pkg: prepare_metadata_for_build_wheel> python /opt/hostedtoolcache/PyPy/3.7.10/x64/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[Test and lint/Run unit tests            ]   | .pkg: build_sdist> python /opt/hostedtoolcache/PyPy/3.7.10/x64/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[Test and lint/Run unit tests            ]   | pypy3.7: install_package> python -I -m pip install --force-reinstall --no-deps /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/JDongian-python-jamo/.tox/.tmp/package/1/jamo-0.4.3.tar.gz\n[Test and lint/Run unit tests            ]   | pypy3.7: freeze> python -m pip freeze --all\n[Test and lint/Run unit tests            ]   | pypy3.7: cffi==1.14.5,greenlet==0.4.13,jamo @ file:///tmp/de65f406-fe28-11ed-a890-af2cc187fc11/JDongian-python-jamo/.tox/.tmp/package/1/jamo-0.4.3.tar.gz#sha256=c13b656424c1530d455923b756db3ced6b8f01b9e814018792338321fe10a937,nose2==0.13.0,pip==23.1.2,readline==6.2.4.1,setuptools==67.7.2,wheel==0.40.0\n[Test and lint/Run unit tests            ]   | pypy3.7: tox-gh-actions couldn't understand the parallel option. ignoring the given option: 0\n[Test and lint/Run unit tests            ]   \u2753  ::group::tox: pypy3.7\n[Test and lint/Run unit tests            ]   | pypy3.7: commands[0]> nose2\n[Test and lint/Run unit tests            ]   | ..................\n[Test and lint/Run unit tests            ]   | ----------------------------------------------------------------------\n[Test and lint/Run unit tests            ]   | Ran 18 tests in 0.060s\n[Test and lint/Run unit tests            ]   | \n[Test and lint/Run unit tests            ]   | OK\n[Test and lint/Run unit tests            ]   | pypy3.7: tox-gh-actions couldn't understand the parallel option. ignoring the given option: 0\n[Test and lint/Run unit tests            ]   \u2753  ::endgroup::\n[Test and lint/Run unit tests            ]   | .pkg: _exit> python /opt/hostedtoolcache/PyPy/3.7.10/x64/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[Test and lint/Run unit tests            ]   |   pypy3.7: OK (24.13=setup[23.54]+cmd[0.59] seconds)\n[Test and lint/Run unit tests            ]   |   congratulations :) (24.57 seconds)\n[Test and lint/Run unit tests            ]   \u2705  Success - Main Run tests with tox\n[Test and lint/Run unit tests            ] \u2b50 Run Post Set up Python pypy-3.7\n[Test and lint/Run unit tests            ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[Test and lint/Run unit tests            ]   \u2705  Success - Post Set up Python pypy-3.7\n[Test and lint/Run unit tests            ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": "Error: Job 'Run linters and formatters' failed\n"
}