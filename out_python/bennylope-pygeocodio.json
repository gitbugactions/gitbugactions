{
    "repository": "bennylope/pygeocodio",
    "clone_url": "https://github.com/bennylope/pygeocodio.git",
    "timestamp": "2023-05-29T15:16:21.193558Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Tests/Test on Python 3.7] \ud83d\ude80  Start image=crawlergpt:latest\n[Tests/Test on Python 3.7]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Tests/Test on Python 3.7]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/Test on Python 3.7]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/Test on Python 3.7]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/bennylope-pygeocodio] user=0 workdir=\n[Tests/Test on Python 3.7]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[Tests/Test on Python 3.7] \ud83e\uddea  Matrix: map[python-version:3.7]\n[Tests/Test on Python 3.7] \u2b50 Run Main actions/checkout@v3\n[Tests/Test on Python 3.7]   \u2705  Success - Main actions/checkout@v3\n[Tests/Test on Python 3.7] \u2b50 Run Main Set up Python 3.7\n[Tests/Test on Python 3.7]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[Tests/Test on Python 3.7]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[Tests/Test on Python 3.7]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[Tests/Test on Python 3.7]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[Tests/Test on Python 3.7]   \u2753  ::group::Installed versions\n[Tests/Test on Python 3.7]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[Tests/Test on Python 3.7]   \ud83d\udcac  ::debug::isExplicit: \n[Tests/Test on Python 3.7]   \ud83d\udcac  ::debug::explicit? false\n[Tests/Test on Python 3.7]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Tests/Test on Python 3.7]   \ud83d\udcac  ::debug::explicit? true\n[Tests/Test on Python 3.7]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Tests/Test on Python 3.7]   \ud83d\udcac  ::debug::explicit? true\n[Tests/Test on Python 3.7]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Tests/Test on Python 3.7]   \ud83d\udcac  ::debug::explicit? true\n[Tests/Test on Python 3.7]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Tests/Test on Python 3.7]   \ud83d\udcac  ::debug::explicit? true\n[Tests/Test on Python 3.7]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Tests/Test on Python 3.7]   \ud83d\udcac  ::debug::explicit? true\n[Tests/Test on Python 3.7]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Tests/Test on Python 3.7]   \ud83d\udcac  ::debug::explicit? true\n[Tests/Test on Python 3.7]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Tests/Test on Python 3.7]   \ud83d\udcac  ::debug::matched: 3.7.11\n[Tests/Test on Python 3.7]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[Tests/Test on Python 3.7]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[Tests/Test on Python 3.7]   | Successfully set up CPython (3.7.11)\n[Tests/Test on Python 3.7]   \u2753  ::endgroup::\n[Tests/Test on Python 3.7]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[Tests/Test on Python 3.7]   \u2705  Success - Main Set up Python 3.7\n[Tests/Test on Python 3.7]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[Tests/Test on Python 3.7]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[Tests/Test on Python 3.7]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[Tests/Test on Python 3.7]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[Tests/Test on Python 3.7]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[Tests/Test on Python 3.7]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[Tests/Test on Python 3.7]   \u2699  ::set-output:: python-version=3.7.11\n[Tests/Test on Python 3.7]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[Tests/Test on Python 3.7]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[Tests/Test on Python 3.7]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[Tests/Test on Python 3.7] \u2b50 Run Main Install dependencies\n[Tests/Test on Python 3.7]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Tests/Test on Python 3.7]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (21.2.4)\n[Tests/Test on Python 3.7]   | Collecting pip\n[Tests/Test on Python 3.7]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[Tests/Test on Python 3.7]   | Installing collected packages: pip\n[Tests/Test on Python 3.7]   |   Attempting uninstall: pip\n[Tests/Test on Python 3.7]   |     Found existing installation: pip 21.2.4\n[Tests/Test on Python 3.7]   |     Uninstalling pip-21.2.4:\n[Tests/Test on Python 3.7]   |       Successfully uninstalled pip-21.2.4\n[Tests/Test on Python 3.7]   | Successfully installed pip-23.1.2\n[Tests/Test on Python 3.7]   | Collecting tox\n[Tests/Test on Python 3.7]   |   Downloading tox-4.5.2-py3-none-any.whl (148 kB)\n[Tests/Test on Python 3.7]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 149.0/149.0 kB 13.4 MB/s eta 0:00:00\n[Tests/Test on Python 3.7]   | Collecting tox-gh-actions\n[Tests/Test on Python 3.7]   |   Downloading tox_gh_actions-3.1.1-py2.py3-none-any.whl (9.8 kB)\n[Tests/Test on Python 3.7]   | Collecting cachetools>=5.3 (from tox)\n[Tests/Test on Python 3.7]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[Tests/Test on Python 3.7]   | Collecting chardet>=5.1 (from tox)\n[Tests/Test on Python 3.7]   |   Downloading chardet-5.1.0-py3-none-any.whl (199 kB)\n[Tests/Test on Python 3.7]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 199.1/199.1 kB 4.9 MB/s eta 0:00:00\n[Tests/Test on Python 3.7]   | Collecting colorama>=0.4.6 (from tox)\n[Tests/Test on Python 3.7]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[Tests/Test on Python 3.7]   | Collecting filelock>=3.12 (from tox)\n[Tests/Test on Python 3.7]   |   Downloading filelock-3.12.0-py3-none-any.whl (10 kB)\n[Tests/Test on Python 3.7]   | Collecting importlib-metadata>=6.6 (from tox)\n[Tests/Test on Python 3.7]   |   Downloading importlib_metadata-6.6.0-py3-none-any.whl (22 kB)\n[Tests/Test on Python 3.7]   | Collecting packaging>=23.1 (from tox)\n[Tests/Test on Python 3.7]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[Tests/Test on Python 3.7]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 9.2 MB/s eta 0:00:00\n[Tests/Test on Python 3.7]   | Collecting platformdirs>=3.5.1 (from tox)\n[Tests/Test on Python 3.7]   |   Downloading platformdirs-3.5.1-py3-none-any.whl (15 kB)\n[Tests/Test on Python 3.7]   | Collecting pluggy>=1 (from tox)\n[Tests/Test on Python 3.7]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[Tests/Test on Python 3.7]   | Collecting pyproject-api>=1.5.1 (from tox)\n[Tests/Test on Python 3.7]   |   Downloading pyproject_api-1.5.1-py3-none-any.whl (12 kB)\n[Tests/Test on Python 3.7]   | Collecting tomli>=2.0.1 (from tox)\n[Tests/Test on Python 3.7]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[Tests/Test on Python 3.7]   | Collecting typing-extensions>=4.6.2 (from tox)\n[Tests/Test on Python 3.7]   |   Downloading typing_extensions-4.6.2-py3-none-any.whl (31 kB)\n[Tests/Test on Python 3.7]   | Collecting virtualenv>=20.23 (from tox)\n[Tests/Test on Python 3.7]   |   Downloading virtualenv-20.23.0-py3-none-any.whl (3.3 MB)\n[Tests/Test on Python 3.7]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.3/3.3 MB 28.5 MB/s eta 0:00:00\n[Tests/Test on Python 3.7]   | Collecting zipp>=0.5 (from importlib-metadata>=6.6->tox)\n[Tests/Test on Python 3.7]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[Tests/Test on Python 3.7]   | Collecting distlib<1,>=0.3.6 (from virtualenv>=20.23->tox)\n[Tests/Test on Python 3.7]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[Tests/Test on Python 3.7]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 468.5/468.5 kB 7.6 MB/s eta 0:00:00\n[Tests/Test on Python 3.7]   | Installing collected packages: distlib, zipp, typing-extensions, tomli, packaging, filelock, colorama, chardet, cachetools, pyproject-api, platformdirs, importlib-metadata, virtualenv, pluggy, tox, tox-gh-actions\n[Tests/Test on Python 3.7]   | Successfully installed cachetools-5.3.1 chardet-5.1.0 colorama-0.4.6 distlib-0.3.6 filelock-3.12.0 importlib-metadata-6.6.0 packaging-23.1 platformdirs-3.5.1 pluggy-1.0.0 pyproject-api-1.5.1 tomli-2.0.1 tox-4.5.2 tox-gh-actions-3.1.1 typing-extensions-4.6.2 virtualenv-20.23.0 zipp-3.15.0\n[Tests/Test on Python 3.7]   | \n[Tests/Test on Python 3.7]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[Tests/Test on Python 3.7]   | [notice] To update, run: pip install --upgrade pip\n[Tests/Test on Python 3.7]   \u2705  Success - Main Install dependencies\n[Tests/Test on Python 3.7] \u2b50 Run Main Test with tox\n[Tests/Test on Python 3.7]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Tests/Test on Python 3.7]   | ROOT: tox-gh-actions couldn't understand the parallel option. ignoring the given option: 0\n[Tests/Test on Python 3.7]   | py37: install_deps> python -I -m pip install -r /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/bennylope-pygeocodio/requirements.txt\n[Tests/Test on Python 3.7]   | .pkg: install_requires> python -I -m pip install 'setuptools>=40.8.0' wheel\n[Tests/Test on Python 3.7]   | .pkg: _optional_hooks> python /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[Tests/Test on Python 3.7]   | .pkg: get_requires_for_build_sdist> python /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[Tests/Test on Python 3.7]   | .pkg: freeze> python -m pip freeze --all\n[Tests/Test on Python 3.7]   | .pkg: pip==23.1.2,setuptools==67.7.2,wheel==0.40.0\n[Tests/Test on Python 3.7]   | .pkg: prepare_metadata_for_build_wheel> python /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[Tests/Test on Python 3.7]   | .pkg: build_sdist> python /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[Tests/Test on Python 3.7]   | py37: install_package_deps> python -I -m pip install 'requests>=1.0.0'\n[Tests/Test on Python 3.7]   | py37: install_package> python -I -m pip install --force-reinstall --no-deps /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/bennylope-pygeocodio/.tox/.tmp/package/1/pygeocodio-1.2.0.tar.gz\n[Tests/Test on Python 3.7]   | py37: freeze> python -m pip freeze --all\n[Tests/Test on Python 3.7]   | py37: certifi==2023.5.7,charset-normalizer==3.1.0,httpretty==1.1.4,idna==3.4,pip==23.1.2,pygeocodio @ file:///tmp/de65f406-fe28-11ed-a890-af2cc187fc11/bennylope-pygeocodio/.tox/.tmp/package/1/pygeocodio-1.2.0.tar.gz#sha256=4299e0794da4da0be8b0ded7253f77b6ee26c08faeff094004cc9dea72364deb,requests==2.31.0,setuptools==67.7.2,urllib3==2.0.2,wheel==0.40.0\n[Tests/Test on Python 3.7]   | py37: tox-gh-actions couldn't understand the parallel option. ignoring the given option: 0\n[Tests/Test on Python 3.7]   \u2753  ::group::tox: py37\n[Tests/Test on Python 3.7]   | py37: commands[0]> python setup.py test\n[Tests/Test on Python 3.7]   | running test\n[Tests/Test on Python 3.7]   | WARNING: Testing via this command is deprecated and will be removed in a future version. Users looking for a generic test entry point independent of test runner are encouraged to use tox.\n[Tests/Test on Python 3.7]   | running egg_info\n[Tests/Test on Python 3.7]   | writing src/pygeocodio.egg-info/PKG-INFO\n[Tests/Test on Python 3.7]   | writing dependency_links to src/pygeocodio.egg-info/dependency_links.txt\n[Tests/Test on Python 3.7]   | writing requirements to src/pygeocodio.egg-info/requires.txt\n[Tests/Test on Python 3.7]   | writing top-level names to src/pygeocodio.egg-info/top_level.txt\n[Tests/Test on Python 3.7]   | reading manifest file 'src/pygeocodio.egg-info/SOURCES.txt'\n[Tests/Test on Python 3.7]   | reading manifest template 'MANIFEST.in'\n[Tests/Test on Python 3.7]   | adding license file 'LICENSE'\n[Tests/Test on Python 3.7]   | adding license file 'AUTHORS.rst'\n[Tests/Test on Python 3.7]   | writing manifest file 'src/pygeocodio.egg-info/SOURCES.txt'\n[Tests/Test on Python 3.7]   | running build_ext\n[Tests/Test on Python 3.7]   | /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/bennylope-pygeocodio/.tox/py37/lib/python3.7/site-packages/setuptools/command/test.py:194: _DeprecatedInstaller: setuptools.installer and fetch_build_eggs are deprecated.\n[Tests/Test on Python 3.7]   | !!\n[Tests/Test on Python 3.7]   | \n[Tests/Test on Python 3.7]   |         ********************************************************************************\n[Tests/Test on Python 3.7]   |         Requirements should be satisfied by a PEP 517 installer.\n[Tests/Test on Python 3.7]   |         If you are using pip, you can try `pip install --use-pep517`.\n[Tests/Test on Python 3.7]   |         ********************************************************************************\n[Tests/Test on Python 3.7]   | \n[Tests/Test on Python 3.7]   | !!\n[Tests/Test on Python 3.7]   |   ir_d = dist.fetch_build_eggs(dist.install_requires)\n[Tests/Test on Python 3.7]   | /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/bennylope-pygeocodio/.tox/py37/lib/python3.7/site-packages/setuptools/command/test.py:195: _DeprecatedInstaller: setuptools.installer and fetch_build_eggs are deprecated.\n[Tests/Test on Python 3.7]   | !!\n[Tests/Test on Python 3.7]   | \n[Tests/Test on Python 3.7]   |         ********************************************************************************\n[Tests/Test on Python 3.7]   |         Requirements should be satisfied by a PEP 517 installer.\n[Tests/Test on Python 3.7]   |         If you are using pip, you can try `pip install --use-pep517`.\n[Tests/Test on Python 3.7]   |         ********************************************************************************\n[Tests/Test on Python 3.7]   | \n[Tests/Test on Python 3.7]   | !!\n[Tests/Test on Python 3.7]   |   tr_d = dist.fetch_build_eggs(dist.tests_require or [])\n[Tests/Test on Python 3.7]   | /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/bennylope-pygeocodio/.tox/py37/lib/python3.7/site-packages/setuptools/command/test.py:198: _DeprecatedInstaller: setuptools.installer and fetch_build_eggs are deprecated.\n[Tests/Test on Python 3.7]   | !!\n[Tests/Test on Python 3.7]   | \n[Tests/Test on Python 3.7]   |         ********************************************************************************\n[Tests/Test on Python 3.7]   |         Requirements should be satisfied by a PEP 517 installer.\n[Tests/Test on Python 3.7]   |         If you are using pip, you can try `pip install --use-pep517`.\n[Tests/Test on Python 3.7]   |         ********************************************************************************\n[Tests/Test on Python 3.7]   | \n[Tests/Test on Python 3.7]   | !!\n[Tests/Test on Python 3.7]   |   for k, v in dist.extras_require.items()\n[Tests/Test on Python 3.7]   | test_auth_error (tests.test_client.TestClientErrors)\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"GET\", \"https://api.geocod.io/v1.6/parse?api_key=1010110101&q=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json'}, body=0)>\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"GET\", \"https://api.geocod.io/v1.6/geocode?api_key=1010110101&fields=&q=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json'}, body=0)>\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/geocode?api_key=1010110101&fields=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '4'}, body=0)>\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/geocode?api_key=1010110101&fields=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '4'}, body=4)>\n[Tests/Test on Python 3.7]   | Ensure an HTTP 403 code raises GeocodioAuthError ... ok\n[Tests/Test on Python 3.7]   | test_data_error (tests.test_client.TestClientErrors)\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"GET\", \"https://api.geocod.io/v1.6/parse?api_key=1010110101&q=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json'}, body=0)>\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"GET\", \"https://api.geocod.io/v1.6/geocode?api_key=1010110101&fields=&q=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json'}, body=0)>\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/geocode?api_key=1010110101&fields=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '4'}, body=0)>\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/geocode?api_key=1010110101&fields=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '4'}, body=4)>\n[Tests/Test on Python 3.7]   | Ensure an HTTP 422 code raises GeocodioDataError ... ok\n[Tests/Test on Python 3.7]   | test_default_error (tests.test_client.TestClientErrors)\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"GET\", \"https://api.geocod.io/v1.6/parse?api_key=1010110101&q=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json'}, body=0)>\n[Tests/Test on Python 3.7]   | Ensure any other HTTP code raises a general error ... ok\n[Tests/Test on Python 3.7]   | test_server_error (tests.test_client.TestClientErrors)\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"GET\", \"https://api.geocod.io/v1.6/parse?api_key=1010110101&q=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json'}, body=0)>\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"GET\", \"https://api.geocod.io/v1.6/geocode?api_key=1010110101&fields=&q=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json'}, body=0)>\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/geocode?api_key=1010110101&fields=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '4'}, body=0)>\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/geocode?api_key=1010110101&fields=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '4'}, body=4)>\n[Tests/Test on Python 3.7]   | Ensure an HTTP 500 code raises GeocodioServerError ... ok\n[Tests/Test on Python 3.7]   | test_custom_base_domain (tests.test_client.TestClientInit) ... ok\n[Tests/Test on Python 3.7]   | test_default_version (tests.test_client.TestClientInit) ... ok\n[Tests/Test on Python 3.7]   | test_diff_version (tests.test_client.TestClientInit) ... ok\n[Tests/Test on Python 3.7]   | test_hipaa_disabled (tests.test_client.TestClientInit) ... ok\n[Tests/Test on Python 3.7]   | test_hipaa_enabled (tests.test_client.TestClientInit) ... ok\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"GET\", \"https://api.geocod.io/\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}, body=0)>\n[Tests/Test on Python 3.7]   | test_auto_load_api_version (tests.test_client.TestClientInitAutoLoadApiVersion) ... ok\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"GET\", \"https://api.geocod.io/\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}, body=0)>\n[Tests/Test on Python 3.7]   | test_auto_load_failure (tests.test_client.TestClientInitAutoLoadApiVersion) ... ok\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"GET\", \"https://api-hipaa.geocod.io/\", headers={'Host': 'api-hipaa.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'}, body=0)>\n[Tests/Test on Python 3.7]   | test_auto_load_hipaa_api_version (tests.test_client.TestClientInitAutoLoadApiVersion) ... ok\n[Tests/Test on Python 3.7]   | test_skip_auto_load (tests.test_client.TestClientInitAutoLoadApiVersion) ... ok\n[Tests/Test on Python 3.7]   | test_skip_auto_load_if_disabled (tests.test_client.TestClientInitAutoLoadApiVersion) ... ok\n[Tests/Test on Python 3.7]   | test_batch_addresses_response (tests.test_client.TestClientMethods)\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/geocode?api_key=1010110101&fields=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '73'}, body=0)>\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/geocode?api_key=1010110101&fields=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '73'}, body=73)>\n[Tests/Test on Python 3.7]   | Ensure batch address geocoding results in a Location Collection ... ok\n[Tests/Test on Python 3.7]   | test_batch_components_response (tests.test_client.TestClientMethods)\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/geocode?api_key=1010110101&fields=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '108'}, body=0)>\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/geocode?api_key=1010110101&fields=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '108'}, body=108)>\n[Tests/Test on Python 3.7]   | Ensure batch components geocoding results in a Location Collection ... ok\n[Tests/Test on Python 3.7]   | test_batch_keyed_components_response (tests.test_client.TestClientMethods)\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/geocode?api_key=1010110101&fields=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '118'}, body=0)>\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/geocode?api_key=1010110101&fields=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '118'}, body=118)>\n[Tests/Test on Python 3.7]   | Ensure keyed batch components geocoding results in a LocationCollectionDict ... ok\n[Tests/Test on Python 3.7]   | test_batch_reverse_dict_response (tests.test_client.TestClientMethods)\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/reverse?api_key=1010110101&fields=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '26'}, body=0)>\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/reverse?api_key=1010110101&fields=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '26'}, body=26)>\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/reverse?api_key=1010110101&fields=cd\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '26'}, body=0)>\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/reverse?api_key=1010110101&fields=cd\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '26'}, body=26)>\n[Tests/Test on Python 3.7]   | Ensure batch reverse geocoding results in LocationCollectionDict if results are a dict ... ok\n[Tests/Test on Python 3.7]   | test_batch_reverse_list_response (tests.test_client.TestClientMethods)\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/reverse?api_key=1010110101&fields=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '16'}, body=0)>\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/reverse?api_key=1010110101&fields=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '16'}, body=16)>\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/reverse?api_key=1010110101&fields=cd\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '16'}, body=0)>\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/reverse?api_key=1010110101&fields=cd\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '16'}, body=16)>\n[Tests/Test on Python 3.7]   | Ensure batch reverse geocoding results in LocationCollection if results are a list ... ok\n[Tests/Test on Python 3.7]   | test_json_points (tests.test_client.TestClientMethods)\n[Tests/Test on Python 3.7]   | Ensure function returns JSON formatted list/dict of strings ... ok\n[Tests/Test on Python 3.7]   | test_keyed_batch_addresses_response (tests.test_client.TestClientMethods)\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/geocode?api_key=1010110101&fields=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '88'}, body=0)>\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"POST\", \"https://api.geocod.io/v1.6/geocode?api_key=1010110101&fields=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '88'}, body=88)>\n[Tests/Test on Python 3.7]   | Ensure keyed batch addresses geocoding results in a LocationCollectionDict ... ok\n[Tests/Test on Python 3.7]   | test_return_none_with_both_address_and_components (tests.test_client.TestClientMethods)\n[Tests/Test on Python 3.7]   | Ensure None is returned when geocoding with no passed in address or components data ... ok\n[Tests/Test on Python 3.7]   | test_return_none_with_no_address_or_components (tests.test_client.TestClientMethods)\n[Tests/Test on Python 3.7]   | Ensure None is returned when geocoding with no passed in address or components data ... ok\n[Tests/Test on Python 3.7]   | test_reverse_response (tests.test_client.TestClientMethods)\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"GET\", \"https://api.geocod.io/v1.6/reverse?api_key=1010110101&q=-1%2C1&fields=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json'}, body=0)>\n[Tests/Test on Python 3.7]   | Ensure reverse geocoding results in a single Location ... ok\n[Tests/Test on Python 3.7]   | test_single_address_response (tests.test_client.TestClientMethods)\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"GET\", \"https://api.geocod.io/v1.6/geocode?api_key=1010110101&fields=&q=1657+W+Broad+St%2C+Richmond+VA\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json'}, body=0)>\n[Tests/Test on Python 3.7]   | Ensure single address geocoding results in a single Location ... ok\n[Tests/Test on Python 3.7]   | test_single_components_response (tests.test_client.TestClientMethods)\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"GET\", \"https://api.geocod.io/v1.6/geocode?api_key=1010110101&fields=&postal_code=02210\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json'}, body=0)>\n[Tests/Test on Python 3.7]   | Ensure components geocoding results in a single Location ... ok\n[Tests/Test on Python 3.7]   | test_timeout (tests.test_client.TestClientMethods)\n[Tests/Test on Python 3.7]   | captured: <HTTPrettyRequest(\"GET\", \"https://api.geocod.io/v1.6/reverse?api_key=1010110101&q=-1%2C1&fields=\", headers={'Host': 'api.geocod.io', 'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json'}, body=0)>\n[Tests/Test on Python 3.7]   | Ensure a timed out request is handled as expected when a timeout is set ... ok\n[Tests/Test on Python 3.7]   | test_address_accuracy (tests.test_data.TestDataTypes)\n[Tests/Test on Python 3.7]   | Ensure Address.accuracy property returns None when no location ... Exception in thread Thread-25:\n[Tests/Test on Python 3.7]   | Traceback (most recent call last):\n[Tests/Test on Python 3.7]   |   File \"/opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/threading.py\", line 926, in _bootstrap_inner\n[Tests/Test on Python 3.7]   |     self.run()\n[Tests/Test on Python 3.7]   |   File \"/opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/threading.py\", line 870, in run\n[Tests/Test on Python 3.7]   |     self._target(*self._args, **self._kwargs)\n[Tests/Test on Python 3.7]   |   File \"/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/bennylope-pygeocodio/.tox/py37/lib/python3.7/site-packages/httpretty/core.py\", line 1133, in fill_filekind\n[Tests/Test on Python 3.7]   |     fk.write(utf8(item) + b'\\n')\n[Tests/Test on Python 3.7]   | ValueError: write to closed file\n[Tests/Test on Python 3.7]   | \n[Tests/Test on Python 3.7]   | ok\n[Tests/Test on Python 3.7]   | test_address_coords (tests.test_data.TestDataTypes)\n[Tests/Test on Python 3.7]   | Ensure Address.coords property returns None when no location ... ok\n[Tests/Test on Python 3.7]   | test_collection (tests.test_data.TestDataTypes)\n[Tests/Test on Python 3.7]   | Ensure that the LocationCollection stores as a list of Locations ... ok\n[Tests/Test on Python 3.7]   | test_collection_addresses (tests.test_data.TestDataTypes)\n[Tests/Test on Python 3.7]   | Ensure that formatted addresses are returned ... ok\n[Tests/Test on Python 3.7]   | test_collection_coords (tests.test_data.TestDataTypes)\n[Tests/Test on Python 3.7]   | Ensure the coords property returns a list of suitable tuples ... ok\n[Tests/Test on Python 3.7]   | test_collection_get (tests.test_data.TestDataTypes)\n[Tests/Test on Python 3.7]   | Ensure 'get' performs a key based lookup ... ok\n[Tests/Test on Python 3.7]   | test_collection_get_default (tests.test_data.TestDataTypes)\n[Tests/Test on Python 3.7]   | Ensure 'get' returns default if key-based lookup fails without an error ... ok\n[Tests/Test on Python 3.7]   | test_collection_magic_get_item (tests.test_data.TestDataTypes)\n[Tests/Test on Python 3.7]   | Ensure LocationCollection[key] performs a key based lookup for an index corresponding with key ... ok\n[Tests/Test on Python 3.7]   | test_dict_collection (tests.test_data.TestDataTypes)\n[Tests/Test on Python 3.7]   | Ensure that the LocationCollectionDict stores as a dict of Locations ... ok\n[Tests/Test on Python 3.7]   | test_dict_collection_addresses (tests.test_data.TestDataTypes)\n[Tests/Test on Python 3.7]   | Ensure that formatted addresses are returned ... ok\n[Tests/Test on Python 3.7]   | test_dict_collection_coords (tests.test_data.TestDataTypes)\n[Tests/Test on Python 3.7]   | Ensure the coords property returns a list of suitable tuples ... ok\n[Tests/Test on Python 3.7]   | test_dict_collection_get (tests.test_data.TestDataTypes)\n[Tests/Test on Python 3.7]   | Ensure 'get' performs a key based lookup ... ok\n[Tests/Test on Python 3.7]   | test_dict_collection_get_default (tests.test_data.TestDataTypes)\n[Tests/Test on Python 3.7]   | Ensure 'get' returns default if key-based lookup fails without an error ... ok\n[Tests/Test on Python 3.7]   | test_dict_collection_magic_contains (tests.test_data.TestDataTypes)\n[Tests/Test on Python 3.7]   | Ensure \"key in LocationDict(...)\" checks if key would return a result with LocationDict(...)[key] ... ok\n[Tests/Test on Python 3.7]   | test_dict_collection_magic_get_item (tests.test_data.TestDataTypes)\n[Tests/Test on Python 3.7]   | Ensure LocationCollectionDict[key] performs a key-based lookup, raising a KeyError on any missing key ... ok\n[Tests/Test on Python 3.7]   | test_location_coords (tests.test_data.TestDataTypes)\n[Tests/Test on Python 3.7]   | Ensure Location.coords property returns a suitable tuple ... ok\n[Tests/Test on Python 3.7]   | test_location_results_missing (tests.test_data.TestDataTypes)\n[Tests/Test on Python 3.7]   | Ensure empty results are processed as a missing address ... ok\n[Tests/Test on Python 3.7]   | test_extract_coords_key (tests.test_data.TestLocationCollectionUtils) ... ok\n[Tests/Test on Python 3.7]   | test_get_lookup_key (tests.test_data.TestLocationCollectionUtils) ... ok\n[Tests/Test on Python 3.7]   | \n[Tests/Test on Python 3.7]   | ----------------------------------------------------------------------\n[Tests/Test on Python 3.7]   | Ran 46 tests in 0.367s\n[Tests/Test on Python 3.7]   | \n[Tests/Test on Python 3.7]   | OK\n[Tests/Test on Python 3.7]   | py37: tox-gh-actions couldn't understand the parallel option. ignoring the given option: 0\n[Tests/Test on Python 3.7]   \u2753  ::endgroup::\n[Tests/Test on Python 3.7]   | .pkg: _exit> python /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[Tests/Test on Python 3.7]   |   py37: OK (15.85=setup[14.76]+cmd[1.10] seconds)\n[Tests/Test on Python 3.7]   |   congratulations :) (16.13 seconds)\n[Tests/Test on Python 3.7]   \u2705  Success - Main Test with tox\n[Tests/Test on Python 3.7] \u2b50 Run Post Set up Python 3.7\n[Tests/Test on Python 3.7]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[Tests/Test on Python 3.7]   \u2705  Success - Post Set up Python 3.7\n[Tests/Test on Python 3.7] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}