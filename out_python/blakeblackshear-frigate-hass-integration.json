{
    "repository": "blakeblackshear/frigate-hass-integration",
    "clone_url": "https://github.com/blakeblackshear/frigate-hass-integration.git",
    "timestamp": "2023-05-29T15:53:41.783627Z",
    "clone_success": true,
    "number of actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Build/Hassfest  ] \ud83d\ude80  Start image=crawlergpt:latest\n[Build/HACS      ] \ud83d\ude80  Start image=crawlergpt:latest\n[Build/Pre-commit] \ud83d\ude80  Start image=crawlergpt:latest\n[Build/Run tests ] \ud83d\ude80  Start image=crawlergpt:latest\n[Build/Pre-commit]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build/Hassfest  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build/Run tests ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build/HACS      ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build/Hassfest  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/Run tests ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/Pre-commit]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/HACS      ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/Hassfest  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/Run tests ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/Pre-commit]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/HACS      ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/Pre-commit]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/blakeblackshear-frigate-hass-integration] user=0 workdir=\n[Build/Run tests ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/blakeblackshear-frigate-hass-integration] user=0 workdir=\n[Build/Hassfest  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/blakeblackshear-frigate-hass-integration] user=0 workdir=\n[Build/HACS      ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/blakeblackshear-frigate-hass-integration] user=0 workdir=\n[Build/Hassfest  ]   \u2601  git clone 'https://github.com/home-assistant/actions' # ref=master\n[Build/Pre-commit]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4.6.0\n[Build/Run tests ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4.6.0\n[Build/Hassfest  ] \u2b50 Run Pre Hassfest validation\n[Build/Hassfest  ]   \u2705  Success - Pre Hassfest validation\n[Build/Pre-commit] \u2b50 Run Main Check out the repository\n[Build/HACS      ]   \u2601  git clone 'https://github.com/hacs/action' # ref=22.5.0\n[Build/Pre-commit]   \u2705  Success - Main Check out the repository\n[Build/Run tests ]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3.1.3\n[Build/Hassfest  ] \u2b50 Run Main Check out the repository\n[Build/Pre-commit] \u2b50 Run Main Set up Python 3.10\n[Build/Hassfest  ]   \u2705  Success - Main Check out the repository\n[Build/HACS      ] \u2b50 Run Main Check out the repository\n[Build/Pre-commit]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4.6.0/ dst=/var/run/act/actions/actions-setup-python@v4.6.0/\n[Build/HACS      ]   \u2705  Success - Main Check out the repository\n[Build/Hassfest  ] \u2b50 Run Main Hassfest validation\n[Build/Pre-commit]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4.6.0/] user=0 workdir=\n[Build/Hassfest  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/home-assistant-actions-hassfest@master/ dst=/var/run/act/actions/home-assistant-actions-hassfest@master/\n[Build/HACS      ] \u2b50 Run Main HACS validation\n[Build/Hassfest  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/home-assistant-actions-hassfest@master/] user=0 workdir=\n[Build/HACS      ]   \ud83d\udc33  docker pull image=ghcr.io/hacs/action:main platform= username= forcePull=false\n[Build/Run tests ] \u2b50 Run Main Check out code from GitHub\n[Build/Run tests ]   \u2705  Success - Main Check out code from GitHub\n[Build/Run tests ] \u2b50 Run Main Setup Python 3.10\n[Build/Run tests ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4.6.0/ dst=/var/run/act/actions/actions-setup-python@v4.6.0/\n[Build/Run tests ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4.6.0/] user=0 workdir=\n[Build/HACS      ]   \ud83d\udc33  docker create image=ghcr.io/hacs/action:main platform= entrypoint=[] cmd=[]\n[Build/Pre-commit]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4.6.0/dist/setup/index.js] user= workdir=\n[Build/Run tests ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4.6.0/dist/setup/index.js] user= workdir=\n[Build/Hassfest  ] \u2b50 Run Main echo \"::add-matcher::/var/run/act/actions/home-assistant-actions-hassfest@master/hassfest/problem-matcher.json\"\n[Build/Hassfest  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-0.sh] user= workdir=\n[Build/Run tests ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[Build/Run tests ]   \u2753  ::group::Installed versions\n[Build/Run tests ]   \ud83d\udcac  ::debug::Semantic version spec of 3.10 is 3.10\n[Build/Run tests ]   \ud83d\udcac  ::debug::isExplicit: \n[Build/Run tests ]   \ud83d\udcac  ::debug::explicit? false\n[Build/Run tests ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Build/Run tests ]   \ud83d\udcac  ::debug::explicit? true\n[Build/Run tests ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Build/Run tests ]   \ud83d\udcac  ::debug::explicit? true\n[Build/Run tests ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Build/Run tests ]   \ud83d\udcac  ::debug::explicit? true\n[Build/Run tests ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Build/Run tests ]   \ud83d\udcac  ::debug::explicit? true\n[Build/Run tests ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Build/Run tests ]   \ud83d\udcac  ::debug::explicit? true\n[Build/Run tests ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Build/Run tests ]   \ud83d\udcac  ::debug::explicit? true\n[Build/Run tests ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Build/Run tests ]   \ud83d\udcac  ::debug::match not found\n[Build/Run tests ]   | Version 3.10 was not found in the local cache\n[Build/Run tests ]   \ud83d\udcac  ::debug::Getting manifest from actions/python-versions@main\n[Build/Pre-commit]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[Build/Pre-commit]   \u2753  ::group::Installed versions\n[Build/Pre-commit]   \ud83d\udcac  ::debug::Semantic version spec of 3.10 is 3.10\n[Build/Pre-commit]   \ud83d\udcac  ::debug::isExplicit: \n[Build/Pre-commit]   \ud83d\udcac  ::debug::explicit? false\n[Build/Pre-commit]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Build/Pre-commit]   \ud83d\udcac  ::debug::explicit? true\n[Build/Pre-commit]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Build/Pre-commit]   \ud83d\udcac  ::debug::explicit? true\n[Build/Pre-commit]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Build/Pre-commit]   \ud83d\udcac  ::debug::explicit? true\n[Build/Pre-commit]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Build/Pre-commit]   \ud83d\udcac  ::debug::explicit? true\n[Build/Pre-commit]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Build/Pre-commit]   \ud83d\udcac  ::debug::explicit? true\n[Build/Pre-commit]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Build/Pre-commit]   \ud83d\udcac  ::debug::explicit? true\n[Build/Pre-commit]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Build/Pre-commit]   \ud83d\udcac  ::debug::match not found\n[Build/Pre-commit]   | Version 3.10 was not found in the local cache\n[Build/Pre-commit]   \ud83d\udcac  ::debug::Getting manifest from actions/python-versions@main\n[Build/Run tests ]   \u2757  ::error::API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Build/Run tests ]   \u274c  Failure - Main Setup Python 3.10\n[Build/Pre-commit]   \u2757  ::error::API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Build/Pre-commit]   \u274c  Failure - Main Set up Python 3.10\n[Build/Run tests ] exitcode '1': failure\n[Build/Pre-commit] exitcode '1': failure\n[Build/HACS      ]   \ud83d\udc33  docker run image=ghcr.io/hacs/action:main platform= entrypoint=[] cmd=[]\n[Build/Hassfest  ]   \u2753 add-matcher /var/run/act/actions/home-assistant-actions-hassfest@master/hassfest/problem-matcher.json\n[Build/Hassfest  ]   \u2705  Success - Main echo \"::add-matcher::/var/run/act/actions/home-assistant-actions-hassfest@master/hassfest/problem-matcher.json\"\n[Build/Run tests ] \ud83c\udfc1  Job failed\n[Build/Pre-commit] \ud83c\udfc1  Job failed\n[Build/Hassfest  ] \u2b50 Run Main docker build /var/run/act/actions/home-assistant-actions-hassfest@master/hassfest -f /var/run/act/actions/home-assistant-actions-hassfest@master/hassfest/Dockerfile -t hassfest\n[Build/Hassfest  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-1.sh] user= workdir=\n[Build/HACS      ]   \u2753  ::DEBUG:: Using selector: EpollSelector\n[Build/HACS      ]   \u2753  ::INFO:: Category: integration\n[Build/HACS      ]   \u2753  ::INFO:: Repository: blakeblackshear/frigate-hass-integration\n[Build/HACS      ]   | Traceback (most recent call last):\n[Build/HACS      ]   |   File \"/hacs/action.py\", line 168, in <module>\n[Build/HACS      ]   |     asyncio.run(preflight())\n[Build/HACS      ]   |   File \"/usr/local/python/lib/python3.10/asyncio/runners.py\", line 44, in run\n[Build/HACS      ]   |     return loop.run_until_complete(main)\n[Build/HACS      ]   |   File \"/usr/local/python/lib/python3.10/asyncio/base_events.py\", line 646, in run_until_complete\n[Build/HACS      ]   |     return future.result()\n[Build/HACS      ]   |   File \"/hacs/action.py\", line 144, in preflight\n[Build/HACS      ]   |     repo = await hacs.githubapi.repos.get(repository)\n[Build/HACS      ]   |   File \"/usr/local/python/lib/python3.10/site-packages/aiogithubapi/namespaces/repos.py\", line 96, in get\n[Build/HACS      ]   |     response = await self._client.async_call_api(\n[Build/HACS      ]   |   File \"/usr/local/python/lib/python3.10/site-packages/aiogithubapi/client.py\", line 178, in async_call_api\n[Build/HACS      ]   |     raise GitHubRatelimitException(message)\n[Build/HACS      ]   | aiogithubapi.exceptions.GitHubRatelimitException: API rate limit exceeded for 130.242.72.40. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)\n[Build/Hassfest  ]   | Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/build?buildargs=%7B%7D&cachefrom=%5B%5D&cgroupparent=&cpuperiod=0&cpuquota=0&cpusetcpus=&cpusetmems=&cpushares=0&dockerfile=Dockerfile&labels=%7B%7D&memory=0&memswap=0&networkmode=default&rm=1&shmsize=0&t=hassfest&target=&ulimits=null&version=1\": dial unix /var/run/docker.sock: connect: permission denied\n[Build/Hassfest  ]   \u274c  Failure - Main docker build /var/run/act/actions/home-assistant-actions-hassfest@master/hassfest -f /var/run/act/actions/home-assistant-actions-hassfest@master/hassfest/Dockerfile -t hassfest\n[Build/Hassfest  ] exitcode '1': failure\n[Build/Hassfest  ]   \u274c  Failure - Main Hassfest validation\n[Build/Hassfest  ] exitcode '1': failure\n[Build/Hassfest  ] \u2b50 Run Post Hassfest validation\n[Build/Hassfest  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/home-assistant-actions-hassfest@master/ dst=/var/run/act/actions/home-assistant-actions-hassfest@master/\n[Build/Hassfest  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/home-assistant-actions-hassfest@master/] user=0 workdir=\n[Build/HACS      ]   \u274c  Failure - Main HACS validation\n[Build/Hassfest  ]   \u2705  Success - Post Hassfest validation\n[Build/HACS      ] exit with `FAILURE`: 1\n[Build/HACS      ] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/dba867f3a3a3492a8c0dde50656f83d11a21856f73dadab7ccdcf949fa590eaf?force=1&v=1\": context deadline exceeded\n[Build/HACS      ] \ud83c\udfc1  Job failed\n[Build/Hassfest  ] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/3da2c5ac0c63d91584af51e59fb06aed22b2c44f63e1e61007a0f0d690e7c4ba?force=1&v=1\": context deadline exceeded\n[Build/Hassfest  ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Error occurred running finally: Error occurred running finally: context deadline exceeded (original error: <nil>) (original error: <nil>)\n"
}