{
    "repository": "randy3k/AutoWrap",
    "clone_url": "https://github.com/randy3k/AutoWrap.git",
    "timestamp": "2023-05-29T14:40:46.243598Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[test/run-tests] \ud83d\ude80  Start image=crawlergpt:latest\n[test/run-tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[test/run-tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[test/run-tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[test/run-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/randy3k-AutoWrap] user=0 workdir=\n[test/run-tests]   \u2601  git clone 'https://github.com/SublimeText/UnitTesting' # ref=master\n[test/run-tests] \u2b50 Run Pre SublimeText/UnitTesting/actions/setup@master\n[test/run-tests]   \u2705  Success - Pre SublimeText/UnitTesting/actions/setup@master\n[test/run-tests]   \u2601  git clone 'https://github.com/SublimeText/UnitTesting' # ref=master\n[test/run-tests] \u2b50 Run Pre SublimeText/UnitTesting/actions/run-tests@master\n[test/run-tests]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[test/run-tests]   \u2705  Success - Pre SublimeText/UnitTesting/actions/run-tests@master\n[test/run-tests] \ud83e\uddea  Matrix: map[st-version:3]\n[test/run-tests] \u2b50 Run Main actions/checkout@v2\n[test/run-tests]   \u2705  Success - Main actions/checkout@v2\n[test/run-tests] \u2b50 Run Main SublimeText/UnitTesting/actions/setup@master\n[test/run-tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/SublimeText-UnitTesting-actions-setup@master/ dst=/var/run/act/actions/SublimeText-UnitTesting-actions-setup@master/\n[test/run-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/SublimeText-UnitTesting-actions-setup@master/] user=0 workdir=\n[test/run-tests] \u2b50 Run Main Set environmental variables\n[test/run-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-0.sh] user= workdir=\n[test/run-tests]   \u2705  Success - Main Set environmental variables\n[test/run-tests]   \u2699  ::set-env:: SUBLIME_TEXT_VERSION=3\n[test/run-tests]   \u2699  ::set-env:: SUBLIME_TEXT_ARCH=x64\n[test/run-tests] \u2b50 Run Main Setup SUBLIME_TEXT_PACKAGES\n[test/run-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-1.sh] user= workdir=\n[test/run-tests]   \u2705  Success - Main Setup SUBLIME_TEXT_PACKAGES\n[test/run-tests]   \u2699  ::set-env:: SUBLIME_TEXT_PACKAGES=/home/runneradmin/.config/sublime-text-3/Packages\n[test/run-tests] \u2b50 Run Main if [ \"Linux\" = \"Windows\" ]; then\n  echo \"c:\\st\" >> $GITHUB_PATH\nelse\n  echo \"$HOME/.local/bin\" >> $GITHUB_PATH\nfi\n[test/run-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-2.sh] user= workdir=\n[test/run-tests]   \u2705  Success - Main if [ \"Linux\" = \"Windows\" ]; then\n  echo \"c:\\st\" >> $GITHUB_PATH\nelse\n  echo \"$HOME/.local/bin\" >> $GITHUB_PATH\nfi\n[test/run-tests]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[test/run-tests] \u2b50 Run Main sudo bash $GITHUB_ACTION_PATH/../../scripts/install_ubuntu_sys_req.sh\necho \"DISPLAY=:1\" >> $GITHUB_ENV\n\nif [ \"xvfb\" = \"xvfb\" ]; then\n  sudo apt-get install xvfb\nelif [ \"xvfb\" = \"turbovnc\" ]; then\n  wget https://phoenixnap.dl.sourceforge.net/project/turbovnc/2.2.5/turbovnc_2.2.5_amd64.deb\n  sudo dpkg -i turbovnc_2.2.5_amd64.deb\n  echo \"/opt/TurboVNC/bin\" >> $GITHUB_PATH\nfi\nif [ \"xvfb\" != \"false\" ]; then\n  if [ \"icevm\" = \"xfce\" ]; then\n    sudo apt-get install --no-install-recommends xfce4 xfce4-goodies dbus-x11\n  elif [ \"icevm\" = \"icewm\" ]; then\n    sudo apt-get install icewm\n  elif [ \"icevm\" = \"fluxbox\" ]; then\n    sudo apt-get install fluxbox\n  fi\nfi\n[test/run-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-3.sh] user= workdir=\n[test/run-tests]   | Get:1 https://dl.hhvm.com/ubuntu focal InRelease [3137 B]\n[test/run-tests]   | Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease\n[test/run-tests]   | Get:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]\n[test/run-tests]   | Hit:4 http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu focal InRelease\n[test/run-tests]   | Get:5 http://dl.google.com/linux/chrome/deb stable InRelease [1825 B]\n[test/run-tests]   | Get:6 https://packages.microsoft.com/ubuntu/20.04/prod focal InRelease [3611 B]\n[test/run-tests]   | Get:7 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]\n[test/run-tests]   | Get:8 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]\n[test/run-tests]   | Hit:9 https://adoptopenjdk.jfrog.io/adoptopenjdk/deb focal InRelease\n[test/run-tests]   | Get:10 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ InRelease [3622 B]\n[test/run-tests]   | Get:11 https://dl.hhvm.com/ubuntu focal/main amd64 Packages [1880 B]\n[test/run-tests]   | Err:5 http://dl.google.com/linux/chrome/deb stable InRelease\n[test/run-tests]   |   The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[test/run-tests]   | Get:12 https://packages.microsoft.com/ubuntu/20.04/prod focal/main amd64 Packages [201 kB]\n[test/run-tests]   | Get:13 https://packages.microsoft.com/ubuntu/20.04/prod focal/main all Packages [2521 B]\n[test/run-tests]   | Get:14 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [2412 kB]\n[test/run-tests]   | Get:15 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [3204 kB]\n[test/run-tests]   | Get:16 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ Packages [77.6 kB]\n[test/run-tests]   | Get:17 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1346 kB]\n[test/run-tests]   | Get:18 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [31.2 kB]\n[test/run-tests]   | Get:19 http://security.ubuntu.com/ubuntu focal-security/restricted i386 Packages [36.9 kB]\n[test/run-tests]   | Get:20 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [28.6 kB]\n[test/run-tests]   | Get:21 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [739 kB]\n[test/run-tests]   | Get:22 http://archive.ubuntu.com/ubuntu focal-backports/main amd64 Packages [55.2 kB]\n[test/run-tests]   | Get:23 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [2726 kB]\n[test/run-tests]   | Get:24 http://security.ubuntu.com/ubuntu focal-security/multiverse i386 Packages [8141 B]\n[test/run-tests]   | Get:25 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [2270 kB]\n[test/run-tests]   | Get:26 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [739 kB]\n[test/run-tests]   | Get:27 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [28.5 kB]\n[test/run-tests]   | Get:28 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [1052 kB]\n[test/run-tests]   | Fetched 15.3 MB in 7s (2170 kB/s)\n[test/run-tests]   | Reading package lists...\n[test/run-tests]   | W: An error occurred during the signature verification. The repository is not updated and the previous index files will be used. GPG error: http://dl.google.com/linux/chrome/deb stable InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[test/run-tests]   | W: Failed to fetch http://dl.google.com/linux/chrome/deb/dists/stable/InRelease  The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[test/run-tests]   | W: Some index files failed to download. They have been ignored, or old ones used instead.\n[test/run-tests]   | Reading package lists...\n[test/run-tests]   | Building dependency tree...\n[test/run-tests]   | Reading state information...\n[test/run-tests]   | psmisc is already the newest version (23.3-1).\n[test/run-tests]   | psmisc set to manually installed.\n[test/run-tests]   | libglib2.0-0 is already the newest version (2.64.6-1~ubuntu20.04.4).\n[test/run-tests]   | libglib2.0-0 set to manually installed.\n[test/run-tests]   | The following additional packages will be installed:\n[test/run-tests]   |   libgtk-3-common\n[test/run-tests]   | Suggested packages:\n[test/run-tests]   |   gvfs\n[test/run-tests]   | Recommended packages:\n[test/run-tests]   |   libgtk-3-bin\n[test/run-tests]   | The following NEW packages will be installed:\n[test/run-tests]   |   locales-all\n[test/run-tests]   | The following packages will be upgraded:\n[test/run-tests]   |   libgtk-3-0 libgtk-3-common locales\n[test/run-tests]   | 3 upgraded, 1 newly installed, 0 to remove and 385 not upgraded.\n[test/run-tests]   | Need to get 17.3 MB of archives.\n[test/run-tests]   | After this operation, 227 MB of additional disk space will be used.\n[test/run-tests]   | Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 locales all 2.31-0ubuntu9.9 [3869 kB]\n[test/run-tests]   | Get:2 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgtk-3-common all 3.24.20-0ubuntu1.1 [234 kB]\n[test/run-tests]   | Get:3 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 libgtk-3-0 amd64 3.24.20-0ubuntu1.1 [2620 kB]\n[test/run-tests]   | Get:4 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 locales-all amd64 2.31-0ubuntu9.9 [10.5 MB]\n[test/run-tests]   | Preconfiguring packages ...\n[test/run-tests]   | Fetched 17.3 MB in 1s (25.7 MB/s)\n[test/run-tests]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 193678 files and directories currently installed.)\r\n[test/run-tests]   | Preparing to unpack .../locales_2.31-0ubuntu9.9_all.deb ...\r\n[test/run-tests]   | Unpacking locales (2.31-0ubuntu9.9) over (2.31-0ubuntu9.2) ...\r\n[test/run-tests]   | Preparing to unpack .../libgtk-3-common_3.24.20-0ubuntu1.1_all.deb ...\r\n[test/run-tests]   | Unpacking libgtk-3-common (3.24.20-0ubuntu1.1) over (3.24.20-0ubuntu1) ...\r\n[test/run-tests]   | Preparing to unpack .../libgtk-3-0_3.24.20-0ubuntu1.1_amd64.deb ...\r\n[test/run-tests]   | Unpacking libgtk-3-0:amd64 (3.24.20-0ubuntu1.1) over (3.24.20-0ubuntu1) ...\r\n[test/run-tests]   | Selecting previously unselected package locales-all.\r\n[test/run-tests]   | Preparing to unpack .../locales-all_2.31-0ubuntu9.9_amd64.deb ...\r\n[test/run-tests]   | Unpacking locales-all (2.31-0ubuntu9.9) ...\r\n[test/run-tests]   | Setting up locales (2.31-0ubuntu9.9) ...\r\n[test/run-tests]   | locales-all installed, skipping locales generation\r\n[test/run-tests]   | Setting up locales-all (2.31-0ubuntu9.9) ...\r\n[test/run-tests]   | Setting up libgtk-3-common (3.24.20-0ubuntu1.1) ...\r\n[test/run-tests]   | Processing triggers for libc-bin (2.31-0ubuntu9.2) ...\r\n[test/run-tests]   | Processing triggers for libglib2.0-0:amd64 (2.64.6-1~ubuntu20.04.4) ...\r\n[test/run-tests]   | Setting up libgtk-3-0:amd64 (3.24.20-0ubuntu1.1) ...\r\n[test/run-tests]   | Processing triggers for libc-bin (2.31-0ubuntu9.2) ...\r\n[test/run-tests]   | Reading package lists...\n[test/run-tests]   | Building dependency tree...\n[test/run-tests]   | Reading state information...\n[test/run-tests]   | The following additional packages will be installed:\n[test/run-tests]   |   xserver-common\n[test/run-tests]   | Recommended packages:\n[test/run-tests]   |   xfonts-base\n[test/run-tests]   | The following packages will be upgraded:\n[test/run-tests]   |   xserver-common xvfb\n[test/run-tests]   | 2 upgraded, 0 newly installed, 0 to remove and 383 not upgraded.\n[test/run-tests]   | Need to get 807 kB of archives.\n[test/run-tests]   | After this operation, 2048 B of additional disk space will be used.\n[test/run-tests]   | Get:1 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 xserver-common all 2:1.20.13-1ubuntu1~20.04.8 [27.2 kB]\n[test/run-tests]   | Get:2 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 xvfb amd64 2:1.20.13-1ubuntu1~20.04.8 [780 kB]\n[test/run-tests]   | Fetched 807 kB in 0s (2595 kB/s)\n[test/run-tests]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 200682 files and directories currently installed.)\r\n[test/run-tests]   | Preparing to unpack .../xserver-common_2%3a1.20.13-1ubuntu1~20.04.8_all.deb ...\r\n[test/run-tests]   | Unpacking xserver-common (2:1.20.13-1ubuntu1~20.04.8) over (2:1.20.11-1ubuntu1~20.04.2) ...\r\n[test/run-tests]   | Preparing to unpack .../xvfb_2%3a1.20.13-1ubuntu1~20.04.8_amd64.deb ...\r\n[test/run-tests]   | Unpacking xvfb (2:1.20.13-1ubuntu1~20.04.8) over (2:1.20.11-1ubuntu1~20.04.2) ...\r\n[test/run-tests]   | Setting up xserver-common (2:1.20.13-1ubuntu1~20.04.8) ...\r\n[test/run-tests]   | Setting up xvfb (2:1.20.13-1ubuntu1~20.04.8) ...\r\n[test/run-tests]   \u2705  Success - Main sudo bash $GITHUB_ACTION_PATH/../../scripts/install_ubuntu_sys_req.sh\necho \"DISPLAY=:1\" >> $GITHUB_ENV\n\nif [ \"xvfb\" = \"xvfb\" ]; then\n  sudo apt-get install xvfb\nelif [ \"xvfb\" = \"turbovnc\" ]; then\n  wget https://phoenixnap.dl.sourceforge.net/project/turbovnc/2.2.5/turbovnc_2.2.5_amd64.deb\n  sudo dpkg -i turbovnc_2.2.5_amd64.deb\n  echo \"/opt/TurboVNC/bin\" >> $GITHUB_PATH\nfi\nif [ \"xvfb\" != \"false\" ]; then\n  if [ \"icevm\" = \"xfce\" ]; then\n    sudo apt-get install --no-install-recommends xfce4 xfce4-goodies dbus-x11\n  elif [ \"icevm\" = \"icewm\" ]; then\n    sudo apt-get install icewm\n  elif [ \"icevm\" = \"fluxbox\" ]; then\n    sudo apt-get install fluxbox\n  fi\nfi\n[test/run-tests]   \u2699  ::set-env:: DISPLAY=:1\n[test/run-tests] \u2b50 Run Main if [ \"xvfb\" = \"xvfb\" ]; then\n  Xvfb $DISPLAY -screen 0 1024x768x24 -ac +extension GLX +render -noreset &\n  sleep 1\n  if [ \"icevm\" = \"xfce\" ]; then\n    nohup startxfce4 &\n  elif [ \"icevm\" = \"icewm\" ]; then\n    nohup icewm &\n  elif [ \"icevm\" = \"fluxbox\" ]; then\n    nohup fluxbox &\n  fi\nelif [ \"xvfb\" = \"turbovnc\" ]; then\n  mkdir $HOME/.vnc\n  echo $RANDOM$RANDOM | vncpasswd -f > $HOME/.vnc/passwd\n  chmod 0600 $HOME/.vnc/passwd\n  if [ \"icevm\" = \"xfce\" ]; then\n    vncserver $DISPLAY -geometry 1024x768 -depth 24 -wm \"startxfce4\"\n  elif [ \"icevm\" = \"false\" ]; then\n    vncserver $DISPLAY -geometry 1024x768 -depth 24\n  else\n    vncserver $DISPLAY -geometry 1024x768 -depth 24 -wm \"icevm\"\n  fi\nfi\n[test/run-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-4.sh] user= workdir=\n[test/run-tests]   | _XSERVTransmkdir: ERROR: euid != 0,directory /tmp/.X11-unix will not be created.\n[test/run-tests]   \u2705  Success - Main if [ \"xvfb\" = \"xvfb\" ]; then\n  Xvfb $DISPLAY -screen 0 1024x768x24 -ac +extension GLX +render -noreset &\n  sleep 1\n  if [ \"icevm\" = \"xfce\" ]; then\n    nohup startxfce4 &\n  elif [ \"icevm\" = \"icewm\" ]; then\n    nohup icewm &\n  elif [ \"icevm\" = \"fluxbox\" ]; then\n    nohup fluxbox &\n  fi\nelif [ \"xvfb\" = \"turbovnc\" ]; then\n  mkdir $HOME/.vnc\n  echo $RANDOM$RANDOM | vncpasswd -f > $HOME/.vnc/passwd\n  chmod 0600 $HOME/.vnc/passwd\n  if [ \"icevm\" = \"xfce\" ]; then\n    vncserver $DISPLAY -geometry 1024x768 -depth 24 -wm \"startxfce4\"\n  elif [ \"icevm\" = \"false\" ]; then\n    vncserver $DISPLAY -geometry 1024x768 -depth 24\n  else\n    vncserver $DISPLAY -geometry 1024x768 -depth 24 -wm \"icevm\"\n  fi\nfi\n[test/run-tests] \u2b50 Run Main bash $GITHUB_ACTION_PATH/../../scripts/install_sublime_text.sh\n[test/run-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-5.sh] user= workdir=\n[test/run-tests]   | installing sublime text 3\n[test/run-tests]   | downloading https://download.sublimetext.com/sublime_text_3_build_3211_x64.tar.bz2\n[test/run-tests]   |   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n[test/run-tests]   |                                  Dload  Upload   Total   Spent    Left  Speed\n[test/run-tests]   | \r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r  0 13.0M    0 49134    0     0  69891      0  0:03:15 --:--:--  0:03:15 69792\r 45 13.0M   45 6127k    0     0  3687k      0  0:00:03  0:00:01  0:00:02 3684k\r100 13.0M  100 13.0M    0     0  5767k      0  0:00:02  0:00:02 --:--:-- 5767k\n[test/run-tests]   \u2705  Success - Main bash $GITHUB_ACTION_PATH/../../scripts/install_sublime_text.sh\n[test/run-tests] \u2b50 Run Main # Disable warnings about detached HEAD\n# https://stackoverflow.com/questions/36794501\ngit config --global advice.detachedHead false\n\n# block sublime text website ip\nbash $GITHUB_ACTION_PATH/../../scripts/block_ip.sh\n[test/run-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-7.sh] user= workdir=\n[test/run-tests]   | block sublime text ip address\n[test/run-tests]   | Reading package lists...\n[test/run-tests]   | Building dependency tree...\n[test/run-tests]   | Reading state information...\n[test/run-tests]   | net-tools is already the newest version (1.60+git20180626.aebd88e-1ubuntu1).\n[test/run-tests]   | 0 upgraded, 0 newly installed, 0 to remove and 383 not upgraded.\n[test/run-tests]   | SIOCADDRT: Operation not permitted\n[test/run-tests]   | See https://github.com/SublimeText/UnitTesting/issues/190#issuecomment-850133753\n[test/run-tests]   \u2705  Success - Main # Disable warnings about detached HEAD\n# https://stackoverflow.com/questions/36794501\ngit config --global advice.detachedHead false\n\n# block sublime text website ip\nbash $GITHUB_ACTION_PATH/../../scripts/block_ip.sh\n[test/run-tests] \u2b50 Run Main REPO=\"$GITHUB_REPOSITORY\"\nif [ \"true\" = \"true\" ]; then\n  cd \"./\"\n  REMOTEURL=$(git config --get remote.origin.url || true)\n  cd -\n  if [[ \"$REMOTEURL\" =~ ^https://github.com/ ]]; then\n    REPO=${REMOTEURL#https://github.com/}\n    REPO=${REPO%\\.git}\n  fi\nfi\nPACKAGE_FROM_INPUTS=\"\"\nPACKAGE=\"${PACKAGE_FROM_INPUTS:-${REPO#*/}}\"\n\necho \"PACKAGE=$PACKAGE\" >> $GITHUB_ENV\n[test/run-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-8.sh] user= workdir=\n[test/run-tests]   | /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/randy3k-AutoWrap\n[test/run-tests]   \u2705  Success - Main REPO=\"$GITHUB_REPOSITORY\"\nif [ \"true\" = \"true\" ]; then\n  cd \"./\"\n  REMOTEURL=$(git config --get remote.origin.url || true)\n  cd -\n  if [[ \"$REMOTEURL\" =~ ^https://github.com/ ]]; then\n    REPO=${REMOTEURL#https://github.com/}\n    REPO=${REPO%\\.git}\n  fi\nfi\nPACKAGE_FROM_INPUTS=\"\"\nPACKAGE=\"${PACKAGE_FROM_INPUTS:-${REPO#*/}}\"\n\necho \"PACKAGE=$PACKAGE\" >> $GITHUB_ENV\n[test/run-tests]   \u2699  ::set-env:: PACKAGE=AutoWrap\n[test/run-tests] \u2b50 Run Main . $GITHUB_ACTION_PATH/../../scripts/utils.sh\n\n# Copy plugin files to Packages/<Package> folder if files are checked out.\nif [ \"true\" = \"true\" ]; then\n  cd \"./\"\n  if [ -d \"./.git\" ] && [ ! -d \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\" ]; then\n      # symlink does not play well with coverage\n      echo \"copy the package to sublime package directory\"\n      mkdir -p \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\"\n      cp -r ./ \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\"\n      # detached head will crash package control\n      rm -rf \"$SUBLIME_TEXT_PACKAGES/$PACKAGE/.git\"\n  fi\n  cd -\nfi\nif [ \"true\" = \"true\" ]; then\n    InstallPackage \"UnitTesting\" \"https://github.com/SublimeText/UnitTesting\" \"\"\nfi\nif [ \"true\" = \"true\" ]; then\n    InstallPackage \"coverage\" \"https://github.com/codexns/sublime-coverage\" \"\"\nfi\n\nwhile read -r x; do\n    if [[ \"$x\" =~ ^(.*):(.*)/([^@]*)@?(.*)$ ]]; then\n        PKG=\"${BASH_REMATCH[1]}\"\n        USER=\"${BASH_REMATCH[2]}\"\n        REPO=\"${BASH_REMATCH[3]}\"\n        SHA=\"${BASH_REMATCH[4]}\"\n    elif [[ \"$x\" =~ ^(.*)/([^@]*)@?(.*)$ ]]; then\n        PKG=\"${BASH_REMATCH[2]}\"\n        USER=\"${BASH_REMATCH[1]}\"\n        REPO=\"${BASH_REMATCH[2]}\"\n        SHA=\"${BASH_REMATCH[3]}\"\n    else\n      continue\n    fi\n    InstallPackage \"$PKG\" \"https://github.com/$USER/$REPO\" \"$SHA\"\ndone <<< \"\"\n[test/run-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-9.sh] user= workdir=\n[test/run-tests]   | copy the package to sublime package directory\n[test/run-tests]   | /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/randy3k-AutoWrap\n[test/run-tests]   | Installing UnitTesting from https://github.com/SublimeText/UnitTesting@1.5.9 to /home/runneradmin/.config/sublime-text-3/Packages/UnitTesting\n[test/run-tests]   | Installing coverage from https://github.com/codexns/sublime-coverage@1.0.0 to /home/runneradmin/.config/sublime-text-3/Packages/coverage\n[test/run-tests]   \u2705  Success - Main . $GITHUB_ACTION_PATH/../../scripts/utils.sh\n\n# Copy plugin files to Packages/<Package> folder if files are checked out.\nif [ \"true\" = \"true\" ]; then\n  cd \"./\"\n  if [ -d \"./.git\" ] && [ ! -d \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\" ]; then\n      # symlink does not play well with coverage\n      echo \"copy the package to sublime package directory\"\n      mkdir -p \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\"\n      cp -r ./ \"$SUBLIME_TEXT_PACKAGES/$PACKAGE\"\n      # detached head will crash package control\n      rm -rf \"$SUBLIME_TEXT_PACKAGES/$PACKAGE/.git\"\n  fi\n  cd -\nfi\nif [ \"true\" = \"true\" ]; then\n    InstallPackage \"UnitTesting\" \"https://github.com/SublimeText/UnitTesting\" \"\"\nfi\nif [ \"true\" = \"true\" ]; then\n    InstallPackage \"coverage\" \"https://github.com/codexns/sublime-coverage\" \"\"\nfi\n\nwhile read -r x; do\n    if [[ \"$x\" =~ ^(.*):(.*)/([^@]*)@?(.*)$ ]]; then\n        PKG=\"${BASH_REMATCH[1]}\"\n        USER=\"${BASH_REMATCH[2]}\"\n        REPO=\"${BASH_REMATCH[3]}\"\n        SHA=\"${BASH_REMATCH[4]}\"\n    elif [[ \"$x\" =~ ^(.*)/([^@]*)@?(.*)$ ]]; then\n        PKG=\"${BASH_REMATCH[2]}\"\n        USER=\"${BASH_REMATCH[1]}\"\n        REPO=\"${BASH_REMATCH[2]}\"\n        SHA=\"${BASH_REMATCH[3]}\"\n    else\n      continue\n    fi\n    InstallPackage \"$PKG\" \"https://github.com/$USER/$REPO\" \"$SHA\"\ndone <<< \"\"\n[test/run-tests] \u2b50 Run Main bash $GITHUB_ACTION_PATH/../../scripts/install_package_control.sh\n[test/run-tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1-composite-10.sh] user= workdir=\n[test/run-tests]   | creating Package Control.sublime-settings\n[test/run-tests]   | ....................................Timeout: Fail to install Package Control.\n[test/run-tests]   \u274c  Failure - Main bash $GITHUB_ACTION_PATH/../../scripts/install_package_control.sh\n[test/run-tests] exitcode '1': failure\n[test/run-tests]   \u274c  Failure - Main SublimeText/UnitTesting/actions/setup@master\n[test/run-tests] exitcode '1': failure\n[test/run-tests] \u2b50 Run Post SublimeText/UnitTesting/actions/setup@master\n[test/run-tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/SublimeText-UnitTesting-actions-setup@master/ dst=/var/run/act/actions/SublimeText-UnitTesting-actions-setup@master/\n[test/run-tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/SublimeText-UnitTesting-actions-setup@master/] user=0 workdir=\n[test/run-tests]   \u2705  Success - Post SublimeText/UnitTesting/actions/setup@master\n[test/run-tests] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'run-tests' failed\n"
}