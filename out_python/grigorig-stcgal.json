{
    "repository": "grigorig/stcgal",
    "clone_url": "https://github.com/grigorig/stcgal.git",
    "timestamp": "2023-05-29T15:14:17.900737Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Python package/test] \ud83d\ude80  Start image=crawlergpt:latest\n[Python package/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Python package/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Python package/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Python package/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/grigorig-stcgal] user=0 workdir=\n[Python package/test]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[Python package/test] \ud83e\uddea  Matrix: map[python-version:3.5]\n[Python package/test] \u2b50 Run Main actions/checkout@v2\n[Python package/test]   \u2705  Success - Main actions/checkout@v2\n[Python package/test] \u2b50 Run Main Set up Python 3.5\n[Python package/test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[Python package/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[Python package/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[Python package/test]   \ud83d\udcac  ::debug::Semantic version spec of 3.5 is 3.5\n[Python package/test]   \ud83d\udcac  ::debug::isExplicit: \n[Python package/test]   \ud83d\udcac  ::debug::explicit? false\n[Python package/test]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Python package/test]   \ud83d\udcac  ::debug::explicit? true\n[Python package/test]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Python package/test]   \ud83d\udcac  ::debug::explicit? true\n[Python package/test]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Python package/test]   \ud83d\udcac  ::debug::explicit? true\n[Python package/test]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Python package/test]   \ud83d\udcac  ::debug::explicit? true\n[Python package/test]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Python package/test]   \ud83d\udcac  ::debug::explicit? true\n[Python package/test]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Python package/test]   \ud83d\udcac  ::debug::explicit? true\n[Python package/test]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Python package/test]   \ud83d\udcac  ::debug::matched: 3.5.10\n[Python package/test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.5.10/x64\n[Python package/test]   \ud83d\udcac  ::debug::Found tool in cache Python 3.5.10 x64\n[Python package/test]   | Successfully setup CPython (3.5.10)\n[Python package/test]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[Python package/test]   \u2705  Success - Main Set up Python 3.5\n[Python package/test]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.5.10/x64\n[Python package/test]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.5.10/x64/lib\n[Python package/test]   \u2699  ::set-output:: python-version=3.5.10\n[Python package/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.5.10/x64\n[Python package/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.5.10/x64/bin\n[Python package/test] \u2b50 Run Main Install dependencies\n[Python package/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Python package/test]   | DEPRECATION: Python 3.5 reached the end of its life on September 13th, 2020. Please upgrade your Python as Python 3.5 is no longer maintained. pip 21.0 will drop support for Python 3.5 in January 2021. pip 21.0 will remove support for this functionality.\n[Python package/test]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages (20.3.4)\n[Python package/test]   | Collecting pip\n[Python package/test]   |   Downloading pip-20.3.4-py2.py3-none-any.whl (1.5 MB)\n[Python package/test]   |   Downloading pip-20.3.3-py2.py3-none-any.whl (1.5 MB)\n[Python package/test]   | DEPRECATION: Python 3.5 reached the end of its life on September 13th, 2020. Please upgrade your Python as Python 3.5 is no longer maintained. pip 21.0 will drop support for Python 3.5 in January 2021. pip 21.0 will remove support for this functionality.\n[Python package/test]   | Collecting pyusb\n[Python package/test]   |   Downloading pyusb-1.1.0.tar.gz (78 kB)\n[Python package/test]   |   Installing build dependencies: started\n[Python package/test]   |   Installing build dependencies: finished with status 'done'\n[Python package/test]   |   Getting requirements to build wheel: started\n[Python package/test]   |   Getting requirements to build wheel: finished with status 'done'\n[Python package/test]   |     Preparing wheel metadata: started\n[Python package/test]   |     Preparing wheel metadata: finished with status 'done'\n[Python package/test]   | Collecting coverage\n[Python package/test]   |   Downloading coverage-5.5-cp35-cp35m-manylinux2010_x86_64.whl (240 kB)\n[Python package/test]   | Collecting coveralls\n[Python package/test]   |   Downloading coveralls-3.3.1-py2.py3-none-any.whl (14 kB)\n[Python package/test]   | Collecting pyserial\n[Python package/test]   |   Downloading pyserial-3.5-py2.py3-none-any.whl (90 kB)\n[Python package/test]   | Collecting PyYAML\n[Python package/test]   |   Downloading PyYAML-5.3.1.tar.gz (269 kB)\n[Python package/test]   | Collecting tqdm\n[Python package/test]   |   Downloading tqdm-4.64.1-py2.py3-none-any.whl (78 kB)\n[Python package/test]   | Collecting docopt>=0.6.1\n[Python package/test]   |   Downloading docopt-0.6.2.tar.gz (25 kB)\n[Python package/test]   | Collecting requests>=1.0.0\n[Python package/test]   |   Downloading requests-2.25.1-py2.py3-none-any.whl (61 kB)\n[Python package/test]   | Collecting urllib3<1.27,>=1.21.1\n[Python package/test]   |   Downloading urllib3-1.26.9-py2.py3-none-any.whl (138 kB)\n[Python package/test]   | Collecting idna<3,>=2.5\n[Python package/test]   |   Downloading idna-2.10-py2.py3-none-any.whl (58 kB)\n[Python package/test]   | Collecting chardet<5,>=3.0.2\n[Python package/test]   |   Downloading chardet-4.0.0-py2.py3-none-any.whl (178 kB)\n[Python package/test]   | Collecting certifi>=2017.4.17\n[Python package/test]   |   Downloading certifi-2021.10.8-py2.py3-none-any.whl (149 kB)\n[Python package/test]   | Collecting importlib-resources\n[Python package/test]   |   Downloading importlib_resources-3.2.1-py2.py3-none-any.whl (26 kB)\n[Python package/test]   | Collecting zipp>=0.4\n[Python package/test]   |   Downloading zipp-1.2.0-py2.py3-none-any.whl (4.8 kB)\n[Python package/test]   | Using legacy 'setup.py install' for PyYAML, since package 'wheel' is not installed.\n[Python package/test]   | Using legacy 'setup.py install' for docopt, since package 'wheel' is not installed.\n[Python package/test]   | Building wheels for collected packages: pyusb\n[Python package/test]   |   Building wheel for pyusb (PEP 517): started\n[Python package/test]   |   Building wheel for pyusb (PEP 517): finished with status 'done'\n[Python package/test]   |   Created wheel for pyusb: filename=pyusb-1.1.0-py3-none-any.whl size=58024 sha256=a7bcce009ad208be344fff023ec819f241e5b7dca17a1cf6e2ee9739b8a75369\n[Python package/test]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/6c/f7/0b/56c2176e4dd0409ec452c7b348ffd5c26d3cac9b414fa5746d\n[Python package/test]   | Successfully built pyusb\n[Python package/test]   | Installing collected packages: zipp, urllib3, idna, chardet, certifi, requests, importlib-resources, docopt, coverage, tqdm, PyYAML, pyusb, pyserial, coveralls\n[Python package/test]   |     Running setup.py install for docopt: started\n[Python package/test]   |     Running setup.py install for docopt: finished with status 'done'\n[Python package/test]   |     Running setup.py install for PyYAML: started\n[Python package/test]   |     Running setup.py install for PyYAML: finished with status 'done'\n[Python package/test]   | Successfully installed PyYAML-5.3.1 certifi-2021.10.8 chardet-4.0.0 coverage-5.5 coveralls-3.3.1 docopt-0.6.2 idna-2.10 importlib-resources-3.2.1 pyserial-3.5 pyusb-1.1.0 requests-2.25.1 tqdm-4.64.1 urllib3-1.26.9 zipp-1.2.0\n[Python package/test]   \u2705  Success - Main Install dependencies\n[Python package/test] \u2b50 Run Main Build package\n[Python package/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Python package/test]   | running build\n[Python package/test]   | running build_py\n[Python package/test]   | creating build\n[Python package/test]   | creating build/lib\n[Python package/test]   | creating build/lib/stcgal\n[Python package/test]   | copying stcgal/frontend.py -> build/lib/stcgal\n[Python package/test]   | copying stcgal/utils.py -> build/lib/stcgal\n[Python package/test]   | copying stcgal/models.py -> build/lib/stcgal\n[Python package/test]   | copying stcgal/ihex.py -> build/lib/stcgal\n[Python package/test]   | copying stcgal/__init__.py -> build/lib/stcgal\n[Python package/test]   | copying stcgal/options.py -> build/lib/stcgal\n[Python package/test]   | copying stcgal/protocols.py -> build/lib/stcgal\n[Python package/test]   | copying stcgal/__main__.py -> build/lib/stcgal\n[Python package/test]   | /opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/distutils/dist.py:261: UserWarning: Unknown distribution option: 'long_description_content_type'\n[Python package/test]   |   warnings.warn(msg)\n[Python package/test]   \u2705  Success - Main Build package\n[Python package/test] \u2b50 Run Main Test with unittest\n[Python package/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Python package/test]   | running test\n[Python package/test]   | running egg_info\n[Python package/test]   | creating stcgal.egg-info\n[Python package/test]   | writing requirements to stcgal.egg-info/requires.txt\n[Python package/test]   | writing top-level names to stcgal.egg-info/top_level.txt\n[Python package/test]   | writing stcgal.egg-info/PKG-INFO\n[Python package/test]   | writing entry points to stcgal.egg-info/entry_points.txt\n[Python package/test]   | writing dependency_links to stcgal.egg-info/dependency_links.txt\n[Python package/test]   | writing manifest file 'stcgal.egg-info/SOURCES.txt'\n[Python package/test]   | reading manifest file 'stcgal.egg-info/SOURCES.txt'\n[Python package/test]   | writing manifest file 'stcgal.egg-info/SOURCES.txt'\n[Python package/test]   | running build_ext\n[Python package/test]   | /opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/distutils/dist.py:261: UserWarning: Unknown distribution option: 'long_description_content_type'\n[Python package/test]   |   warnings.warn(msg)\n[Python package/test]   | test_create_baud_type (tests.test_utils.TestBaudType)\n[Python package/test]   | Test creation of BaudType instances ... ok\n[Python package/test]   | test_decode_packed_bcd (tests.test_utils.TestUtils)\n[Python package/test]   | Test packed BCD decoder ... ok\n[Python package/test]   | test_hexstr (tests.test_utils.TestUtils)\n[Python package/test]   | Test byte array formatter ... ok\n[Python package/test]   | test_to_bool (tests.test_utils.TestUtils)\n[Python package/test]   | Test special utility function for bool conversion ... ok\n[Python package/test]   | test_to_int (tests.test_utils.TestUtils)\n[Python package/test]   | Test wrapped integer conversion ... ok\n[Python package/test]   | test_empty (tests.test_ihex.IHEXTests)\n[Python package/test]   | Test reading an empty file ... ok\n[Python package/test]   | test_invalid (tests.test_ihex.IHEXTests)\n[Python package/test]   | Test invalid encoded data ... ok\n[Python package/test]   | test_roundtrip (tests.test_ihex.IHEXTests)\n[Python package/test]   | Test round-trip through encoder/decoder ... ok\n[Python package/test]   | test_simple (tests.test_ihex.IHEXTests)\n[Python package/test]   | Test reading a basic, valid file ... ok\n[Python package/test]   | test_program_stc12 (tests.test_program.ProgramTests)\n[Python package/test]   | Test a programming cycle with STC12 protocol ... \rWriting flash:   0%|          | 0/512 [00:00<?, ? Bytes/s]\rWriting flash: 640 Bytes [00:00, 1606436.00 Bytes/s]      \n[Python package/test]   | ok\n[Python package/test]   | test_program_stc12a (tests.test_program.ProgramTests)\n[Python package/test]   | Test a programming cycle with STC12A protocol ... \rWriting flash:   0%|          | 0/512 [00:00<?, ? Bytes/s]\rWriting flash: 640 Bytes [00:00, 2946602.15 Bytes/s]      \n[Python package/test]   | ok\n[Python package/test]   | test_program_stc12b (tests.test_program.ProgramTests)\n[Python package/test]   | Test a programming cycle with STC12B protocol ... skipped 'trace missing'\n[Python package/test]   | test_program_stc15a (tests.test_program.ProgramTests)\n[Python package/test]   | Test a programming cycle with STC15A protocol ... skipped 'trace is broken'\n[Python package/test]   | test_program_stc15f2 (tests.test_program.ProgramTests)\n[Python package/test]   | Test a programming cycle with STC15 protocol, F2 series ... \rWriting flash:   0%|          | 0/512 [00:00<?, ? Bytes/s]\rWriting flash: 576 Bytes [00:00, 718382.13 Bytes/s]       \n[Python package/test]   | ok\n[Python package/test]   | test_program_stc15l1 (tests.test_program.ProgramTests)\n[Python package/test]   | Test a programming cycle with STC15 protocol, L1 series ... \rWriting flash:   0%|          | 0/512 [00:00<?, ? Bytes/s]\rWriting flash: 576 Bytes [00:00, 734545.18 Bytes/s]       \n[Python package/test]   | ok\n[Python package/test]   | test_program_stc15w4 (tests.test_program.ProgramTests)\n[Python package/test]   | Test a programming cycle with STC15 protocol, W4 series ... \rWriting flash:   0%|          | 0/512 [00:00<?, ? Bytes/s]\rWriting flash: 576 Bytes [00:00, 696029.70 Bytes/s]       \n[Python package/test]   | ok\n[Python package/test]   | test_program_stc15w4_usb (tests.test_program.ProgramTests)\n[Python package/test]   | Test a programming cycle with STC15W4 USB protocol ... skipped 'USB not supported yet, trace missing'\n[Python package/test]   | test_program_stc89 (tests.test_program.ProgramTests)\n[Python package/test]   | Test a programming cycle with STC89 protocol ... \rWriting flash:   0%|          | 0/512 [00:00<?, ? Bytes/s]\rWriting flash: 640 Bytes [00:00, 2956337.62 Bytes/s]      \n[Python package/test]   | ok\n[Python package/test]   | test_program_stc8_untrimmed (tests.test_program.ProgramTests)\n[Python package/test]   | Test error with untrimmed MCU ... Protocol error: uncalibrated, please provide a trim value\n[Python package/test]   | ok\n[Python package/test]   | test_program_stc8a8 (tests.test_program.ProgramTests)\n[Python package/test]   | Test a programming cycle with STC8 protocol, STC8A8 series ... \rWriting flash:   0%|          | 0/512 [00:00<?, ? Bytes/s]\rWriting flash: 576 Bytes [00:00, 643044.74 Bytes/s]       \n[Python package/test]   | ok\n[Python package/test]   | test_program_fuzz (tests.test_fuzzing.TestProgramFuzzed)\n[Python package/test]   | Test programming cycles with fuzzing enabled ... ok\n[Python package/test]   | \n[Python package/test]   | ----------------------------------------------------------------------\n[Python package/test]   | Ran 21 tests in 72.798s\n[Python package/test]   | \n[Python package/test]   | OK (skipped=3)\n[Python package/test]   \u2705  Success - Main Test with unittest\n[Python package/test] \u2b50 Run Main Coveralls\n[Python package/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[Python package/test]   | Running on Github Actions but GITHUB_TOKEN is not set. Add \"env: GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\" to your step config.\n[Python package/test]   | Traceback (most recent call last):\n[Python package/test]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/coveralls/cli.py\", line 68, in main\n[Python package/test]   |     src_dir=options.get('--srcdir') or '')\n[Python package/test]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/coveralls/api.py\", line 49, in __init__\n[Python package/test]   |     self.ensure_token()\n[Python package/test]   |   File \"/opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/coveralls/api.py\", line 57, in ensure_token\n[Python package/test]   |     'Running on Github Actions but GITHUB_TOKEN is not set. '\n[Python package/test]   | coveralls.exception.CoverallsException: Running on Github Actions but GITHUB_TOKEN is not set. Add \"env: GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\" to your step config.\n[Python package/test]   \u274c  Failure - Main Coveralls\n[Python package/test] exitcode '1': failure\n[Python package/test] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'test' failed\n"
}