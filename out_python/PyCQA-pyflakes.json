{
    "repository": "PyCQA/pyflakes",
    "clone_url": "https://github.com/PyCQA/pyflakes.git",
    "timestamp": "2023-05-29T15:23:12.226045Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Test/build] \ud83d\ude80  Start image=crawlergpt:latest\n[Test/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/PyCQA-pyflakes] user=0 workdir=\n[Test/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[Test/build] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.8]\n[Test/build] \u2b50 Run Main actions/checkout@v3\n[Test/build]   \u2705  Success - Main actions/checkout@v3\n[Test/build] \u2b50 Run Main Set up Python 3.8\n[Test/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[Test/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[Test/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[Test/build]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[Test/build]   \u2753  ::group::Installed versions\n[Test/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[Test/build]   \ud83d\udcac  ::debug::isExplicit: \n[Test/build]   \ud83d\udcac  ::debug::explicit? false\n[Test/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Test/build]   \ud83d\udcac  ::debug::explicit? true\n[Test/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Test/build]   \ud83d\udcac  ::debug::explicit? true\n[Test/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Test/build]   \ud83d\udcac  ::debug::explicit? true\n[Test/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Test/build]   \ud83d\udcac  ::debug::explicit? true\n[Test/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Test/build]   \ud83d\udcac  ::debug::explicit? true\n[Test/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Test/build]   \ud83d\udcac  ::debug::explicit? true\n[Test/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Test/build]   \ud83d\udcac  ::debug::matched: 3.8.11\n[Test/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[Test/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[Test/build]   | Successfully set up CPython (3.8.11)\n[Test/build]   \u2753  ::endgroup::\n[Test/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[Test/build]   \u2705  Success - Main Set up Python 3.8\n[Test/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[Test/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[Test/build]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib/pkgconfig\n[Test/build]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[Test/build]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[Test/build]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[Test/build]   \u2699  ::set-output:: python-version=3.8.11\n[Test/build]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.8.11/x64/bin/python\n[Test/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[Test/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[Test/build] \u2b50 Run Main Install dependencies\n[Test/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test/build]   | Collecting tox\n[Test/build]   |   Downloading tox-4.5.2-py3-none-any.whl (148 kB)\n[Test/build]   | Collecting colorama>=0.4.6\n[Test/build]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[Test/build]   | Collecting chardet>=5.1\n[Test/build]   |   Downloading chardet-5.1.0-py3-none-any.whl (199 kB)\n[Test/build]   | Collecting packaging>=23.1\n[Test/build]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[Test/build]   | Collecting virtualenv>=20.23\n[Test/build]   |   Downloading virtualenv-20.23.0-py3-none-any.whl (3.3 MB)\n[Test/build]   | Collecting filelock>=3.12\n[Test/build]   |   Downloading filelock-3.12.0-py3-none-any.whl (10 kB)\n[Test/build]   | Collecting pyproject-api>=1.5.1\n[Test/build]   |   Downloading pyproject_api-1.5.1-py3-none-any.whl (12 kB)\n[Test/build]   | Collecting cachetools>=5.3\n[Test/build]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[Test/build]   | Collecting pluggy>=1\n[Test/build]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[Test/build]   | Collecting tomli>=2.0.1\n[Test/build]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[Test/build]   | Collecting platformdirs>=3.5.1\n[Test/build]   |   Downloading platformdirs-3.5.1-py3-none-any.whl (15 kB)\n[Test/build]   | Collecting distlib<1,>=0.3.6\n[Test/build]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[Test/build]   | Installing collected packages: tomli, platformdirs, packaging, filelock, distlib, virtualenv, pyproject-api, pluggy, colorama, chardet, cachetools, tox\n[Test/build]   | Successfully installed cachetools-5.3.1 chardet-5.1.0 colorama-0.4.6 distlib-0.3.6 filelock-3.12.0 packaging-23.1 platformdirs-3.5.1 pluggy-1.0.0 pyproject-api-1.5.1 tomli-2.0.1 tox-4.5.2 virtualenv-20.23.0\n[Test/build]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[Test/build]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.8.11/x64/bin/python -m pip install --upgrade pip' command.\n[Test/build]   \u2705  Success - Main Install dependencies\n[Test/build] \u2b50 Run Main Tox tests\n[Test/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Test/build]   | py: install_deps> python -I -m pip install flake8==6.0.0\n[Test/build]   | .pkg: install_requires> python -I -m pip install 'setuptools>=40.8.0' wheel\n[Test/build]   | .pkg: _optional_hooks> python /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[Test/build]   | .pkg: get_requires_for_build_sdist> python /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[Test/build]   | .pkg: freeze> python -m pip freeze --all\n[Test/build]   | .pkg: pip==23.1.2,setuptools==67.7.2,wheel==0.40.0\n[Test/build]   | .pkg: prepare_metadata_for_build_wheel> python /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[Test/build]   | .pkg: build_sdist> python /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[Test/build]   | py: install_package> python -I -m pip install --force-reinstall --no-deps /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/PyCQA-pyflakes/.tox/.tmp/package/1/pyflakes-3.0.1.tar.gz\n[Test/build]   | py: freeze> python -m pip freeze --all\n[Test/build]   | py: flake8==6.0.0,mccabe==0.7.0,pip==23.1.2,pycodestyle==2.10.0,pyflakes @ file:///tmp/de65f406-fe28-11ed-a890-af2cc187fc11/PyCQA-pyflakes/.tox/.tmp/package/1/pyflakes-3.0.1.tar.gz#sha256=3414193c7d6b313bdae57a7e549caab11b1892f6e693813fc9255dffb02570dd,setuptools==67.7.2,wheel==0.40.0\n[Test/build]   | py: commands[0]> python --version --version\n[Test/build]   | Python 3.8.11 (default, Jul  5 2021, 19:22:52) \n[Test/build]   | [GCC 9.3.0]\n[Test/build]   | py: commands[1]> python -m unittest discover pyflakes\n[Test/build]   | ..............................................................................s.................................s...............................................................................................s....................................................................................ss..s..........s....................s................................................................................................................................................ssssssss.................s.................................................................................s........s................................................................s..................................................ss..s..........s.\n[Test/build]   | ----------------------------------------------------------------------\n[Test/build]   | Ran 723 tests in 2.214s\n[Test/build]   | \n[Test/build]   | OK (skipped=24)\n[Test/build]   | py: commands[2]> flake8 pyflakes setup.py\n[Test/build]   | .pkg: _exit> python /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/pyproject_api/_backend.py True setuptools.build_meta __legacy__\n[Test/build]   |   py: OK (16.44=setup[12.46]+cmd[0.01,2.57,1.40] seconds)\n[Test/build]   |   congratulations :) (16.69 seconds)\n[Test/build]   \u2705  Success - Main Tox tests\n[Test/build] \u2b50 Run Post Set up Python 3.8\n[Test/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[Test/build]   \u2705  Success - Post Set up Python 3.8\n[Test/build] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}