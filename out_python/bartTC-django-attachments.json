{
    "repository": "bartTC/django-attachments",
    "clone_url": "https://github.com/bartTC/django-attachments.git",
    "timestamp": "2023-05-29T13:59:41.483840Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[testing/tox] \ud83d\ude80  Start image=crawlergpt:latest\n[testing/tox]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[testing/tox]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[testing/tox]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[testing/tox]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/bartTC-django-attachments] user=0 workdir=\n[testing/tox]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[testing/tox] \ud83e\uddea  Matrix: map[python-version:3.8]\n[testing/tox] \u2b50 Run Main actions/checkout@v3\n[testing/tox]   \u2705  Success - Main actions/checkout@v3\n[testing/tox] \u2b50 Run Main Set up Python 3.8\n[testing/tox]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[testing/tox]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[testing/tox]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[testing/tox]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[testing/tox]   \u2753  ::group::Installed versions\n[testing/tox]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[testing/tox]   \ud83d\udcac  ::debug::isExplicit: \n[testing/tox]   \ud83d\udcac  ::debug::explicit? false\n[testing/tox]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[testing/tox]   \ud83d\udcac  ::debug::explicit? true\n[testing/tox]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[testing/tox]   \ud83d\udcac  ::debug::explicit? true\n[testing/tox]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[testing/tox]   \ud83d\udcac  ::debug::explicit? true\n[testing/tox]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[testing/tox]   \ud83d\udcac  ::debug::explicit? true\n[testing/tox]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[testing/tox]   \ud83d\udcac  ::debug::explicit? true\n[testing/tox]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[testing/tox]   \ud83d\udcac  ::debug::explicit? true\n[testing/tox]   \ud83d\udcac  ::debug::evaluating 6 versions\n[testing/tox]   \ud83d\udcac  ::debug::matched: 3.8.11\n[testing/tox]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[testing/tox]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[testing/tox]   | Successfully set up CPython (3.8.11)\n[testing/tox]   \u2753  ::endgroup::\n[testing/tox]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[testing/tox]   \u2705  Success - Main Set up Python 3.8\n[testing/tox]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[testing/tox]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib/pkgconfig\n[testing/tox]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[testing/tox]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[testing/tox]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[testing/tox]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[testing/tox]   \u2699  ::set-output:: python-version=3.8.11\n[testing/tox]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.8.11/x64/bin/python\n[testing/tox]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[testing/tox]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[testing/tox] \u2b50 Run Main Setup\n[testing/tox]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[testing/tox]   | docker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post \"http://%2Fvar%2Frun%2Fdocker.sock/v1.24/containers/create?name=db_postgres\": dial unix /var/run/docker.sock: connect: permission denied.\n[testing/tox]   | See 'docker run --help'.\n[testing/tox]   \u274c  Failure - Main Setup\n[testing/tox] exitcode '126': failure\n[testing/tox] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'tox' failed\n"
}