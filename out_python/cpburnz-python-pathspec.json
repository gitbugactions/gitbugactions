{
    "repository": "cpburnz/python-pathspec",
    "clone_url": "https://github.com/cpburnz/python-pathspec.git",
    "timestamp": "2023-05-29T15:08:50.047652Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[CI/Test / 3.7 / ubuntu] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Test / 3.7 / ubuntu]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Test / 3.7 / ubuntu]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test / 3.7 / ubuntu]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test / 3.7 / ubuntu]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/cpburnz-python-pathspec] user=0 workdir=\n[CI/Test / 3.7 / ubuntu]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[CI/Test / 3.7 / ubuntu] \ud83e\uddea  Matrix: map[os:ubuntu python:3.7]\n[CI/Test / 3.7 / ubuntu] \u2b50 Run Main actions/checkout@v3\n[CI/Test / 3.7 / ubuntu]   \u2705  Success - Main actions/checkout@v3\n[CI/Test / 3.7 / ubuntu] \u2b50 Run Main Set up Python 3.7\n[CI/Test / 3.7 / ubuntu]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[CI/Test / 3.7 / ubuntu]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[CI/Test / 3.7 / ubuntu]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[CI/Test / 3.7 / ubuntu]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[CI/Test / 3.7 / ubuntu]   \u2753  ::group::Installed versions\n[CI/Test / 3.7 / ubuntu]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[CI/Test / 3.7 / ubuntu]   \ud83d\udcac  ::debug::isExplicit: \n[CI/Test / 3.7 / ubuntu]   \ud83d\udcac  ::debug::explicit? false\n[CI/Test / 3.7 / ubuntu]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[CI/Test / 3.7 / ubuntu]   \ud83d\udcac  ::debug::explicit? true\n[CI/Test / 3.7 / ubuntu]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[CI/Test / 3.7 / ubuntu]   \ud83d\udcac  ::debug::explicit? true\n[CI/Test / 3.7 / ubuntu]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[CI/Test / 3.7 / ubuntu]   \ud83d\udcac  ::debug::explicit? true\n[CI/Test / 3.7 / ubuntu]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[CI/Test / 3.7 / ubuntu]   \ud83d\udcac  ::debug::explicit? true\n[CI/Test / 3.7 / ubuntu]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[CI/Test / 3.7 / ubuntu]   \ud83d\udcac  ::debug::explicit? true\n[CI/Test / 3.7 / ubuntu]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[CI/Test / 3.7 / ubuntu]   \ud83d\udcac  ::debug::explicit? true\n[CI/Test / 3.7 / ubuntu]   \ud83d\udcac  ::debug::evaluating 6 versions\n[CI/Test / 3.7 / ubuntu]   \ud83d\udcac  ::debug::matched: 3.7.11\n[CI/Test / 3.7 / ubuntu]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[CI/Test / 3.7 / ubuntu]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[CI/Test / 3.7 / ubuntu]   | Successfully set up CPython (3.7.11)\n[CI/Test / 3.7 / ubuntu]   \u2753  ::endgroup::\n[CI/Test / 3.7 / ubuntu]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[CI/Test / 3.7 / ubuntu]   \u2705  Success - Main Set up Python 3.7\n[CI/Test / 3.7 / ubuntu]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[CI/Test / 3.7 / ubuntu]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[CI/Test / 3.7 / ubuntu]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[CI/Test / 3.7 / ubuntu]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[CI/Test / 3.7 / ubuntu]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[CI/Test / 3.7 / ubuntu]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[CI/Test / 3.7 / ubuntu]   \u2699  ::set-output:: python-version=3.7.11\n[CI/Test / 3.7 / ubuntu]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[CI/Test / 3.7 / ubuntu]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[CI/Test / 3.7 / ubuntu]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[CI/Test / 3.7 / ubuntu] \u2b50 Run Main Install tox\n[CI/Test / 3.7 / ubuntu]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/Test / 3.7 / ubuntu]   | Collecting tox\n[CI/Test / 3.7 / ubuntu]   |   Downloading tox-4.5.2-py3-none-any.whl (148 kB)\n[CI/Test / 3.7 / ubuntu]   | Collecting cachetools>=5.3\n[CI/Test / 3.7 / ubuntu]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[CI/Test / 3.7 / ubuntu]   | Collecting filelock>=3.12\n[CI/Test / 3.7 / ubuntu]   |   Downloading filelock-3.12.0-py3-none-any.whl (10 kB)\n[CI/Test / 3.7 / ubuntu]   | Collecting platformdirs>=3.5.1\n[CI/Test / 3.7 / ubuntu]   |   Downloading platformdirs-3.5.1-py3-none-any.whl (15 kB)\n[CI/Test / 3.7 / ubuntu]   | Collecting packaging>=23.1\n[CI/Test / 3.7 / ubuntu]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[CI/Test / 3.7 / ubuntu]   | Collecting importlib-metadata>=6.6\n[CI/Test / 3.7 / ubuntu]   |   Downloading importlib_metadata-6.6.0-py3-none-any.whl (22 kB)\n[CI/Test / 3.7 / ubuntu]   | Collecting colorama>=0.4.6\n[CI/Test / 3.7 / ubuntu]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[CI/Test / 3.7 / ubuntu]   | Collecting pyproject-api>=1.5.1\n[CI/Test / 3.7 / ubuntu]   |   Downloading pyproject_api-1.5.1-py3-none-any.whl (12 kB)\n[CI/Test / 3.7 / ubuntu]   | Collecting tomli>=2.0.1\n[CI/Test / 3.7 / ubuntu]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[CI/Test / 3.7 / ubuntu]   | Collecting typing-extensions>=4.6.2\n[CI/Test / 3.7 / ubuntu]   |   Downloading typing_extensions-4.6.2-py3-none-any.whl (31 kB)\n[CI/Test / 3.7 / ubuntu]   | Collecting chardet>=5.1\n[CI/Test / 3.7 / ubuntu]   |   Downloading chardet-5.1.0-py3-none-any.whl (199 kB)\n[CI/Test / 3.7 / ubuntu]   | Collecting pluggy>=1\n[CI/Test / 3.7 / ubuntu]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[CI/Test / 3.7 / ubuntu]   | Collecting virtualenv>=20.23\n[CI/Test / 3.7 / ubuntu]   |   Downloading virtualenv-20.23.0-py3-none-any.whl (3.3 MB)\n[CI/Test / 3.7 / ubuntu]   | Collecting zipp>=0.5\n[CI/Test / 3.7 / ubuntu]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[CI/Test / 3.7 / ubuntu]   | Collecting distlib<1,>=0.3.6\n[CI/Test / 3.7 / ubuntu]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[CI/Test / 3.7 / ubuntu]   | Installing collected packages: zipp, typing-extensions, tomli, platformdirs, packaging, importlib-metadata, filelock, distlib, virtualenv, pyproject-api, pluggy, colorama, chardet, cachetools, tox\n[CI/Test / 3.7 / ubuntu]   | Successfully installed cachetools-5.3.1 chardet-5.1.0 colorama-0.4.6 distlib-0.3.6 filelock-3.12.0 importlib-metadata-6.6.0 packaging-23.1 platformdirs-3.5.1 pluggy-1.0.0 pyproject-api-1.5.1 tomli-2.0.1 tox-4.5.2 typing-extensions-4.6.2 virtualenv-20.23.0 zipp-3.15.0\n[CI/Test / 3.7 / ubuntu]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[CI/Test / 3.7 / ubuntu]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[CI/Test / 3.7 / ubuntu]   \u2705  Success - Main Install tox\n[CI/Test / 3.7 / ubuntu] \u2b50 Run Main Run tests\n[CI/Test / 3.7 / ubuntu]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[CI/Test / 3.7 / ubuntu]   | .pkg: install_requires> python -I -m pip install 'flit_core<4,>=3.2'\n[CI/Test / 3.7 / ubuntu]   | .pkg: _optional_hooks> python /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pyproject_api/_backend.py True flit_core.buildapi\n[CI/Test / 3.7 / ubuntu]   | .pkg: get_requires_for_build_sdist> python /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pyproject_api/_backend.py True flit_core.buildapi\n[CI/Test / 3.7 / ubuntu]   | .pkg: freeze> python -m pip freeze --all\n[CI/Test / 3.7 / ubuntu]   | .pkg: flit_core==3.9.0,pip==23.1.2,setuptools==67.7.2,wheel==0.40.0\n[CI/Test / 3.7 / ubuntu]   | .pkg: build_sdist> python /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pyproject_api/_backend.py True flit_core.buildapi\n[CI/Test / 3.7 / ubuntu]   | py: install_package> python -I -m pip install --force-reinstall --no-deps /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/cpburnz-python-pathspec/.tox/.tmp/package/1/pathspec-0.11.2.dev1.tar.gz\n[CI/Test / 3.7 / ubuntu]   | py: freeze> python -m pip freeze --all\n[CI/Test / 3.7 / ubuntu]   | py: pathspec @ file:///tmp/de65f406-fe28-11ed-a890-af2cc187fc11/cpburnz-python-pathspec/.tox/.tmp/package/1/pathspec-0.11.2.dev1.tar.gz#sha256=4d78ecb1255f2bb2d9b17d05ae81b9f11f475f5f9fb1d37404d26bb37cf20d3e,pip==23.1.2,setuptools==67.7.2,wheel==0.40.0\n[CI/Test / 3.7 / ubuntu]   | py: commands[0]> python -m unittest --verbose\n[CI/Test / 3.7 / ubuntu]   | test_01_reversed_args (tests.test_gitignore.GitIgnoreSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test reversed args for `.from_lines()`. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_02_dir_exclusions (tests.test_gitignore.GitIgnoreSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test directory exclusions. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_02_file_exclusions (tests.test_gitignore.GitIgnoreSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test file exclusions. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_02_issue_41_a (tests.test_gitignore.GitIgnoreSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test including a file and excluding a directory with the same name ... ok\n[CI/Test / 3.7 / ubuntu]   | test_02_issue_41_b (tests.test_gitignore.GitIgnoreSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test including a file and excluding a directory with the same name ... ok\n[CI/Test / 3.7 / ubuntu]   | test_02_issue_41_c (tests.test_gitignore.GitIgnoreSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test including a file and excluding a directory with the same name ... ok\n[CI/Test / 3.7 / ubuntu]   | test_03_issue_19_a (tests.test_gitignore.GitIgnoreSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test matching files in a subdirectory of an included directory, ... ok\n[CI/Test / 3.7 / ubuntu]   | test_03_issue_19_b (tests.test_gitignore.GitIgnoreSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test matching files in a subdirectory of an included directory, ... ok\n[CI/Test / 3.7 / ubuntu]   | test_03_issue_19_c (tests.test_gitignore.GitIgnoreSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test matching files in a subdirectory of an included directory, ... ok\n[CI/Test / 3.7 / ubuntu]   | test_03_subdir (tests.test_gitignore.GitIgnoreSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test matching files in a subdirectory of an included directory. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_04_issue_62 (tests.test_gitignore.GitIgnoreSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test including all files and excluding a directory. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_05_issue_39 (tests.test_gitignore.GitIgnoreSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test excluding files in a directory. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_06_issue_64 (tests.test_gitignore.GitIgnoreSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test using a double asterisk pattern. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_07_issue_74 (tests.test_gitignore.GitIgnoreSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test include directory should override exclude file. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_00_empty (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Tests an empty pattern. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_01_absolute (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Tests an absolute path pattern. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_01_absolute_ignore (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Tests an ignore absolute path pattern. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_01_absolute_root (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Tests a single root absolute path pattern. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_01_relative (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Tests a relative path pattern. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_01_relative_nested (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Tests a relative nested path pattern. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_02_comment (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Tests a comment pattern. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_02_ignore (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Tests an exclude pattern. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_03_child_double_asterisk (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Tests a directory name with a double-asterisk child ... ok\n[CI/Test / 3.7 / ubuntu]   | test_03_double_asterisk_trailing_slash_edge_case (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Tests the edge-case **/ pattern. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_03_duplicate_leading_double_asterisk_edge_case (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Regression test for duplicate leading **/ bug. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_03_inner_double_asterisk (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Tests a path with an inner double-asterisk directory. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_03_only_double_asterisk (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Tests a double-asterisk pattern which matches everything. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_03_parent_double_asterisk (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Tests a file name with a double-asterisk parent directory. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_04_infix_wildcard (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Tests a pattern with an infix wildcard. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_04_postfix_wildcard (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Tests a pattern with a postfix wildcard. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_04_prefix_wildcard (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Tests a pattern with a prefix wildcard. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_05_directory (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Tests a directory pattern. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_06_access_deprecated (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Tests that the pattern is accessible from the root module using the ... ok\n[CI/Test / 3.7 / ubuntu]   | test_06_registered (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Tests that the pattern is registered. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_06_registered_deprecated (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Tests that the pattern is registered under the deprecated alias. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_07_decode_bytes (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test decoding bytes. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_07_encode_bytes (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test encoding bytes. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_07_match_bytes_and_bytes (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test byte string patterns matching byte string paths. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_07_match_bytes_and_bytes_complete (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test byte string patterns matching byte string paths. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_07_match_bytes_and_unicode_fail (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test byte string patterns matching byte string paths. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_07_match_unicode_and_bytes_fail (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test unicode patterns with byte paths. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_07_match_unicode_and_unicode (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test unicode patterns with unicode paths. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_08_escape (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test escaping a string with meta-characters ... ok\n[CI/Test / 3.7 / ubuntu]   | test_09_single_escape_fail (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test an escape on a line by itself. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_09_single_exclamation_mark_fail (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test an escape on a line by itself. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_10_escape_asterisk_end (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test escaping an asterisk at the end of a line. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_10_escape_asterisk_mid (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test escaping an asterisk in the middle of a line. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_10_escape_asterisk_start (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test escaping an asterisk at the start of a line. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_10_escape_exclamation_mark_start (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test escaping an exclamation mark at the start of a line. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_10_escape_pound_start (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test escaping a pound sign at the start of a line. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_11_match_directory_1 (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test matching a directory. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_11_match_directory_2 (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test matching a directory. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_11_match_sub_directory_3 (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test matching a directory. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_12_asterisk_1_regex (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test a relative asterisk path pattern's regular expression. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_12_asterisk_2_regex_equivalent (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test a path pattern equivalent to the relative asterisk using double ... ok\n[CI/Test / 3.7 / ubuntu]   | test_12_asterisk_3_child (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test a relative asterisk path pattern matching a direct child path. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_12_asterisk_4_descendant (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test a relative asterisk path pattern matching a descendant path. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_13_issue_77_regex (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test the resulting regex for regex bracket expression negation. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_13_negate_with_caret (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test negation using the caret symbol (^) ... ok\n[CI/Test / 3.7 / ubuntu]   | test_13_negate_with_exclamation_mark (tests.test_gitwildmatch.GitWildMatchTest)\n[CI/Test / 3.7 / ubuntu]   | Test negation using the exclamation mark (!) ... ok\n[CI/Test / 3.7 / ubuntu]   | test_01_absolute_dir_paths_1 (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Tests that absolute paths will be properly normalized and matched. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_01_absolute_dir_paths_2 (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Tests that absolute paths will be properly normalized and matched. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_01_current_dir_paths (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Tests that paths referencing the current directory will be properly ... ok\n[CI/Test / 3.7 / ubuntu]   | test_01_empty_path (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Tests that patterns that end with an escaped space will be treated properly. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_01_match_files (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Tests that matching files one at a time yields the same results as ... ok\n[CI/Test / 3.7 / ubuntu]   | test_01_windows_current_dir_paths (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Tests that paths referencing the current directory will be properly ... ok\n[CI/Test / 3.7 / ubuntu]   | test_01_windows_paths (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Tests that Windows paths will be properly normalized and matched. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_02_eq (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Tests equality. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_02_ne (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Tests inequality. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_03_add (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test spec addition using :data:`+` operator. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_03_iadd (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test spec addition using :data:`+=` operator. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_04_len (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test spec length. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_05_match_entries (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test matching files collectively. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_05_match_file (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test matching files individually. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_05_match_files (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test matching files collectively. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_05_match_tree_entries (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test matching a file tree. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_05_match_tree_files (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test matching a file tree. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_06_issue_41_a (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test including a file and excluding a directory with the same name ... ok\n[CI/Test / 3.7 / ubuntu]   | test_06_issue_41_b (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test including a file and excluding a directory with the same name ... ok\n[CI/Test / 3.7 / ubuntu]   | test_06_issue_41_c (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test including a file and excluding a directory with the same name ... ok\n[CI/Test / 3.7 / ubuntu]   | test_07_issue_62 (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test including all files and excluding a directory. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_08_issue_39 (tests.test_pathspec.PathSpecTest)\n[CI/Test / 3.7 / ubuntu]   | Test excluding files in a directory. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_1_files (tests.test_util.IterTreeTest)\n[CI/Test / 3.7 / ubuntu]   | Tests to make sure all files are found. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_2_0_check_symlink (tests.test_util.IterTreeTest)\n[CI/Test / 3.7 / ubuntu]   | Tests whether links can be created. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_2_1_check_realpath (tests.test_util.IterTreeTest)\n[CI/Test / 3.7 / ubuntu]   | Tests whether `os.path.realpath` works properly with symlinks. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_2_2_links (tests.test_util.IterTreeTest)\n[CI/Test / 3.7 / ubuntu]   | Tests to make sure links to directories and files work. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_2_3_sideways_links (tests.test_util.IterTreeTest)\n[CI/Test / 3.7 / ubuntu]   | Tests to make sure the same directory can be encountered multiple ... ok\n[CI/Test / 3.7 / ubuntu]   | test_2_4_recursive_links (tests.test_util.IterTreeTest)\n[CI/Test / 3.7 / ubuntu]   | Tests detection of recursive links. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_2_5_recursive_circular_links (tests.test_util.IterTreeTest)\n[CI/Test / 3.7 / ubuntu]   | Tests detection of recursion through circular links. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_2_6_detect_broken_links (tests.test_util.IterTreeTest)\n[CI/Test / 3.7 / ubuntu]   | Tests that broken links are detected. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_2_7_ignore_broken_links (tests.test_util.IterTreeTest)\n[CI/Test / 3.7 / ubuntu]   | Tests that broken links are ignored. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_2_8_no_follow_links (tests.test_util.IterTreeTest)\n[CI/Test / 3.7 / ubuntu]   | Tests to make sure directory links can be ignored. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_3_entries (tests.test_util.IterTreeTest)\n[CI/Test / 3.7 / ubuntu]   | Tests to make sure all files are found. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_4_normalizing_pathlib_path (tests.test_util.IterTreeTest)\n[CI/Test / 3.7 / ubuntu]   | Tests normalizing a :class:`pathlib.PurePath` as argument. ... ok\n[CI/Test / 3.7 / ubuntu]   | test_1_match_file (tests.test_util.MatchFileTest)\n[CI/Test / 3.7 / ubuntu]   | Test matching files individually. ... ok\n[CI/Test / 3.7 / ubuntu]   | \n[CI/Test / 3.7 / ubuntu]   | ----------------------------------------------------------------------\n[CI/Test / 3.7 / ubuntu]   | Ran 95 tests in 0.079s\n[CI/Test / 3.7 / ubuntu]   | \n[CI/Test / 3.7 / ubuntu]   | OK\n[CI/Test / 3.7 / ubuntu]   | .pkg: _exit> python /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pyproject_api/_backend.py True flit_core.buildapi\n[CI/Test / 3.7 / ubuntu]   |   py: OK (11.99=setup[11.74]+cmd[0.25] seconds)\n[CI/Test / 3.7 / ubuntu]   |   congratulations :) (12.17 seconds)\n[CI/Test / 3.7 / ubuntu]   \u2705  Success - Main Run tests\n[CI/Test / 3.7 / ubuntu] \u2b50 Run Post Set up Python 3.7\n[CI/Test / 3.7 / ubuntu]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[CI/Test / 3.7 / ubuntu]   \u2705  Success - Post Set up Python 3.7\n[CI/Test / 3.7 / ubuntu] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}