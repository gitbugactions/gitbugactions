{
    "repository": "klen/pylama",
    "clone_url": "https://github.com/klen/pylama.git",
    "timestamp": "2023-05-29T14:33:40.039879Z",
    "clone_success": true,
    "number of actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[tests/tests] \ud83d\ude80  Start image=crawlergpt:latest\n[tests/tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[tests/tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[tests/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/klen-pylama] user=0 workdir=\n[tests/tests]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=main\n[tests/tests] \ud83e\uddea  Matrix: map[python-version:3.7]\n[tests/tests] \u2b50 Run Main Checkout changes\n[tests/tests]   \u2705  Success - Main Checkout changes\n[tests/tests] \u2b50 Run Main Set up Python 3.7\n[tests/tests]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@main/ dst=/var/run/act/actions/actions-setup-python@main/\n[tests/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@main/] user=0 workdir=\n[tests/tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@main/dist/setup/index.js] user= workdir=\n[tests/tests]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[tests/tests]   \u2753  ::group::Installed versions\n[tests/tests]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[tests/tests]   \ud83d\udcac  ::debug::isExplicit: \n[tests/tests]   \ud83d\udcac  ::debug::explicit? false\n[tests/tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[tests/tests]   \ud83d\udcac  ::debug::explicit? true\n[tests/tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[tests/tests]   \ud83d\udcac  ::debug::explicit? true\n[tests/tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[tests/tests]   \ud83d\udcac  ::debug::explicit? true\n[tests/tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[tests/tests]   \ud83d\udcac  ::debug::explicit? true\n[tests/tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[tests/tests]   \ud83d\udcac  ::debug::explicit? true\n[tests/tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[tests/tests]   \ud83d\udcac  ::debug::explicit? true\n[tests/tests]   \ud83d\udcac  ::debug::evaluating 6 versions\n[tests/tests]   \ud83d\udcac  ::debug::matched: 3.7.11\n[tests/tests]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[tests/tests]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[tests/tests]   | Successfully set up CPython (3.7.11)\n[tests/tests]   \u2753  ::endgroup::\n[tests/tests]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[tests/tests]   \u2753 add-matcher /run/act/actions/actions-setup-python@main/.github/python.json\n[tests/tests]   \u2705  Success - Main Set up Python 3.7\n[tests/tests]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[tests/tests]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[tests/tests]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[tests/tests]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[tests/tests]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[tests/tests]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[tests/tests]   \u2699  ::set-output:: python-version=3.7.11\n[tests/tests]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[tests/tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[tests/tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[tests/tests] \u2b50 Run Main Install dependencies\n[tests/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[tests/tests]   | Processing /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/klen-pylama\n[tests/tests]   |   DEPRECATION: A future pip version will change local packages to be built in-place without first copying to a temporary directory. We recommend you use --use-feature=in-tree-build to test your packages with this new behavior before it becomes the default.\n[tests/tests]   |    pip 21.3 will remove support for this functionality. You can find discussion regarding this at https://github.com/pypa/pip/issues/7555.\n[tests/tests]   | Collecting mccabe>=0.7.0\n[tests/tests]   |   Downloading mccabe-0.7.0-py2.py3-none-any.whl (7.3 kB)\n[tests/tests]   | Collecting pycodestyle>=2.9.1\n[tests/tests]   |   Downloading pycodestyle-2.10.0-py2.py3-none-any.whl (41 kB)\n[tests/tests]   | Collecting pydocstyle>=6.1.1\n[tests/tests]   |   Downloading pydocstyle-6.3.0-py3-none-any.whl (38 kB)\n[tests/tests]   | Collecting pyflakes>=2.5.0\n[tests/tests]   |   Downloading pyflakes-3.0.1-py2.py3-none-any.whl (62 kB)\n[tests/tests]   | Collecting pytest>=7.1.2\n[tests/tests]   |   Downloading pytest-7.3.1-py3-none-any.whl (320 kB)\n[tests/tests]   | Collecting pytest-mypy\n[tests/tests]   |   Downloading pytest_mypy-0.10.3-py3-none-any.whl (7.1 kB)\n[tests/tests]   | Collecting eradicate>=2.0.0\n[tests/tests]   |   Downloading eradicate-2.2.0-py3-none-any.whl (6.9 kB)\n[tests/tests]   | Collecting radon>=5.1.0\n[tests/tests]   |   Downloading radon-6.0.1-py2.py3-none-any.whl (52 kB)\n[tests/tests]   | Collecting mypy\n[tests/tests]   |   Downloading mypy-1.3.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.9 MB)\n[tests/tests]   | Collecting pylint>=2.11.1\n[tests/tests]   |   Downloading pylint-2.17.4-py3-none-any.whl (536 kB)\n[tests/tests]   | Collecting pylama-quotes\n[tests/tests]   |   Downloading pylama_quotes-0.1.0-py2.py3-none-any.whl (3.8 kB)\n[tests/tests]   | Collecting toml\n[tests/tests]   |   Downloading toml-0.10.2-py2.py3-none-any.whl (16 kB)\n[tests/tests]   | Collecting vulture\n[tests/tests]   |   Downloading vulture-2.7-py2.py3-none-any.whl (27 kB)\n[tests/tests]   | Collecting types-setuptools\n[tests/tests]   |   Downloading types_setuptools-67.8.0.0-py3-none-any.whl (44 kB)\n[tests/tests]   | Collecting types-toml\n[tests/tests]   |   Downloading types_toml-0.10.8.6-py3-none-any.whl (4.5 kB)\n[tests/tests]   | Collecting importlib-metadata<5.0.0,>=2.0.0\n[tests/tests]   |   Downloading importlib_metadata-4.13.0-py3-none-any.whl (23 kB)\n[tests/tests]   | Collecting snowballstemmer>=2.2.0\n[tests/tests]   |   Downloading snowballstemmer-2.2.0-py2.py3-none-any.whl (93 kB)\n[tests/tests]   | Collecting zipp>=0.5\n[tests/tests]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[tests/tests]   | Collecting typing-extensions>=3.6.4\n[tests/tests]   |   Downloading typing_extensions-4.6.2-py3-none-any.whl (31 kB)\n[tests/tests]   | Collecting astroid<=2.17.0-dev0,>=2.15.4\n[tests/tests]   |   Downloading astroid-2.15.5-py3-none-any.whl (278 kB)\n[tests/tests]   | Collecting platformdirs>=2.2.0\n[tests/tests]   |   Downloading platformdirs-3.5.1-py3-none-any.whl (15 kB)\n[tests/tests]   | Collecting tomlkit>=0.10.1\n[tests/tests]   |   Downloading tomlkit-0.11.8-py3-none-any.whl (35 kB)\n[tests/tests]   | Collecting dill>=0.2\n[tests/tests]   |   Downloading dill-0.3.6-py3-none-any.whl (110 kB)\n[tests/tests]   | Collecting tomli>=1.1.0\n[tests/tests]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[tests/tests]   | Collecting isort<6,>=4.2.5\n[tests/tests]   |   Downloading isort-5.11.5-py3-none-any.whl (104 kB)\n[tests/tests]   | Collecting lazy-object-proxy>=1.4.0\n[tests/tests]   |   Downloading lazy_object_proxy-1.9.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (58 kB)\n[tests/tests]   | Collecting wrapt<2,>=1.11\n[tests/tests]   |   Downloading wrapt-1.15.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (75 kB)\n[tests/tests]   | Collecting typed-ast<2.0,>=1.4.0\n[tests/tests]   |   Downloading typed_ast-1.5.4-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (843 kB)\n[tests/tests]   | Collecting pluggy<2.0,>=0.12\n[tests/tests]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[tests/tests]   | Collecting iniconfig\n[tests/tests]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[tests/tests]   | Collecting exceptiongroup>=1.0.0rc8\n[tests/tests]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[tests/tests]   | Collecting packaging\n[tests/tests]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[tests/tests]   | Collecting colorama>=0.4.1\n[tests/tests]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[tests/tests]   | Collecting mando<0.8,>=0.6\n[tests/tests]   |   Downloading mando-0.7.1-py2.py3-none-any.whl (28 kB)\n[tests/tests]   | Collecting six\n[tests/tests]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[tests/tests]   | Collecting mypy-extensions>=1.0.0\n[tests/tests]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[tests/tests]   | Collecting filelock>=3.0\n[tests/tests]   |   Downloading filelock-3.12.0-py3-none-any.whl (10 kB)\n[tests/tests]   | Collecting attrs>=19.0\n[tests/tests]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[tests/tests]   | Using legacy 'setup.py install' for pylama, since package 'wheel' is not installed.\n[tests/tests]   | Installing collected packages: zipp, typing-extensions, importlib-metadata, wrapt, typed-ast, tomli, snowballstemmer, six, pluggy, packaging, mypy-extensions, lazy-object-proxy, iniconfig, exceptiongroup, tomlkit, toml, pytest, pyflakes, pydocstyle, pycodestyle, platformdirs, mypy, mccabe, mando, isort, filelock, dill, colorama, attrs, astroid, vulture, types-toml, types-setuptools, radon, pytest-mypy, pylint, pylama-quotes, pylama, eradicate\n[tests/tests]   |     Running setup.py install for pylama: started\n[tests/tests]   |     Running setup.py install for pylama: finished with status 'done'\n[tests/tests]   | Successfully installed astroid-2.15.5 attrs-23.1.0 colorama-0.4.6 dill-0.3.6 eradicate-2.2.0 exceptiongroup-1.1.1 filelock-3.12.0 importlib-metadata-4.13.0 iniconfig-2.0.0 isort-5.11.5 lazy-object-proxy-1.9.0 mando-0.7.1 mccabe-0.7.0 mypy-1.3.0 mypy-extensions-1.0.0 packaging-23.1 platformdirs-3.5.1 pluggy-1.0.0 pycodestyle-2.10.0 pydocstyle-6.3.0 pyflakes-3.0.1 pylama-8.4.1 pylama-quotes-0.1.0 pylint-2.17.4 pytest-7.3.1 pytest-mypy-0.10.3 radon-6.0.1 six-1.16.0 snowballstemmer-2.2.0 toml-0.10.2 tomli-2.0.1 tomlkit-0.11.8 typed-ast-1.5.4 types-setuptools-67.8.0.0 types-toml-0.10.8.6 typing-extensions-4.6.2 vulture-2.7 wrapt-1.15.0 zipp-3.15.0\n[tests/tests]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[tests/tests]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[tests/tests]   \u2705  Success - Main Install dependencies\n[tests/tests] \u2b50 Run Main Test pylama\n[tests/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[tests/tests]   | ============================= test session starts ==============================\n[tests/tests]   | platform linux -- Python 3.7.11, pytest-7.3.1, pluggy-1.0.0 -- /opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[tests/tests]   | cachedir: .pytest_cache\n[tests/tests]   | rootdir: /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/klen-pylama\n[tests/tests]   | configfile: setup.cfg\n[tests/tests]   | plugins: mypy-0.10.3, pylama-8.4.1\n[tests/tests]   | collecting ... collected 25 items\n[tests/tests]   | \n[tests/tests]   | pylama/__init__.py::pylama PASSED\n[tests/tests]   | pylama/__main__.py::pylama PASSED\n[tests/tests]   | pylama/check_async.py::pylama FAILED\n[tests/tests]   | \n[tests/tests]   | =================================== FAILURES ===================================\n[tests/tests]   | _________________________________ test session _________________________________\n[tests/tests]   | pylama/check_async.py:31:35 [E]  Incompatible default for argument \"code\" (default has type \"None\", argument has type \"str\")  [assignment] [mypy]\n[tests/tests]   | pylama/check_async.py:31:35 [N]  PEP 484 prohibits implicit Optional. Accordingly, mypy has changed its default to no_implicit_optional=True [mypy]\n[tests/tests]   | pylama/check_async.py:31:35 [N]  Use https://github.com/hauntsaninja/no_implicit_optional to automatically upgrade your codebase [mypy]\n[tests/tests]   | pylama/check_async.py:31:84 [E]  Incompatible default for argument \"rootdir\" (default has type \"None\", argument has type \"Path\")  [assignment] [mypy]\n[tests/tests]   | =========================== short test summary info ============================\n[tests/tests]   | FAILED pylama/check_async.py::pylama\n[tests/tests]   | !!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!\n[tests/tests]   | ========================= 1 failed, 2 passed in 5.46s ==========================\n[tests/tests]   \u274c  Failure - Main Test pylama\n[tests/tests] exitcode '1': failure\n[tests/tests] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'tests' failed\n"
}