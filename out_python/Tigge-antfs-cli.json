{
    "repository": "Tigge/antfs-cli",
    "clone_url": "https://github.com/Tigge/antfs-cli.git",
    "timestamp": "2023-05-29T14:21:32.199629Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Build/build] \ud83d\ude80  Start image=crawlergpt:latest\n[Build/lint ] \ud83d\ude80  Start image=crawlergpt:latest\n[Build/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build/lint ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Build/lint ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/lint ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Build/lint ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/Tigge-antfs-cli] user=0 workdir=\n[Build/lint ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[Build/lint ]   \u2601  git clone 'https://github.com/psf/black' # ref=stable\n[Build/lint ] \u2b50 Run Pre psf/black@stable\n[Build/lint ]   \u2705  Success - Pre psf/black@stable\n[Build/lint ] \u2b50 Run Main actions/checkout@v2\n[Build/lint ]   \u2705  Success - Main actions/checkout@v2\n[Build/lint ] \u2b50 Run Main actions/setup-python@v2\n[Build/lint ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[Build/lint ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[Build/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/Tigge-antfs-cli] user=0 workdir=\n[Build/lint ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[Build/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[Build/build] \ud83e\uddea  Matrix: map[python-version:3.6]\n[Build/lint ]   \ud83d\udcac  ::debug::Semantic version spec of 3.x is 3.x\n[Build/lint ]   \ud83d\udcac  ::debug::isExplicit: \n[Build/lint ]   \ud83d\udcac  ::debug::explicit? false\n[Build/lint ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Build/lint ]   \ud83d\udcac  ::debug::explicit? true\n[Build/lint ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Build/lint ]   \ud83d\udcac  ::debug::explicit? true\n[Build/lint ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Build/lint ]   \ud83d\udcac  ::debug::explicit? true\n[Build/lint ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Build/lint ]   \ud83d\udcac  ::debug::explicit? true\n[Build/lint ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Build/lint ]   \ud83d\udcac  ::debug::explicit? true\n[Build/lint ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Build/lint ]   \ud83d\udcac  ::debug::explicit? true\n[Build/lint ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Build/lint ]   \ud83d\udcac  ::debug::matched: 3.9.6\n[Build/lint ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[Build/lint ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[Build/lint ]   | Successfully setup CPython (3.9.6)\n[Build/lint ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[Build/lint ]   \u2705  Success - Main actions/setup-python@v2\n[Build/build] \u2b50 Run Main actions/checkout@v2\n[Build/lint ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[Build/lint ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[Build/build]   \u2705  Success - Main actions/checkout@v2\n[Build/lint ]   \u2699  ::set-output:: python-version=3.9.6\n[Build/lint ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[Build/lint ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[Build/lint ] \u2b50 Run Main psf/black@stable\n[Build/build] \u2b50 Run Main Set up Python 3.6\n[Build/lint ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/psf-black@stable/ dst=/var/run/act/actions/psf-black@stable/\n[Build/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[Build/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[Build/lint ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/psf-black@stable/] user=0 workdir=\n[Build/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[Build/lint ] \u2b50 Run Main if [ \"$RUNNER_OS\" == \"Windows\" ]; then\n  python $GITHUB_ACTION_PATH/action/main.py\nelse\n  python3 $GITHUB_ACTION_PATH/action/main.py\nfi\n[Build/lint ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[Build/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.6 is 3.6\n[Build/build]   \ud83d\udcac  ::debug::isExplicit: \n[Build/build]   \ud83d\udcac  ::debug::explicit? false\n[Build/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Build/build]   \ud83d\udcac  ::debug::explicit? true\n[Build/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Build/build]   \ud83d\udcac  ::debug::explicit? true\n[Build/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Build/build]   \ud83d\udcac  ::debug::explicit? true\n[Build/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Build/build]   \ud83d\udcac  ::debug::explicit? true\n[Build/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Build/build]   \ud83d\udcac  ::debug::explicit? true\n[Build/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Build/build]   \ud83d\udcac  ::debug::explicit? true\n[Build/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Build/build]   \ud83d\udcac  ::debug::matched: 3.6.14\n[Build/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.6.14/x64\n[Build/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.6.14 x64\n[Build/build]   | Successfully setup CPython (3.6.14)\n[Build/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[Build/build]   \u2705  Success - Main Set up Python 3.6\n[Build/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.6.14/x64\n[Build/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.6.14/x64/lib\n[Build/build]   \u2699  ::set-output:: python-version=3.6.14\n[Build/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64\n[Build/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64/bin\n[Build/build] \u2b50 Run Main Install dependencies\n[Build/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Build/lint ]   | Installing black[colorama]==$Format:%(describe:tags=true,match=*[0-9]*)$...\n[Build/lint ]   | ERROR: Invalid requirement: 'black[colorama]==$Format:%(describe:tags=true,match=*[0-9]*)$'\n[Build/lint ]   | WARNING: You are using pip version 21.1.3; however, version 23.1.2 is available.\n[Build/lint ]   | You should consider upgrading via the '/var/run/act/actions/psf-black@stable/.black-env/bin/python -m pip install --upgrade pip' command.\n[Build/lint ]   | \n[Build/lint ]   \u2757  ::error::Failed to install Black.\n[Build/lint ]   \u274c  Failure - Main if [ \"$RUNNER_OS\" == \"Windows\" ]; then\n  python $GITHUB_ACTION_PATH/action/main.py\nelse\n  python3 $GITHUB_ACTION_PATH/action/main.py\nfi\n[Build/lint ] exitcode '1': failure\n[Build/lint ]   \u274c  Failure - Main psf/black@stable\n[Build/lint ] exitcode '1': failure\n[Build/lint ] \u2b50 Run Post psf/black@stable\n[Build/lint ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/psf-black@stable/ dst=/var/run/act/actions/psf-black@stable/\n[Build/lint ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/psf-black@stable/] user=0 workdir=\n[Build/build]   | Obtaining openant from git+https://github.com/Tigge/openant.git#egg=openant (from -r requirements.txt (line 3))\n[Build/build]   |   Cloning https://github.com/Tigge/openant.git to ./src/openant\n[Build/build]   |   Running command git clone -q https://github.com/Tigge/openant.git /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/Tigge-antfs-cli/src/openant\n[Build/build]   |   Resolved https://github.com/Tigge/openant.git to commit c9a8d310f967679747bdf41eea07457e998a9094\n[Build/build]   |   Installing build dependencies: started\n[Build/lint ]   \u2705  Success - Post psf/black@stable\n[Build/build]   |   Installing build dependencies: finished with status 'done'\n[Build/build]   |   Getting requirements to build wheel: started\n[Build/build]   |   Getting requirements to build wheel: finished with status 'done'\n[Build/build]   |     Preparing wheel metadata: started\n[Build/build]   |     Preparing wheel metadata: finished with status 'done'\n[Build/build]   | Collecting pyusb>=1.0a2\n[Build/build]   |   Downloading pyusb-1.2.1-py3-none-any.whl (58 kB)\n[Build/build]   | ERROR: Package 'openant' requires a different Python: 3.6.14 not in '>=3.7'\n[Build/build]   | WARNING: You are using pip version 21.2.4; however, version 21.3.1 is available.\n[Build/build]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.6.14/x64/bin/python -m pip install --upgrade pip' command.\n[Build/build]   \u274c  Failure - Main Install dependencies\n[Build/build] exitcode '1': failure\n[Build/build] \ud83c\udfc1  Job failed\n[Build/lint ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'lint' failed\n"
}