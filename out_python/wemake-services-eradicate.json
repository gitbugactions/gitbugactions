{
    "repository": "wemake-services/eradicate",
    "clone_url": "https://github.com/wemake-services/eradicate.git",
    "timestamp": "2023-05-29T14:40:20.378667Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Test/Run tests with coverage] \ud83d\ude80  Start image=crawlergpt:latest\n[Test/Tests with python 2.7  ] \ud83d\ude80  Start image=crawlergpt:latest\n[Test/Tests with python 2.7  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test/Run tests with coverage]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test/Run tests with coverage]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/Tests with python 2.7  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/Run tests with coverage]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/Tests with python 2.7  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/Tests with python 2.7  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/wemake-services-eradicate] user=0 workdir=\n[Test/Run tests with coverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/wemake-services-eradicate] user=0 workdir=\n[Test/Run tests with coverage]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v3\n[Test/Tests with python 2.7  ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v3\n[Test/Run tests with coverage] \u2b50 Run Main actions/checkout@v3\n[Test/Tests with python 2.7  ] \ud83e\uddea  Matrix: map[python-version:2.7]\n[Test/Run tests with coverage]   \u2705  Success - Main actions/checkout@v3\n[Test/Tests with python 2.7  ] \u2b50 Run Main actions/checkout@v3\n[Test/Tests with python 2.7  ]   \u2705  Success - Main actions/checkout@v3\n[Test/Run tests with coverage] \u2b50 Run Main Set up python\n[Test/Tests with python 2.7  ] \u2b50 Run Main Set up python version 2.7\n[Test/Run tests with coverage]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v3/ dst=/var/run/act/actions/actions-setup-python@v3/\n[Test/Tests with python 2.7  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v3/ dst=/var/run/act/actions/actions-setup-python@v3/\n[Test/Tests with python 2.7  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v3/] user=0 workdir=\n[Test/Run tests with coverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v3/] user=0 workdir=\n[Test/Tests with python 2.7  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/setup/index.js] user= workdir=\n[Test/Run tests with coverage]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/setup/index.js] user= workdir=\n[Test/Run tests with coverage]   \ud83d\udcac  ::debug::Semantic version spec of 3.x is 3.x\n[Test/Run tests with coverage]   \ud83d\udcac  ::debug::isExplicit: \n[Test/Run tests with coverage]   \ud83d\udcac  ::debug::explicit? false\n[Test/Run tests with coverage]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Test/Run tests with coverage]   \ud83d\udcac  ::debug::explicit? true\n[Test/Run tests with coverage]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Test/Run tests with coverage]   \ud83d\udcac  ::debug::explicit? true\n[Test/Run tests with coverage]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Test/Run tests with coverage]   \ud83d\udcac  ::debug::explicit? true\n[Test/Run tests with coverage]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Test/Run tests with coverage]   \ud83d\udcac  ::debug::explicit? true\n[Test/Run tests with coverage]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Test/Run tests with coverage]   \ud83d\udcac  ::debug::explicit? true\n[Test/Run tests with coverage]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Test/Run tests with coverage]   \ud83d\udcac  ::debug::explicit? true\n[Test/Run tests with coverage]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Test/Run tests with coverage]   \ud83d\udcac  ::debug::matched: 3.9.6\n[Test/Run tests with coverage]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[Test/Run tests with coverage]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[Test/Run tests with coverage]   | Successfully setup CPython (3.9.6)\n[Test/Run tests with coverage]   \u2753 add-matcher /run/act/actions/actions-setup-python@v3/.github/python.json\n[Test/Tests with python 2.7  ]   \ud83d\udcac  ::debug::Semantic version spec of 2.7 is 2.7\n[Test/Tests with python 2.7  ]   \ud83d\udcac  ::debug::isExplicit: \n[Test/Tests with python 2.7  ]   \ud83d\udcac  ::debug::explicit? false\n[Test/Tests with python 2.7  ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Test/Tests with python 2.7  ]   \ud83d\udcac  ::debug::explicit? true\n[Test/Tests with python 2.7  ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Test/Tests with python 2.7  ]   \ud83d\udcac  ::debug::explicit? true\n[Test/Tests with python 2.7  ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Test/Tests with python 2.7  ]   \ud83d\udcac  ::debug::explicit? true\n[Test/Tests with python 2.7  ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Test/Tests with python 2.7  ]   \ud83d\udcac  ::debug::explicit? true\n[Test/Tests with python 2.7  ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Test/Tests with python 2.7  ]   \ud83d\udcac  ::debug::explicit? true\n[Test/Tests with python 2.7  ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Test/Tests with python 2.7  ]   \ud83d\udcac  ::debug::explicit? true\n[Test/Tests with python 2.7  ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Test/Tests with python 2.7  ]   \ud83d\udcac  ::debug::matched: 2.7.18\n[Test/Tests with python 2.7  ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/2.7.18/x64\n[Test/Tests with python 2.7  ]   \ud83d\udcac  ::debug::Found tool in cache Python 2.7.18 x64\n[Test/Tests with python 2.7  ]   | Successfully setup CPython (2.7.18)\n[Test/Tests with python 2.7  ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v3/.github/python.json\n[Test/Run tests with coverage]   \u2705  Success - Main Set up python\n[Test/Tests with python 2.7  ]   \u2705  Success - Main Set up python version 2.7\n[Test/Tests with python 2.7  ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/2.7.18/x64\n[Test/Tests with python 2.7  ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/2.7.18/x64/lib\n[Test/Run tests with coverage]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[Test/Run tests with coverage]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[Test/Tests with python 2.7  ]   \u2699  ::set-output:: python-version=2.7.18\n[Test/Run tests with coverage]   \u2699  ::set-output:: python-version=3.9.6\n[Test/Tests with python 2.7  ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64\n[Test/Tests with python 2.7  ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64/bin\n[Test/Run tests with coverage]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[Test/Run tests with coverage]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[Test/Tests with python 2.7  ] \u2b50 Run Main Install project and deps\n[Test/Run tests with coverage] \u2b50 Run Main Install project and deps\n[Test/Tests with python 2.7  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test/Run tests with coverage]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test/Tests with python 2.7  ]   | running install\n[Test/Tests with python 2.7  ]   | running bdist_egg\n[Test/Tests with python 2.7  ]   | running egg_info\n[Test/Tests with python 2.7  ]   | creating eradicate.egg-info\n[Test/Tests with python 2.7  ]   | writing eradicate.egg-info/PKG-INFO\n[Test/Tests with python 2.7  ]   | writing top-level names to eradicate.egg-info/top_level.txt\n[Test/Tests with python 2.7  ]   | writing dependency_links to eradicate.egg-info/dependency_links.txt\n[Test/Tests with python 2.7  ]   | writing manifest file 'eradicate.egg-info/SOURCES.txt'\n[Test/Tests with python 2.7  ]   | reading manifest file 'eradicate.egg-info/SOURCES.txt'\n[Test/Tests with python 2.7  ]   | reading manifest template 'MANIFEST.in'\n[Test/Tests with python 2.7  ]   | warning: no previously-included files found matching 'Makefile'\n[Test/Tests with python 2.7  ]   | writing manifest file 'eradicate.egg-info/SOURCES.txt'\n[Test/Tests with python 2.7  ]   | installing library code to build/bdist.linux-x86_64/egg\n[Test/Tests with python 2.7  ]   | running install_lib\n[Test/Tests with python 2.7  ]   | running build_py\n[Test/Tests with python 2.7  ]   | creating build\n[Test/Tests with python 2.7  ]   | creating build/lib\n[Test/Tests with python 2.7  ]   | copying eradicate.py -> build/lib\n[Test/Tests with python 2.7  ]   | creating build/bdist.linux-x86_64\n[Test/Tests with python 2.7  ]   | creating build/bdist.linux-x86_64/egg\n[Test/Tests with python 2.7  ]   | copying build/lib/eradicate.py -> build/bdist.linux-x86_64/egg\n[Test/Tests with python 2.7  ]   | byte-compiling build/bdist.linux-x86_64/egg/eradicate.py to eradicate.pyc\n[Test/Tests with python 2.7  ]   | creating build/bdist.linux-x86_64/egg/EGG-INFO\n[Test/Tests with python 2.7  ]   | installing scripts to build/bdist.linux-x86_64/egg/EGG-INFO/scripts\n[Test/Tests with python 2.7  ]   | running install_scripts\n[Test/Tests with python 2.7  ]   | running build_scripts\n[Test/Tests with python 2.7  ]   | creating build/scripts-2.7\n[Test/Tests with python 2.7  ]   | copying and adjusting eradicate -> build/scripts-2.7\n[Test/Tests with python 2.7  ]   | changing mode of build/scripts-2.7/eradicate from 644 to 755\n[Test/Tests with python 2.7  ]   | creating build/bdist.linux-x86_64/egg/EGG-INFO/scripts\n[Test/Tests with python 2.7  ]   | copying build/scripts-2.7/eradicate -> build/bdist.linux-x86_64/egg/EGG-INFO/scripts\n[Test/Tests with python 2.7  ]   | changing mode of build/bdist.linux-x86_64/egg/EGG-INFO/scripts/eradicate to 755\n[Test/Tests with python 2.7  ]   | copying eradicate.egg-info/PKG-INFO -> build/bdist.linux-x86_64/egg/EGG-INFO\n[Test/Tests with python 2.7  ]   | copying eradicate.egg-info/SOURCES.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\n[Test/Tests with python 2.7  ]   | copying eradicate.egg-info/dependency_links.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\n[Test/Tests with python 2.7  ]   | copying eradicate.egg-info/top_level.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\n[Test/Tests with python 2.7  ]   | zip_safe flag not set; analyzing archive contents...\n[Test/Tests with python 2.7  ]   | creating dist\n[Test/Tests with python 2.7  ]   | creating 'dist/eradicate-2.2.0-py2.7.egg' and adding 'build/bdist.linux-x86_64/egg' to it\n[Test/Tests with python 2.7  ]   | removing 'build/bdist.linux-x86_64/egg' (and everything under it)\n[Test/Tests with python 2.7  ]   | Processing eradicate-2.2.0-py2.7.egg\n[Test/Tests with python 2.7  ]   | Copying eradicate-2.2.0-py2.7.egg to /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages\n[Test/Tests with python 2.7  ]   | Adding eradicate 2.2.0 to easy-install.pth file\n[Test/Tests with python 2.7  ]   | Installing eradicate script to /opt/hostedtoolcache/Python/2.7.18/x64/bin\n[Test/Tests with python 2.7  ]   | \n[Test/Tests with python 2.7  ]   | Installed /opt/hostedtoolcache/Python/2.7.18/x64/lib/python2.7/site-packages/eradicate-2.2.0-py2.7.egg\n[Test/Tests with python 2.7  ]   | Processing dependencies for eradicate==2.2.0\n[Test/Tests with python 2.7  ]   | Finished processing dependencies for eradicate==2.2.0\n[Test/Run tests with coverage]   | running install\n[Test/Run tests with coverage]   | running bdist_egg\n[Test/Run tests with coverage]   | running egg_info\n[Test/Run tests with coverage]   | writing eradicate.egg-info/PKG-INFO\n[Test/Run tests with coverage]   | writing dependency_links to eradicate.egg-info/dependency_links.txt\n[Test/Run tests with coverage]   | writing top-level names to eradicate.egg-info/top_level.txt\n[Test/Run tests with coverage]   | reading manifest file 'eradicate.egg-info/SOURCES.txt'\n[Test/Run tests with coverage]   | reading manifest template 'MANIFEST.in'\n[Test/Run tests with coverage]   | writing manifest file 'eradicate.egg-info/SOURCES.txt'\n[Test/Run tests with coverage]   | installing library code to build/bdist.linux-x86_64/egg\n[Test/Run tests with coverage]   | running install_lib\n[Test/Run tests with coverage]   | running build_py\n[Test/Run tests with coverage]   | creating build/bdist.linux-x86_64/egg\n[Test/Run tests with coverage]   | copying build/lib/eradicate.py -> build/bdist.linux-x86_64/egg\n[Test/Run tests with coverage]   | warning: no previously-included files found matching 'Makefile'\n[Test/Run tests with coverage]   | byte-compiling build/bdist.linux-x86_64/egg/eradicate.py to eradicate.cpython-39.pyc\n[Test/Run tests with coverage]   | creating build/bdist.linux-x86_64/egg/EGG-INFO\n[Test/Run tests with coverage]   | installing scripts to build/bdist.linux-x86_64/egg/EGG-INFO/scripts\n[Test/Run tests with coverage]   | running install_scripts\n[Test/Run tests with coverage]   | running build_scripts\n[Test/Run tests with coverage]   | creating build/scripts-3.9\n[Test/Run tests with coverage]   | copying and adjusting eradicate -> build/scripts-3.9\n[Test/Run tests with coverage]   | changing mode of build/scripts-3.9/eradicate from 644 to 755\n[Test/Run tests with coverage]   | creating build/bdist.linux-x86_64/egg/EGG-INFO/scripts\n[Test/Run tests with coverage]   | copying build/scripts-3.9/eradicate -> build/bdist.linux-x86_64/egg/EGG-INFO/scripts\n[Test/Run tests with coverage]   | zip_safe flag not set; analyzing archive contents...\n[Test/Run tests with coverage]   | changing mode of build/bdist.linux-x86_64/egg/EGG-INFO/scripts/eradicate to 755\n[Test/Run tests with coverage]   | copying eradicate.egg-info/PKG-INFO -> build/bdist.linux-x86_64/egg/EGG-INFO\n[Test/Run tests with coverage]   | copying eradicate.egg-info/SOURCES.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\n[Test/Run tests with coverage]   | copying eradicate.egg-info/dependency_links.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\n[Test/Run tests with coverage]   | copying eradicate.egg-info/top_level.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\n[Test/Run tests with coverage]   | creating 'dist/eradicate-2.2.0-py3.9.egg' and adding 'build/bdist.linux-x86_64/egg' to it\n[Test/Run tests with coverage]   | removing 'build/bdist.linux-x86_64/egg' (and everything under it)\n[Test/Run tests with coverage]   | Processing eradicate-2.2.0-py3.9.egg\n[Test/Run tests with coverage]   | Copying eradicate-2.2.0-py3.9.egg to /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages\n[Test/Run tests with coverage]   | Adding eradicate 2.2.0 to easy-install.pth file\n[Test/Run tests with coverage]   | Installing eradicate script to /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[Test/Run tests with coverage]   | \n[Test/Run tests with coverage]   | Installed /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/eradicate-2.2.0-py3.9.egg\n[Test/Run tests with coverage]   | Processing dependencies for eradicate==2.2.0\n[Test/Run tests with coverage]   | Finished processing dependencies for eradicate==2.2.0\n[Test/Tests with python 2.7  ]   | DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support pip 21.0 will remove support for this functionality.\n[Test/Tests with python 2.7  ]   | Collecting mock\n[Test/Tests with python 2.7  ]   |   Downloading mock-3.0.5-py2.py3-none-any.whl (25 kB)\n[Test/Run tests with coverage]   | Ignoring mock: markers 'python_version >= \"2.7\" and python_version < \"2.8\"' don't match your environment\n[Test/Tests with python 2.7  ]   | Collecting funcsigs>=1; python_version < \"3.3\"\n[Test/Tests with python 2.7  ]   |   Downloading funcsigs-1.0.2-py2.py3-none-any.whl (17 kB)\n[Test/Tests with python 2.7  ]   | Collecting six\n[Test/Tests with python 2.7  ]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[Test/Run tests with coverage]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[Test/Run tests with coverage]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.9.6/x64/bin/python -m pip install --upgrade pip' command.\n[Test/Tests with python 2.7  ]   | Installing collected packages: funcsigs, six, mock\n[Test/Tests with python 2.7  ]   | Successfully installed funcsigs-1.0.2 mock-3.0.5 six-1.16.0\n[Test/Tests with python 2.7  ]   \u2705  Success - Main Install project and deps\n[Test/Tests with python 2.7  ] \u2b50 Run Main Run tests\n[Test/Run tests with coverage]   | Collecting coverage\n[Test/Run tests with coverage]   |   Downloading coverage-7.2.6-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (228 kB)\n[Test/Tests with python 2.7  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Test/Run tests with coverage]   | Installing collected packages: coverage\n[Test/Run tests with coverage]   | Successfully installed coverage-7.2.6\n[Test/Run tests with coverage]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[Test/Run tests with coverage]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.9.6/x64/bin/python -m pip install --upgrade pip' command.\n[Test/Run tests with coverage]   \u2705  Success - Main Install project and deps\n[Test/Run tests with coverage] \u2b50 Run Main Run test with coverage\n[Test/Run tests with coverage]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Test/Tests with python 2.7  ]   | .............................\n[Test/Tests with python 2.7  ]   | ----------------------------------------------------------------------\n[Test/Tests with python 2.7  ]   | Ran 29 tests in 0.186s\n[Test/Tests with python 2.7  ]   | \n[Test/Tests with python 2.7  ]   | OK\n[Test/Tests with python 2.7  ]   \u2705  Success - Main Run tests\n[Test/Run tests with coverage]   | /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/wemake-services-eradicate/eradicate.py:216: PendingDeprecationWarning: lib2to3 package is deprecated and may not be able to parse Python 3.10+\n[Test/Run tests with coverage]   |   from lib2to3.pgen2 import tokenize as lib2to3_tokenize\n[Test/Run tests with coverage]   | .............................\n[Test/Run tests with coverage]   | ----------------------------------------------------------------------\n[Test/Run tests with coverage]   | Ran 29 tests in 0.187s\n[Test/Run tests with coverage]   | \n[Test/Run tests with coverage]   | OK\n[Test/Run tests with coverage]   | Name                Stmts   Miss  Cover   Missing\n[Test/Run tests with coverage]   | -------------------------------------------------\n[Test/Run tests with coverage]   | eradicate.py          152      0   100%\n[Test/Run tests with coverage]   | test_eradicate.py     213      0   100%\n[Test/Run tests with coverage]   | -------------------------------------------------\n[Test/Run tests with coverage]   | TOTAL                 365      0   100%\n[Test/Run tests with coverage]   \u2705  Success - Main Run test with coverage\n[Test/Tests with python 2.7  ] \u2b50 Run Post Set up python version 2.7\n[Test/Tests with python 2.7  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/cache-save/index.js] user= workdir=\n[Test/Run tests with coverage] \u2b50 Run Post Set up python\n[Test/Run tests with coverage]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/cache-save/index.js] user= workdir=\n[Test/Tests with python 2.7  ]   \u2705  Success - Post Set up python version 2.7\n[Test/Run tests with coverage]   \u2705  Success - Post Set up python\n[Test/Run tests with coverage] \ud83c\udfc1  Job succeeded\n[Test/Tests with python 2.7  ] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}