{
    "repository": "bennylope/django-taggit-labels",
    "clone_url": "https://github.com/bennylope/django-taggit-labels.git",
    "timestamp": "2023-05-29T15:33:08.925364Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Test/build] \ud83d\ude80  Start image=crawlergpt:latest\n[Test/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/bennylope-django-taggit-labels] user=0 workdir=\n[Test/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v3\n[Test/build] \ud83e\uddea  Matrix: map[python:3.5]\n[Test/build] \u2b50 Run Main actions/checkout@v3\n[Test/build]   \u2705  Success - Main actions/checkout@v3\n[Test/build] \u2b50 Run Main Setup Python\n[Test/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v3/ dst=/var/run/act/actions/actions-setup-python@v3/\n[Test/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v3/] user=0 workdir=\n[Test/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/setup/index.js] user= workdir=\n[Test/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.5 is 3.5\n[Test/build]   \ud83d\udcac  ::debug::isExplicit: \n[Test/build]   \ud83d\udcac  ::debug::explicit? false\n[Test/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Test/build]   \ud83d\udcac  ::debug::explicit? true\n[Test/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Test/build]   \ud83d\udcac  ::debug::explicit? true\n[Test/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Test/build]   \ud83d\udcac  ::debug::explicit? true\n[Test/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Test/build]   \ud83d\udcac  ::debug::explicit? true\n[Test/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Test/build]   \ud83d\udcac  ::debug::explicit? true\n[Test/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Test/build]   \ud83d\udcac  ::debug::explicit? true\n[Test/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Test/build]   \ud83d\udcac  ::debug::matched: 3.5.10\n[Test/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.5.10/x64\n[Test/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.5.10 x64\n[Test/build]   | Successfully setup CPython (3.5.10)\n[Test/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v3/.github/python.json\n[Test/build]   \u2705  Success - Main Setup Python\n[Test/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.5.10/x64\n[Test/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.5.10/x64/lib\n[Test/build]   \u2699  ::set-output:: python-version=3.5.10\n[Test/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.5.10/x64\n[Test/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.5.10/x64/bin\n[Test/build] \u2b50 Run Main Install tox and any other packages\n[Test/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test/build]   | DEPRECATION: Python 3.5 reached the end of its life on September 13th, 2020. Please upgrade your Python as Python 3.5 is no longer maintained. pip 21.0 will drop support for Python 3.5 in January 2021. pip 21.0 will remove support for this functionality.\n[Test/build]   | Collecting tox\n[Test/build]   |   Downloading tox-3.28.0-py2.py3-none-any.whl (86 kB)\n[Test/build]   | Collecting flake8\n[Test/build]   |   Downloading flake8-3.9.2-py2.py3-none-any.whl (73 kB)\n[Test/build]   | Collecting pyflakes<2.4.0,>=2.3.0\n[Test/build]   |   Downloading pyflakes-2.3.1-py2.py3-none-any.whl (68 kB)\n[Test/build]   | Collecting importlib-metadata\n[Test/build]   |   Downloading importlib_metadata-2.1.3-py2.py3-none-any.whl (10 kB)\n[Test/build]   | Collecting pycodestyle<2.8.0,>=2.7.0\n[Test/build]   |   Downloading pycodestyle-2.7.0-py2.py3-none-any.whl (41 kB)\n[Test/build]   | Collecting mccabe<0.7.0,>=0.6.0\n[Test/build]   |   Downloading mccabe-0.6.1-py2.py3-none-any.whl (8.6 kB)\n[Test/build]   | Collecting py>=1.4.17\n[Test/build]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[Test/build]   | Collecting filelock>=3.0.0\n[Test/build]   |   Downloading filelock-3.2.1-py2.py3-none-any.whl (9.3 kB)\n[Test/build]   | Collecting packaging>=14\n[Test/build]   |   Downloading packaging-20.9-py2.py3-none-any.whl (40 kB)\n[Test/build]   | Collecting toml>=0.10.2\n[Test/build]   |   Downloading toml-0.10.2-py2.py3-none-any.whl (16 kB)\n[Test/build]   | Collecting virtualenv!=20.0.0,!=20.0.1,!=20.0.2,!=20.0.3,!=20.0.4,!=20.0.5,!=20.0.6,!=20.0.7,>=16.0.0\n[Test/build]   |   Downloading virtualenv-20.15.1-py2.py3-none-any.whl (10.1 MB)\n[Test/build]   | Collecting six>=1.14.0\n[Test/build]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[Test/build]   | Collecting pluggy>=0.12.0\n[Test/build]   |   Downloading pluggy-0.13.1-py2.py3-none-any.whl (18 kB)\n[Test/build]   | Collecting zipp>=0.5\n[Test/build]   |   Downloading zipp-1.2.0-py2.py3-none-any.whl (4.8 kB)\n[Test/build]   | Collecting pyparsing>=2.0.2\n[Test/build]   |   Downloading pyparsing-2.4.7-py2.py3-none-any.whl (67 kB)\n[Test/build]   | Collecting distlib<1,>=0.3.1\n[Test/build]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[Test/build]   | Collecting importlib-resources>=1.0\n[Test/build]   |   Downloading importlib_resources-3.2.1-py2.py3-none-any.whl (26 kB)\n[Test/build]   | Collecting platformdirs<3,>=2\n[Test/build]   |   Downloading platformdirs-2.0.2-py2.py3-none-any.whl (10 kB)\n[Test/build]   | Installing collected packages: zipp, six, pyparsing, platformdirs, importlib-resources, importlib-metadata, filelock, distlib, virtualenv, toml, pyflakes, pycodestyle, py, pluggy, packaging, mccabe, tox, flake8\n[Test/build]   | Successfully installed distlib-0.3.6 filelock-3.2.1 flake8-3.9.2 importlib-metadata-2.1.3 importlib-resources-3.2.1 mccabe-0.6.1 packaging-20.9 platformdirs-2.0.2 pluggy-0.13.1 py-1.11.0 pycodestyle-2.7.0 pyflakes-2.3.1 pyparsing-2.4.7 six-1.16.0 toml-0.10.2 tox-3.28.0 virtualenv-20.15.1 zipp-1.2.0\n[Test/build]   \u2705  Success - Main Install tox and any other packages\n[Test/build] \u2b50 Run Main Run tox\n[Test/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Test/build]   | GLOB sdist-make: /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/bennylope-django-taggit-labels/setup.py\n[Test/build]   | py create: /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/bennylope-django-taggit-labels/.tox/py\n[Test/build]   | py installdeps: -r/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/bennylope-django-taggit-labels/requirements-test.txt\n[Test/build]   | py inst: /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/bennylope-django-taggit-labels/.tox/.tmp/package/1/django-taggit-labels-0.7.1.zip\n[Test/build]   | py installed: DEPRECATION: Python 3.5 reached the end of its life on September 13th, 2020. Please upgrade your Python as Python 3.5 is no longer maintained. pip 21.0 will drop support for Python 3.5 in January 2021. pip 21.0 will remove support for this functionality.,attrs==22.1.0,certifi==2021.10.8,chardet==4.0.0,coverage==5.5,coveralls==3.3.1,distlib==0.3.6,Django==2.2.28,django-taggit==1.3.0,django-taggit-labels==0.7.1,docopt==0.6.2,filelock==3.2.1,flake8==3.9.2,idna==2.10,importlib-metadata==2.1.3,importlib-resources==3.2.1,iniconfig==1.1.1,mccabe==0.6.1,mock==3.0.5,packaging==20.9,pathlib2==2.3.7.post1,platformdirs==2.0.2,pluggy==0.13.1,py==1.11.0,pycodestyle==2.7.0,pyflakes==2.3.1,pyparsing==2.4.7,pytest==6.1.2,pytest-django==3.5.1,pytz==2023.3,requests==2.25.1,six==1.16.0,sqlparse==0.4.4,toml==0.10.2,tox==3.28.0,urllib3==1.26.9,virtualenv==20.15.1,zipp==1.2.0\n[Test/build]   | py run-test-pre: PYTHONHASHSEED='2172747251'\n[Test/build]   | py run-test: commands[0] | py.test\n[Test/build]   | ============================= test session starts ==============================\n[Test/build]   | platform linux -- Python 3.5.10, pytest-6.1.2, py-1.11.0, pluggy-0.13.1\n[Test/build]   | cachedir: .tox/py/.pytest_cache\n[Test/build]   | rootdir: /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/bennylope-django-taggit-labels\n[Test/build]   | plugins: django-3.5.1\n[Test/build]   | collected 4 items\n[Test/build]   | \n[Test/build]   | tests/test_widgets.py ....                                               [100%]\n[Test/build]   | \n[Test/build]   | ============================== 4 passed in 0.62s ===============================\n[Test/build]   | ___________________________________ summary ____________________________________\n[Test/build]   |   py: commands succeeded\n[Test/build]   |   congratulations :)\n[Test/build]   \u2705  Success - Main Run tox\n[Test/build] \u2b50 Run Main Lint with flake8\n[Test/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Test/build]   | ./conftest.py:15:80: E501 line too long (87 > 79 characters)\n[Test/build]   | ./docs/conf.py:6:80: E501 line too long (80 > 79 characters)\n[Test/build]   | ./docs/conf.py:14:11: E401 multiple imports on one line\n[Test/build]   | ./docs/conf.py:25:1: E402 module level import not at top of file\n[Test/build]   | ./docs/conf.py:27:80: E501 line too long (80 > 79 characters)\n[Test/build]   | ./docs/conf.py:32:80: E501 line too long (80 > 79 characters)\n[Test/build]   | ./docs/conf.py:75:80: E501 line too long (80 > 79 characters)\n[Test/build]   | ./docs/conf.py:99:80: E501 line too long (80 > 79 characters)\n[Test/build]   | ./docs/conf.py:179:80: E501 line too long (80 > 79 characters)\n[Test/build]   | ./docs/conf.py:191:80: E501 line too long (80 > 79 characters)\n[Test/build]   | ./docs/conf.py:223:80: E501 line too long (80 > 79 characters)\n[Test/build]   | ./docs/conf.py:241:80: E501 line too long (80 > 79 characters)\n[Test/build]   | ./test_app/models.py:13:80: E501 line too long (83 > 79 characters)\n[Test/build]   | ./taggit_labels/widgets.py:41:80: E501 line too long (83 > 79 characters)\n[Test/build]   | ./taggit_labels/widgets.py:79:80: E501 line too long (86 > 79 characters)\n[Test/build]   | ./tests/test_widgets.py:16:80: E501 line too long (84 > 79 characters)\n[Test/build]   | ./tests/test_widgets.py:33:80: E501 line too long (80 > 79 characters)\n[Test/build]   | ./tests/test_widgets.py:35:80: E501 line too long (90 > 79 characters)\n[Test/build]   | ./tests/test_widgets.py:46:80: E501 line too long (90 > 79 characters)\n[Test/build]   | ./tests/test_widgets.py:48:80: E501 line too long (106 > 79 characters)\n[Test/build]   | ./tests/test_widgets.py:54:80: E501 line too long (82 > 79 characters)\n[Test/build] Failed but continue next step\n[Test/build]   \u274c  Failure - Main Lint with flake8\n[Test/build] \u2b50 Run Post Setup Python\n[Test/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/cache-save/index.js] user= workdir=\n[Test/build]   \u2705  Success - Post Setup Python\n[Test/build] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}