{
    "repository": "scalesim-project/scale-sim-v2",
    "clone_url": "https://github.com/scalesim-project/scale-sim-v2.git",
    "timestamp": "2023-05-29T16:27:09.698683Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Testing Master/build] \ud83d\ude80  Start image=crawlergpt:latest\n[Testing Master/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Testing Master/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Testing Master/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Testing Master/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2] user=0 workdir=\n[Testing Master/build] \u2b50 Run Main Checkout\n[Testing Master/build]   \u2705  Success - Main Checkout\n[Testing Master/build] \u2b50 Run Main Update Ubuntu\n[Testing Master/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[Testing Master/build]   | \n[Testing Master/build]   | WARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n[Testing Master/build]   | \n[Testing Master/build]   | Get:1 https://dl.hhvm.com/ubuntu focal InRelease [3137 B]\n[Testing Master/build]   | Hit:2 http://ppa.launchpad.net/ubuntu-toolchain-r/test/ubuntu focal InRelease\n[Testing Master/build]   | Get:3 http://security.ubuntu.com/ubuntu focal-security InRelease [114 kB]\n[Testing Master/build]   | Hit:4 http://archive.ubuntu.com/ubuntu focal InRelease\n[Testing Master/build]   | Get:5 http://archive.ubuntu.com/ubuntu focal-updates InRelease [114 kB]\n[Testing Master/build]   | Get:6 http://dl.google.com/linux/chrome/deb stable InRelease [1825 B]\n[Testing Master/build]   | Get:7 https://packages.microsoft.com/ubuntu/20.04/prod focal InRelease [3611 B]\n[Testing Master/build]   | Get:8 http://archive.ubuntu.com/ubuntu focal-backports InRelease [108 kB]\n[Testing Master/build]   | Get:9 https://dl.hhvm.com/ubuntu focal/main amd64 Packages [1880 B]\n[Testing Master/build]   | Get:10 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ InRelease [3622 B]\n[Testing Master/build]   | Hit:11 https://adoptopenjdk.jfrog.io/adoptopenjdk/deb focal InRelease\n[Testing Master/build]   | Get:12 http://security.ubuntu.com/ubuntu focal-security/universe i386 Packages [739 kB]\n[Testing Master/build]   | Get:13 http://security.ubuntu.com/ubuntu focal-security/main i386 Packages [739 kB]\n[Testing Master/build]   | Get:14 http://security.ubuntu.com/ubuntu focal-security/restricted amd64 Packages [2270 kB]\n[Testing Master/build]   | Err:6 http://dl.google.com/linux/chrome/deb stable InRelease\n[Testing Master/build]   |   The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[Testing Master/build]   | Get:15 http://security.ubuntu.com/ubuntu focal-security/universe amd64 Packages [1052 kB]\n[Testing Master/build]   | Get:16 http://security.ubuntu.com/ubuntu focal-security/main amd64 Packages [2726 kB]\n[Testing Master/build]   | Get:17 http://security.ubuntu.com/ubuntu focal-security/multiverse i386 Packages [8141 B]\n[Testing Master/build]   | Get:18 http://security.ubuntu.com/ubuntu focal-security/multiverse amd64 Packages [28.5 kB]\n[Testing Master/build]   | Get:19 http://security.ubuntu.com/ubuntu focal-security/restricted i386 Packages [36.9 kB]\n[Testing Master/build]   | Get:20 https://packages.microsoft.com/ubuntu/20.04/prod focal/main all Packages [2521 B]\n[Testing Master/build]   | Get:21 https://packages.microsoft.com/ubuntu/20.04/prod focal/main amd64 Packages [201 kB]\n[Testing Master/build]   | Get:22 http://archive.ubuntu.com/ubuntu focal-updates/main amd64 Packages [3204 kB]\n[Testing Master/build]   | Get:23 http://archive.ubuntu.com/ubuntu focal-updates/universe amd64 Packages [1346 kB]\n[Testing Master/build]   | Get:24 http://archive.ubuntu.com/ubuntu focal-updates/multiverse amd64 Packages [31.2 kB]\n[Testing Master/build]   | Get:25 http://archive.ubuntu.com/ubuntu focal-updates/restricted amd64 Packages [2412 kB]\n[Testing Master/build]   | Get:26 https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/ Packages [77.6 kB]\n[Testing Master/build]   | Get:27 http://archive.ubuntu.com/ubuntu focal-backports/main amd64 Packages [55.2 kB]\n[Testing Master/build]   | Get:28 http://archive.ubuntu.com/ubuntu focal-backports/universe amd64 Packages [28.6 kB]\n[Testing Master/build]   | Fetched 15.3 MB in 3s (5674 kB/s)\n[Testing Master/build]   | Reading package lists...\n[Testing Master/build]   | Building dependency tree...\n[Testing Master/build]   | Reading state information...\n[Testing Master/build]   | 388 packages can be upgraded. Run 'apt list --upgradable' to see them.\n[Testing Master/build]   | W: An error occurred during the signature verification. The repository is not updated and the previous index files will be used. GPG error: http://dl.google.com/linux/chrome/deb stable InRelease: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[Testing Master/build]   | W: Failed to fetch http://dl.google.com/linux/chrome/deb/dists/stable/InRelease  The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 4EB27DB2A3B88B8B\n[Testing Master/build]   | W: Some index files failed to download. They have been ignored, or old ones used instead.\n[Testing Master/build]   \u2705  Success - Main Update Ubuntu\n[Testing Master/build] \u2b50 Run Main Install Dependencies\n[Testing Master/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Testing Master/build]   | \n[Testing Master/build]   | WARNING: apt does not have a stable CLI interface. Use with caution in scripts.\n[Testing Master/build]   | \n[Testing Master/build]   | Reading package lists...\n[Testing Master/build]   | Building dependency tree...\n[Testing Master/build]   | Reading state information...\n[Testing Master/build]   | python3 is already the newest version (3.8.2-0ubuntu2).\n[Testing Master/build]   | python3-venv is already the newest version (3.8.2-0ubuntu2).\n[Testing Master/build]   | 0 upgraded, 0 newly installed, 0 to remove and 388 not upgraded.\n[Testing Master/build]   \u2705  Success - Main Install Dependencies\n[Testing Master/build] \u2b50 Run Main Create Venv\n[Testing Master/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Testing Master/build]   | Collecting absl-py\n[Testing Master/build]   |   Downloading absl_py-1.4.0-py3-none-any.whl (126 kB)\n[Testing Master/build]   | Collecting tqdm\n[Testing Master/build]   |   Downloading tqdm-4.65.0-py3-none-any.whl (77 kB)\n[Testing Master/build]   | Collecting configparser\n[Testing Master/build]   |   Downloading configparser-5.3.0-py3-none-any.whl (19 kB)\n[Testing Master/build]   | Collecting numpy\n[Testing Master/build]   |   Downloading numpy-1.24.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.3 MB)\n[Testing Master/build]   | Collecting pandas\n[Testing Master/build]   |   Downloading pandas-2.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.3 MB)\n[Testing Master/build]   | Collecting cython\n[Testing Master/build]   |   Downloading Cython-0.29.35-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (2.0 MB)\n[Testing Master/build]   | Collecting tzdata>=2022.1\n[Testing Master/build]   |   Downloading tzdata-2023.3-py2.py3-none-any.whl (341 kB)\n[Testing Master/build]   | Collecting pytz>=2020.1\n[Testing Master/build]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[Testing Master/build]   | Collecting python-dateutil>=2.8.2\n[Testing Master/build]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[Testing Master/build]   | Collecting six>=1.5\n[Testing Master/build]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[Testing Master/build]   | Installing collected packages: absl-py, tqdm, configparser, numpy, tzdata, pytz, six, python-dateutil, pandas, cython\n[Testing Master/build]   | Successfully installed absl-py-1.4.0 configparser-5.3.0 cython-0.29.35 numpy-1.24.3 pandas-2.0.2 python-dateutil-2.8.2 pytz-2023.3 six-1.16.0 tqdm-4.65.0 tzdata-2023.3\n[Testing Master/build]   | Collecting pylint\n[Testing Master/build]   |   Downloading pylint-2.17.4-py3-none-any.whl (536 kB)\n[Testing Master/build]   | Collecting astroid<=2.17.0-dev0,>=2.15.4\n[Testing Master/build]   |   Downloading astroid-2.15.5-py3-none-any.whl (278 kB)\n[Testing Master/build]   | Collecting dill>=0.2; python_version < \"3.11\"\n[Testing Master/build]   |   Downloading dill-0.3.6-py3-none-any.whl (110 kB)\n[Testing Master/build]   | Collecting tomlkit>=0.10.1\n[Testing Master/build]   |   Downloading tomlkit-0.11.8-py3-none-any.whl (35 kB)\n[Testing Master/build]   | Collecting tomli>=1.1.0; python_version < \"3.11\"\n[Testing Master/build]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[Testing Master/build]   | Collecting platformdirs>=2.2.0\n[Testing Master/build]   |   Downloading platformdirs-3.5.1-py3-none-any.whl (15 kB)\n[Testing Master/build]   | Collecting typing-extensions>=3.10.0; python_version < \"3.10\"\n[Testing Master/build]   |   Downloading typing_extensions-4.6.2-py3-none-any.whl (31 kB)\n[Testing Master/build]   | Collecting isort<6,>=4.2.5\n[Testing Master/build]   |   Downloading isort-5.12.0-py3-none-any.whl (91 kB)\n[Testing Master/build]   | Collecting mccabe<0.8,>=0.6\n[Testing Master/build]   |   Downloading mccabe-0.7.0-py2.py3-none-any.whl (7.3 kB)\n[Testing Master/build]   | Collecting lazy-object-proxy>=1.4.0\n[Testing Master/build]   |   Downloading lazy_object_proxy-1.9.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (61 kB)\n[Testing Master/build]   | Collecting wrapt<2,>=1.11; python_version < \"3.11\"\n[Testing Master/build]   |   Downloading wrapt-1.15.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (81 kB)\n[Testing Master/build]   | Installing collected packages: lazy-object-proxy, wrapt, typing-extensions, astroid, dill, tomlkit, tomli, platformdirs, isort, mccabe, pylint\n[Testing Master/build]   | Successfully installed astroid-2.15.5 dill-0.3.6 isort-5.12.0 lazy-object-proxy-1.9.0 mccabe-0.7.0 platformdirs-3.5.1 pylint-2.17.4 tomli-2.0.1 tomlkit-0.11.8 typing-extensions-4.6.2 wrapt-1.15.0\n[Testing Master/build]   \u2705  Success - Main Create Venv\n[Testing Master/build] \u2b50 Run Main Install SCALE-Sim\n[Testing Master/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Testing Master/build]   | running install\n[Testing Master/build]   | running bdist_egg\n[Testing Master/build]   | running egg_info\n[Testing Master/build]   | creating scalesim.egg-info\n[Testing Master/build]   | writing scalesim.egg-info/PKG-INFO\n[Testing Master/build]   | writing dependency_links to scalesim.egg-info/dependency_links.txt\n[Testing Master/build]   | writing requirements to scalesim.egg-info/requires.txt\n[Testing Master/build]   | writing top-level names to scalesim.egg-info/top_level.txt\n[Testing Master/build]   | writing manifest file 'scalesim.egg-info/SOURCES.txt'\n[Testing Master/build]   | reading manifest file 'scalesim.egg-info/SOURCES.txt'\n[Testing Master/build]   | writing manifest file 'scalesim.egg-info/SOURCES.txt'\n[Testing Master/build]   | installing library code to build/bdist.linux-x86_64/egg\n[Testing Master/build]   | running install_lib\n[Testing Master/build]   | running build_py\n[Testing Master/build]   | creating build\n[Testing Master/build]   | creating build/lib\n[Testing Master/build]   | creating build/lib/scalesim\n[Testing Master/build]   | copying scalesim/memory_map.py -> build/lib/scalesim\n[Testing Master/build]   | copying scalesim/simulator.py -> build/lib/scalesim\n[Testing Master/build]   | copying scalesim/scale_sim.py -> build/lib/scalesim\n[Testing Master/build]   | copying scalesim/single_layer_sim.py -> build/lib/scalesim\n[Testing Master/build]   | copying scalesim/__init__.py -> build/lib/scalesim\n[Testing Master/build]   | copying scalesim/scale_config.py -> build/lib/scalesim\n[Testing Master/build]   | copying scalesim/scale.py -> build/lib/scalesim\n[Testing Master/build]   | copying scalesim/topology_utils.py -> build/lib/scalesim\n[Testing Master/build]   | creating build/lib/scalesim/utilities\n[Testing Master/build]   | copying scalesim/utilities/__init__.py -> build/lib/scalesim/utilities\n[Testing Master/build]   | copying scalesim/utilities/scalesim_report.py -> build/lib/scalesim/utilities\n[Testing Master/build]   | creating build/lib/scalesim/memory\n[Testing Master/build]   | copying scalesim/memory/read_buffer.py -> build/lib/scalesim/memory\n[Testing Master/build]   | copying scalesim/memory/write_buffer_old.py -> build/lib/scalesim/memory\n[Testing Master/build]   | copying scalesim/memory/read_buffer_old.py -> build/lib/scalesim/memory\n[Testing Master/build]   | copying scalesim/memory/write_buffer.py -> build/lib/scalesim/memory\n[Testing Master/build]   | copying scalesim/memory/double_buffered_scratchpad_mem.py -> build/lib/scalesim/memory\n[Testing Master/build]   | copying scalesim/memory/write_port.py -> build/lib/scalesim/memory\n[Testing Master/build]   | copying scalesim/memory/read_port.py -> build/lib/scalesim/memory\n[Testing Master/build]   | copying scalesim/memory/__init__.py -> build/lib/scalesim/memory\n[Testing Master/build]   | copying scalesim/memory/read_buffer_estimate_bw.py -> build/lib/scalesim/memory\n[Testing Master/build]   | creating build/lib/scalesim/compute\n[Testing Master/build]   | copying scalesim/compute/operand_matrix.py -> build/lib/scalesim/compute\n[Testing Master/build]   | copying scalesim/compute/systolic_compute_is.py -> build/lib/scalesim/compute\n[Testing Master/build]   | copying scalesim/compute/systolic_compute_os.py -> build/lib/scalesim/compute\n[Testing Master/build]   | copying scalesim/compute/__init__.py -> build/lib/scalesim/compute\n[Testing Master/build]   | copying scalesim/compute/systolic_compute_ws.py -> build/lib/scalesim/compute\n[Testing Master/build]   | creating build/bdist.linux-x86_64\n[Testing Master/build]   | creating build/bdist.linux-x86_64/egg\n[Testing Master/build]   | creating build/bdist.linux-x86_64/egg/scalesim\n[Testing Master/build]   | copying build/lib/scalesim/memory_map.py -> build/bdist.linux-x86_64/egg/scalesim\n[Testing Master/build]   | creating build/bdist.linux-x86_64/egg/scalesim/utilities\n[Testing Master/build]   | copying build/lib/scalesim/utilities/__init__.py -> build/bdist.linux-x86_64/egg/scalesim/utilities\n[Testing Master/build]   | copying build/lib/scalesim/utilities/scalesim_report.py -> build/bdist.linux-x86_64/egg/scalesim/utilities\n[Testing Master/build]   | copying build/lib/scalesim/simulator.py -> build/bdist.linux-x86_64/egg/scalesim\n[Testing Master/build]   | copying build/lib/scalesim/scale_sim.py -> build/bdist.linux-x86_64/egg/scalesim\n[Testing Master/build]   | copying build/lib/scalesim/single_layer_sim.py -> build/bdist.linux-x86_64/egg/scalesim\n[Testing Master/build]   | creating build/bdist.linux-x86_64/egg/scalesim/memory\n[Testing Master/build]   | copying build/lib/scalesim/memory/read_buffer.py -> build/bdist.linux-x86_64/egg/scalesim/memory\n[Testing Master/build]   | copying build/lib/scalesim/memory/write_buffer_old.py -> build/bdist.linux-x86_64/egg/scalesim/memory\n[Testing Master/build]   | copying build/lib/scalesim/memory/read_buffer_old.py -> build/bdist.linux-x86_64/egg/scalesim/memory\n[Testing Master/build]   | copying build/lib/scalesim/memory/write_buffer.py -> build/bdist.linux-x86_64/egg/scalesim/memory\n[Testing Master/build]   | copying build/lib/scalesim/memory/double_buffered_scratchpad_mem.py -> build/bdist.linux-x86_64/egg/scalesim/memory\n[Testing Master/build]   | copying build/lib/scalesim/memory/write_port.py -> build/bdist.linux-x86_64/egg/scalesim/memory\n[Testing Master/build]   | copying build/lib/scalesim/memory/read_port.py -> build/bdist.linux-x86_64/egg/scalesim/memory\n[Testing Master/build]   | copying build/lib/scalesim/memory/__init__.py -> build/bdist.linux-x86_64/egg/scalesim/memory\n[Testing Master/build]   | copying build/lib/scalesim/memory/read_buffer_estimate_bw.py -> build/bdist.linux-x86_64/egg/scalesim/memory\n[Testing Master/build]   | creating build/bdist.linux-x86_64/egg/scalesim/compute\n[Testing Master/build]   | copying build/lib/scalesim/compute/operand_matrix.py -> build/bdist.linux-x86_64/egg/scalesim/compute\n[Testing Master/build]   | copying build/lib/scalesim/compute/systolic_compute_is.py -> build/bdist.linux-x86_64/egg/scalesim/compute\n[Testing Master/build]   | copying build/lib/scalesim/compute/systolic_compute_os.py -> build/bdist.linux-x86_64/egg/scalesim/compute\n[Testing Master/build]   | copying build/lib/scalesim/compute/__init__.py -> build/bdist.linux-x86_64/egg/scalesim/compute\n[Testing Master/build]   | copying build/lib/scalesim/compute/systolic_compute_ws.py -> build/bdist.linux-x86_64/egg/scalesim/compute\n[Testing Master/build]   | copying build/lib/scalesim/__init__.py -> build/bdist.linux-x86_64/egg/scalesim\n[Testing Master/build]   | copying build/lib/scalesim/scale_config.py -> build/bdist.linux-x86_64/egg/scalesim\n[Testing Master/build]   | copying build/lib/scalesim/scale.py -> build/bdist.linux-x86_64/egg/scalesim\n[Testing Master/build]   | copying build/lib/scalesim/topology_utils.py -> build/bdist.linux-x86_64/egg/scalesim\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/memory_map.py to memory_map.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/utilities/__init__.py to __init__.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/utilities/scalesim_report.py to scalesim_report.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/simulator.py to simulator.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/scale_sim.py to scale_sim.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/single_layer_sim.py to single_layer_sim.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/memory/read_buffer.py to read_buffer.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/memory/write_buffer_old.py to write_buffer_old.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/memory/read_buffer_old.py to read_buffer_old.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/memory/write_buffer.py to write_buffer.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/memory/double_buffered_scratchpad_mem.py to double_buffered_scratchpad_mem.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/memory/write_port.py to write_port.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/memory/read_port.py to read_port.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/memory/__init__.py to __init__.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/memory/read_buffer_estimate_bw.py to read_buffer_estimate_bw.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/compute/operand_matrix.py to operand_matrix.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/compute/systolic_compute_is.py to systolic_compute_is.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/compute/systolic_compute_os.py to systolic_compute_os.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/compute/__init__.py to __init__.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/compute/systolic_compute_ws.py to systolic_compute_ws.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/__init__.py to __init__.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/scale_config.py to scale_config.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/scale.py to scale.cpython-38.pyc\n[Testing Master/build]   | byte-compiling build/bdist.linux-x86_64/egg/scalesim/topology_utils.py to topology_utils.cpython-38.pyc\n[Testing Master/build]   | creating build/bdist.linux-x86_64/egg/EGG-INFO\n[Testing Master/build]   | copying scalesim.egg-info/PKG-INFO -> build/bdist.linux-x86_64/egg/EGG-INFO\n[Testing Master/build]   | copying scalesim.egg-info/SOURCES.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\n[Testing Master/build]   | copying scalesim.egg-info/dependency_links.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\n[Testing Master/build]   | copying scalesim.egg-info/requires.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\n[Testing Master/build]   | copying scalesim.egg-info/top_level.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\n[Testing Master/build]   | zip_safe flag not set; analyzing archive contents...\n[Testing Master/build]   | creating 'dist/scalesim-2.0.1-py3.8.egg' and adding 'build/bdist.linux-x86_64/egg' to it\n[Testing Master/build]   | removing 'build/bdist.linux-x86_64/egg' (and everything under it)\n[Testing Master/build]   | Processing scalesim-2.0.1-py3.8.egg\n[Testing Master/build]   | Copying scalesim-2.0.1-py3.8.egg to /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2/venv/lib/python3.8/site-packages\n[Testing Master/build]   | Adding scalesim 2.0.1 to easy-install.pth file\n[Testing Master/build]   | \n[Testing Master/build]   | Installed /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2/venv/lib/python3.8/site-packages/scalesim-2.0.1-py3.8.egg\n[Testing Master/build]   | Processing dependencies for scalesim==2.0.1\n[Testing Master/build]   | Searching for tqdm==4.65.0\n[Testing Master/build]   | Best match: tqdm 4.65.0\n[Testing Master/build]   | Adding tqdm 4.65.0 to easy-install.pth file\n[Testing Master/build]   | Installing tqdm script to /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2/venv/bin\n[Testing Master/build]   | \n[Testing Master/build]   | Using /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2/venv/lib/python3.8/site-packages\n[Testing Master/build]   | Searching for pandas==2.0.2\n[Testing Master/build]   | Best match: pandas 2.0.2\n[Testing Master/build]   | Adding pandas 2.0.2 to easy-install.pth file\n[Testing Master/build]   | \n[Testing Master/build]   | Using /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2/venv/lib/python3.8/site-packages\n[Testing Master/build]   | Searching for numpy==1.24.3\n[Testing Master/build]   | Best match: numpy 1.24.3\n[Testing Master/build]   | Adding numpy 1.24.3 to easy-install.pth file\n[Testing Master/build]   | Installing f2py script to /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2/venv/bin\n[Testing Master/build]   | Installing f2py3 script to /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2/venv/bin\n[Testing Master/build]   | Installing f2py3.8 script to /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2/venv/bin\n[Testing Master/build]   | \n[Testing Master/build]   | Using /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2/venv/lib/python3.8/site-packages\n[Testing Master/build]   | Searching for configparser==5.3.0\n[Testing Master/build]   | Best match: configparser 5.3.0\n[Testing Master/build]   | Adding configparser 5.3.0 to easy-install.pth file\n[Testing Master/build]   | \n[Testing Master/build]   | Using /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2/venv/lib/python3.8/site-packages\n[Testing Master/build]   | Searching for absl-py==1.4.0\n[Testing Master/build]   | Best match: absl-py 1.4.0\n[Testing Master/build]   | Adding absl-py 1.4.0 to easy-install.pth file\n[Testing Master/build]   | \n[Testing Master/build]   | Using /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2/venv/lib/python3.8/site-packages\n[Testing Master/build]   | Searching for python-dateutil==2.8.2\n[Testing Master/build]   | Best match: python-dateutil 2.8.2\n[Testing Master/build]   | Adding python-dateutil 2.8.2 to easy-install.pth file\n[Testing Master/build]   | \n[Testing Master/build]   | Using /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2/venv/lib/python3.8/site-packages\n[Testing Master/build]   | Searching for tzdata==2023.3\n[Testing Master/build]   | Best match: tzdata 2023.3\n[Testing Master/build]   | Adding tzdata 2023.3 to easy-install.pth file\n[Testing Master/build]   | \n[Testing Master/build]   | Using /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2/venv/lib/python3.8/site-packages\n[Testing Master/build]   | Searching for pytz==2023.3\n[Testing Master/build]   | Best match: pytz 2023.3\n[Testing Master/build]   | Adding pytz 2023.3 to easy-install.pth file\n[Testing Master/build]   | \n[Testing Master/build]   | Using /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2/venv/lib/python3.8/site-packages\n[Testing Master/build]   | Searching for six==1.16.0\n[Testing Master/build]   | Best match: six 1.16.0\n[Testing Master/build]   | Adding six 1.16.0 to easy-install.pth file\n[Testing Master/build]   | \n[Testing Master/build]   | Using /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2/venv/lib/python3.8/site-packages\n[Testing Master/build]   | Finished processing dependencies for scalesim==2.0.1\n[Testing Master/build]   \u2705  Success - Main Install SCALE-Sim\n[Testing Master/build] \u2b50 Run Main Linting\n[Testing Master/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[Testing Master/build]   | ************* Module scalesim.memory_map\n[Testing Master/build]   | scalesim/memory_map.py:75:0: C0301: Line too long (181/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory_map.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[Testing Master/build]   | scalesim/memory_map.py:4:0: C0115: Missing class docstring (missing-class-docstring)\n[Testing Master/build]   | scalesim/memory_map.py:4:0: C0103: Class name \"memory_map\" doesn't conform to PascalCase naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory_map.py:19:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory_map.py:30:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory_map.py:31:8: C0103: Variable name \"me\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory_map.py:50:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory_map.py:59:11: C0113: Consider changing \"not ifmap_map_file == ''\" to \"ifmap_map_file != ''\" (unneeded-not)\n[Testing Master/build]   | scalesim/memory_map.py:64:11: C0113: Consider changing \"not ofmap_map_file == ''\" to \"ofmap_map_file != ''\" (unneeded-not)\n[Testing Master/build]   | scalesim/memory_map.py:69:11: C0113: Consider changing \"not filter_map_file == ''\" to \"filter_map_file != ''\" (unneeded-not)\n[Testing Master/build]   | scalesim/memory_map.py:79:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory_map.py:89:8: W0702: No exception type(s) specified (bare-except)\n[Testing Master/build]   | scalesim/memory_map.py:81:12: C0103: Variable name \"f\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory_map.py:81:16: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\n[Testing Master/build]   | scalesim/memory_map.py:81:16: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)\n[Testing Master/build]   | scalesim/memory_map.py:94:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory_map.py:104:8: W0702: No exception type(s) specified (bare-except)\n[Testing Master/build]   | scalesim/memory_map.py:96:12: C0103: Variable name \"f\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory_map.py:96:16: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\n[Testing Master/build]   | scalesim/memory_map.py:96:16: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)\n[Testing Master/build]   | scalesim/memory_map.py:109:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory_map.py:119:8: W0702: No exception type(s) specified (bare-except)\n[Testing Master/build]   | scalesim/memory_map.py:111:12: C0103: Variable name \"f\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory_map.py:111:16: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\n[Testing Master/build]   | scalesim/memory_map.py:111:16: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)\n[Testing Master/build]   | scalesim/memory_map.py:124:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory_map.py:125:8: C0103: Variable name \"me\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory_map.py:140:8: R1705: Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it (no-else-return)\n[Testing Master/build]   | scalesim/memory_map.py:124:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/memory_map.py:146:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory_map.py:147:8: C0103: Variable name \"me\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory_map.py:162:8: R1705: Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it (no-else-return)\n[Testing Master/build]   | scalesim/memory_map.py:146:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/memory_map.py:168:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory_map.py:169:8: C0103: Variable name \"me\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory_map.py:185:8: R1705: Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it (no-else-return)\n[Testing Master/build]   | scalesim/memory_map.py:168:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | ************* Module scalesim.simulator\n[Testing Master/build]   | scalesim/simulator.py:117:0: C0301: Line too long (111/100) (line-too-long)\n[Testing Master/build]   | scalesim/simulator.py:173:0: C0305: Trailing newlines (trailing-newlines)\n[Testing Master/build]   | scalesim/simulator.py:72:9: W0511: TODO: This is parallelizable (fixme)\n[Testing Master/build]   | scalesim/simulator.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[Testing Master/build]   | scalesim/simulator.py:8:0: C0115: Missing class docstring (missing-class-docstring)\n[Testing Master/build]   | scalesim/simulator.py:8:0: C0103: Class name \"simulator\" doesn't conform to PascalCase naming style (invalid-name)\n[Testing Master/build]   | scalesim/simulator.py:8:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)\n[Testing Master/build]   | scalesim/simulator.py:25:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/simulator.py:25:4: R0913: Too many arguments (6/5) (too-many-arguments)\n[Testing Master/build]   | scalesim/simulator.py:46:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/simulator.py:46:4: R0914: Too many local variables (16/15) (too-many-locals)\n[Testing Master/build]   | scalesim/simulator.py:89:48: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)\n[Testing Master/build]   | scalesim/simulator.py:90:47: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)\n[Testing Master/build]   | scalesim/simulator.py:96:50: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)\n[Testing Master/build]   | scalesim/simulator.py:97:51: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)\n[Testing Master/build]   | scalesim/simulator.py:98:50: C0209: Formatting a regular string which could be a f-string (consider-using-f-string)\n[Testing Master/build]   | scalesim/simulator.py:112:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/simulator.py:116:25: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\n[Testing Master/build]   | scalesim/simulator.py:121:27: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\n[Testing Master/build]   | scalesim/simulator.py:127:24: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\n[Testing Master/build]   | scalesim/simulator.py:137:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)\n[Testing Master/build]   | scalesim/simulator.py:116:25: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)\n[Testing Master/build]   | scalesim/simulator.py:121:27: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)\n[Testing Master/build]   | scalesim/simulator.py:127:24: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)\n[Testing Master/build]   | scalesim/simulator.py:162:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | ************* Module scalesim.scale_sim\n[Testing Master/build]   | scalesim/scale_sim.py:51:68: C0303: Trailing whitespace (trailing-whitespace)\n[Testing Master/build]   | scalesim/scale_sim.py:55:13: C0303: Trailing whitespace (trailing-whitespace)\n[Testing Master/build]   | scalesim/scale_sim.py:95:9: W0511: TODO: Anand (fixme)\n[Testing Master/build]   | scalesim/scale_sim.py:96:9: W0511: TODO: This release (fixme)\n[Testing Master/build]   | scalesim/scale_sim.py:97:9: W0511: TODO: Call the class member functions (fixme)\n[Testing Master/build]   | scalesim/scale_sim.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[Testing Master/build]   | scalesim/scale_sim.py:7:0: C0115: Missing class docstring (missing-class-docstring)\n[Testing Master/build]   | scalesim/scale_sim.py:7:0: C0103: Class name \"scalesim\" doesn't conform to PascalCase naming style (invalid-name)\n[Testing Master/build]   | scalesim/scale_sim.py:7:0: R0902: Too many instance attributes (11/7) (too-many-instance-attributes)\n[Testing Master/build]   | scalesim/scale_sim.py:8:4: R0913: Too many arguments (6/5) (too-many-arguments)\n[Testing Master/build]   | scalesim/scale_sim.py:37:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_sim.py:41:11: C0113: Consider changing \"not topology_filename == ''\" to \"topology_filename != ''\" (unneeded-not)\n[Testing Master/build]   | scalesim/scale_sim.py:46:16: R1722: Consider using 'sys.exit' instead (consider-using-sys-exit)\n[Testing Master/build]   | scalesim/scale_sim.py:54:12: R1722: Consider using 'sys.exit' instead (consider-using-sys-exit)\n[Testing Master/build]   | scalesim/scale_sim.py:75:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_sim.py:88:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_sim.py:115:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_sim.py:117:8: C0103: Variable name \"df\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/scale_sim.py:148:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_sim.py:149:8: C0103: Variable name \"me\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/scale_sim.py:148:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/scale_sim.py:77:8: W0201: Attribute 'top_path' defined outside __init__ (attribute-defined-outside-init)\n[Testing Master/build]   | ************* Module scalesim.single_layer_sim\n[Testing Master/build]   | scalesim/single_layer_sim.py:126:0: C0301: Line too long (105/100) (line-too-long)\n[Testing Master/build]   | scalesim/single_layer_sim.py:128:0: C0301: Line too long (117/100) (line-too-long)\n[Testing Master/build]   | scalesim/single_layer_sim.py:176:0: C0301: Line too long (102/100) (line-too-long)\n[Testing Master/build]   | scalesim/single_layer_sim.py:180:0: C0301: Line too long (105/100) (line-too-long)\n[Testing Master/build]   | scalesim/single_layer_sim.py:247:0: C0301: Line too long (119/100) (line-too-long)\n[Testing Master/build]   | scalesim/single_layer_sim.py:248:0: C0301: Line too long (123/100) (line-too-long)\n[Testing Master/build]   | scalesim/single_layer_sim.py:249:0: C0301: Line too long (120/100) (line-too-long)\n[Testing Master/build]   | scalesim/single_layer_sim.py:263:0: C0301: Line too long (110/100) (line-too-long)\n[Testing Master/build]   | scalesim/single_layer_sim.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[Testing Master/build]   | scalesim/single_layer_sim.py:12:0: C0115: Missing class docstring (missing-class-docstring)\n[Testing Master/build]   | scalesim/single_layer_sim.py:12:0: C0103: Class name \"single_layer_sim\" doesn't conform to PascalCase naming style (invalid-name)\n[Testing Master/build]   | scalesim/single_layer_sim.py:12:0: R0902: Too many instance attributes (43/7) (too-many-instance-attributes)\n[Testing Master/build]   | scalesim/single_layer_sim.py:71:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/single_layer_sim.py:101:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/single_layer_sim.py:105:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/single_layer_sim.py:105:4: R0914: Too many local variables (25/15) (too-many-locals)\n[Testing Master/build]   | scalesim/single_layer_sim.py:151:16: W0612: Unused variable 'dataflow' (unused-variable)\n[Testing Master/build]   | scalesim/single_layer_sim.py:152:16: W0612: Unused variable 'arr_row' (unused-variable)\n[Testing Master/build]   | scalesim/single_layer_sim.py:185:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/single_layer_sim.py:209:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/single_layer_sim.py:254:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/single_layer_sim.py:259:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/single_layer_sim.py:267:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/single_layer_sim.py:277:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/single_layer_sim.py:85:8: W0201: Attribute 'dataflow' defined outside __init__ (attribute-defined-outside-init)\n[Testing Master/build]   | ************* Module scalesim.scale_config\n[Testing Master/build]   | scalesim/scale_config.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:8:0: C0115: Missing class docstring (missing-class-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:8:0: C0103: Class name \"scale_config\" doesn't conform to PascalCase naming style (invalid-name)\n[Testing Master/build]   | scalesim/scale_config.py:19:8: C0103: Attribute name \"df\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/scale_config.py:8:0: R0902: Too many instance attributes (17/7) (too-many-instance-attributes)\n[Testing Master/build]   | scalesim/scale_config.py:33:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:35:8: C0103: Variable name \"me\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/scale_config.py:33:4: R0915: Too many statements (51/50) (too-many-statements)\n[Testing Master/build]   | scalesim/scale_config.py:113:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:158:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:191:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\n[Testing Master/build]   | scalesim/scale_config.py:195:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:196:8: C0103: Variable name \"me\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/scale_config.py:208:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:213:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:217:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:223:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:227:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:238:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:242:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:246:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:248:12: C0103: Variable name \"me\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/scale_config.py:246:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/scale_config.py:256:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:256:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/scale_config.py:286:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:286:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/scale_config.py:293:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:293:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/scale_config.py:299:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:299:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/scale_config.py:309:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:309:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/scale_config.py:313:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:313:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/scale_config.py:317:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:318:8: C0103: Variable name \"me\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/scale_config.py:317:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/scale_config.py:327:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:327:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/scale_config.py:331:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:331:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/scale_config.py:335:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:335:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/scale_config.py:339:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:339:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/scale_config.py:343:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:343:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/scale_config.py:347:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:349:12: C0103: Variable name \"me\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/scale_config.py:347:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/scale_config.py:357:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/scale_config.py:8:0: R0904: Too many public methods (26/20) (too-many-public-methods)\n[Testing Master/build]   | ************* Module scalesim.scale\n[Testing Master/build]   | scalesim/scale.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[Testing Master/build]   | scalesim/scale.py:30:4: C0103: Constant name \"gemm_input\" doesn't conform to UPPER_CASE naming style (invalid-name)\n[Testing Master/build]   | scalesim/scale.py:32:8: C0103: Constant name \"gemm_input\" doesn't conform to UPPER_CASE naming style (invalid-name)\n[Testing Master/build]   | ************* Module scalesim.topology_utils\n[Testing Master/build]   | scalesim/topology_utils.py:73:0: C0301: Line too long (113/100) (line-too-long)\n[Testing Master/build]   | scalesim/topology_utils.py:75:217: C0303: Trailing whitespace (trailing-whitespace)\n[Testing Master/build]   | scalesim/topology_utils.py:75:0: C0301: Line too long (217/100) (line-too-long)\n[Testing Master/build]   | scalesim/topology_utils.py:117:23: C0303: Trailing whitespace (trailing-whitespace)\n[Testing Master/build]   | scalesim/topology_utils.py:335:80: C0303: Trailing whitespace (trailing-whitespace)\n[Testing Master/build]   | scalesim/topology_utils.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:4:0: C0115: Missing class docstring (missing-class-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:4:0: C0103: Class name \"topologies\" doesn't conform to PascalCase naming style (invalid-name)\n[Testing Master/build]   | scalesim/topology_utils.py:4:0: R0205: Class 'topologies' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)\n[Testing Master/build]   | scalesim/topology_utils.py:4:0: R0902: Too many instance attributes (11/7) (too-many-instance-attributes)\n[Testing Master/build]   | scalesim/topology_utils.py:18:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:29:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:29:4: W0102: Dangerous default value [] as argument (dangerous-default-value)\n[Testing Master/build]   | scalesim/topology_utils.py:39:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:46:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:55:8: C0103: Variable name \"f\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/topology_utils.py:55:12: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\n[Testing Master/build]   | scalesim/topology_utils.py:60:12: R1724: Unnecessary \"elif\" after \"continue\", remove the leading \"el\" from \"elif\" (no-else-continue)\n[Testing Master/build]   | scalesim/topology_utils.py:69:16: C0103: Variable name \"m\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/topology_utils.py:70:16: C0103: Variable name \"n\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/topology_utils.py:55:12: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)\n[Testing Master/build]   | scalesim/topology_utils.py:82:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:90:8: C0103: Variable name \"f\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/topology_utils.py:90:12: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\n[Testing Master/build]   | scalesim/topology_utils.py:90:12: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)\n[Testing Master/build]   | scalesim/topology_utils.py:111:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:141:8: C0103: Variable name \"f\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/topology_utils.py:141:12: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\n[Testing Master/build]   | scalesim/topology_utils.py:141:12: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)\n[Testing Master/build]   | scalesim/topology_utils.py:154:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:170:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:170:4: W0102: Dangerous default value [] as argument (dangerous-default-value)\n[Testing Master/build]   | scalesim/topology_utils.py:184:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:187:11: C0113: Consider changing \"not toponame == ''\" to \"toponame != ''\" (unneeded-not)\n[Testing Master/build]   | scalesim/topology_utils.py:196:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:196:4: R0914: Too many local variables (16/15) (too-many-locals)\n[Testing Master/build]   | scalesim/topology_utils.py:217:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:217:42: C0103: Argument name \"df\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/topology_utils.py:242:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:247:16: C0103: Variable name \"df\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/topology_utils.py:248:16: C0103: Variable name \"sr\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/topology_utils.py:248:20: C0103: Variable name \"sc\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/topology_utils.py:248:24: C0103: Variable name \"tt\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/topology_utils.py:253:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:259:12: C0103: Variable name \"M\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/topology_utils.py:260:12: C0103: Variable name \"N\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/topology_utils.py:261:12: C0103: Variable name \"K\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/topology_utils.py:268:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:276:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:276:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/topology_utils.py:283:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:291:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:299:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:305:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:312:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:320:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:328:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:338:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:346:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:346:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/topology_utils.py:353:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:358:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)\n[Testing Master/build]   | scalesim/topology_utils.py:353:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/topology_utils.py:366:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:366:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/topology_utils.py:375:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:375:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/topology_utils.py:385:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:392:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:401:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/topology_utils.py:401:50: C0103: Argument name \"df\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/topology_utils.py:403:17: E1101: Instance of 'topologies' has no 'df' member (no-member)\n[Testing Master/build]   | scalesim/topology_utils.py:31:8: W0201: Attribute 'current_toponame' defined outside __init__ (attribute-defined-outside-init)\n[Testing Master/build]   | scalesim/topology_utils.py:32:8: W0201: Attribute 'layer_name' defined outside __init__ (attribute-defined-outside-init)\n[Testing Master/build]   | scalesim/topology_utils.py:4:0: R0904: Too many public methods (30/20) (too-many-public-methods)\n[Testing Master/build]   | ************* Module scalesim.utilities.scalesim_report\n[Testing Master/build]   | scalesim/utilities/scalesim_report.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[Testing Master/build]   | scalesim/utilities/scalesim_report.py:4:0: C0115: Missing class docstring (missing-class-docstring)\n[Testing Master/build]   | scalesim/utilities/scalesim_report.py:15:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/utilities/scalesim_report.py:21:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/utilities/scalesim_report.py:27:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/utilities/scalesim_report.py:33:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/utilities/scalesim_report.py:39:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/utilities/scalesim_report.py:47:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/utilities/scalesim_report.py:55:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/utilities/scalesim_report.py:63:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | ************* Module scalesim.memory.read_buffer\n[Testing Master/build]   | scalesim/memory/read_buffer.py:16:0: C0301: Line too long (113/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:133:0: C0301: Line too long (101/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:209:0: C0301: Line too long (104/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:219:0: C0301: Line too long (108/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:220:0: C0301: Line too long (115/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:237:0: C0301: Line too long (110/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:241:0: C0301: Line too long (110/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:280:0: C0301: Line too long (113/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:283:0: C0301: Line too long (103/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:287:0: C0301: Line too long (107/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:309:0: C0301: Line too long (115/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:316:0: C0301: Line too long (116/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:345:0: C0301: Line too long (102/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:346:0: C0301: Line too long (102/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:371:0: C0301: Line too long (107/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:376:0: C0301: Line too long (113/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:2:1: W0511: TODO: Verification Pending (fixme)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:74:22: W0511: TODO: check if all resets are working propoerly (fixme)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:277:9: W0511: TODO: Tally and check if this agrees with the contents of the hashed buffer (fixme)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:10:0: C0115: Missing class docstring (missing-class-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:10:0: C0103: Class name \"read_buffer\" doesn't conform to PascalCase naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:10:0: R0902: Too many instance attributes (24/7) (too-many-instance-attributes)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:28:29: R1735: Consider using '{}' instead of a call to 'dict'. (use-dict-literal)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:53:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:53:4: R0913: Too many arguments (7/5) (too-many-arguments)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:74:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:91:29: R1735: Consider using '{}' instead of a call to 'dict'. (use-dict-literal)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:113:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:137:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:147:12: C0103: Variable name \"r\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:148:16: C0103: Variable name \"c\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:183:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:186:8: W0632: Possible unbalanced tuple unpacking with sequence defined at line 32: left side has 2 labels, right side has 0 values (unbalanced-tuple-unpacking)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:208:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:251:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:251:4: R0914: Too many local variables (17/15) (too-many-locals)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:315:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:315:4: R0914: Too many local variables (19/15) (too-many-locals)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:323:8: W0632: Possible unbalanced tuple unpacking with sequence defined at line 32: left side has 2 labels, right side has 0 values (unbalanced-tuple-unpacking)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:390:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:390:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:398:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:402:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:406:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:411:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer.py:419:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | ************* Module scalesim.memory.write_buffer_old\n[Testing Master/build]   | scalesim/memory/write_buffer_old.py:91:0: C0301: Line too long (119/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/write_buffer_old.py:2:1: W0511: TODO: Verification Pending (fixme)\n[Testing Master/build]   | scalesim/memory/write_buffer_old.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer_old.py:9:0: C0115: Missing class docstring (missing-class-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer_old.py:9:0: C0103: Class name \"write_buffer\" doesn't conform to PascalCase naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory/write_buffer_old.py:9:0: R0902: Too many instance attributes (16/7) (too-many-instance-attributes)\n[Testing Master/build]   | scalesim/memory/write_buffer_old.py:50:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer_old.py:50:4: R0913: Too many arguments (6/5) (too-many-arguments)\n[Testing Master/build]   | scalesim/memory/write_buffer_old.py:69:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer_old.py:90:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer_old.py:141:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer_old.py:174:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer_old.py:184:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer_old.py:192:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer_old.py:192:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/memory/write_buffer_old.py:200:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer_old.py:204:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer_old.py:209:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer_old.py:217:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | ************* Module scalesim.memory.read_buffer_old\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:16:0: C0301: Line too long (113/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:131:0: C0301: Line too long (101/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:164:0: C0301: Line too long (104/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:174:0: C0301: Line too long (108/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:175:0: C0301: Line too long (115/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:191:0: C0301: Line too long (110/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:227:0: C0301: Line too long (113/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:230:0: C0301: Line too long (103/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:234:0: C0301: Line too long (107/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:263:0: C0301: Line too long (116/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:288:0: C0301: Line too long (102/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:289:0: C0301: Line too long (102/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:312:0: C0301: Line too long (107/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:2:1: W0511: TODO: Verification Pending (fixme)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:71:22: W0511: TODO: check if all resets are working propoerly (fixme)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:10:0: C0115: Missing class docstring (missing-class-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:10:0: C0103: Class name \"read_buffer\" doesn't conform to PascalCase naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:10:0: R0902: Too many instance attributes (22/7) (too-many-instance-attributes)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:28:29: R1735: Consider using '{}' instead of a call to 'dict'. (use-dict-literal)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:50:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:50:4: R0913: Too many arguments (7/5) (too-many-arguments)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:71:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:88:29: R1735: Consider using '{}' instead of a call to 'dict'. (use-dict-literal)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:110:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:135:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:145:12: C0103: Variable name \"r\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:146:16: C0103: Variable name \"c\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:163:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:188:31: E1101: Instance of 'read_buffer' has no 'active_buffer_contents' member (no-member)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:201:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:201:4: R0914: Too many local variables (18/15) (too-many-locals)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:247:12: C0103: Variable name \"r\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:248:12: C0103: Variable name \"c\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:252:16: E1101: Instance of 'read_buffer' has no 'active_buffer_contents' member (no-member)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:262:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:262:4: R0914: Too many local variables (22/15) (too-many-locals)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:270:8: C0200: Consider using enumerate instead of iterating with range and len (consider-using-enumerate)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:272:12: E1101: Instance of 'read_buffer' has no 'active_buffer_contents' member (no-member)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:325:12: C0103: Variable name \"r\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:326:12: C0103: Variable name \"c\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:341:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:341:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:349:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:353:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:358:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:366:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:270:27: E0203: Access to member 'prefetch_buffer_contents' before its definition line 274 (access-member-before-definition)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:271:19: E0203: Access to member 'prefetch_buffer_contents' before its definition line 274 (access-member-before-definition)\n[Testing Master/build]   | scalesim/memory/read_buffer_old.py:274:8: W0201: Attribute 'prefetch_buffer_contents' defined outside __init__ (attribute-defined-outside-init)\n[Testing Master/build]   | ************* Module scalesim.memory.write_buffer\n[Testing Master/build]   | scalesim/memory/write_buffer.py:35:0: C0301: Line too long (105/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:120:0: C0301: Line too long (110/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:130:0: C0301: Line too long (109/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:137:0: C0301: Line too long (114/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:160:0: C0301: Line too long (119/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:207:0: C0301: Line too long (104/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:239:0: W0311: Bad indentation. Found 11 spaces, expected 12 (bad-indentation)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:2:1: W0511: TODO: Verification Pending (fixme)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:35:53: W0511: TODO: This is arbitrary, check if this can be tuned (fixme)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:11:0: C0115: Missing class docstring (missing-class-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:11:0: C0103: Class name \"write_buffer\" doesn't conform to PascalCase naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:11:0: R0902: Too many instance attributes (25/7) (too-many-instance-attributes)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:58:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:58:4: R0913: Too many arguments (6/5) (too-many-arguments)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:77:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:101:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:129:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:159:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:164:8: C0103: Variable name \"DEBUG_num_drains\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:165:8: C0103: Variable name \"DEBUG_append_to_trace_times\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:164:8: W0612: Unused variable 'DEBUG_num_drains' (unused-variable)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:165:8: W0612: Unused variable 'DEBUG_append_to_trace_times' (unused-variable)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:201:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:235:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:246:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:246:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:256:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:260:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:265:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:273:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:86:8: W0201: Attribute 'active_buf_contents' defined outside __init__ (attribute-defined-outside-init)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:87:8: W0201: Attribute 'drain_buf_contents' defined outside __init__ (attribute-defined-outside-init)\n[Testing Master/build]   | scalesim/memory/write_buffer.py:3:0: W0611: Unused import time (unused-import)\n[Testing Master/build]   | ************* Module scalesim.memory.double_buffered_scratchpad_mem\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:130:0: C0301: Line too long (103/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:138:0: C0301: Line too long (104/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:147:0: C0301: Line too long (104/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:173:0: C0301: Line too long (102/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:179:0: C0301: Line too long (105/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:185:0: C0301: Line too long (103/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:194:0: C0301: Line too long (103/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:201:0: C0301: Line too long (109/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:202:0: C0301: Line too long (102/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:204:0: C0301: Line too long (112/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:205:0: C0301: Line too long (105/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:207:0: C0301: Line too long (109/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:208:0: C0301: Line too long (102/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:225:0: C0301: Line too long (114/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:273:0: C0301: Line too long (108/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:274:0: C0301: Line too long (103/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:280:0: C0301: Line too long (112/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:282:0: C0301: Line too long (112/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:283:0: C0301: Line too long (110/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:287:0: C0301: Line too long (111/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:288:0: C0301: Line too long (105/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:295:0: C0301: Line too long (113/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:296:0: C0301: Line too long (111/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:299:0: C0301: Line too long (109/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:300:0: C0301: Line too long (107/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:303:0: C0301: Line too long (108/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:304:0: C0301: Line too long (111/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:305:0: C0301: Line too long (108/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:319:0: C0301: Line too long (120/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:320:0: C0301: Line too long (123/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:321:0: C0301: Line too long (120/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:328:0: C0301: Line too long (107/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:550:0: C0305: Trailing newlines (trailing-newlines)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:217:9: W0511: TODO: assert sanity check (fixme)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:54:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:12:0: C0115: Missing class docstring (missing-class-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:12:0: C0103: Class name \"double_buffered_scratchpad\" doesn't conform to PascalCase naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:12:0: R0902: Too many instance attributes (34/7) (too-many-instance-attributes)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:59:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:59:4: R0913: Too many arguments (12/5) (too-many-arguments)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:73:12: E1123: Unexpected keyword argument 'backing_buf_default_bw' in method call (unexpected-keyword-arg)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:79:12: E1123: Unexpected keyword argument 'backing_buf_default_bw' in method call (unexpected-keyword-arg)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:111:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:120:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:127:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:135:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:143:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:152:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:152:4: R0914: Too many local variables (25/15) (too-many-locals)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:216:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:216:4: R0914: Too many local variables (42/15) (too-many-locals)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:216:4: R0915: Too many statements (79/50) (too-many-statements)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:338:12: W0612: Unused variable 'loop_time' (unused-variable)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:354:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:359:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:364:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:393:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:422:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:451:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:461:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:471:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:481:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:486:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:491:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:496:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:501:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:505:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:509:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:513:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:521:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:526:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:531:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:536:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:540:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:544:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/double_buffered_scratchpad_mem.py:12:0: R0904: Too many public methods (30/20) (too-many-public-methods)\n[Testing Master/build]   | ************* Module scalesim.memory.write_port\n[Testing Master/build]   | scalesim/memory/write_port.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[Testing Master/build]   | scalesim/memory/write_port.py:5:0: C0115: Missing class docstring (missing-class-docstring)\n[Testing Master/build]   | scalesim/memory/write_port.py:5:0: C0103: Class name \"write_port\" doesn't conform to PascalCase naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory/write_port.py:9:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/write_port.py:9:29: W0613: Unused argument 'incoming_requests_arr_np' (unused-argument)\n[Testing Master/build]   | scalesim/memory/write_port.py:5:0: R0903: Too few public methods (1/2) (too-few-public-methods)\n[Testing Master/build]   | scalesim/memory/write_port.py:2:0: W0611: Unused numpy imported as np (unused-import)\n[Testing Master/build]   | ************* Module scalesim.memory.read_port\n[Testing Master/build]   | scalesim/memory/read_port.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[Testing Master/build]   | scalesim/memory/read_port.py:3:0: C0115: Missing class docstring (missing-class-docstring)\n[Testing Master/build]   | scalesim/memory/read_port.py:3:0: C0103: Class name \"read_port\" doesn't conform to PascalCase naming style (invalid-name)\n[Testing Master/build]   | scalesim/memory/read_port.py:7:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_port.py:10:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_port.py:15:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_port.py:15:28: W0613: Unused argument 'incoming_requests_arr_np' (unused-argument)\n[Testing Master/build]   | ************* Module scalesim.memory.read_buffer_estimate_bw\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:94:0: C0301: Line too long (123/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:96:0: C0301: Line too long (104/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:132:0: C0301: Line too long (103/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:135:0: C0301: Line too long (124/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:141:0: C0301: Line too long (105/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:151:0: C0301: Line too long (105/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:156:0: C0303: Trailing whitespace (trailing-whitespace)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:244:0: C0301: Line too long (103/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:251:0: C0301: Line too long (107/100) (line-too-long)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:311:0: C0305: Trailing newlines (trailing-newlines)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:86:44: W0511: TODO: Check what the correct value is (fixme)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:7:0: C0115: Missing class docstring (missing-class-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:7:0: R0902: Too many instance attributes (30/7) (too-many-instance-attributes)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:55:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:55:4: R0913: Too many arguments (7/5) (too-many-arguments)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:92:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:116:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:169:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:185:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:218:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:218:4: R0914: Too many local variables (16/15) (too-many-locals)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:274:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:279:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:279:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:287:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:291:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:296:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/memory/read_buffer_estimate_bw.py:304:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | ************* Module scalesim.compute.operand_matrix\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:33:0: C0301: Line too long (103/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:57:0: C0301: Line too long (105/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:94:0: C0301: Line too long (120/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:144:0: C0301: Line too long (106/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:173:0: C0301: Line too long (102/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:176:0: C0301: Line too long (116/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:191:0: C0301: Line too long (106/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:213:0: C0301: Line too long (108/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:243:0: C0301: Line too long (109/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:277:0: C0301: Line too long (103/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:315:0: C0301: Line too long (104/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:356:0: C0301: Line too long (106/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:52:9: W0511: TODO: Marked for cleanup (fixme)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:68:9: W0511: TODO: Marked for cleanup (fixme)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:73:9: W0511: TODO: Anand (fixme)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:74:9: W0511: TODO: Next release (fixme)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:75:9: W0511: TODO: Add an option for batching (fixme)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:78:9: W0511: TODO: Marked for cleanup (fixme)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:99:9: W0511: TODO: This should be called from top level (fixme)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:100:9: W0511: TODO: Implement get() function for getting the matrix (fixme)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:101:9: W0511: TODO: Marked for cleanup (fixme)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:10:0: C0115: Missing class docstring (missing-class-docstring)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:10:0: C0103: Class name \"operand_matrix\" doesn't conform to PascalCase naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:10:0: R0205: Class 'operand_matrix' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:10:0: R0902: Too many instance attributes (25/7) (too-many-instance-attributes)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:42:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:112:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:132:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:148:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:148:4: R0914: Too many local variables (21/15) (too-many-locals)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:148:35: W0621: Redefining name 'i' from outer scope (line 353) (redefined-outer-name)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:154:8: C0103: Variable name \"Ew\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:181:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:195:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:195:35: W0621: Redefining name 'i' from outer scope (line 353) (redefined-outer-name)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:203:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:218:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:218:36: W0621: Redefining name 'i' from outer scope (line 353) (redefined-outer-name)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:228:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:257:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:261:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:293:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:297:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:332:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:335:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:337:12: C0103: Variable name \"me\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:335:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:350:4: C0103: Constant name \"lid\" doesn't conform to UPPER_CASE naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:351:4: C0103: Constant name \"topology_file\" doesn't conform to UPPER_CASE naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/operand_matrix.py:3:0: W0611: Unused tqdm imported from tqdm (unused-import)\n[Testing Master/build]   | ************* Module scalesim.compute.systolic_compute_is\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:109:0: C0301: Line too long (117/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:133:0: C0301: Line too long (119/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:136:0: C0301: Line too long (114/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:172:0: C0301: Line too long (126/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:173:0: C0301: Line too long (126/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:199:0: C0301: Line too long (111/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:216:0: C0301: Line too long (104/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:226:0: C0301: Line too long (116/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:234:0: C0301: Line too long (115/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:266:0: C0301: Line too long (104/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:269:0: C0301: Line too long (104/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:277:0: C0301: Line too long (117/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:297:0: C0301: Line too long (110/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:305:0: C0301: Line too long (104/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:313:0: C0301: Line too long (115/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:7:0: C0115: Missing class docstring (missing-class-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:7:0: C0103: Class name \"systolic_compute_is\" doesn't conform to PascalCase naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:17:8: C0103: Attribute name \"Sr\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:18:8: C0103: Attribute name \"Sc\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:19:8: C0103: Attribute name \"T\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:7:0: R0902: Too many instance attributes (25/7) (too-many-instance-attributes)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:50:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:81:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:90:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:93:12: C0103: Variable name \"fc\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:114:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:114:4: R0914: Too many local variables (22/15) (too-many-locals)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:117:12: C0103: Variable name \"fr\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:138:8: C0103: Variable name \"M\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:138:11: C0103: Variable name \"N\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:165:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:181:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:181:4: R0914: Too many local variables (20/15) (too-many-locals)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:187:12: C0103: Variable name \"fc\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:188:16: C0103: Variable name \"fr\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:239:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:248:12: C0103: Variable name \"fc\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:249:16: C0103: Variable name \"fr\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:281:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:287:12: C0103: Variable name \"fc\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:288:16: C0103: Variable name \"fr\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:317:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:324:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:331:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:338:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:345:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:352:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:359:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:366:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:377:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:388:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:393:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:398:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:404:0: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_is.py:409:8: C0103: Variable name \"c\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | ************* Module scalesim.compute.systolic_compute_os\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:112:0: C0301: Line too long (117/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:115:0: C0301: Line too long (114/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:120:25: C0303: Trailing whitespace (trailing-whitespace)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:167:0: C0301: Line too long (119/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:170:0: C0301: Line too long (114/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:211:0: C0301: Line too long (126/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:212:0: C0301: Line too long (126/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:247:0: C0301: Line too long (102/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:250:0: C0301: Line too long (104/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:258:0: C0301: Line too long (115/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:292:0: C0301: Line too long (102/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:295:0: C0301: Line too long (104/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:303:0: C0301: Line too long (117/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:333:0: C0301: Line too long (106/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:336:0: C0301: Line too long (110/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:346:0: C0301: Line too long (109/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:347:0: C0301: Line too long (105/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:354:0: C0301: Line too long (104/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:364:0: C0301: Line too long (116/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:375:0: C0301: Line too long (115/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:501:0: C0305: Trailing newlines (trailing-newlines)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:263:9: W0511: TODO: cleanup (fixme)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:308:9: W0511: TODO: Cleanup (fixme)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:380:9: W0511: TODO: cleanup (fixme)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:8:0: C0115: Missing class docstring (missing-class-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:8:0: C0103: Class name \"systolic_compute_os\" doesn't conform to PascalCase naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:18:8: C0103: Attribute name \"Sr\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:19:8: C0103: Attribute name \"Sc\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:20:8: C0103: Attribute name \"T\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:8:0: R0902: Too many instance attributes (25/7) (too-many-instance-attributes)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:51:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:81:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:90:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:90:4: R0914: Too many local variables (22/15) (too-many-locals)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:93:12: C0103: Variable name \"fr\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:119:8: C0103: Variable name \"M\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:119:11: C0103: Variable name \"N\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:149:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:149:4: R0914: Too many local variables (22/15) (too-many-locals)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:152:12: C0103: Variable name \"fc\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:174:8: C0103: Variable name \"M\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:174:11: C0103: Variable name \"N\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:204:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:220:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:231:12: C0103: Variable name \"fc\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:232:16: C0103: Variable name \"fr\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:268:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:278:12: C0103: Variable name \"fc\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:279:16: C0103: Variable name \"fr\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:313:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:313:4: R0914: Too many local variables (21/15) (too-many-locals)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:323:12: C0103: Variable name \"fc\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:324:16: C0103: Variable name \"fr\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:385:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:392:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:399:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:406:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:413:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:420:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:427:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:434:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:445:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:456:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:461:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:466:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:471:0: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:476:8: C0103: Variable name \"c\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_os.py:2:0: W0611: Unused import time (unused-import)\n[Testing Master/build]   | ************* Module scalesim.compute.systolic_compute_ws\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:107:0: C0301: Line too long (117/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:110:0: C0301: Line too long (114/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:157:0: C0301: Line too long (119/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:169:0: C0301: Line too long (126/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:170:0: C0301: Line too long (126/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:185:0: C0301: Line too long (156/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:206:0: C0301: Line too long (104/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:209:0: C0301: Line too long (104/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:217:0: C0301: Line too long (115/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:237:0: C0301: Line too long (106/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:254:0: C0301: Line too long (104/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:264:0: C0301: Line too long (116/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:272:0: C0301: Line too long (117/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:292:0: C0301: Line too long (110/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:300:0: C0301: Line too long (104/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:308:0: C0301: Line too long (115/100) (line-too-long)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: C0114: Missing module docstring (missing-module-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:7:0: C0115: Missing class docstring (missing-class-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:7:0: C0103: Class name \"systolic_compute_ws\" doesn't conform to PascalCase naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:17:8: C0103: Attribute name \"Sr\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:18:8: C0103: Attribute name \"Sc\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:19:8: C0103: Attribute name \"T\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:7:0: R0902: Too many instance attributes (25/7) (too-many-instance-attributes)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:50:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:79:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:88:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:88:4: R0914: Too many local variables (22/15) (too-many-locals)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:91:12: C0103: Variable name \"fr\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:112:8: C0103: Variable name \"M\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:112:11: C0103: Variable name \"N\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:139:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:142:12: C0103: Variable name \"fc\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:162:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:178:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:189:12: C0103: Variable name \"fc\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:190:16: C0103: Variable name \"fr\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:221:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:221:4: R0914: Too many local variables (20/15) (too-many-locals)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:227:12: C0103: Variable name \"fc\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:228:16: C0103: Variable name \"fr\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:277:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:283:12: C0103: Variable name \"fc\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:284:16: C0103: Variable name \"fr\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:312:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:319:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:326:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:333:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:340:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:347:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:354:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:361:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:372:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:383:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:388:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:393:4: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:399:0: C0116: Missing function or method docstring (missing-function-docstring)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:404:8: C0103: Variable name \"c\" doesn't conform to snake_case naming style (invalid-name)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_is:[299:431]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_ws:[294:426]\n[Testing Master/build]   |                     this_fold_demand = np.concatenate((this_fold_demand, null_req_mat), axis=1)\n[Testing Master/build]   | \n[Testing Master/build]   |                 # Now add the prefix matrix\n[Testing Master/build]   |                 # These are the null demands to account for when the operands are streamed in\n[Testing Master/build]   |                 # and the OFMAPS are not ready\n[Testing Master/build]   |                 this_fold_demand = np.concatenate((inter_fold_gap_prefix_mat, this_fold_demand), axis=0)\n[Testing Master/build]   | \n[Testing Master/build]   |                 # Add skew to the OFMAP demand matrix to reflect systolic pipeline fill\n[Testing Master/build]   |                 this_fold_demand = skew_matrix(this_fold_demand)\n[Testing Master/build]   | \n[Testing Master/build]   |                 if fr == 0 and fc == 0:\n[Testing Master/build]   |                     self.ofmap_demand_matrix = this_fold_demand\n[Testing Master/build]   |                 else:\n[Testing Master/build]   |                     self.ofmap_demand_matrix = np.concatenate((self.ofmap_demand_matrix, this_fold_demand), axis=0)\n[Testing Master/build]   |     # END of OFMAP demand generation\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_ifmap_prefetch_mat(self):\n[Testing Master/build]   |         if not self.prefetch_mat_ready_flag:\n[Testing Master/build]   |             self.create_prefetch_matrices()\n[Testing Master/build]   | \n[Testing Master/build]   |         return self.ifmap_prefetch_matrix\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_filter_prefetch_mat(self):\n[Testing Master/build]   |         if not self.prefetch_mat_ready_flag:\n[Testing Master/build]   |             self.create_prefetch_matrices()\n[Testing Master/build]   | \n[Testing Master/build]   |         return self.filter_prefetch_matrix\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_prefetch_matrices(self):\n[Testing Master/build]   |         if not self.prefetch_mat_ready_flag:\n[Testing Master/build]   |             self.create_prefetch_matrices()\n[Testing Master/build]   | \n[Testing Master/build]   |         return self.ifmap_prefetch_matrix, self.filter_prefetch_matrix\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_ifmap_demand_mat(self):\n[Testing Master/build]   |         if not self.demand_mat_ready_flag:\n[Testing Master/build]   |             self.create_demand_matrices()\n[Testing Master/build]   | \n[Testing Master/build]   |         return self.ifmap_demand_matrix\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_filter_demand_mat(self):\n[Testing Master/build]   |         if not self.demand_mat_ready_flag:\n[Testing Master/build]   |             self.create_demand_matrices()\n[Testing Master/build]   | \n[Testing Master/build]   |         return self.filter_demand_matrix\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_ofmap_demand_mat(self):\n[Testing Master/build]   |         if not self.demand_mat_ready_flag:\n[Testing Master/build]   |             self.create_demand_matrices()\n[Testing Master/build]   | \n[Testing Master/build]   |         return self.ofmap_demand_matrix\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_demand_matrices(self):\n[Testing Master/build]   |         if not self.demand_mat_ready_flag:\n[Testing Master/build]   |             self.create_demand_matrices()\n[Testing Master/build]   | \n[Testing Master/build]   |         return self.ifmap_demand_matrix, self.filter_demand_matrix, self.ofmap_demand_matrix\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_avg_mapping_efficiency(self):\n[Testing Master/build]   |         assert self.demand_mat_ready_flag, 'Computes not ready yet'\n[Testing Master/build]   | \n[Testing Master/build]   |         agg = sum(self.mapping_efficiency_per_fold)\n[Testing Master/build]   |         num = len(self.mapping_efficiency_per_fold)\n[Testing Master/build]   | \n[Testing Master/build]   |         avg_mapping_eff = agg / num\n[Testing Master/build]   | \n[Testing Master/build]   |         return avg_mapping_eff\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_avg_compute_utilization(self):\n[Testing Master/build]   |         assert self.demand_mat_ready_flag, 'Computes not ready yet'\n[Testing Master/build]   | \n[Testing Master/build]   |         agg = sum(self.compute_utility_per_fold)\n[Testing Master/build]   |         num = len(self.compute_utility_per_fold)\n[Testing Master/build]   | \n[Testing Master/build]   |         avg_compute_util = agg / num\n[Testing Master/build]   | \n[Testing Master/build]   |         return avg_compute_util\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_ifmap_requests(self):\n[Testing Master/build]   |         assert self.demand_mat_ready_flag, 'Computes not ready yet'\n[Testing Master/build]   |         return self.ifmap_reads\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_filter_requests(self):\n[Testing Master/build]   |         assert self.demand_mat_ready_flag, 'Computes not ready yet'\n[Testing Master/build]   |         return self.filter_reads\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_ofmap_requests(self):\n[Testing Master/build]   |         assert self.demand_mat_ready_flag, 'Computes not ready yet'\n[Testing Master/build]   |         return self.ofmap_writes\n[Testing Master/build]   | \n[Testing Master/build]   | \n[Testing Master/build]   | #\n[Testing Master/build]   | def skew_matrix(input_matrix_np):\n[Testing Master/build]   |     rows = input_matrix_np.shape[0]\n[Testing Master/build]   |     cols = input_matrix_np.shape[1]\n[Testing Master/build]   | \n[Testing Master/build]   |     out_matrix_np = np.zeros((1,1))\n[Testing Master/build]   |     for c in range(cols):\n[Testing Master/build]   |         if c == 0:\n[Testing Master/build]   |             down_padding = -1 * np.ones((cols-1, 1))\n[Testing Master/build]   |             mat_col = input_matrix_np[:,c].reshape((rows,1))\n[Testing Master/build]   |             out_matrix_np = np.concatenate((mat_col, down_padding), axis=0)\n[Testing Master/build]   | \n[Testing Master/build]   |         else:\n[Testing Master/build]   |             if c == cols -1:\n[Testing Master/build]   |                 up_padding = -1 * np.ones((cols-1, 1))\n[Testing Master/build]   |                 mat_col = input_matrix_np[:, c].reshape((rows, 1))\n[Testing Master/build]   | \n[Testing Master/build]   |                 this_col = np.concatenate((up_padding, mat_col), axis=0)\n[Testing Master/build]   |                 out_matrix_np = np.concatenate((out_matrix_np, this_col), axis=1)\n[Testing Master/build]   | \n[Testing Master/build]   |             else:\n[Testing Master/build]   |                 up_padding = -1 * np.ones((c, 1))\n[Testing Master/build]   |                 mat_col = input_matrix_np[:, c].reshape((rows, 1))\n[Testing Master/build]   |                 down_padding = -1 * np.ones((cols - c-1, 1))\n[Testing Master/build]   | \n[Testing Master/build]   |                 this_col = np.concatenate((up_padding, mat_col, down_padding), axis=0)\n[Testing Master/build]   |                 out_matrix_np = np.concatenate((out_matrix_np, this_col), axis=1)\n[Testing Master/build]   | \n[Testing Master/build]   |     return out_matrix_np (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_is:[317:425]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_os:[385:492]\n[Testing Master/build]   |         if not self.prefetch_mat_ready_flag:\n[Testing Master/build]   |             self.create_prefetch_matrices()\n[Testing Master/build]   | \n[Testing Master/build]   |         return self.ifmap_prefetch_matrix\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_filter_prefetch_mat(self):\n[Testing Master/build]   |         if not self.prefetch_mat_ready_flag:\n[Testing Master/build]   |             self.create_prefetch_matrices()\n[Testing Master/build]   | \n[Testing Master/build]   |         return self.filter_prefetch_matrix\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_prefetch_matrices(self):\n[Testing Master/build]   |         if not self.prefetch_mat_ready_flag:\n[Testing Master/build]   |             self.create_prefetch_matrices()\n[Testing Master/build]   | \n[Testing Master/build]   |         return self.ifmap_prefetch_matrix, self.filter_prefetch_matrix\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_ifmap_demand_mat(self):\n[Testing Master/build]   |         if not self.demand_mat_ready_flag:\n[Testing Master/build]   |             self.create_demand_matrices()\n[Testing Master/build]   | \n[Testing Master/build]   |         return self.ifmap_demand_matrix\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_filter_demand_mat(self):\n[Testing Master/build]   |         if not self.demand_mat_ready_flag:\n[Testing Master/build]   |             self.create_demand_matrices()\n[Testing Master/build]   | \n[Testing Master/build]   |         return self.filter_demand_matrix\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_ofmap_demand_mat(self):\n[Testing Master/build]   |         if not self.demand_mat_ready_flag:\n[Testing Master/build]   |             self.create_demand_matrices()\n[Testing Master/build]   | \n[Testing Master/build]   |         return self.ofmap_demand_matrix\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_demand_matrices(self):\n[Testing Master/build]   |         if not self.demand_mat_ready_flag:\n[Testing Master/build]   |             self.create_demand_matrices()\n[Testing Master/build]   | \n[Testing Master/build]   |         return self.ifmap_demand_matrix, self.filter_demand_matrix, self.ofmap_demand_matrix\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_avg_mapping_efficiency(self):\n[Testing Master/build]   |         assert self.demand_mat_ready_flag, 'Computes not ready yet'\n[Testing Master/build]   | \n[Testing Master/build]   |         agg = sum(self.mapping_efficiency_per_fold)\n[Testing Master/build]   |         num = len(self.mapping_efficiency_per_fold)\n[Testing Master/build]   | \n[Testing Master/build]   |         avg_mapping_eff = agg / num\n[Testing Master/build]   | \n[Testing Master/build]   |         return avg_mapping_eff\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_avg_compute_utilization(self):\n[Testing Master/build]   |         assert self.demand_mat_ready_flag, 'Computes not ready yet'\n[Testing Master/build]   | \n[Testing Master/build]   |         agg = sum(self.compute_utility_per_fold)\n[Testing Master/build]   |         num = len(self.compute_utility_per_fold)\n[Testing Master/build]   | \n[Testing Master/build]   |         avg_compute_util = agg / num\n[Testing Master/build]   | \n[Testing Master/build]   |         return avg_compute_util\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_ifmap_requests(self):\n[Testing Master/build]   |         assert self.demand_mat_ready_flag, 'Computes not ready yet'\n[Testing Master/build]   |         return self.ifmap_reads\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_filter_requests(self):\n[Testing Master/build]   |         assert self.demand_mat_ready_flag, 'Computes not ready yet'\n[Testing Master/build]   |         return self.filter_reads\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_ofmap_requests(self):\n[Testing Master/build]   |         assert self.demand_mat_ready_flag, 'Computes not ready yet'\n[Testing Master/build]   |         return self.ofmap_writes\n[Testing Master/build]   | \n[Testing Master/build]   | #\n[Testing Master/build]   | def skew_matrix(input_matrix_np):\n[Testing Master/build]   |     rows = input_matrix_np.shape[0]\n[Testing Master/build]   |     cols = input_matrix_np.shape[1]\n[Testing Master/build]   | \n[Testing Master/build]   |     out_matrix_np = np.zeros((1,1))\n[Testing Master/build]   |     for c in range(cols):\n[Testing Master/build]   |         if c == 0:\n[Testing Master/build]   |             down_padding = -1 * np.ones((cols-1, 1))\n[Testing Master/build]   |             mat_col = input_matrix_np[:,c].reshape((rows,1))\n[Testing Master/build]   |             out_matrix_np = np.concatenate((mat_col, down_padding), axis=0)\n[Testing Master/build]   | \n[Testing Master/build]   |         else:\n[Testing Master/build]   |             if c == cols -1:\n[Testing Master/build]   |                 up_padding = -1 * np.ones((cols-1, 1))\n[Testing Master/build]   |                 mat_col = input_matrix_np[:, c].reshape((rows, 1))\n[Testing Master/build]   | \n[Testing Master/build]   |                 this_col = np.concatenate((up_padding, mat_col), axis=0)\n[Testing Master/build]   |                 out_matrix_np = np.concatenate((out_matrix_np, this_col), axis=1)\n[Testing Master/build]   | \n[Testing Master/build]   |             else:\n[Testing Master/build]   |                 up_padding = -1 * np.ones((c, 1))\n[Testing Master/build]   |                 mat_col = input_matrix_np[:, c].reshape((rows, 1)) (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_os:[13:66]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_ws:[12:66]\n[Testing Master/build]   |         self.ofmap_op_mat = np.zeros((1, 1))\n[Testing Master/build]   |         self.filter_op_mat = np.zeros((1, 1))\n[Testing Master/build]   | \n[Testing Master/build]   |         # Derived parameters\n[Testing Master/build]   |         self.Sr = 0\n[Testing Master/build]   |         self.Sc = 0\n[Testing Master/build]   |         self.T = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         self.arr_row = 0\n[Testing Master/build]   |         self.arr_col = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         self.row_fold = 1\n[Testing Master/build]   |         self.col_fold = 1\n[Testing Master/build]   | \n[Testing Master/build]   |         # Generated matrices\n[Testing Master/build]   |         self.ifmap_op_mat_trans = np.zeros((1,1))\n[Testing Master/build]   |         self.ifmap_prefetch_matrix = np.zeros((1,1))\n[Testing Master/build]   |         self.filter_prefetch_matrix = np.zeros((1,1))\n[Testing Master/build]   | \n[Testing Master/build]   |         self.ifmap_demand_matrix = np.zeros((1,1))\n[Testing Master/build]   |         self.ofmap_demand_matrix = np.zeros((1,1))\n[Testing Master/build]   |         self.filter_demand_matrix = np.zeros((1,1))\n[Testing Master/build]   | \n[Testing Master/build]   |         # Generated metrics\n[Testing Master/build]   |         self.ifmap_reads = 0\n[Testing Master/build]   |         self.filter_reads = 0\n[Testing Master/build]   |         self.ofmap_writes = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         self.mapping_efficiency_per_fold = []\n[Testing Master/build]   |         self.compute_utility_per_fold = []\n[Testing Master/build]   | \n[Testing Master/build]   |         # Flags\n[Testing Master/build]   |         self.params_set_flag = False\n[Testing Master/build]   |         self.prefetch_mat_ready_flag = False\n[Testing Master/build]   |         self.demand_mat_ready_flag = False\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def set_params(self,\n[Testing Master/build]   |                    config_obj=cfg(),\n[Testing Master/build]   |                    ifmap_op_mat = np.zeros((1,1)),\n[Testing Master/build]   |                    ofmap_op_mat = np.zeros((1,1)),\n[Testing Master/build]   |                    filter_op_mat = np.zeros((1,1))\n[Testing Master/build]   |                 ):\n[Testing Master/build]   | \n[Testing Master/build]   |         self.config = config_obj\n[Testing Master/build]   |         self.ifmap_op_mat = ifmap_op_mat\n[Testing Master/build]   |         self.filter_op_mat = filter_op_mat\n[Testing Master/build]   |         self.ofmap_op_mat = ofmap_op_mat\n[Testing Master/build]   | \n[Testing Master/build]   |         ifmap_col = self.ifmap_op_mat.shape[1]\n[Testing Master/build]   |         filter_row= self.filter_op_mat.shape[0]\n[Testing Master/build]   | \n[Testing Master/build]   |         assert ifmap_col == filter_row, \"Dimension mismatch between operands\" (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.read_buffer:[238:296]\n[Testing Master/build]   | ==scalesim.memory.read_buffer_old:[188:243]\n[Testing Master/build]   |                     self.new_prefetch()\n[Testing Master/build]   |                     potential_stall_cycles = self.last_prefect_cycle - (cycle + offset)\n[Testing Master/build]   |                     offset += potential_stall_cycles        # Offset increments if there were potential stalls\n[Testing Master/build]   | \n[Testing Master/build]   |             out_cycles = cycle + offset\n[Testing Master/build]   |             out_cycles_arr.append(out_cycles)\n[Testing Master/build]   | \n[Testing Master/build]   |         out_cycles_arr_np = np.asarray(out_cycles_arr).reshape((len(out_cycles_arr), 1))\n[Testing Master/build]   | \n[Testing Master/build]   |         return out_cycles_arr_np\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def prefetch_active_buffer(self, start_cycle):\n[Testing Master/build]   |         # Depending on size of the active buffer, calculate the number of lines from op mat to fetch\n[Testing Master/build]   |         # Also, calculate the cycles arr for requests\n[Testing Master/build]   | \n[Testing Master/build]   |         # 1. Preparing the requests:\n[Testing Master/build]   |         num_lines = math.ceil(self.active_buf_size / self.req_gen_bandwidth)\n[Testing Master/build]   |         if not num_lines < self.fetch_matrix.shape[0]:\n[Testing Master/build]   |             num_lines = self.fetch_matrix.shape[0]\n[Testing Master/build]   | \n[Testing Master/build]   |         requested_data_size = num_lines * self.req_gen_bandwidth\n[Testing Master/build]   |         self.num_access += requested_data_size\n[Testing Master/build]   | \n[Testing Master/build]   |         start_idx = 0\n[Testing Master/build]   |         end_idx = num_lines\n[Testing Master/build]   | \n[Testing Master/build]   |         prefetch_requests = self.fetch_matrix[start_idx:end_idx, :]\n[Testing Master/build]   |         # 1.1 See if extra requests are made, if so nullify them\n[Testing Master/build]   |         self.next_col_prefetch_idx = 0\n[Testing Master/build]   |         if requested_data_size > self.active_buf_size:\n[Testing Master/build]   |             valid_cols = int(self.active_buf_size % self.req_gen_bandwidth)\n[Testing Master/build]   |             row = end_idx - 1\n[Testing Master/build]   |             self.next_col_prefetch_idx = valid_cols\n[Testing Master/build]   |             for col in range(valid_cols, self.req_gen_bandwidth):\n[Testing Master/build]   |                 prefetch_requests[row][col] = -1\n[Testing Master/build]   | \n[Testing Master/build]   |         # 2. Preparing the cycles array\n[Testing Master/build]   |         #    The start_cycle variable ensures that all the requests have been made before any incoming reads came\n[Testing Master/build]   |         cycles_arr = np.zeros((num_lines, 1))\n[Testing Master/build]   |         for i in range(cycles_arr.shape[0]):\n[Testing Master/build]   |             cycles_arr[i][0] = -1 * (num_lines - start_cycle - (i - self.backing_buffer.get_latency()))\n[Testing Master/build]   | \n[Testing Master/build]   |         # 3. Send the request and get the response cycles count\n[Testing Master/build]   |         response_cycles_arr = self.backing_buffer.service_reads(incoming_cycles_arr=cycles_arr,\n[Testing Master/build]   |                                                                 incoming_requests_arr_np=prefetch_requests)\n[Testing Master/build]   | \n[Testing Master/build]   |         # 4. Update the variables\n[Testing Master/build]   |         self.last_prefect_cycle = int(response_cycles_arr[-1][0])\n[Testing Master/build]   | \n[Testing Master/build]   |         # Update the trace matrix\n[Testing Master/build]   |         self.trace_matrix = np.concatenate((response_cycles_arr, prefetch_requests), axis=1)\n[Testing Master/build]   |         self.trace_valid = True\n[Testing Master/build]   | \n[Testing Master/build]   |         # Set active buffer contents (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_is:[9:61]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_ws:[9:61]\n[Testing Master/build]   |         self.config = cfg()\n[Testing Master/build]   | \n[Testing Master/build]   |         self.ifmap_op_mat = np.zeros((1, 1))\n[Testing Master/build]   |         self.ofmap_op_mat = np.zeros((1, 1))\n[Testing Master/build]   |         self.filter_op_mat = np.zeros((1, 1))\n[Testing Master/build]   | \n[Testing Master/build]   |         # Derived parameters\n[Testing Master/build]   |         self.Sr = 0\n[Testing Master/build]   |         self.Sc = 0\n[Testing Master/build]   |         self.T = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         self.arr_row = 0\n[Testing Master/build]   |         self.arr_col = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         self.row_fold = 1\n[Testing Master/build]   |         self.col_fold = 1\n[Testing Master/build]   | \n[Testing Master/build]   |         # Generated matrices\n[Testing Master/build]   |         self.ifmap_op_mat_trans = np.zeros((1,1))\n[Testing Master/build]   |         self.ifmap_prefetch_matrix = np.zeros((1,1))\n[Testing Master/build]   |         self.filter_prefetch_matrix = np.zeros((1,1))\n[Testing Master/build]   | \n[Testing Master/build]   |         self.ifmap_demand_matrix = np.zeros((1,1))\n[Testing Master/build]   |         self.ofmap_demand_matrix = np.zeros((1,1))\n[Testing Master/build]   |         self.filter_demand_matrix = np.zeros((1,1))\n[Testing Master/build]   | \n[Testing Master/build]   |         # Generated metrics\n[Testing Master/build]   |         self.ifmap_reads = 0\n[Testing Master/build]   |         self.filter_reads = 0\n[Testing Master/build]   |         self.ofmap_writes = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         self.mapping_efficiency_per_fold = []\n[Testing Master/build]   |         self.compute_utility_per_fold = []\n[Testing Master/build]   | \n[Testing Master/build]   |         # Flags\n[Testing Master/build]   |         self.params_set_flag = False\n[Testing Master/build]   |         self.prefetch_mat_ready_flag = False\n[Testing Master/build]   |         self.demand_mat_ready_flag = False\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def set_params(self,\n[Testing Master/build]   |                    config_obj=cfg(),\n[Testing Master/build]   |                    ifmap_op_mat = np.zeros((1,1)),\n[Testing Master/build]   |                    ofmap_op_mat = np.zeros((1,1)),\n[Testing Master/build]   |                    filter_op_mat = np.zeros((1,1))\n[Testing Master/build]   |                 ):\n[Testing Master/build]   | \n[Testing Master/build]   |         self.config = config_obj\n[Testing Master/build]   |         self.ifmap_op_mat = ifmap_op_mat\n[Testing Master/build]   |         self.filter_op_mat = filter_op_mat\n[Testing Master/build]   |         self.ofmap_op_mat = ofmap_op_mat\n[Testing Master/build]   |  (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_is:[130:173]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_os:[164:212]\n[Testing Master/build]   |                 self.filter_prefetch_matrix = this_fold_prefetch\n[Testing Master/build]   |             else:\n[Testing Master/build]   |                 self.filter_prefetch_matrix = np.concatenate((self.filter_prefetch_matrix, this_fold_prefetch), axis=0)\n[Testing Master/build]   | \n[Testing Master/build]   |         # Fixing ISSUE #15, #16\n[Testing Master/build]   |         # Roll out the matrices along the diagonal to account for temporal locality when there is a skew in demand\n[Testing Master/build]   | \n[Testing Master/build]   |         M, N = self.filter_prefetch_matrix.shape\n[Testing Master/build]   |         num_elems = M * N\n[Testing Master/build]   |         num_diags = M + N\n[Testing Master/build]   |         prefetches = np.zeros((1, num_elems))\n[Testing Master/build]   |         idx = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         pbar = tqdm(total=M * N, disable=True)\n[Testing Master/build]   |         # print('DEBUG: Total = ' + str(num_elems) + ' Diags = ' + str(num_diags))\n[Testing Master/build]   | \n[Testing Master/build]   |         for diag_id in range(num_diags):\n[Testing Master/build]   |             max_row_id = min(diag_id, M - 1)\n[Testing Master/build]   |             min_row_id = max(0, diag_id - N + 1)\n[Testing Master/build]   |             valid_rows = max_row_id - min_row_id + 1\n[Testing Master/build]   | \n[Testing Master/build]   |             for offset in range(valid_rows):\n[Testing Master/build]   |                 row_id = max_row_id - offset\n[Testing Master/build]   |                 col_id = diag_id - row_id\n[Testing Master/build]   | \n[Testing Master/build]   |                 elem = self.filter_prefetch_matrix[row_id][col_id]\n[Testing Master/build]   |                 prefetches[0, idx] = elem\n[Testing Master/build]   |                 idx += 1\n[Testing Master/build]   |                 pbar.update(1)\n[Testing Master/build]   | \n[Testing Master/build]   |         pbar.close()\n[Testing Master/build]   |         self.filter_prefetch_matrix = prefetches\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def create_demand_matrices(self):\n[Testing Master/build]   |         assert self.params_set_flag, 'Parameters are not set'\n[Testing Master/build]   | \n[Testing Master/build]   |         self.create_ifmap_demand_mat()\n[Testing Master/build]   |         self.create_filter_demand_mat()\n[Testing Master/build]   |         self.create_ofmap_demand_mat()\n[Testing Master/build]   | \n[Testing Master/build]   |         assert self.ifmap_demand_matrix.shape[0] == self.filter_demand_matrix.shape[0], 'IFMAP and Filter demands out of sync'\n[Testing Master/build]   |         assert self.ofmap_demand_matrix.shape[0] == self.filter_demand_matrix.shape[0], 'OFMAP and Filter demands out of sync' (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_is:[12:61]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_os:[13:62]\n[Testing Master/build]   |         self.ofmap_op_mat = np.zeros((1, 1))\n[Testing Master/build]   |         self.filter_op_mat = np.zeros((1, 1))\n[Testing Master/build]   | \n[Testing Master/build]   |         # Derived parameters\n[Testing Master/build]   |         self.Sr = 0\n[Testing Master/build]   |         self.Sc = 0\n[Testing Master/build]   |         self.T = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         self.arr_row = 0\n[Testing Master/build]   |         self.arr_col = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         self.row_fold = 1\n[Testing Master/build]   |         self.col_fold = 1\n[Testing Master/build]   | \n[Testing Master/build]   |         # Generated matrices\n[Testing Master/build]   |         self.ifmap_op_mat_trans = np.zeros((1,1))\n[Testing Master/build]   |         self.ifmap_prefetch_matrix = np.zeros((1,1))\n[Testing Master/build]   |         self.filter_prefetch_matrix = np.zeros((1,1))\n[Testing Master/build]   | \n[Testing Master/build]   |         self.ifmap_demand_matrix = np.zeros((1,1))\n[Testing Master/build]   |         self.ofmap_demand_matrix = np.zeros((1,1))\n[Testing Master/build]   |         self.filter_demand_matrix = np.zeros((1,1))\n[Testing Master/build]   | \n[Testing Master/build]   |         # Generated metrics\n[Testing Master/build]   |         self.ifmap_reads = 0\n[Testing Master/build]   |         self.filter_reads = 0\n[Testing Master/build]   |         self.ofmap_writes = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         self.mapping_efficiency_per_fold = []\n[Testing Master/build]   |         self.compute_utility_per_fold = []\n[Testing Master/build]   | \n[Testing Master/build]   |         # Flags\n[Testing Master/build]   |         self.params_set_flag = False\n[Testing Master/build]   |         self.prefetch_mat_ready_flag = False\n[Testing Master/build]   |         self.demand_mat_ready_flag = False\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def set_params(self,\n[Testing Master/build]   |                    config_obj=cfg(),\n[Testing Master/build]   |                    ifmap_op_mat = np.zeros((1,1)),\n[Testing Master/build]   |                    ofmap_op_mat = np.zeros((1,1)),\n[Testing Master/build]   |                    filter_op_mat = np.zeros((1,1))\n[Testing Master/build]   |                 ):\n[Testing Master/build]   | \n[Testing Master/build]   |         self.config = config_obj\n[Testing Master/build]   |         self.ifmap_op_mat = ifmap_op_mat\n[Testing Master/build]   |         self.filter_op_mat = filter_op_mat\n[Testing Master/build]   |         self.ofmap_op_mat = ofmap_op_mat\n[Testing Master/build]   |  (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.read_buffer:[31:162]\n[Testing Master/build]   | ==scalesim.memory.read_buffer_old:[28:159]\n[Testing Master/build]   |         self.active_buffer_set_limits = []\n[Testing Master/build]   |         self.prefetch_buffer_set_limits = []\n[Testing Master/build]   | \n[Testing Master/build]   |         # Variables to enable prefetching\n[Testing Master/build]   |         self.fetch_matrix = np.ones((1, 1))\n[Testing Master/build]   |         self.last_prefect_cycle = -1\n[Testing Master/build]   |         self.next_line_prefetch_idx = 0\n[Testing Master/build]   |         self.next_col_prefetch_idx = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         # Access counts\n[Testing Master/build]   |         self.num_access = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         # Trace matrix\n[Testing Master/build]   |         self.trace_matrix = np.ones((1, 1))\n[Testing Master/build]   | \n[Testing Master/build]   |         # Flags\n[Testing Master/build]   |         self.active_buf_full_flag = False\n[Testing Master/build]   |         self.hashed_buffer_valid = False\n[Testing Master/build]   |         self.trace_valid = False\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def set_params(self, backing_buf_obj,\n[Testing Master/build]   |                    total_size_bytes=1, word_size=1, active_buf_frac=0.9,\n[Testing Master/build]   |                    hit_latency=1, backing_buf_bw=1\n[Testing Master/build]   |                    ):\n[Testing Master/build]   | \n[Testing Master/build]   |         self.total_size_bytes = total_size_bytes\n[Testing Master/build]   |         self.word_size = word_size\n[Testing Master/build]   | \n[Testing Master/build]   |         assert 0.5 <= active_buf_frac < 1, \"Valid active buf frac [0.5,1)\"\n[Testing Master/build]   |         self.active_buf_frac = round(active_buf_frac, 2)\n[Testing Master/build]   |         self.hit_latency = hit_latency\n[Testing Master/build]   | \n[Testing Master/build]   |         self.backing_buffer = backing_buf_obj\n[Testing Master/build]   |         self.req_gen_bandwidth = backing_buf_bw\n[Testing Master/build]   | \n[Testing Master/build]   |         # Calculate these based on the values provided\n[Testing Master/build]   |         self.total_size_elems = math.floor(self.total_size_bytes / self.word_size)\n[Testing Master/build]   |         self.active_buf_size = int(math.ceil(self.total_size_elems * self.active_buf_frac))\n[Testing Master/build]   |         self.prefetch_buf_size = self.total_size_elems - self.active_buf_size\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def reset(self): # TODO: check if all resets are working propoerly\n[Testing Master/build]   |         # Buffer properties: User specified\n[Testing Master/build]   |         self.total_size_bytes = 128\n[Testing Master/build]   |         self.word_size = 1  # Bytes\n[Testing Master/build]   |         self.active_buf_frac = 0.9\n[Testing Master/build]   |         self.hit_latency = 1  # Cycles after which a request is served if already in the buffer\n[Testing Master/build]   | \n[Testing Master/build]   |         # Buffer properties: Calculated\n[Testing Master/build]   |         self.total_size_elems = math.floor(self.total_size_bytes / self.word_size)\n[Testing Master/build]   |         self.active_buf_size = int(math.ceil(self.total_size_elems * 0.9))\n[Testing Master/build]   |         self.prefetch_buf_size = self.total_size_elems - self.active_buf_size\n[Testing Master/build]   | \n[Testing Master/build]   |         # Backing interface properties\n[Testing Master/build]   |         self.backing_buffer = read_port()\n[Testing Master/build]   |         self.req_gen_bandwidth = 100  # words per cycle\n[Testing Master/build]   | \n[Testing Master/build]   |         # Status of the buffer\n[Testing Master/build]   |         self.hashed_buffer = dict()\n[Testing Master/build]   |         self.active_buffer_set_limits = []\n[Testing Master/build]   |         self.prefetch_buffer_set_limits = []\n[Testing Master/build]   | \n[Testing Master/build]   |         # Variables to enable prefetching\n[Testing Master/build]   |         self.fetch_matrix = np.ones((1, 1))\n[Testing Master/build]   |         self.last_prefect_cycle = -1\n[Testing Master/build]   |         self.next_line_prefetch_idx = 0\n[Testing Master/build]   |         self.next_col_prefetch_idx = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         # Access counts\n[Testing Master/build]   |         self.num_access = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         # Trace matrix\n[Testing Master/build]   |         self.trace_matrix = np.ones((1, 1))\n[Testing Master/build]   | \n[Testing Master/build]   |         # Flags\n[Testing Master/build]   |         self.active_buf_full_flag = False\n[Testing Master/build]   |         self.hashed_buffer_valid = False\n[Testing Master/build]   |         self.trace_valid = False\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def set_fetch_matrix(self, fetch_matrix_np):\n[Testing Master/build]   |         # The operand matrix determines what to pre-fetch into both active and prefetch buffers\n[Testing Master/build]   |         # In 'user' mode, this will be set in the set_params\n[Testing Master/build]   | \n[Testing Master/build]   |         num_elems = fetch_matrix_np.shape[0] * fetch_matrix_np.shape[1]\n[Testing Master/build]   |         num_lines = int(math.ceil(num_elems / self.req_gen_bandwidth))\n[Testing Master/build]   |         self.fetch_matrix = np.ones((num_lines, self.req_gen_bandwidth)) * -1\n[Testing Master/build]   | \n[Testing Master/build]   |         # Put stuff into the fetch matrix\n[Testing Master/build]   |         # This is done to ensure that there is no shape mismatch\n[Testing Master/build]   |         # Not sure if this is the optimal way to do it or not\n[Testing Master/build]   |         for i in range(num_elems):\n[Testing Master/build]   |             src_row = math.floor(i / fetch_matrix_np.shape[1])\n[Testing Master/build]   |             src_col = math.floor(i % fetch_matrix_np.shape[1])\n[Testing Master/build]   | \n[Testing Master/build]   |             dest_row = math.floor(i / self.req_gen_bandwidth)\n[Testing Master/build]   |             dest_col = math.floor(i % self.req_gen_bandwidth)\n[Testing Master/build]   | \n[Testing Master/build]   |             self.fetch_matrix[dest_row][dest_col] = fetch_matrix_np[src_row][src_col]\n[Testing Master/build]   | \n[Testing Master/build]   |         # Once the fetch matrices are set, populate the data structure for fast lookups and servicing\n[Testing Master/build]   |         self.prepare_hashed_buffer()\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def prepare_hashed_buffer(self):\n[Testing Master/build]   |         elems_per_set = math.ceil(self.total_size_elems / 100)\n[Testing Master/build]   | \n[Testing Master/build]   |         prefetch_rows = self.fetch_matrix.shape[0]\n[Testing Master/build]   |         prefetch_cols = self.fetch_matrix.shape[1]\n[Testing Master/build]   | \n[Testing Master/build]   |         line_id = 0\n[Testing Master/build]   |         elem_ctr = 0\n[Testing Master/build]   |         current_line = set()\n[Testing Master/build]   | \n[Testing Master/build]   |         for r in range(prefetch_rows):\n[Testing Master/build]   |             for c in range(prefetch_cols):\n[Testing Master/build]   |                 elem = self.fetch_matrix[r][c]\n[Testing Master/build]   | \n[Testing Master/build]   |                 if not elem == -1:\n[Testing Master/build]   |                     current_line.add(elem)\n[Testing Master/build]   |                     elem_ctr += 1\n[Testing Master/build]   | \n[Testing Master/build]   |                 if not elem_ctr < elems_per_set:    # ie > or =\n[Testing Master/build]   |                     self.hashed_buffer[line_id] = current_line\n[Testing Master/build]   |                     line_id += 1\n[Testing Master/build]   |                     elem_ctr = 0\n[Testing Master/build]   |                     current_line = set()        # new set\n[Testing Master/build]   | \n[Testing Master/build]   |         self.hashed_buffer[line_id] = current_line\n[Testing Master/build]   |  (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.read_buffer:[75:116]\n[Testing Master/build]   | ==scalesim.memory.read_buffer_old:[12:54]\n[Testing Master/build]   |         self.total_size_bytes = 128\n[Testing Master/build]   |         self.word_size = 1                      # Bytes\n[Testing Master/build]   |         self.active_buf_frac = 0.9\n[Testing Master/build]   |         self.hit_latency = 1                    # Cycles after which a request is served if already in the buffer\n[Testing Master/build]   | \n[Testing Master/build]   |         # Buffer properties: Calculated\n[Testing Master/build]   |         self.total_size_elems = math.floor(self.total_size_bytes / self.word_size)\n[Testing Master/build]   |         self.active_buf_size = int(math.ceil(self.total_size_elems * 0.9))\n[Testing Master/build]   |         self.prefetch_buf_size = self.total_size_elems - self.active_buf_size\n[Testing Master/build]   | \n[Testing Master/build]   |         # Backing interface properties\n[Testing Master/build]   |         self.backing_buffer = read_port()\n[Testing Master/build]   |         self.req_gen_bandwidth = 100            # words per cycle\n[Testing Master/build]   | \n[Testing Master/build]   |         # Status of the buffer\n[Testing Master/build]   |         self.hashed_buffer = dict()\n[Testing Master/build]   |         self.active_buffer_set_limits = []\n[Testing Master/build]   |         self.prefetch_buffer_set_limits = []\n[Testing Master/build]   | \n[Testing Master/build]   |         # Variables to enable prefetching\n[Testing Master/build]   |         self.fetch_matrix = np.ones((1, 1))\n[Testing Master/build]   |         self.last_prefect_cycle = -1\n[Testing Master/build]   |         self.next_line_prefetch_idx = 0\n[Testing Master/build]   |         self.next_col_prefetch_idx = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         # Access counts\n[Testing Master/build]   |         self.num_access = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         # Trace matrix\n[Testing Master/build]   |         self.trace_matrix = np.ones((1, 1))\n[Testing Master/build]   | \n[Testing Master/build]   |         # Flags\n[Testing Master/build]   |         self.active_buf_full_flag = False\n[Testing Master/build]   |         self.hashed_buffer_valid = False\n[Testing Master/build]   |         self.trace_valid = False\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def set_params(self, backing_buf_obj,\n[Testing Master/build]   |                    total_size_bytes=1, word_size=1, active_buf_frac=0.9,\n[Testing Master/build]   |                    hit_latency=1, backing_buf_bw=1\n[Testing Master/build]   |                    ):\n[Testing Master/build]   |  (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_os:[127:160]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_ws:[120:150]\n[Testing Master/build]   |         for diag_id in range(num_diags):\n[Testing Master/build]   |             max_row_id = min(diag_id, M - 1)\n[Testing Master/build]   |             min_row_id = max(0, diag_id - N + 1)\n[Testing Master/build]   |             valid_rows = max_row_id - min_row_id + 1\n[Testing Master/build]   | \n[Testing Master/build]   |             for offset in range(valid_rows):\n[Testing Master/build]   |                 row_id = max_row_id - offset\n[Testing Master/build]   |                 col_id = diag_id - row_id\n[Testing Master/build]   | \n[Testing Master/build]   |                 elem = self.ifmap_prefetch_matrix[row_id][col_id]\n[Testing Master/build]   |                 prefetches[0, idx] = elem\n[Testing Master/build]   |                 idx += 1\n[Testing Master/build]   |                 pbar.update(1)\n[Testing Master/build]   | \n[Testing Master/build]   |         pbar.close()\n[Testing Master/build]   |         self.ifmap_prefetch_matrix = prefetches\n[Testing Master/build]   | \n[Testing Master/build]   |         #t = time.time() - start_time\n[Testing Master/build]   |         #print('DEBUG: create_ifmap_prefetch_mat =' + str(t))\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def create_filter_prefetch_mat(self):\n[Testing Master/build]   |         assert self.params_set_flag, 'Parameters are not set'\n[Testing Master/build]   | \n[Testing Master/build]   |         for fc in range(self.col_fold):\n[Testing Master/build]   |             col_start_id = fc * self.arr_col\n[Testing Master/build]   |             col_end_id = min(col_start_id + self.arr_col, self.Sc)\n[Testing Master/build]   | \n[Testing Master/build]   |             delta = self.arr_col - (col_end_id - col_start_id)\n[Testing Master/build]   | \n[Testing Master/build]   |             this_fold_prefetch = self.filter_op_mat[:,col_start_id:col_end_id]\n[Testing Master/build]   | \n[Testing Master/build]   |             if delta > 0: (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_is:[202:231]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_ws:[240:269]\n[Testing Master/build]   |                 if col_delta > 0:\n[Testing Master/build]   |                     null_req_mat = np.ones((this_fold_demand.shape[0], col_delta)) * -1\n[Testing Master/build]   |                     this_fold_demand = np.concatenate((this_fold_demand, null_req_mat), axis=1)\n[Testing Master/build]   | \n[Testing Master/build]   |                 if row_delta > 0:\n[Testing Master/build]   |                     null_req_mat = np.ones((row_delta, self.arr_col)) * -1\n[Testing Master/build]   |                     this_fold_demand = np.concatenate((this_fold_demand, null_req_mat), axis=0)\n[Testing Master/build]   | \n[Testing Master/build]   |                 # The filters are needed to be filled in reverse order to ensure that\n[Testing Master/build]   |                 # top element is pushed in last to maintain alignment with the input elements\n[Testing Master/build]   |                 this_fold_demand = np.flip(this_fold_demand, 0)\n[Testing Master/build]   | \n[Testing Master/build]   |                 # Time for inputs to stream and the partial sums to drain out\n[Testing Master/build]   |                 this_fold_demand = np.concatenate((this_fold_demand, inter_fold_gap_suffix_mat), axis=0)\n[Testing Master/build]   | \n[Testing Master/build]   |                 # Calculate the mapping efficiency\n[Testing Master/build]   |                 row_used = min(self.arr_row, row_end_idx - row_start_id)\n[Testing Master/build]   |                 col_used = min(self.arr_col, col_end_idx - col_start_id)\n[Testing Master/build]   |                 mac_used = row_used * col_used\n[Testing Master/build]   |                 mapping_eff_this_fold = mac_used / (self.arr_row * self.arr_col)\n[Testing Master/build]   | \n[Testing Master/build]   |                 cycles_this_fold = this_fold_demand.shape[0] + this_fold_demand.shape[1] - 1\n[Testing Master/build]   |                 compute_cycles_this_fold = mac_used * self.T\n[Testing Master/build]   |                 compute_util_this_fold = compute_cycles_this_fold / (self.arr_row * self.arr_col * cycles_this_fold)\n[Testing Master/build]   | \n[Testing Master/build]   |                 self.mapping_efficiency_per_fold.append(mapping_eff_this_fold)\n[Testing Master/build]   |                 self.compute_utility_per_fold.append(compute_util_this_fold)\n[Testing Master/build]   | \n[Testing Master/build]   |                 if fr == 0 and fc == 0: (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.write_buffer:[61:96]\n[Testing Master/build]   | ==scalesim.memory.write_buffer_old:[53:90]\n[Testing Master/build]   |         self.total_size_bytes = total_size_bytes\n[Testing Master/build]   |         self.word_size = word_size\n[Testing Master/build]   | \n[Testing Master/build]   |         assert 0.5 <= active_buf_frac < 1, \"Valid active buf frac [0.5,1)\"\n[Testing Master/build]   |         self.active_buf_frac = active_buf_frac\n[Testing Master/build]   | \n[Testing Master/build]   |         self.backing_buffer = backing_buf_obj\n[Testing Master/build]   |         self.req_gen_bandwidth = backing_buf_bw\n[Testing Master/build]   | \n[Testing Master/build]   |         self.total_size_elems = math.floor(self.total_size_bytes / self.word_size)\n[Testing Master/build]   |         self.active_buf_size = int(math.ceil(self.total_size_elems * self.active_buf_frac))\n[Testing Master/build]   |         self.drain_buf_size = self.total_size_elems - self.active_buf_size\n[Testing Master/build]   |         self.free_space = self.total_size_elems\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def reset(self):\n[Testing Master/build]   |         self.total_size_bytes = 128\n[Testing Master/build]   |         self.word_size = 1\n[Testing Master/build]   |         self.active_buf_frac = 0.9\n[Testing Master/build]   | \n[Testing Master/build]   |         self.backing_buffer = write_buffer()\n[Testing Master/build]   |         self.req_gen_bandwidth = 100\n[Testing Master/build]   | \n[Testing Master/build]   |         self.free_space = self.total_size_elems\n[Testing Master/build]   |         self.active_buf_contents = []\n[Testing Master/build]   |         self.drain_buf_contents = []\n[Testing Master/build]   |         self.drain_end_cycle = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         self.trace_matrix = np.zeros((1, 1))\n[Testing Master/build]   | \n[Testing Master/build]   |         self.num_access = 0\n[Testing Master/build]   |         self.state = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         self.trace_valid = False\n[Testing Master/build]   |         # Fixing ISSUE #10 (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.read_buffer:[333:357]\n[Testing Master/build]   | ==scalesim.memory.read_buffer_old:[276:300]\n[Testing Master/build]   |         start_idx = self.next_line_prefetch_idx\n[Testing Master/build]   |         num_lines = math.ceil(self.prefetch_buf_size / self.req_gen_bandwidth)\n[Testing Master/build]   |         end_idx = start_idx + num_lines\n[Testing Master/build]   |         requested_data_size = num_lines * self.req_gen_bandwidth\n[Testing Master/build]   |         self.num_access += requested_data_size\n[Testing Master/build]   | \n[Testing Master/build]   |         # In care we need to circle back\n[Testing Master/build]   |         if end_idx > self.fetch_matrix.shape[0]:\n[Testing Master/build]   |             last_idx = self.fetch_matrix.shape[0]\n[Testing Master/build]   |             prefetch_requests = self.fetch_matrix[start_idx:,:]\n[Testing Master/build]   | \n[Testing Master/build]   |             new_end_idx = min(end_idx - last_idx, start_idx)    # In case the entire array is engulfed\n[Testing Master/build]   |             prefetch_requests = np.concatenate((prefetch_requests, self.fetch_matrix[:new_end_idx,:]))\n[Testing Master/build]   |         else:\n[Testing Master/build]   |             prefetch_requests = self.fetch_matrix[start_idx:end_idx, :]\n[Testing Master/build]   | \n[Testing Master/build]   |         # Modify the prefetch request to drop unwanted addresses\n[Testing Master/build]   |         # a. Chomp the elements in the first line included in previous fetches\n[Testing Master/build]   |         for i in range(0, self.next_col_prefetch_idx):\n[Testing Master/build]   |             prefetch_requests[0][i] = -1\n[Testing Master/build]   | \n[Testing Master/build]   |         # b. Chomp the excess elements in the last line\n[Testing Master/build]   |         if requested_data_size > self.active_buf_size:\n[Testing Master/build]   |             valid_cols = int(self.active_buf_size % self.req_gen_bandwidth) (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.read_buffer_estimate_bw:[279:309]\n[Testing Master/build]   | ==scalesim.memory.read_buffer_old:[341:371]\n[Testing Master/build]   |         if not self.trace_valid:\n[Testing Master/build]   |             print('No trace has been generated yet')\n[Testing Master/build]   |             return\n[Testing Master/build]   | \n[Testing Master/build]   |         return self.trace_matrix\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_hit_latency(self):\n[Testing Master/build]   |         return self.hit_latency\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_num_accesses(self):\n[Testing Master/build]   |         assert self.trace_valid, 'Traces not ready yet'\n[Testing Master/build]   |         return self.num_access\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_external_access_start_stop_cycles(self):\n[Testing Master/build]   |         assert self.trace_valid, 'Traces not ready yet'\n[Testing Master/build]   |         start_cycle = self.trace_matrix[0][0]\n[Testing Master/build]   |         end_cycle = self.trace_matrix[-1][0]\n[Testing Master/build]   | \n[Testing Master/build]   |         return start_cycle, end_cycle\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def print_trace(self, filename):\n[Testing Master/build]   |         if not self.trace_valid:\n[Testing Master/build]   |             print('No trace has been generated yet')\n[Testing Master/build]   |             return\n[Testing Master/build]   | \n[Testing Master/build]   |         np.savetxt(filename, self.trace_matrix, fmt='%s', delimiter=\",\") (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_is:[273:292]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_ws:[268:288]\n[Testing Master/build]   |                 if fr == 0 and fc == 0:\n[Testing Master/build]   |                     self.filter_demand_matrix = this_fold_demand\n[Testing Master/build]   |                 else:\n[Testing Master/build]   |                     self.filter_demand_matrix = np.concatenate((self.filter_demand_matrix, this_fold_demand), axis=0)\n[Testing Master/build]   | \n[Testing Master/build]   |         # No skew needed in filters for weight stationary\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def create_ofmap_demand_mat(self):\n[Testing Master/build]   |         assert self.params_set_flag, 'Parameters are not set'\n[Testing Master/build]   | \n[Testing Master/build]   |         inter_fold_gap_prefix = 2 * self.arr_row - 1\n[Testing Master/build]   |         inter_fold_gap_prefix_mat = np.ones((inter_fold_gap_prefix, self.arr_col)) * -1\n[Testing Master/build]   | \n[Testing Master/build]   |         for fc in range(self.col_fold):\n[Testing Master/build]   |             for fr in range(self.row_fold):\n[Testing Master/build]   |                 col_start_id = fc * self.arr_col\n[Testing Master/build]   |                 col_end_idx = min(col_start_id + self.arr_col, self.Sc)\n[Testing Master/build]   |                 col_delta = self.arr_col - (col_end_idx - col_start_id)\n[Testing Master/build]   |  (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_is:[138:155]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_ws:[112:129]\n[Testing Master/build]   |         num_elems = M * N\n[Testing Master/build]   |         num_diags = M + N\n[Testing Master/build]   |         prefetches = np.zeros((1, num_elems))\n[Testing Master/build]   |         idx = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         pbar = tqdm(total=M * N, disable=True)\n[Testing Master/build]   |         # print('DEBUG: Total = ' + str(num_elems) + ' Diags = ' + str(num_diags))\n[Testing Master/build]   | \n[Testing Master/build]   |         for diag_id in range(num_diags):\n[Testing Master/build]   |             max_row_id = min(diag_id, M - 1)\n[Testing Master/build]   |             min_row_id = max(0, diag_id - N + 1)\n[Testing Master/build]   |             valid_rows = max_row_id - min_row_id + 1\n[Testing Master/build]   | \n[Testing Master/build]   |             for offset in range(valid_rows):\n[Testing Master/build]   |                 row_id = max_row_id - offset\n[Testing Master/build]   |                 col_id = diag_id - row_id\n[Testing Master/build]   |  (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_os:[204:223]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_ws:[162:180]\n[Testing Master/build]   |         assert self.params_set_flag, 'Parameters are not set'\n[Testing Master/build]   | \n[Testing Master/build]   |         self.create_ifmap_demand_mat()\n[Testing Master/build]   |         self.create_filter_demand_mat()\n[Testing Master/build]   |         self.create_ofmap_demand_mat()\n[Testing Master/build]   | \n[Testing Master/build]   |         assert self.ifmap_demand_matrix.shape[0] == self.filter_demand_matrix.shape[0], 'IFMAP and Filter demands out of sync'\n[Testing Master/build]   |         assert self.ofmap_demand_matrix.shape[0] == self.filter_demand_matrix.shape[0], 'OFMAP and Filter demands out of sync'\n[Testing Master/build]   |         assert self.ifmap_demand_matrix.shape[1] == self.arr_row, 'IFMAP demands exceed the rows'\n[Testing Master/build]   |         assert self.filter_demand_matrix.shape[1] == self.arr_col,'Filter demands exceed the cols'\n[Testing Master/build]   |         assert self.ofmap_demand_matrix.shape[1] == self.arr_col, 'OFMAP demands exceed the cols'\n[Testing Master/build]   | \n[Testing Master/build]   |         self.demand_mat_ready_flag = True\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def create_ifmap_demand_mat(self):\n[Testing Master/build]   |         assert self.params_set_flag, 'Parameters are not set'\n[Testing Master/build]   |  (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_is:[181:198]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_ws:[221:236]\n[Testing Master/build]   |         assert self.params_set_flag, 'Parameters are not set'\n[Testing Master/build]   | \n[Testing Master/build]   |         inter_fold_gap_suffix = self.arr_row + self.arr_col + self.T - 2\n[Testing Master/build]   |         inter_fold_gap_suffix_mat = np.ones((inter_fold_gap_suffix, self.arr_col)) * -1\n[Testing Master/build]   | \n[Testing Master/build]   |         for fc in range(self.col_fold):\n[Testing Master/build]   |             for fr in range(self.row_fold):\n[Testing Master/build]   |                 row_start_id = fr * self.arr_row\n[Testing Master/build]   |                 row_end_idx = min(row_start_id + self.arr_row, self.Sr)\n[Testing Master/build]   |                 row_delta = self.arr_row - (row_end_idx - row_start_id)\n[Testing Master/build]   | \n[Testing Master/build]   |                 col_start_id = fc * self.arr_col\n[Testing Master/build]   |                 col_end_idx = min(col_start_id + self.arr_col, self.Sc)\n[Testing Master/build]   |                 col_delta = self.arr_col - (col_end_idx - col_start_id)\n[Testing Master/build]   |  (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.read_buffer:[402:424]\n[Testing Master/build]   | ==scalesim.memory.read_buffer_old:[349:371]\n[Testing Master/build]   |         return self.hit_latency\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_num_accesses(self):\n[Testing Master/build]   |         assert self.trace_valid, 'Traces not ready yet'\n[Testing Master/build]   |         return self.num_access\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_external_access_start_stop_cycles(self):\n[Testing Master/build]   |         assert self.trace_valid, 'Traces not ready yet'\n[Testing Master/build]   |         start_cycle = self.trace_matrix[0][0]\n[Testing Master/build]   |         end_cycle = self.trace_matrix[-1][0]\n[Testing Master/build]   | \n[Testing Master/build]   |         return start_cycle, end_cycle\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def print_trace(self, filename):\n[Testing Master/build]   |         if not self.trace_valid:\n[Testing Master/build]   |             print('No trace has been generated yet')\n[Testing Master/build]   |             return\n[Testing Master/build]   | \n[Testing Master/build]   |         np.savetxt(filename, self.trace_matrix, fmt='%s', delimiter=\",\") (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.read_buffer:[31:57]\n[Testing Master/build]   | ==scalesim.memory.read_buffer_old:[88:114]\n[Testing Master/build]   |         self.active_buffer_set_limits = []\n[Testing Master/build]   |         self.prefetch_buffer_set_limits = []\n[Testing Master/build]   | \n[Testing Master/build]   |         # Variables to enable prefetching\n[Testing Master/build]   |         self.fetch_matrix = np.ones((1, 1))\n[Testing Master/build]   |         self.last_prefect_cycle = -1\n[Testing Master/build]   |         self.next_line_prefetch_idx = 0\n[Testing Master/build]   |         self.next_col_prefetch_idx = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         # Access counts\n[Testing Master/build]   |         self.num_access = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         # Trace matrix\n[Testing Master/build]   |         self.trace_matrix = np.ones((1, 1))\n[Testing Master/build]   | \n[Testing Master/build]   |         # Flags\n[Testing Master/build]   |         self.active_buf_full_flag = False\n[Testing Master/build]   |         self.hashed_buffer_valid = False\n[Testing Master/build]   |         self.trace_valid = False\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def set_params(self, backing_buf_obj,\n[Testing Master/build]   |                    total_size_bytes=1, word_size=1, active_buf_frac=0.9,\n[Testing Master/build]   |                    hit_latency=1, backing_buf_bw=1\n[Testing Master/build]   |                    ):\n[Testing Master/build]   |  (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.read_buffer:[9:28]\n[Testing Master/build]   | ==scalesim.memory.read_buffer_old:[9:28]\n[Testing Master/build]   | class read_buffer:\n[Testing Master/build]   |     def __init__(self):\n[Testing Master/build]   |         # Buffer properties: User specified\n[Testing Master/build]   |         self.total_size_bytes = 128\n[Testing Master/build]   |         self.word_size = 1                      # Bytes\n[Testing Master/build]   |         self.active_buf_frac = 0.9\n[Testing Master/build]   |         self.hit_latency = 1                    # Cycles after which a request is served if already in the buffer\n[Testing Master/build]   | \n[Testing Master/build]   |         # Buffer properties: Calculated\n[Testing Master/build]   |         self.total_size_elems = math.floor(self.total_size_bytes / self.word_size)\n[Testing Master/build]   |         self.active_buf_size = int(math.ceil(self.total_size_elems * 0.9))\n[Testing Master/build]   |         self.prefetch_buf_size = self.total_size_elems - self.active_buf_size\n[Testing Master/build]   | \n[Testing Master/build]   |         # Backing interface properties\n[Testing Master/build]   |         self.backing_buffer = read_port()\n[Testing Master/build]   |         self.req_gen_bandwidth = 100            # words per cycle\n[Testing Master/build]   | \n[Testing Master/build]   |         # Status of the buffer\n[Testing Master/build]   |         self.hashed_buffer = dict() (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_os:[104:121]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_ws:[99:114]\n[Testing Master/build]   |             if delta > 0:\n[Testing Master/build]   |                 null_req_mat = np.ones((self.T, delta)) * -1\n[Testing Master/build]   |                 this_fold_prefetch = np.concatenate((this_fold_prefetch, null_req_mat), axis=1)\n[Testing Master/build]   | \n[Testing Master/build]   |             if fr == 0:\n[Testing Master/build]   |                 self.ifmap_prefetch_matrix = this_fold_prefetch\n[Testing Master/build]   |             else:\n[Testing Master/build]   |                 self.ifmap_prefetch_matrix = np.concatenate((self.ifmap_prefetch_matrix, this_fold_prefetch), axis=0)\n[Testing Master/build]   | \n[Testing Master/build]   |         # Fixing ISSUE #15, #16\n[Testing Master/build]   |         # Roll out the matrices along the diagonal to account for temporal locality when there is a skew in demand\n[Testing Master/build]   | \n[Testing Master/build]   |         M, N = self.ifmap_prefetch_matrix.shape\n[Testing Master/build]   |         num_elems = M * N\n[Testing Master/build]   |         num_diags = M + N (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_os:[72:93]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_ws:[70:91]\n[Testing Master/build]   |         self.arr_row, self.arr_col = self.config.get_array_dims()\n[Testing Master/build]   | \n[Testing Master/build]   |         self.row_fold = math.ceil(self.Sr / self.arr_row)\n[Testing Master/build]   |         self.col_fold = math.ceil(self.Sc / self.arr_col)\n[Testing Master/build]   | \n[Testing Master/build]   |         self.params_set_flag = True\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def create_prefetch_matrices(self):\n[Testing Master/build]   |         assert self.params_set_flag, 'Parameters are not set'\n[Testing Master/build]   | \n[Testing Master/build]   |         self.create_ifmap_prefetch_mat()\n[Testing Master/build]   |         self.create_filter_prefetch_mat()\n[Testing Master/build]   | \n[Testing Master/build]   |         self.prefetch_mat_ready_flag = True\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def create_ifmap_prefetch_mat(self):\n[Testing Master/build]   |         assert self.params_set_flag, 'Parameters are not set'\n[Testing Master/build]   | \n[Testing Master/build]   |         for fr in range(self.row_fold): (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.write_buffer:[10:28]\n[Testing Master/build]   | ==scalesim.memory.write_buffer_old:[8:26]\n[Testing Master/build]   | class write_buffer:\n[Testing Master/build]   |     def __init__(self):\n[Testing Master/build]   |         # Buffer properties: User specified\n[Testing Master/build]   |         self.total_size_bytes = 128\n[Testing Master/build]   |         self.word_size = 1\n[Testing Master/build]   |         self.active_buf_frac = 0.9\n[Testing Master/build]   | \n[Testing Master/build]   |         # Buffer properties: Calculated\n[Testing Master/build]   |         self.total_size_elems = math.floor(self.total_size_bytes / self.word_size)\n[Testing Master/build]   |         self.active_buf_size = int(math.ceil(self.total_size_elems * self.active_buf_frac))\n[Testing Master/build]   |         self.drain_buf_size = self.total_size_elems - self.active_buf_size\n[Testing Master/build]   | \n[Testing Master/build]   |         # Backing interface properties\n[Testing Master/build]   |         self.backing_buffer = write_port()\n[Testing Master/build]   |         self.req_gen_bandwidth = 100\n[Testing Master/build]   | \n[Testing Master/build]   |         # Status of the buffer\n[Testing Master/build]   |         self.free_space = self.total_size_elems (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.read_buffer:[12:28]\n[Testing Master/build]   | ==scalesim.memory.read_buffer_old:[72:88]\n[Testing Master/build]   |         self.total_size_bytes = 128\n[Testing Master/build]   |         self.word_size = 1  # Bytes\n[Testing Master/build]   |         self.active_buf_frac = 0.9\n[Testing Master/build]   |         self.hit_latency = 1  # Cycles after which a request is served if already in the buffer\n[Testing Master/build]   | \n[Testing Master/build]   |         # Buffer properties: Calculated\n[Testing Master/build]   |         self.total_size_elems = math.floor(self.total_size_bytes / self.word_size)\n[Testing Master/build]   |         self.active_buf_size = int(math.ceil(self.total_size_elems * 0.9))\n[Testing Master/build]   |         self.prefetch_buf_size = self.total_size_elems - self.active_buf_size\n[Testing Master/build]   | \n[Testing Master/build]   |         # Backing interface properties\n[Testing Master/build]   |         self.backing_buffer = read_port()\n[Testing Master/build]   |         self.req_gen_bandwidth = 100  # words per cycle\n[Testing Master/build]   | \n[Testing Master/build]   |         # Status of the buffer\n[Testing Master/build]   |         self.hashed_buffer = dict() (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.read_buffer:[406:424]\n[Testing Master/build]   | ==scalesim.memory.write_buffer_old:[204:222]\n[Testing Master/build]   |         assert self.trace_valid, 'Traces not ready yet'\n[Testing Master/build]   |         return self.num_access\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_external_access_start_stop_cycles(self):\n[Testing Master/build]   |         assert self.trace_valid, 'Traces not ready yet'\n[Testing Master/build]   |         start_cycle = self.trace_matrix[0][0]\n[Testing Master/build]   |         end_cycle = self.trace_matrix[-1][0]\n[Testing Master/build]   | \n[Testing Master/build]   |         return start_cycle, end_cycle\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def print_trace(self, filename):\n[Testing Master/build]   |         if not self.trace_valid:\n[Testing Master/build]   |             print('No trace has been generated yet')\n[Testing Master/build]   |             return\n[Testing Master/build]   | \n[Testing Master/build]   |         np.savetxt(filename, self.trace_matrix, fmt='%s', delimiter=\",\") (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_is:[218:230]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_os:[356:369]\n[Testing Master/build]   |                 row_used = min(self.arr_row, row_end_idx - row_start_id)\n[Testing Master/build]   |                 col_used = min(self.arr_col, col_end_idx - col_start_id)\n[Testing Master/build]   |                 mac_used = row_used * col_used\n[Testing Master/build]   |                 mapping_eff_this_fold = mac_used / (self.arr_row * self.arr_col)\n[Testing Master/build]   | \n[Testing Master/build]   |                 cycles_this_fold = this_fold_demand.shape[0] + this_fold_demand.shape[1] - 1\n[Testing Master/build]   |                 compute_cycles_this_fold = mac_used * self.T\n[Testing Master/build]   |                 compute_util_this_fold = compute_cycles_this_fold / (self.arr_row * self.arr_col * cycles_this_fold)\n[Testing Master/build]   | \n[Testing Master/build]   |                 self.mapping_efficiency_per_fold.append(mapping_eff_this_fold)\n[Testing Master/build]   |                 self.compute_utility_per_fold.append(compute_util_this_fold)\n[Testing Master/build]   | \n[Testing Master/build]   |                 # Add skew to the OFMAP demand matrix to reflect systolic pipeline fill (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_is:[72:92]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_os:[72:92]\n[Testing Master/build]   |         self.arr_row, self.arr_col = self.config.get_array_dims()\n[Testing Master/build]   | \n[Testing Master/build]   |         self.row_fold = math.ceil(self.Sr / self.arr_row)\n[Testing Master/build]   |         self.col_fold = math.ceil(self.Sc / self.arr_col)\n[Testing Master/build]   | \n[Testing Master/build]   |         self.params_set_flag = True\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def create_prefetch_matrices(self):\n[Testing Master/build]   |         assert self.params_set_flag, 'Parameters are not set'\n[Testing Master/build]   | \n[Testing Master/build]   |         self.create_ifmap_prefetch_mat()\n[Testing Master/build]   |         self.create_filter_prefetch_mat()\n[Testing Master/build]   | \n[Testing Master/build]   |         self.prefetch_mat_ready_flag = True\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def create_ifmap_prefetch_mat(self):\n[Testing Master/build]   |         assert self.params_set_flag, 'Parameters are not set'\n[Testing Master/build]   |  (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.read_buffer:[381:402]\n[Testing Master/build]   | ==scalesim.memory.read_buffer_old:[331:353]\n[Testing Master/build]   |         if requested_data_size > self.active_buf_size:\n[Testing Master/build]   |             self.next_line_prefetch_idx = num_lines % self.fetch_matrix.shape[0]\n[Testing Master/build]   |         else:\n[Testing Master/build]   |             self.next_line_prefetch_idx = (num_lines + 1) % self.fetch_matrix.shape[1]\n[Testing Master/build]   | \n[Testing Master/build]   |         # This does not need to return anything\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_trace_matrix(self):\n[Testing Master/build]   |         if not self.trace_valid:\n[Testing Master/build]   |             print('No trace has been generated yet')\n[Testing Master/build]   |             return\n[Testing Master/build]   | \n[Testing Master/build]   |         return self.trace_matrix\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_hit_latency(self):\n[Testing Master/build]   |         return self.hit_latency\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_latency(self): (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.double_buffered_scratchpad_mem:[43:53]\n[Testing Master/build]   | ==scalesim.single_layer_sim:[53:65]\n[Testing Master/build]   |         self.ifmap_dram_start_cycle = 0\n[Testing Master/build]   |         self.ifmap_dram_stop_cycle = 0\n[Testing Master/build]   |         self.ifmap_dram_reads = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         self.filter_dram_start_cycle = 0\n[Testing Master/build]   |         self.filter_dram_stop_cycle = 0\n[Testing Master/build]   |         self.filter_dram_reads = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         self.ofmap_dram_start_cycle = 0\n[Testing Master/build]   |         self.ofmap_dram_stop_cycle = 0\n[Testing Master/build]   |         self.ofmap_dram_writes = 0\n[Testing Master/build]   |  (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_is:[186:198]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_os:[322:332]\n[Testing Master/build]   |         for fc in range(self.col_fold):\n[Testing Master/build]   |             for fr in range(self.row_fold):\n[Testing Master/build]   |                 row_start_id = fr * self.arr_row\n[Testing Master/build]   |                 row_end_idx = min(row_start_id + self.arr_row, self.Sr)\n[Testing Master/build]   |                 row_delta = self.arr_row - (row_end_idx - row_start_id)\n[Testing Master/build]   | \n[Testing Master/build]   |                 col_start_id = fc * self.arr_col\n[Testing Master/build]   |                 col_end_idx = min(col_start_id + self.arr_col, self.Sc)\n[Testing Master/build]   |                 col_delta = self.arr_col - (col_end_idx - col_start_id)\n[Testing Master/build]   | \n[Testing Master/build]   |                 # Indexing the cols with row start and row end idx are correct\n[Testing Master/build]   |                 # See the comment on ifmap_prefetch generation (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_is:[260:274]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_ws:[200:214]\n[Testing Master/build]   |                 if delta > 0:\n[Testing Master/build]   |                     null_req_mat = np.ones((self.T, delta)) * -1\n[Testing Master/build]   |                     this_fold_demand = np.concatenate((this_fold_demand, null_req_mat), axis=1)\n[Testing Master/build]   | \n[Testing Master/build]   |                 # Account for the cycles for weights to load\n[Testing Master/build]   |                 this_fold_demand = np.concatenate((inter_fold_gap_prefix_mat, this_fold_demand), axis=0)\n[Testing Master/build]   | \n[Testing Master/build]   |                 # Account for the cycles for final output to drain out\n[Testing Master/build]   |                 this_fold_demand = np.concatenate((this_fold_demand, inter_fold_gap_suffix_mat), axis=0)\n[Testing Master/build]   | \n[Testing Master/build]   |                 # Add skew to the IFMAP demand matrix to reflect systolic pipeline fill\n[Testing Master/build]   |                 this_fold_demand = skew_matrix(this_fold_demand)\n[Testing Master/build]   | \n[Testing Master/build]   |                 if fr == 0 and fc == 0: (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_is:[202:215]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_os:[336:348]\n[Testing Master/build]   |                 if col_delta > 0:\n[Testing Master/build]   |                     null_req_mat = np.ones((this_fold_demand.shape[0], col_delta)) * -1\n[Testing Master/build]   |                     this_fold_demand = np.concatenate((this_fold_demand, null_req_mat), axis=1)\n[Testing Master/build]   | \n[Testing Master/build]   |                 if row_delta > 0:\n[Testing Master/build]   |                     null_req_mat = np.ones((row_delta, self.arr_col)) * -1\n[Testing Master/build]   |                     this_fold_demand = np.concatenate((this_fold_demand, null_req_mat), axis=0)\n[Testing Master/build]   | \n[Testing Master/build]   |                 # Reflect along the rows\n[Testing Master/build]   |                 # This is a characteristic of the fact that the outputs are streamed out from the bottom edge\n[Testing Master/build]   |                 # If the outputs are streamed out from the top edge instead, then this step is not needed\n[Testing Master/build]   |                 this_fold_demand = np.flip(this_fold_demand, 0) (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_is:[146:155]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_os:[127:136]\n[Testing Master/build]   |         for diag_id in range(num_diags):\n[Testing Master/build]   |             max_row_id = min(diag_id, M - 1)\n[Testing Master/build]   |             min_row_id = max(0, diag_id - N + 1)\n[Testing Master/build]   |             valid_rows = max_row_id - min_row_id + 1\n[Testing Master/build]   | \n[Testing Master/build]   |             for offset in range(valid_rows):\n[Testing Master/build]   |                 row_id = max_row_id - offset\n[Testing Master/build]   |                 col_id = diag_id - row_id\n[Testing Master/build]   |  (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.read_buffer:[49:65]\n[Testing Master/build]   | ==scalesim.memory.read_buffer_estimate_bw:[51:66]\n[Testing Master/build]   |         self.trace_valid = False\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def set_params(self, backing_buf_obj,\n[Testing Master/build]   |                    total_size_bytes=1, word_size=1, active_buf_frac=0.9,\n[Testing Master/build]   |                    hit_latency=1, backing_buf_bw=1\n[Testing Master/build]   |                    ):\n[Testing Master/build]   | \n[Testing Master/build]   |         self.total_size_bytes = total_size_bytes\n[Testing Master/build]   |         self.word_size = word_size\n[Testing Master/build]   | \n[Testing Master/build]   |         assert 0.5 <= active_buf_frac < 1, \"Valid active buf frac [0.5,1)\"\n[Testing Master/build]   |         self.active_buf_frac = round(active_buf_frac, 2)\n[Testing Master/build]   |         self.hit_latency = hit_latency\n[Testing Master/build]   | \n[Testing Master/build]   |         self.backing_buffer = backing_buf_obj (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_os:[249:259]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_ws:[208:221]\n[Testing Master/build]   |                 this_fold_demand = np.concatenate((this_fold_demand, inter_fold_gap_suffix_mat), axis=0)\n[Testing Master/build]   | \n[Testing Master/build]   |                 # Add skew to the IFMAP demand matrix to reflect systolic pipeline fill\n[Testing Master/build]   |                 this_fold_demand = skew_matrix(this_fold_demand)\n[Testing Master/build]   | \n[Testing Master/build]   |                 if fr == 0 and fc == 0:\n[Testing Master/build]   |                     self.ifmap_demand_matrix = this_fold_demand\n[Testing Master/build]   |                 else:\n[Testing Master/build]   |                     self.ifmap_demand_matrix = np.concatenate((self.ifmap_demand_matrix, this_fold_demand), axis=0)\n[Testing Master/build]   |     # END of IFMAP demand generation\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def create_filter_demand_mat(self): (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_is:[165:173]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_ws:[162:170]\n[Testing Master/build]   |         assert self.params_set_flag, 'Parameters are not set'\n[Testing Master/build]   | \n[Testing Master/build]   |         self.create_ifmap_demand_mat()\n[Testing Master/build]   |         self.create_filter_demand_mat()\n[Testing Master/build]   |         self.create_ofmap_demand_mat()\n[Testing Master/build]   | \n[Testing Master/build]   |         assert self.ifmap_demand_matrix.shape[0] == self.filter_demand_matrix.shape[0], 'IFMAP and Filter demands out of sync'\n[Testing Master/build]   |         assert self.ofmap_demand_matrix.shape[0] == self.filter_demand_matrix.shape[0], 'OFMAP and Filter demands out of sync' (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_is:[268:281]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_os:[294:304]\n[Testing Master/build]   |                 this_fold_demand = np.concatenate((this_fold_demand, inter_fold_gap_suffix_mat), axis=0)\n[Testing Master/build]   | \n[Testing Master/build]   |                 # Add skew to the Filter demand matrix to reflect systolic pipeline fill\n[Testing Master/build]   |                 this_fold_demand = skew_matrix(this_fold_demand)\n[Testing Master/build]   | \n[Testing Master/build]   |                 if fr == 0 and fc == 0:\n[Testing Master/build]   |                     self.filter_demand_matrix = this_fold_demand\n[Testing Master/build]   |                 else:\n[Testing Master/build]   |                     self.filter_demand_matrix = np.concatenate((self.filter_demand_matrix, this_fold_demand), axis=0)\n[Testing Master/build]   |  (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.write_buffer:[167:176]\n[Testing Master/build]   | ==scalesim.memory.write_buffer_old:[96:107]\n[Testing Master/build]   |             row = incoming_requests_arr_np[i]\n[Testing Master/build]   |             cycle = incoming_cycles_arr_np[i]\n[Testing Master/build]   |             current_cycle = cycle[0] + offset\n[Testing Master/build]   | \n[Testing Master/build]   |             for elem in row:\n[Testing Master/build]   |                 # Pay no attention to empty requests\n[Testing Master/build]   |                 if elem == -1:\n[Testing Master/build]   |                     continue\n[Testing Master/build]   |  (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.read_buffer:[304:322]\n[Testing Master/build]   | ==scalesim.memory.read_buffer_old:[252:269]\n[Testing Master/build]   |         self.active_buf_full_flag = True\n[Testing Master/build]   | \n[Testing Master/build]   |         # Set the line to be prefetched next\n[Testing Master/build]   |         # The module operator is to ensure that the indices wrap around\n[Testing Master/build]   |         if requested_data_size > self.active_buf_size:  # Some elements in the current idx is left out in this case\n[Testing Master/build]   |             self.next_line_prefetch_idx = num_lines % self.fetch_matrix.shape[0]\n[Testing Master/build]   |         else:\n[Testing Master/build]   |             self.next_line_prefetch_idx = (num_lines + 1) % self.fetch_matrix.shape[0]\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def new_prefetch(self):\n[Testing Master/build]   |         # In a new prefetch, some portion of the original data needs to be deleted to accomodate the prefetched data\n[Testing Master/build]   |         # In this case we overwrite some data in the active buffer with the prefetched data\n[Testing Master/build]   |         # And then create a new prefetch request\n[Testing Master/build]   |         # Also return when the prefetched data was made available\n[Testing Master/build]   | \n[Testing Master/build]   |         # 1. Rewrite the active buffer\n[Testing Master/build]   |         assert self.active_buf_full_flag, 'Active buffer is empty' (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_os:[161:173]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_ws:[151:162]\n[Testing Master/build]   |                 this_fold_prefetch = np.concatenate((this_fold_prefetch, null_req_mat), axis=1)\n[Testing Master/build]   | \n[Testing Master/build]   |             if fc == 0:\n[Testing Master/build]   |                 self.filter_prefetch_matrix = this_fold_prefetch\n[Testing Master/build]   |             else:\n[Testing Master/build]   |                 self.filter_prefetch_matrix = np.concatenate((self.filter_prefetch_matrix, this_fold_prefetch), axis=0)\n[Testing Master/build]   | \n[Testing Master/build]   |         # Note: ISSUE #15: no skewing happens in the Filter for WS so this issue does not apply.\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def create_demand_matrices(self): (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_is:[230:241]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_ws:[213:223]\n[Testing Master/build]   |                 if fr == 0 and fc == 0:\n[Testing Master/build]   |                     self.ifmap_demand_matrix = this_fold_demand\n[Testing Master/build]   |                 else:\n[Testing Master/build]   |                     self.ifmap_demand_matrix = np.concatenate((self.ifmap_demand_matrix, this_fold_demand), axis=0)\n[Testing Master/build]   |     # END of IFMAP demand generation\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def create_filter_demand_mat(self):\n[Testing Master/build]   |         assert self.params_set_flag, 'Parameters are not set'\n[Testing Master/build]   |  (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_is:[307:317]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_os:[369:376]\n[Testing Master/build]   |                 this_fold_demand = skew_matrix(this_fold_demand)\n[Testing Master/build]   | \n[Testing Master/build]   |                 if fr == 0 and fc == 0:\n[Testing Master/build]   |                     self.ofmap_demand_matrix = this_fold_demand\n[Testing Master/build]   |                 else:\n[Testing Master/build]   |                     self.ofmap_demand_matrix = np.concatenate((self.ofmap_demand_matrix, this_fold_demand), axis=0)\n[Testing Master/build]   |  (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_is:[247:255]\n[Testing Master/build]   | ==scalesim.compute.systolic_compute_os:[230:238]\n[Testing Master/build]   |         for fc in range(self.col_fold):\n[Testing Master/build]   |             for fr in range(self.row_fold):\n[Testing Master/build]   |                 row_start_id = fr * self.arr_row\n[Testing Master/build]   |                 row_end_idx = min(row_start_id + self.arr_row, self.Sr)\n[Testing Master/build]   |                 delta = self.arr_row - (row_end_idx - row_start_id)\n[Testing Master/build]   | \n[Testing Master/build]   |                 # Indexing the cols with row start and row end idx are correct\n[Testing Master/build]   |                 # See the comment on ifmap_prefetch generation (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.write_buffer:[185:202]\n[Testing Master/build]   | ==scalesim.memory.write_buffer_old:[131:142]\n[Testing Master/build]   |                     self.drain_end_cycle = self.empty_drain_buf(empty_start_cycle=current_cycle)\n[Testing Master/build]   | \n[Testing Master/build]   |             out_cycles_arr.append(current_cycle)\n[Testing Master/build]   | \n[Testing Master/build]   |         num_lines = incoming_requests_arr_np.shape[0]\n[Testing Master/build]   |         out_cycles_arr_np = np.asarray(out_cycles_arr).reshape((num_lines, 1))\n[Testing Master/build]   | \n[Testing Master/build]   |         #print('DEBUG: Num Drains = ' + str(DEBUG_num_drains))\n[Testing Master/build]   |         #print('DEBUG: Num appeneds = ' + str(len(DEBUG_append_to_trace_times)))\n[Testing Master/build]   |         #plt.plot(DEBUG_append_to_trace_times)\n[Testing Master/build]   |         #plt.show()\n[Testing Master/build]   | \n[Testing Master/build]   |         return out_cycles_arr_np\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def empty_drain_buf(self, empty_start_cycle=0):\n[Testing Master/build]   |  (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.write_buffer:[82:89]\n[Testing Master/build]   | ==scalesim.memory.write_buffer_old:[22:35]\n[Testing Master/build]   |         self.req_gen_bandwidth = 100\n[Testing Master/build]   | \n[Testing Master/build]   |         self.free_space = self.total_size_elems\n[Testing Master/build]   |         self.active_buf_contents = []\n[Testing Master/build]   |         self.drain_buf_contents = []\n[Testing Master/build]   |         self.drain_end_cycle = 0\n[Testing Master/build]   |  (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.read_buffer:[390:402]\n[Testing Master/build]   | ==scalesim.memory.read_buffer_estimate_bw:[279:291]\n[Testing Master/build]   |         if not self.trace_valid:\n[Testing Master/build]   |             print('No trace has been generated yet')\n[Testing Master/build]   |             return\n[Testing Master/build]   | \n[Testing Master/build]   |         return self.trace_matrix\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_hit_latency(self):\n[Testing Master/build]   |         return self.hit_latency\n[Testing Master/build]   | \n[Testing Master/build]   |     #\n[Testing Master/build]   |     def get_num_accesses(self): (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.read_buffer:[216:224]\n[Testing Master/build]   | ==scalesim.memory.read_buffer_old:[171:179]\n[Testing Master/build]   |         if not self.active_buf_full_flag:\n[Testing Master/build]   |             start_cycle = incoming_cycles_arr[0][0]\n[Testing Master/build]   |             self.prefetch_active_buffer(start_cycle=start_cycle)    # Needs to use the entire operand matrix\n[Testing Master/build]   |                                                                     # keeping in mind the tile order and everything\n[Testing Master/build]   | \n[Testing Master/build]   |         out_cycles_arr = []\n[Testing Master/build]   |         offset = self.hit_latency\n[Testing Master/build]   |         # for cycle, request_line in tqdm(zip(incoming_cycles_arr, incoming_requests_arr_np)): (duplicate-code)\n[Testing Master/build]   | scalesim/compute/systolic_compute_ws.py:1:0: R0801: Similar lines in 2 files\n[Testing Master/build]   | ==scalesim.memory.double_buffered_scratchpad_mem:[32:38]\n[Testing Master/build]   | ==scalesim.single_layer_sim:[36:43]\n[Testing Master/build]   |         self.avg_ifmap_dram_bw = 0\n[Testing Master/build]   |         self.avg_filter_dram_bw = 0\n[Testing Master/build]   |         self.avg_ofmap_dram_bw = 0\n[Testing Master/build]   | \n[Testing Master/build]   |         self.ifmap_sram_start_cycle = 0\n[Testing Master/build]   |         self.ifmap_sram_stop_cycle = 0 (duplicate-code)\n[Testing Master/build]   | \n[Testing Master/build]   | -----------------------------------\n[Testing Master/build]   | Your code has been rated at 7.54/10\n[Testing Master/build]   | \n[Testing Master/build]   \u2705  Success - Main Linting\n[Testing Master/build] \u2b50 Run Main Test 1\n[Testing Master/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[Testing Master/build]   | Traceback (most recent call last):\n[Testing Master/build]   |   File \"scale.py\", line 3, in <module>\n[Testing Master/build]   |     from scalesim.scale_sim import scalesim\n[Testing Master/build]   |   File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\n[Testing Master/build]   |   File \"<frozen importlib._bootstrap>\", line 975, in _find_and_load_unlocked\n[Testing Master/build]   |   File \"<frozen importlib._bootstrap>\", line 655, in _load_unlocked\n[Testing Master/build]   |   File \"<frozen importlib._bootstrap>\", line 618, in _load_backward_compatible\n[Testing Master/build]   |   File \"<frozen zipimport>\", line 259, in load_module\n[Testing Master/build]   |   File \"/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2/venv/lib/python3.8/site-packages/scalesim-2.0.1-py3.8.egg/scalesim/scale_sim.py\", line 4, in <module>\n[Testing Master/build]   |     from scalesim.simulator import simulator as sim\n[Testing Master/build]   |   File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\n[Testing Master/build]   |   File \"<frozen importlib._bootstrap>\", line 975, in _find_and_load_unlocked\n[Testing Master/build]   |   File \"<frozen importlib._bootstrap>\", line 655, in _load_unlocked\n[Testing Master/build]   |   File \"<frozen importlib._bootstrap>\", line 618, in _load_backward_compatible\n[Testing Master/build]   |   File \"<frozen zipimport>\", line 259, in load_module\n[Testing Master/build]   |   File \"/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2/venv/lib/python3.8/site-packages/scalesim-2.0.1-py3.8.egg/scalesim/simulator.py\", line 5, in <module>\n[Testing Master/build]   |     from scalesim.single_layer_sim import single_layer_sim as layer_sim\n[Testing Master/build]   |   File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\n[Testing Master/build]   |   File \"<frozen importlib._bootstrap>\", line 975, in _find_and_load_unlocked\n[Testing Master/build]   |   File \"<frozen importlib._bootstrap>\", line 655, in _load_unlocked\n[Testing Master/build]   |   File \"<frozen importlib._bootstrap>\", line 618, in _load_backward_compatible\n[Testing Master/build]   |   File \"<frozen zipimport>\", line 259, in load_module\n[Testing Master/build]   |   File \"/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2/venv/lib/python3.8/site-packages/scalesim-2.0.1-py3.8.egg/scalesim/single_layer_sim.py\", line 12, in <module>\n[Testing Master/build]   |     class single_layer_sim:\n[Testing Master/build]   |   File \"/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2/venv/lib/python3.8/site-packages/scalesim-2.0.1-py3.8.egg/scalesim/single_layer_sim.py\", line 101, in single_layer_sim\n[Testing Master/build]   |     def set_memory_system(self, mem_sys_obj=mem_dbsp()):\n[Testing Master/build]   |   File \"/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2/venv/lib/python3.8/site-packages/scalesim-2.0.1-py3.8.egg/scalesim/memory/double_buffered_scratchpad_mem.py\", line 24, in __init__\n[Testing Master/build]   |   File \"/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/scalesim-project-scale-sim-v2/venv/lib/python3.8/site-packages/numpy/__init__.py\", line 305, in __getattr__\n[Testing Master/build]   |     raise AttributeError(__former_attrs__[attr])\n[Testing Master/build]   | AttributeError: module 'numpy' has no attribute 'int'.\n[Testing Master/build]   | `np.int` was a deprecated alias for the builtin `int`. To avoid this error in existing code, use `int` by itself. Doing this will not modify any behavior and is safe. When replacing `np.int`, you may wish to use e.g. `np.int64` or `np.int32` to specify the precision. If you wish to review your current use, check the release note link for additional information.\n[Testing Master/build]   | The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:\n[Testing Master/build]   |     https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n[Testing Master/build]   \u274c  Failure - Main Test 1\n[Testing Master/build] exitcode '1': failure\n[Testing Master/build] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'build' failed\n"
}