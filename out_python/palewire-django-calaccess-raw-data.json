{
    "repository": "palewire/django-calaccess-raw-data",
    "clone_url": "https://github.com/palewire/django-calaccess-raw-data.git",
    "timestamp": "2023-05-29T14:59:18.694778Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Testing and distribution/Test Python code] \ud83d\ude80  Start image=crawlergpt:latest\n[Testing and distribution/Lint Python code] \ud83d\ude80  Start image=crawlergpt:latest\n[Testing and distribution/Test Python code]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Testing and distribution/Lint Python code]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Testing and distribution/Test Python code]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Testing and distribution/Lint Python code]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Testing and distribution/Test Python code]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Testing and distribution/Lint Python code]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Testing and distribution/Test Python code]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/palewire-django-calaccess-raw-data] user=0 workdir=\n[Testing and distribution/Lint Python code]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/palewire-django-calaccess-raw-data] user=0 workdir=\n[Testing and distribution/Test Python code]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[Testing and distribution/Test Python code] \ud83e\uddea  Matrix: map[python:3.8 settings:postgresql]\n[Testing and distribution/Lint Python code]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[Testing and distribution/Test Python code] \u2b50 Run Main Checkout the repo\n[Testing and distribution/Test Python code]   \u2705  Success - Main Checkout the repo\n[Testing and distribution/Lint Python code] \u2b50 Run Main Checkout\n[Testing and distribution/Lint Python code]   \u2705  Success - Main Checkout\n[Testing and distribution/Test Python code] \u2b50 Run Main Install pipenv\n[Testing and distribution/Lint Python code] \u2b50 Run Main Install pipenv\n[Testing and distribution/Test Python code]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[Testing and distribution/Lint Python code]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[Testing and distribution/Test Python code]   | \u26a0\ufe0f  Note: '/home/runneradmin/.local/bin' is not on your PATH environment\n[Testing and distribution/Test Python code]   |     variable. These apps will not be globally accessible until your PATH is\n[Testing and distribution/Test Python code]   |     updated. Run `pipx ensurepath` to automatically add it, or manually modify\n[Testing and distribution/Test Python code]   |     your PATH in your shell's config file (i.e. ~/.bashrc).\n[Testing and distribution/Test Python code]   | done! \u2728 \ud83c\udf1f \u2728\n[Testing and distribution/Test Python code]   | creating virtual environment...\n[Testing and distribution/Test Python code]   | creating shared libraries...\n[Testing and distribution/Test Python code]   | upgrading shared libraries...\n[Testing and distribution/Test Python code]   | installing pipenv...\n[Testing and distribution/Test Python code]   |   installed package pipenv 2023.5.19, Python 3.8.10\n[Testing and distribution/Test Python code]   |   These apps are now globally available\n[Testing and distribution/Test Python code]   |     - pipenv\n[Testing and distribution/Test Python code]   |     - pipenv-resolver\n[Testing and distribution/Test Python code]   \u2705  Success - Main Install pipenv\n[Testing and distribution/Lint Python code]   | \u26a0\ufe0f  Note: '/home/runneradmin/.local/bin' is not on your PATH environment\n[Testing and distribution/Lint Python code]   |     variable. These apps will not be globally accessible until your PATH is\n[Testing and distribution/Lint Python code]   |     updated. Run `pipx ensurepath` to automatically add it, or manually modify\n[Testing and distribution/Lint Python code]   |     your PATH in your shell's config file (i.e. ~/.bashrc).\n[Testing and distribution/Lint Python code]   | done! \u2728 \ud83c\udf1f \u2728\n[Testing and distribution/Lint Python code]   | creating virtual environment...\n[Testing and distribution/Lint Python code]   | creating shared libraries...\n[Testing and distribution/Lint Python code]   | upgrading shared libraries...\n[Testing and distribution/Lint Python code]   | installing pipenv...\n[Testing and distribution/Lint Python code]   |   installed package pipenv 2023.5.19, Python 3.8.10\n[Testing and distribution/Lint Python code]   |   These apps are now globally available\n[Testing and distribution/Lint Python code]   |     - pipenv\n[Testing and distribution/Lint Python code]   |     - pipenv-resolver\n[Testing and distribution/Lint Python code]   \u2705  Success - Main Install pipenv\n[Testing and distribution/Test Python code] \u2b50 Run Main actions/setup-python@v2\n[Testing and distribution/Lint Python code] \u2b50 Run Main actions/setup-python@v4\n[Testing and distribution/Test Python code]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[Testing and distribution/Lint Python code]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[Testing and distribution/Test Python code]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[Testing and distribution/Lint Python code]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[Testing and distribution/Test Python code]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[Testing and distribution/Lint Python code]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::isExplicit: \n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::explicit? false\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::explicit? true\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::explicit? true\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::explicit? true\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::explicit? true\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::explicit? true\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::explicit? true\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::matched: 3.8.11\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[Testing and distribution/Test Python code]   | Successfully setup CPython (3.8.11)\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::Search path '/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/palewire-django-calaccess-raw-data'\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/palewire-django-calaccess-raw-data/Pipfile.lock\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::Found 1 files to hash.\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::global cache directory path is /home/runneradmin/.local/share/virtualenvs\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::Resolved Keys:\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::[\"setup-python-Linux-python-3.8.11-pipenv-275828984e44e261934cb486d6b784393445349c0c6846ecfac25ba9e10e02a3\"]\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::Checking zstd --version\n[Testing and distribution/Lint Python code]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[Testing and distribution/Lint Python code]   \u2753  ::group::Installed versions\n[Testing and distribution/Lint Python code]   \ud83d\udcac  ::debug::Semantic version spec of 3.9 is 3.9\n[Testing and distribution/Lint Python code]   \ud83d\udcac  ::debug::isExplicit: \n[Testing and distribution/Lint Python code]   \ud83d\udcac  ::debug::explicit? false\n[Testing and distribution/Lint Python code]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Testing and distribution/Lint Python code]   \ud83d\udcac  ::debug::explicit? true\n[Testing and distribution/Lint Python code]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Testing and distribution/Lint Python code]   \ud83d\udcac  ::debug::explicit? true\n[Testing and distribution/Lint Python code]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Testing and distribution/Lint Python code]   \ud83d\udcac  ::debug::explicit? true\n[Testing and distribution/Lint Python code]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Testing and distribution/Lint Python code]   \ud83d\udcac  ::debug::explicit? true\n[Testing and distribution/Lint Python code]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Testing and distribution/Lint Python code]   \ud83d\udcac  ::debug::explicit? true\n[Testing and distribution/Lint Python code]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Testing and distribution/Lint Python code]   \ud83d\udcac  ::debug::explicit? true\n[Testing and distribution/Lint Python code]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Testing and distribution/Lint Python code]   \ud83d\udcac  ::debug::matched: 3.9.6\n[Testing and distribution/Lint Python code]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[Testing and distribution/Lint Python code]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[Testing and distribution/Lint Python code]   | Successfully set up CPython (3.9.6)\n[Testing and distribution/Lint Python code]   \u2753  ::endgroup::\n[Testing and distribution/Lint Python code]   \ud83d\udea7  ::warning::The runner was not able to contact the cache service. Caching will be skipped\n[Testing and distribution/Lint Python code]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Testing and distribution/Lint Python code]   \u2705  Success - Main actions/setup-python@v4\n[Testing and distribution/Lint Python code]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[Testing and distribution/Lint Python code]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib/pkgconfig\n[Testing and distribution/Lint Python code]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[Testing and distribution/Lint Python code]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[Testing and distribution/Lint Python code]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[Testing and distribution/Lint Python code]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[Testing and distribution/Lint Python code]   \u2699  ::set-output:: python-version=3.9.6\n[Testing and distribution/Lint Python code]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.9.6/x64/bin/python\n[Testing and distribution/Lint Python code]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[Testing and distribution/Lint Python code]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[Testing and distribution/Lint Python code] \u2b50 Run Main Install Python dependencies\n[Testing and distribution/Test Python code]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[Testing and distribution/Lint Python code]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/pipenv-install] user= workdir=\n[Testing and distribution/Test Python code]   \u2757  ::error::getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[Testing and distribution/Test Python code]   \u274c  Failure - Main actions/setup-python@v2\n[Testing and distribution/Test Python code]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[Testing and distribution/Test Python code]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[Testing and distribution/Test Python code]   \u2699  ::set-output:: python-version=3.8.11\n[Testing and distribution/Test Python code]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[Testing and distribution/Test Python code]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[Testing and distribution/Test Python code] exitcode '1': failure\n[Testing and distribution/Lint Python code]   | /var/run/act/workflow/pipenv-install: line 2: pipenv: command not found\n[Testing and distribution/Lint Python code]   \u274c  Failure - Main Install Python dependencies\n[Testing and distribution/Test Python code] \ud83c\udfc1  Job failed\n[Testing and distribution/Lint Python code] exitcode '127': command not found, please refer to https://github.com/nektos/act/issues/107 for more information\n[Testing and distribution/Lint Python code] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'Test Python code' failed\n"
}