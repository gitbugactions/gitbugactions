{
    "repository": "pypa/sampleproject",
    "clone_url": "https://github.com/pypa/sampleproject.git",
    "timestamp": "2023-05-29T15:09:47.042325Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Test/test] \ud83d\ude80  Start image=crawlergpt:latest\n[Test/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pypa-sampleproject] user=0 workdir=\n[Test/test]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v3\n[Test/test] \ud83e\uddea  Matrix: map[platform:ubuntu-latest python:3.7]\n[Test/test] \u2b50 Run Main Checkout\n[Test/test]   \u2705  Success - Main Checkout\n[Test/test] \u2b50 Run Main Set up Python 3.7\n[Test/test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v3/ dst=/var/run/act/actions/actions-setup-python@v3/\n[Test/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v3/] user=0 workdir=\n[Test/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/setup/index.js] user= workdir=\n[Test/test]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[Test/test]   \ud83d\udcac  ::debug::isExplicit: \n[Test/test]   \ud83d\udcac  ::debug::explicit? false\n[Test/test]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Test/test]   \ud83d\udcac  ::debug::explicit? true\n[Test/test]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Test/test]   \ud83d\udcac  ::debug::explicit? true\n[Test/test]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Test/test]   \ud83d\udcac  ::debug::explicit? true\n[Test/test]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Test/test]   \ud83d\udcac  ::debug::explicit? true\n[Test/test]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Test/test]   \ud83d\udcac  ::debug::explicit? true\n[Test/test]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Test/test]   \ud83d\udcac  ::debug::explicit? true\n[Test/test]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Test/test]   \ud83d\udcac  ::debug::matched: 3.7.11\n[Test/test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[Test/test]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[Test/test]   | Successfully setup CPython (3.7.11)\n[Test/test]   \u2753 add-matcher /run/act/actions/actions-setup-python@v3/.github/python.json\n[Test/test]   \u2705  Success - Main Set up Python 3.7\n[Test/test]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[Test/test]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[Test/test]   \u2699  ::set-output:: python-version=3.7.11\n[Test/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[Test/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[Test/test] \u2b50 Run Main Install test dependencies\n[Test/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test/test]   | Collecting tox\n[Test/test]   |   Downloading tox-4.5.2-py3-none-any.whl (148 kB)\n[Test/test]   | Collecting filelock>=3.12\n[Test/test]   |   Downloading filelock-3.12.0-py3-none-any.whl (10 kB)\n[Test/test]   | Collecting platformdirs>=3.5.1\n[Test/test]   |   Downloading platformdirs-3.5.1-py3-none-any.whl (15 kB)\n[Test/test]   | Collecting pyproject-api>=1.5.1\n[Test/test]   |   Downloading pyproject_api-1.5.1-py3-none-any.whl (12 kB)\n[Test/test]   | Collecting typing-extensions>=4.6.2\n[Test/test]   |   Downloading typing_extensions-4.6.2-py3-none-any.whl (31 kB)\n[Test/test]   | Collecting pluggy>=1\n[Test/test]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[Test/test]   | Collecting importlib-metadata>=6.6\n[Test/test]   |   Downloading importlib_metadata-6.6.0-py3-none-any.whl (22 kB)\n[Test/test]   | Collecting virtualenv>=20.23\n[Test/test]   |   Downloading virtualenv-20.23.0-py3-none-any.whl (3.3 MB)\n[Test/test]   | Collecting tomli>=2.0.1\n[Test/test]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[Test/test]   | Collecting packaging>=23.1\n[Test/test]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[Test/test]   | Collecting colorama>=0.4.6\n[Test/test]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[Test/test]   | Collecting cachetools>=5.3\n[Test/test]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[Test/test]   | Collecting chardet>=5.1\n[Test/test]   |   Downloading chardet-5.1.0-py3-none-any.whl (199 kB)\n[Test/test]   | Collecting zipp>=0.5\n[Test/test]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[Test/test]   | Collecting distlib<1,>=0.3.6\n[Test/test]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[Test/test]   | Installing collected packages: zipp, typing-extensions, tomli, platformdirs, packaging, importlib-metadata, filelock, distlib, virtualenv, pyproject-api, pluggy, colorama, chardet, cachetools, tox\n[Test/test]   | Successfully installed cachetools-5.3.1 chardet-5.1.0 colorama-0.4.6 distlib-0.3.6 filelock-3.12.0 importlib-metadata-6.6.0 packaging-23.1 platformdirs-3.5.1 pluggy-1.0.0 pyproject-api-1.5.1 tomli-2.0.1 tox-4.5.2 typing-extensions-4.6.2 virtualenv-20.23.0 zipp-3.15.0\n[Test/test]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[Test/test]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[Test/test]   \u2705  Success - Main Install test dependencies\n[Test/test] \u2b50 Run Main Test\n[Test/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Test/test]   | py: install_deps> python -I -m pip install build 'check-manifest>=0.42' flake8 pytest twine\n[Test/test]   | .pkg: install_requires> python -I -m pip install 'setuptools>=43.0.0' wheel\n[Test/test]   | .pkg: _optional_hooks> python /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pyproject_api/_backend.py True setuptools.build_meta\n[Test/test]   | .pkg: get_requires_for_build_sdist> python /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pyproject_api/_backend.py True setuptools.build_meta\n[Test/test]   | .pkg: freeze> python -m pip freeze --all\n[Test/test]   | .pkg: pip==23.1.2,setuptools==67.7.2,wheel==0.40.0\n[Test/test]   | .pkg: build_sdist> python /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pyproject_api/_backend.py True setuptools.build_meta\n[Test/test]   | py: install_package_deps> python -I -m pip install peppercorn\n[Test/test]   | py: install_package> python -I -m pip install --force-reinstall --no-deps /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pypa-sampleproject/.tox/.tmp/package/1/sampleproject-3.0.0.tar.gz\n[Test/test]   | py: freeze> python -m pip freeze --all\n[Test/test]   | py: bleach==6.0.0,build==0.10.0,certifi==2023.5.7,cffi==1.15.1,charset-normalizer==3.1.0,check-manifest==0.49,cryptography==40.0.2,docutils==0.20.1,exceptiongroup==1.1.1,flake8==5.0.4,idna==3.4,importlib-metadata==4.2.0,iniconfig==2.0.0,jaraco.classes==3.2.3,jeepney==0.8.0,keyring==23.9.3,markdown-it-py==2.2.0,mccabe==0.7.0,mdurl==0.1.2,more-itertools==9.1.0,packaging==23.1,peppercorn==0.6,pip==23.1.2,pkginfo==1.9.6,pluggy==1.0.0,pycodestyle==2.9.1,pycparser==2.21,pyflakes==2.5.0,Pygments==2.15.1,pyproject_hooks==1.0.0,pytest==7.3.1,readme-renderer==37.3,requests==2.31.0,requests-toolbelt==1.0.0,rfc3986==2.0.0,rich==13.3.5,sampleproject @ file:///tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pypa-sampleproject/.tox/.tmp/package/1/sampleproject-3.0.0.tar.gz#sha256=983f8bad9be32b421ba88177430de91d1c947c0975d681ca209da8b03e893bf5,SecretStorage==3.3.3,setuptools==67.7.2,six==1.16.0,tomli==2.0.1,twine==4.0.2,typing_extensions==4.6.2,urllib3==2.0.2,webencodings==0.5.1,wheel==0.40.0,zipp==3.15.0\n[Test/test]   | py: commands[0]> check-manifest --ignore 'tox.ini,tests/**'\n[Test/test]   | lists of files in version control and sdist match\n[Test/test]   | py: commands[1]> python -m build\n[Test/test]   | * Creating venv isolated environment...\n[Test/test]   | * Installing packages in isolated environment... (setuptools>=43.0.0, wheel)\n[Test/test]   | * Getting build dependencies for sdist...\n[Test/test]   | running egg_info\n[Test/test]   | writing src/sampleproject.egg-info/PKG-INFO\n[Test/test]   | writing dependency_links to src/sampleproject.egg-info/dependency_links.txt\n[Test/test]   | writing entry points to src/sampleproject.egg-info/entry_points.txt\n[Test/test]   | writing requirements to src/sampleproject.egg-info/requires.txt\n[Test/test]   | writing top-level names to src/sampleproject.egg-info/top_level.txt\n[Test/test]   | reading manifest file 'src/sampleproject.egg-info/SOURCES.txt'\n[Test/test]   | adding license file 'LICENSE.txt'\n[Test/test]   | writing manifest file 'src/sampleproject.egg-info/SOURCES.txt'\n[Test/test]   | /tmp/build-env-7_jiez0a/lib/python3.7/site-packages/setuptools/config/pyprojecttoml.py:66: _BetaConfiguration: Support for `[tool.setuptools]` in `pyproject.toml` is still *beta*.\n[Test/test]   |   config = read_configuration(filepath, True, ignore_option_errors, dist)\n[Test/test]   | * Building sdist...\n[Test/test]   | running sdist\n[Test/test]   | running egg_info\n[Test/test]   | writing src/sampleproject.egg-info/PKG-INFO\n[Test/test]   | writing dependency_links to src/sampleproject.egg-info/dependency_links.txt\n[Test/test]   | writing entry points to src/sampleproject.egg-info/entry_points.txt\n[Test/test]   | writing requirements to src/sampleproject.egg-info/requires.txt\n[Test/test]   | writing top-level names to src/sampleproject.egg-info/top_level.txt\n[Test/test]   | reading manifest file 'src/sampleproject.egg-info/SOURCES.txt'\n[Test/test]   | adding license file 'LICENSE.txt'\n[Test/test]   | writing manifest file 'src/sampleproject.egg-info/SOURCES.txt'\n[Test/test]   | running check\n[Test/test]   | creating sampleproject-3.0.0\n[Test/test]   | creating sampleproject-3.0.0/src\n[Test/test]   | creating sampleproject-3.0.0/src/sample\n[Test/test]   | creating sampleproject-3.0.0/src/sampleproject.egg-info\n[Test/test]   | creating sampleproject-3.0.0/tests\n[Test/test]   | copying files to sampleproject-3.0.0...\n[Test/test]   | copying LICENSE.txt -> sampleproject-3.0.0\n[Test/test]   | copying README.md -> sampleproject-3.0.0\n[Test/test]   | copying pyproject.toml -> sampleproject-3.0.0\n[Test/test]   | copying src/sample/__init__.py -> sampleproject-3.0.0/src/sample\n[Test/test]   | copying src/sample/package_data.dat -> sampleproject-3.0.0/src/sample\n[Test/test]   | copying src/sample/simple.py -> sampleproject-3.0.0/src/sample\n[Test/test]   | copying src/sampleproject.egg-info/PKG-INFO -> sampleproject-3.0.0/src/sampleproject.egg-info\n[Test/test]   | copying src/sampleproject.egg-info/SOURCES.txt -> sampleproject-3.0.0/src/sampleproject.egg-info\n[Test/test]   | copying src/sampleproject.egg-info/dependency_links.txt -> sampleproject-3.0.0/src/sampleproject.egg-info\n[Test/test]   | copying src/sampleproject.egg-info/entry_points.txt -> sampleproject-3.0.0/src/sampleproject.egg-info\n[Test/test]   | copying src/sampleproject.egg-info/requires.txt -> sampleproject-3.0.0/src/sampleproject.egg-info\n[Test/test]   | copying src/sampleproject.egg-info/top_level.txt -> sampleproject-3.0.0/src/sampleproject.egg-info\n[Test/test]   | copying tests/test_simple.py -> sampleproject-3.0.0/tests\n[Test/test]   | Writing sampleproject-3.0.0/setup.cfg\n[Test/test]   | Creating tar archive\n[Test/test]   | removing 'sampleproject-3.0.0' (and everything under it)\n[Test/test]   | /tmp/build-env-7_jiez0a/lib/python3.7/site-packages/setuptools/config/pyprojecttoml.py:66: _BetaConfiguration: Support for `[tool.setuptools]` in `pyproject.toml` is still *beta*.\n[Test/test]   |   config = read_configuration(filepath, True, ignore_option_errors, dist)\n[Test/test]   | * Building wheel from sdist\n[Test/test]   | * Creating venv isolated environment...\n[Test/test]   | * Installing packages in isolated environment... (setuptools>=43.0.0, wheel)\n[Test/test]   | * Getting build dependencies for wheel...\n[Test/test]   | running egg_info\n[Test/test]   | writing src/sampleproject.egg-info/PKG-INFO\n[Test/test]   | writing dependency_links to src/sampleproject.egg-info/dependency_links.txt\n[Test/test]   | writing entry points to src/sampleproject.egg-info/entry_points.txt\n[Test/test]   | writing requirements to src/sampleproject.egg-info/requires.txt\n[Test/test]   | writing top-level names to src/sampleproject.egg-info/top_level.txt\n[Test/test]   | reading manifest file 'src/sampleproject.egg-info/SOURCES.txt'\n[Test/test]   | adding license file 'LICENSE.txt'\n[Test/test]   | writing manifest file 'src/sampleproject.egg-info/SOURCES.txt'\n[Test/test]   | /tmp/build-env-m0cd277i/lib/python3.7/site-packages/setuptools/config/pyprojecttoml.py:66: _BetaConfiguration: Support for `[tool.setuptools]` in `pyproject.toml` is still *beta*.\n[Test/test]   |   config = read_configuration(filepath, True, ignore_option_errors, dist)\n[Test/test]   | * Installing packages in isolated environment... (wheel)\n[Test/test]   | * Building wheel...\n[Test/test]   | running bdist_wheel\n[Test/test]   | running build\n[Test/test]   | running build_py\n[Test/test]   | creating build\n[Test/test]   | creating build/lib\n[Test/test]   | creating build/lib/sample\n[Test/test]   | copying src/sample/simple.py -> build/lib/sample\n[Test/test]   | copying src/sample/__init__.py -> build/lib/sample\n[Test/test]   | running egg_info\n[Test/test]   | writing src/sampleproject.egg-info/PKG-INFO\n[Test/test]   | writing dependency_links to src/sampleproject.egg-info/dependency_links.txt\n[Test/test]   | writing entry points to src/sampleproject.egg-info/entry_points.txt\n[Test/test]   | writing requirements to src/sampleproject.egg-info/requires.txt\n[Test/test]   | writing top-level names to src/sampleproject.egg-info/top_level.txt\n[Test/test]   | reading manifest file 'src/sampleproject.egg-info/SOURCES.txt'\n[Test/test]   | adding license file 'LICENSE.txt'\n[Test/test]   | writing manifest file 'src/sampleproject.egg-info/SOURCES.txt'\n[Test/test]   | copying src/sample/package_data.dat -> build/lib/sample\n[Test/test]   | installing to build/bdist.linux-x86_64/wheel\n[Test/test]   | running install\n[Test/test]   | running install_lib\n[Test/test]   | creating build/bdist.linux-x86_64\n[Test/test]   | creating build/bdist.linux-x86_64/wheel\n[Test/test]   | creating build/bdist.linux-x86_64/wheel/sample\n[Test/test]   | copying build/lib/sample/package_data.dat -> build/bdist.linux-x86_64/wheel/sample\n[Test/test]   | copying build/lib/sample/simple.py -> build/bdist.linux-x86_64/wheel/sample\n[Test/test]   | copying build/lib/sample/__init__.py -> build/bdist.linux-x86_64/wheel/sample\n[Test/test]   | running install_egg_info\n[Test/test]   | Copying src/sampleproject.egg-info to build/bdist.linux-x86_64/wheel/sampleproject-3.0.0-py3.7.egg-info\n[Test/test]   | running install_scripts\n[Test/test]   | creating build/bdist.linux-x86_64/wheel/sampleproject-3.0.0.dist-info/WHEEL\n[Test/test]   | creating '/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pypa-sampleproject/dist/.tmp-dxdi2mte/sampleproject-3.0.0-py3-none-any.whl' and adding 'build/bdist.linux-x86_64/wheel' to it\n[Test/test]   | adding 'sample/__init__.py'\n[Test/test]   | adding 'sample/package_data.dat'\n[Test/test]   | adding 'sample/simple.py'\n[Test/test]   | adding 'sampleproject-3.0.0.dist-info/LICENSE.txt'\n[Test/test]   | adding 'sampleproject-3.0.0.dist-info/METADATA'\n[Test/test]   | adding 'sampleproject-3.0.0.dist-info/WHEEL'\n[Test/test]   | adding 'sampleproject-3.0.0.dist-info/entry_points.txt'\n[Test/test]   | adding 'sampleproject-3.0.0.dist-info/top_level.txt'\n[Test/test]   | adding 'sampleproject-3.0.0.dist-info/RECORD'\n[Test/test]   | removing build/bdist.linux-x86_64/wheel\n[Test/test]   | /tmp/build-env-m0cd277i/lib/python3.7/site-packages/setuptools/config/pyprojecttoml.py:66: _BetaConfiguration: Support for `[tool.setuptools]` in `pyproject.toml` is still *beta*.\n[Test/test]   |   config = read_configuration(filepath, True, ignore_option_errors, dist)\n[Test/test]   | Successfully built sampleproject-3.0.0.tar.gz and sampleproject-3.0.0-py3-none-any.whl\n[Test/test]   | py: commands[2]> python -m twine check 'dist/*'\n[Test/test]   | Checking dist/sampleproject-3.0.0-py3-none-any.whl: \u001b[32mPASSED\u001b[0m\n[Test/test]   | Checking dist/sampleproject-3.0.0.tar.gz: \u001b[32mPASSED\u001b[0m\n[Test/test]   | py: commands[3]> flake8 .\n[Test/test]   | py: commands[4]> py.test tests\n[Test/test]   | ============================= test session starts ==============================\n[Test/test]   | platform linux -- Python 3.7.11, pytest-7.3.1, pluggy-1.0.0\n[Test/test]   | cachedir: .tox/py/.pytest_cache\n[Test/test]   | rootdir: /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/pypa-sampleproject\n[Test/test]   | collected 1 item\n[Test/test]   | \n[Test/test]   | tests/test_simple.py .                                                   [100%]\n[Test/test]   | \n[Test/test]   | ============================== 1 passed in 0.01s ===============================\n[Test/test]   | .pkg: _exit> python /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages/pyproject_api/_backend.py True setuptools.build_meta\n[Test/test]   |   py: OK (79.10=setup[33.98]+cmd[20.67,22.72,0.68,0.69,0.36] seconds)\n[Test/test]   |   congratulations :) (79.33 seconds)\n[Test/test]   \u2705  Success - Main Test\n[Test/test] \u2b50 Run Post Set up Python 3.7\n[Test/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/cache-save/index.js] user= workdir=\n[Test/test]   \u2705  Success - Post Set up Python 3.7\n[Test/test] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}