{
    "repository": "mfogel/django-timezone-field",
    "clone_url": "https://github.com/mfogel/django-timezone-field.git",
    "timestamp": "2023-05-29T14:26:49.128948Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/Test with py3.7, dj2.2, sqlite] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Lint                          ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Build                         ] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Build                         ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Lint                          ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Build                         ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Lint                          ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Lint                          ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Build                         ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/Build                         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/mfogel-django-timezone-field] user=0 workdir=\n[CI/Lint                          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/mfogel-django-timezone-field] user=0 workdir=\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/mfogel-django-timezone-field] user=0 workdir=\n[CI/Build                         ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[CI/Lint                          ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[CI/Build                         ]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[CI/Lint                          ]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[CI/Build                         ] \u2b50 Run Pre Install Poetry\n[CI/Lint                          ] \u2b50 Run Pre Install Poetry\n[CI/Test with py3.7, dj2.2, sqlite]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[CI/Lint                          ]   \u2705  Success - Pre Install Poetry\n[CI/Build                         ]   \u2705  Success - Pre Install Poetry\n[CI/Test with py3.7, dj2.2, sqlite]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[CI/Test with py3.7, dj2.2, sqlite] \u2b50 Run Pre Install Poetry\n[CI/Test with py3.7, dj2.2, sqlite]   \u2705  Success - Pre Install Poetry\n[CI/Lint                          ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[CI/Build                         ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[CI/Lint                          ] \u2b50 Run Main Git checkout\n[CI/Build                         ] \u2b50 Run Main Git checkout\n[CI/Lint                          ]   \u2705  Success - Main Git checkout\n[CI/Build                         ]   \u2705  Success - Main Git checkout\n[CI/Test with py3.7, dj2.2, sqlite]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[CI/Lint                          ] \u2b50 Run Main Set up Python\n[CI/Test with py3.7, dj2.2, sqlite]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v2\n[CI/Lint                          ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[CI/Build                         ] \u2b50 Run Main Set up Python\n[CI/Build                         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[CI/Lint                          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[CI/Test with py3.7, dj2.2, sqlite] \ud83e\uddea  Matrix: map[db-engine:sqlite django-version:2.2 python-version:3.7]\n[CI/Build                         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[CI/Test with py3.7, dj2.2, sqlite] \u2b50 Run Main Git checkout\n[CI/Test with py3.7, dj2.2, sqlite]   \u2705  Success - Main Git checkout\n[CI/Test with py3.7, dj2.2, sqlite] \u2b50 Run Main Set up Python 3.7\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[CI/Build                         ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[CI/Lint                          ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::isExplicit: \n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::explicit? false\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::explicit? true\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::explicit? true\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::explicit? true\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::explicit? true\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::explicit? true\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::explicit? true\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::evaluating 6 versions\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::matched: 3.7.11\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[CI/Test with py3.7, dj2.2, sqlite]   | Successfully setup CPython (3.7.11)\n[CI/Test with py3.7, dj2.2, sqlite]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[CI/Build                         ]   \ud83d\udcac  ::debug::Semantic version spec of 3.x is 3.x\n[CI/Build                         ]   \ud83d\udcac  ::debug::isExplicit: \n[CI/Build                         ]   \ud83d\udcac  ::debug::explicit? false\n[CI/Build                         ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[CI/Build                         ]   \ud83d\udcac  ::debug::explicit? true\n[CI/Build                         ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[CI/Build                         ]   \ud83d\udcac  ::debug::explicit? true\n[CI/Build                         ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[CI/Build                         ]   \ud83d\udcac  ::debug::explicit? true\n[CI/Build                         ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[CI/Build                         ]   \ud83d\udcac  ::debug::explicit? true\n[CI/Build                         ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[CI/Build                         ]   \ud83d\udcac  ::debug::explicit? true\n[CI/Build                         ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[CI/Build                         ]   \ud83d\udcac  ::debug::explicit? true\n[CI/Build                         ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[CI/Build                         ]   \ud83d\udcac  ::debug::matched: 3.9.6\n[CI/Build                         ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[CI/Build                         ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[CI/Build                         ]   | Successfully setup CPython (3.9.6)\n[CI/Build                         ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[CI/Lint                          ]   \ud83d\udcac  ::debug::Semantic version spec of 3.x is 3.x\n[CI/Lint                          ]   \ud83d\udcac  ::debug::isExplicit: \n[CI/Lint                          ]   \ud83d\udcac  ::debug::explicit? false\n[CI/Lint                          ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[CI/Lint                          ]   \ud83d\udcac  ::debug::explicit? true\n[CI/Lint                          ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[CI/Lint                          ]   \ud83d\udcac  ::debug::explicit? true\n[CI/Lint                          ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[CI/Lint                          ]   \ud83d\udcac  ::debug::explicit? true\n[CI/Lint                          ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[CI/Lint                          ]   \ud83d\udcac  ::debug::explicit? true\n[CI/Lint                          ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[CI/Lint                          ]   \ud83d\udcac  ::debug::explicit? true\n[CI/Lint                          ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[CI/Lint                          ]   \ud83d\udcac  ::debug::explicit? true\n[CI/Lint                          ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[CI/Lint                          ]   \ud83d\udcac  ::debug::matched: 3.9.6\n[CI/Lint                          ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[CI/Lint                          ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[CI/Lint                          ]   | Successfully setup CPython (3.9.6)\n[CI/Lint                          ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[CI/Test with py3.7, dj2.2, sqlite]   \u2705  Success - Main Set up Python 3.7\n[CI/Build                         ]   \u2705  Success - Main Set up Python\n[CI/Lint                          ]   \u2705  Success - Main Set up Python\n[CI/Build                         ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[CI/Build                         ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[CI/Test with py3.7, dj2.2, sqlite]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[CI/Test with py3.7, dj2.2, sqlite]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[CI/Lint                          ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[CI/Lint                          ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[CI/Lint                          ]   \u2699  ::set-output:: python-version=3.9.6\n[CI/Test with py3.7, dj2.2, sqlite]   \u2699  ::set-output:: python-version=3.7.11\n[CI/Build                         ]   \u2699  ::set-output:: python-version=3.9.6\n[CI/Lint                          ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[CI/Lint                          ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[CI/Test with py3.7, dj2.2, sqlite]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[CI/Test with py3.7, dj2.2, sqlite]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[CI/Build                         ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[CI/Build                         ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[CI/Build                         ] \u2b50 Run Main Install Poetry\n[CI/Test with py3.7, dj2.2, sqlite] \u2b50 Run Main Install Poetry\n[CI/Lint                          ] \u2b50 Run Main Install Poetry\n[CI/Lint                          ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[CI/Build                         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[CI/Lint                          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[CI/Build                         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[CI/Build                         ] \u2b50 Run Main Install and configure Poetry\n[CI/Lint                          ] \u2b50 Run Main Install and configure Poetry\n[CI/Test with py3.7, dj2.2, sqlite] \u2b50 Run Main Install and configure Poetry\n[CI/Build                         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[CI/Lint                          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[CI/Test with py3.7, dj2.2, sqlite]   | \n[CI/Test with py3.7, dj2.2, sqlite]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[CI/Test with py3.7, dj2.2, sqlite]   | \n[CI/Test with py3.7, dj2.2, sqlite]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[CI/Test with py3.7, dj2.2, sqlite]   | \n[CI/Build                         ]   | \n[CI/Build                         ]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[CI/Build                         ]   | \n[CI/Build                         ]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[CI/Build                         ]   | \n[CI/Lint                          ]   | \n[CI/Lint                          ]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[CI/Lint                          ]   | \n[CI/Lint                          ]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[CI/Lint                          ]   | \n[CI/Lint                          ]   | Retrieving Poetry metadata\n[CI/Lint                          ]   | \n[CI/Lint                          ]   | # Welcome to Poetry!\n[CI/Lint                          ]   | \n[CI/Lint                          ]   | This will download and install the latest version of Poetry,\n[CI/Lint                          ]   | a dependency and package manager for Python.\n[CI/Lint                          ]   | \n[CI/Lint                          ]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[CI/Lint                          ]   | \n[CI/Lint                          ]   | /home/runneradmin/.local/bin\n[CI/Lint                          ]   | \n[CI/Lint                          ]   | You can uninstall at any time by executing this script with the --uninstall option,\n[CI/Lint                          ]   | and these changes will be reverted.\n[CI/Lint                          ]   | \n[CI/Lint                          ]   | Installing Poetry (1.5.0)\n[CI/Lint                          ]   | Installing Poetry (1.5.0): Creating environment\n[CI/Lint                          ]   | Installing Poetry (1.5.0): Installing Poetry\n[CI/Lint                          ]   | Installing Poetry (1.5.0): Creating script\n[CI/Lint                          ]   | Installing Poetry (1.5.0): Done\n[CI/Lint                          ]   | \n[CI/Lint                          ]   | Poetry (1.5.0) is installed now. Great!\n[CI/Lint                          ]   | \n[CI/Lint                          ]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[CI/Lint                          ]   | environment variable.\n[CI/Lint                          ]   | \n[CI/Lint                          ]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[CI/Lint                          ]   | \n[CI/Lint                          ]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[CI/Lint                          ]   | \n[CI/Lint                          ]   | You can test that everything is set up by executing:\n[CI/Lint                          ]   | \n[CI/Lint                          ]   | `poetry --version`\n[CI/Lint                          ]   | \n[CI/Test with py3.7, dj2.2, sqlite]   | Retrieving Poetry metadata\n[CI/Test with py3.7, dj2.2, sqlite]   | \n[CI/Test with py3.7, dj2.2, sqlite]   | # Welcome to Poetry!\n[CI/Test with py3.7, dj2.2, sqlite]   | \n[CI/Test with py3.7, dj2.2, sqlite]   | This will download and install the latest version of Poetry,\n[CI/Test with py3.7, dj2.2, sqlite]   | a dependency and package manager for Python.\n[CI/Test with py3.7, dj2.2, sqlite]   | \n[CI/Test with py3.7, dj2.2, sqlite]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[CI/Test with py3.7, dj2.2, sqlite]   | \n[CI/Test with py3.7, dj2.2, sqlite]   | /home/runneradmin/.local/bin\n[CI/Test with py3.7, dj2.2, sqlite]   | \n[CI/Test with py3.7, dj2.2, sqlite]   | You can uninstall at any time by executing this script with the --uninstall option,\n[CI/Test with py3.7, dj2.2, sqlite]   | and these changes will be reverted.\n[CI/Test with py3.7, dj2.2, sqlite]   | \n[CI/Test with py3.7, dj2.2, sqlite]   | Installing Poetry (1.5.0)\n[CI/Test with py3.7, dj2.2, sqlite]   | Installing Poetry (1.5.0): Creating environment\n[CI/Test with py3.7, dj2.2, sqlite]   | Installing Poetry (1.5.0): Installing Poetry\n[CI/Test with py3.7, dj2.2, sqlite]   | Installing Poetry (1.5.0): Creating script\n[CI/Test with py3.7, dj2.2, sqlite]   | Installing Poetry (1.5.0): Done\n[CI/Test with py3.7, dj2.2, sqlite]   | \n[CI/Test with py3.7, dj2.2, sqlite]   | Poetry (1.5.0) is installed now. Great!\n[CI/Test with py3.7, dj2.2, sqlite]   | \n[CI/Test with py3.7, dj2.2, sqlite]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[CI/Test with py3.7, dj2.2, sqlite]   | environment variable.\n[CI/Test with py3.7, dj2.2, sqlite]   | \n[CI/Test with py3.7, dj2.2, sqlite]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[CI/Test with py3.7, dj2.2, sqlite]   | \n[CI/Test with py3.7, dj2.2, sqlite]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[CI/Test with py3.7, dj2.2, sqlite]   | \n[CI/Test with py3.7, dj2.2, sqlite]   | You can test that everything is set up by executing:\n[CI/Test with py3.7, dj2.2, sqlite]   | \n[CI/Test with py3.7, dj2.2, sqlite]   | `poetry --version`\n[CI/Test with py3.7, dj2.2, sqlite]   | \n[CI/Lint                          ]   | \n[CI/Lint                          ]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[CI/Lint                          ]   | \n[CI/Lint                          ]   | \u001b[33mDone \u2705\u001b[0m\n[CI/Lint                          ]   | \n[CI/Lint                          ]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[CI/Lint                          ]   \u2705  Success - Main Install and configure Poetry\n[CI/Lint                          ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[CI/Build                         ]   | Retrieving Poetry metadata\n[CI/Build                         ]   | \n[CI/Build                         ]   | # Welcome to Poetry!\n[CI/Build                         ]   | \n[CI/Build                         ]   | This will download and install the latest version of Poetry,\n[CI/Build                         ]   | a dependency and package manager for Python.\n[CI/Build                         ]   | \n[CI/Build                         ]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[CI/Build                         ]   | \n[CI/Build                         ]   | /home/runneradmin/.local/bin\n[CI/Build                         ]   | \n[CI/Build                         ]   | You can uninstall at any time by executing this script with the --uninstall option,\n[CI/Build                         ]   | and these changes will be reverted.\n[CI/Build                         ]   | \n[CI/Build                         ]   | Installing Poetry (1.5.0)\n[CI/Build                         ]   | Installing Poetry (1.5.0): Creating environment\n[CI/Build                         ]   | Installing Poetry (1.5.0): Installing Poetry\n[CI/Build                         ]   | Installing Poetry (1.5.0): Creating script\n[CI/Build                         ]   | Installing Poetry (1.5.0): Done\n[CI/Build                         ]   | \n[CI/Build                         ]   | Poetry (1.5.0) is installed now. Great!\n[CI/Build                         ]   | \n[CI/Build                         ]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[CI/Build                         ]   | environment variable.\n[CI/Build                         ]   | \n[CI/Build                         ]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[CI/Build                         ]   | \n[CI/Build                         ]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[CI/Build                         ]   | \n[CI/Build                         ]   | You can test that everything is set up by executing:\n[CI/Build                         ]   | \n[CI/Build                         ]   | `poetry --version`\n[CI/Build                         ]   | \n[CI/Lint                          ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[CI/Lint                          ]   \u2705  Success - Main Install Poetry\n[CI/Test with py3.7, dj2.2, sqlite]   | \n[CI/Test with py3.7, dj2.2, sqlite]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[CI/Test with py3.7, dj2.2, sqlite]   | \n[CI/Test with py3.7, dj2.2, sqlite]   | \u001b[33mDone \u2705\u001b[0m\n[CI/Test with py3.7, dj2.2, sqlite]   | \n[CI/Test with py3.7, dj2.2, sqlite]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[CI/Test with py3.7, dj2.2, sqlite]   \u2705  Success - Main Install and configure Poetry\n[CI/Lint                          ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[CI/Test with py3.7, dj2.2, sqlite]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[CI/Lint                          ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[CI/Test with py3.7, dj2.2, sqlite]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[CI/Test with py3.7, dj2.2, sqlite]   \u2705  Success - Main Install Poetry\n[CI/Lint                          ] \u2b50 Run Main Load cached venv\n[CI/Test with py3.7, dj2.2, sqlite]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[CI/Lint                          ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[CI/Lint                          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[CI/Test with py3.7, dj2.2, sqlite]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[CI/Test with py3.7, dj2.2, sqlite] \u2b50 Run Main Load cached venv\n[CI/Build                         ]   | \n[CI/Build                         ]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[CI/Build                         ]   | \n[CI/Build                         ]   | \u001b[33mDone \u2705\u001b[0m\n[CI/Build                         ]   | \n[CI/Build                         ]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[CI/Build                         ]   \u2705  Success - Main Install and configure Poetry\n[CI/Build                         ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[CI/Build                         ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[CI/Build                         ]   \u2705  Success - Main Install Poetry\n[CI/Build                         ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[CI/Build                         ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[CI/Build                         ] \u2b50 Run Main Load cached venv\n[CI/Build                         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[CI/Build                         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[CI/Build                         ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[CI/Lint                          ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::Resolved Keys:\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::[\"venv-py3.7-dj2.2-f9b36157cfa067f212687b444791bbec166942951679239599698cff2189a68e\"]\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::Checking zstd --version\n[CI/Lint                          ]   \ud83d\udcac  ::debug::Resolved Keys:\n[CI/Lint                          ]   \ud83d\udcac  ::debug::[\"venv-f9b36157cfa067f212687b444791bbec166942951679239599698cff2189a68e\"]\n[CI/Lint                          ]   \ud83d\udcac  ::debug::Checking zstd --version\n[CI/Build                         ]   \ud83d\udcac  ::debug::Resolved Keys:\n[CI/Build                         ]   \ud83d\udcac  ::debug::[\"venv-f9b36157cfa067f212687b444791bbec166942951679239599698cff2189a68e\"]\n[CI/Build                         ]   \ud83d\udcac  ::debug::Checking zstd --version\n[CI/Lint                          ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[CI/Lint                          ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[CI/Build                         ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[CI/Build                         ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 1 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[CI/Lint                          ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[CI/Build                         ]   \ud83d\udcac  ::debug::getCacheEntry - Attempt 2 of 2 failed with error: Cache Service Url not found, unable to restore cache.\n[CI/Test with py3.7, dj2.2, sqlite]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[CI/Test with py3.7, dj2.2, sqlite]   \u2705  Success - Main Load cached venv\n[CI/Lint                          ]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[CI/Lint                          ]   \u2705  Success - Main Load cached venv\n[CI/Build                         ]   | [warning]getCacheEntry failed: Cache Service Url not found, unable to restore cache.\n[CI/Build                         ]   \u2705  Success - Main Load cached venv\n[CI/Test with py3.7, dj2.2, sqlite]   \u2699  ::set-output:: cache-hit=false\n[CI/Lint                          ]   \u2699  ::set-output:: cache-hit=false\n[CI/Build                         ]   \u2699  ::set-output:: cache-hit=false\n[CI/Build                         ] \u2b50 Run Main Install dependencies\n[CI/Lint                          ] \u2b50 Run Main Install dependencies\n[CI/Test with py3.7, dj2.2, sqlite] \u2b50 Run Main Install dependencies\n[CI/Build                         ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[CI/Lint                          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[CI/Test with py3.7, dj2.2, sqlite]   | Creating virtualenv django-timezone-field in /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/mfogel-django-timezone-field/.venv\n[CI/Build                         ]   | Creating virtualenv django-timezone-field in /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/mfogel-django-timezone-field/.venv\n[CI/Lint                          ]   | Creating virtualenv django-timezone-field in /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/mfogel-django-timezone-field/.venv\n[CI/Build                         ]   | \n[CI/Build                         ]   | failed to build image setuptools because:\n[CI/Build                         ]   | Traceback (most recent call last):\n[CI/Build                         ]   |   File \"/home/runneradmin/.local/venv/lib/python3.9/site-packages/virtualenv/seed/embed/via_app_data/via_app_data.py\", line 57, in _install\n[CI/Build                         ]   |     installer.install(creator.interpreter.version_info)\n[CI/Build                         ]   |   File \"/home/runneradmin/.local/venv/lib/python3.9/site-packages/virtualenv/seed/embed/via_app_data/pip_install/base.py\", line 37, in install\n[CI/Build                         ]   |     self._sync(filename, into)\n[CI/Build                         ]   |   File \"/home/runneradmin/.local/venv/lib/python3.9/site-packages/virtualenv/seed/embed/via_app_data/pip_install/copy.py\", line 13, in _sync\n[CI/Build                         ]   |     copy(src, dst)\n[CI/Build                         ]   |   File \"/home/runneradmin/.local/venv/lib/python3.9/site-packages/virtualenv/util/path/_sync.py\", line 40, in copy\n[CI/Build                         ]   |     method(str(src), str(dest))\n[CI/Build                         ]   |   File \"/home/runneradmin/.local/venv/lib/python3.9/site-packages/virtualenv/util/path/_sync.py\", line 51, in copytree\n[CI/Build                         ]   |     shutil.copy(src_f, dest_f)\n[CI/Build                         ]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/shutil.py\", line 418, in copy\n[CI/Build                         ]   |     copyfile(src, dst, follow_symlinks=follow_symlinks)\n[CI/Build                         ]   |   File \"/opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/shutil.py\", line 264, in copyfile\n[CI/Build                         ]   |     with open(src, 'rb') as fsrc, open(dst, 'wb') as fdst:\n[CI/Build                         ]   | FileNotFoundError: [Errno 2] No such file or directory: '/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/mfogel-django-timezone-field/.venv/lib/python3.9/site-packages/setuptools/config/_validate_pyproject/__init__.py'\n[CI/Build                         ]   | \n[CI/Build                         ]   \u274c  Failure - Main Install dependencies\n[CI/Test with py3.7, dj2.2, sqlite]   | Installing dependencies from lock file\n[CI/Build                         ] exitcode '1': failure\n[CI/Test with py3.7, dj2.2, sqlite]   | \n[CI/Test with py3.7, dj2.2, sqlite]   | Package operations: 35 installs, 0 updates, 0 removals\n[CI/Test with py3.7, dj2.2, sqlite]   | \n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing pyparsing (3.0.7)\n[CI/Build                         ] \u2b50 Run Post Install Poetry\n[CI/Build                         ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[CI/Lint                          ]   | Installing dependencies from lock file\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing asgiref (3.5.0)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing attrs (21.4.0)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing iniconfig (1.1.1)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing lazy-object-proxy (1.7.1)\n[CI/Build                         ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing packaging (21.3)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing pluggy (1.0.0)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing py (1.11.0)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing sqlparse (0.4.2)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing toml (0.10.2)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing tomli (1.2.3)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing typing-extensions (4.0.1)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing wrapt (1.13.3)\n[CI/Test with py3.7, dj2.2, sqlite]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[CI/Test with py3.7, dj2.2, sqlite]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[CI/Lint                          ]   | \n[CI/Lint                          ]   | Package operations: 35 installs, 0 updates, 0 removals\n[CI/Lint                          ]   | \n[CI/Lint                          ]   |   \u2022 Installing pyparsing (3.0.7)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing astroid (2.9.3)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing click (8.0.3)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing coverage (6.3)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing django (4.0.2)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing isort (5.10.1)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing mccabe (0.6.1)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing mypy-extensions (0.4.3)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing pathspec (0.9.0)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing platformdirs (2.4.1)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing pycodestyle (2.8.0)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing pyflakes (2.4.0)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing pytest (6.2.5)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing pytz (2021.3)\n[CI/Lint                          ]   |   \u2022 Installing asgiref (3.5.0)\n[CI/Lint                          ]   |   \u2022 Installing attrs (21.4.0)\n[CI/Lint                          ]   |   \u2022 Installing iniconfig (1.1.1)\n[CI/Lint                          ]   |   \u2022 Installing lazy-object-proxy (1.7.1)\n[CI/Lint                          ]   |   \u2022 Installing packaging (21.3)\n[CI/Lint                          ]   |   \u2022 Installing pluggy (1.0.0)\n[CI/Lint                          ]   |   \u2022 Installing py (1.11.0)\n[CI/Lint                          ]   |   \u2022 Installing sqlparse (0.4.2)\n[CI/Lint                          ]   |   \u2022 Installing toml (0.10.2)\n[CI/Lint                          ]   |   \u2022 Installing tomli (1.2.3)\n[CI/Lint                          ]   |   \u2022 Installing typing-extensions (4.0.1)\n[CI/Lint                          ]   |   \u2022 Installing wrapt (1.13.3)\n[CI/Test with py3.7, dj2.2, sqlite]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[CI/Test with py3.7, dj2.2, sqlite]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[CI/Test with py3.7, dj2.2, sqlite]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[CI/Lint                          ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[CI/Lint                          ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[CI/Lint                          ]   |   \u2022 Installing astroid (2.9.3)\n[CI/Lint                          ]   |   \u2022 Installing click (8.0.3)\n[CI/Lint                          ]   |   \u2022 Installing coverage (6.3)\n[CI/Lint                          ]   |   \u2022 Installing django (4.0.2)\n[CI/Lint                          ]   |   \u2022 Installing mccabe (0.6.1)\n[CI/Lint                          ]   |   \u2022 Installing mypy-extensions (0.4.3)\n[CI/Lint                          ]   |   \u2022 Installing isort (5.10.1)\n[CI/Lint                          ]   |   \u2022 Installing pathspec (0.9.0)\n[CI/Lint                          ]   |   \u2022 Installing platformdirs (2.4.1)\n[CI/Lint                          ]   |   \u2022 Installing pycodestyle (2.8.0)\n[CI/Lint                          ]   |   \u2022 Installing pyflakes (2.4.0)\n[CI/Lint                          ]   |   \u2022 Installing pytest (6.2.5)\n[CI/Lint                          ]   |   \u2022 Installing pytz (2021.3)\n[CI/Lint                          ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[CI/Lint                          ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[CI/Lint                          ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing black (21.12b0)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing djangorestframework (3.13.1)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing flake8 (4.0.1)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing psycopg2-binary (2.9.3)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing pylint (2.12.2)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing pytest-cov (3.0.0)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing pytest-django (4.5.2)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing pytest-lazy-fixture (0.6.3)\n[CI/Test with py3.7, dj2.2, sqlite]   |   \u2022 Installing pytest-pythonpath (0.7.3)\n[CI/Lint                          ]   |   \u2022 Installing black (21.12b0)\n[CI/Lint                          ]   |   \u2022 Installing djangorestframework (3.13.1)\n[CI/Lint                          ]   |   \u2022 Installing flake8 (4.0.1)\n[CI/Lint                          ]   |   \u2022 Installing psycopg2-binary (2.9.3)\n[CI/Lint                          ]   |   \u2022 Installing pylint (2.12.2)\n[CI/Lint                          ]   |   \u2022 Installing pytest-cov (3.0.0)\n[CI/Lint                          ]   |   \u2022 Installing pytest-django (4.5.2)\n[CI/Lint                          ]   |   \u2022 Installing pytest-lazy-fixture (0.6.3)\n[CI/Lint                          ]   |   \u2022 Installing pytest-pythonpath (0.7.3)\n[CI/Test with py3.7, dj2.2, sqlite]   \u2705  Success - Main Install dependencies\n[CI/Test with py3.7, dj2.2, sqlite] \u2b50 Run Main Install django 2.2\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[CI/Lint                          ]   \u2705  Success - Main Install dependencies\n[CI/Lint                          ] \u2b50 Run Main Lint with black\n[CI/Lint                          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[CI/Build                         ]   \u2705  Success - Post Install Poetry\n[CI/Lint                          ]   | All done! \u2728 \ud83c\udf70 \u2728\n[CI/Lint                          ]   | 20 files would be left unchanged.\n[CI/Lint                          ]   \u2705  Success - Main Lint with black\n[CI/Test with py3.7, dj2.2, sqlite]   | Collecting Django~=2.2\n[CI/Test with py3.7, dj2.2, sqlite]   |   Downloading Django-2.2.28-py3-none-any.whl (7.5 MB)\n[CI/Test with py3.7, dj2.2, sqlite]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 7.5/7.5 MB 45.7 MB/s eta 0:00:00\n[CI/Test with py3.7, dj2.2, sqlite]   | Requirement already satisfied: pytz in ./.venv/lib/python3.9/site-packages (from Django~=2.2) (2021.3)\n[CI/Test with py3.7, dj2.2, sqlite]   | Requirement already satisfied: sqlparse>=0.2.2 in ./.venv/lib/python3.9/site-packages (from Django~=2.2) (0.4.2)\n[CI/Test with py3.7, dj2.2, sqlite]   | Installing collected packages: Django\n[CI/Test with py3.7, dj2.2, sqlite]   |   Attempting uninstall: Django\n[CI/Test with py3.7, dj2.2, sqlite]   |     Found existing installation: Django 4.0.2\n[CI/Test with py3.7, dj2.2, sqlite]   |     Uninstalling Django-4.0.2:\n[CI/Lint                          ] \u2b50 Run Main Lint with flake8\n[CI/Test with py3.7, dj2.2, sqlite]   |       Successfully uninstalled Django-4.0.2\n[CI/Lint                          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[CI/Test with py3.7, dj2.2, sqlite]   | Successfully installed Django-2.2.28\n[CI/Test with py3.7, dj2.2, sqlite]   \u2705  Success - Main Install django 2.2\n[CI/Test with py3.7, dj2.2, sqlite] \u2b50 Run Main Test with coverage\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[CI/Build                         ] \ud83c\udfc1  Job failed\n[CI/Lint                          ]   \u2705  Success - Main Lint with flake8\n[CI/Lint                          ] \u2b50 Run Main Lint with isort\n[CI/Lint                          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/7] user= workdir=\n[CI/Test with py3.7, dj2.2, sqlite]   | ImportError while loading conftest '/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/mfogel-django-timezone-field/tests/conftest.py'.\n[CI/Test with py3.7, dj2.2, sqlite]   | tests/conftest.py:6: in <module>\n[CI/Test with py3.7, dj2.2, sqlite]   |     from timezone_field import TimeZoneField\n[CI/Test with py3.7, dj2.2, sqlite]   | timezone_field/__init__.py:1: in <module>\n[CI/Test with py3.7, dj2.2, sqlite]   |     from timezone_field.fields import TimeZoneField\n[CI/Test with py3.7, dj2.2, sqlite]   | timezone_field/fields.py:11: in <module>\n[CI/Test with py3.7, dj2.2, sqlite]   |     class TimeZoneField(models.Field):\n[CI/Test with py3.7, dj2.2, sqlite]   | timezone_field/fields.py:41: in TimeZoneField\n[CI/Test with py3.7, dj2.2, sqlite]   |     default_zoneinfo_tzs = [ZoneInfo(tz) for tz in pytz.common_timezones]\n[CI/Test with py3.7, dj2.2, sqlite]   | timezone_field/fields.py:41: in <listcomp>\n[CI/Test with py3.7, dj2.2, sqlite]   |     default_zoneinfo_tzs = [ZoneInfo(tz) for tz in pytz.common_timezones]\n[CI/Test with py3.7, dj2.2, sqlite]   | /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/zoneinfo/_common.py:24: in load_tzdata\n[CI/Test with py3.7, dj2.2, sqlite]   |     raise ZoneInfoNotFoundError(f\"No time zone found with key {key}\")\n[CI/Test with py3.7, dj2.2, sqlite]   | E   zoneinfo._common.ZoneInfoNotFoundError: 'No time zone found with key Pacific/Kanton'\n[CI/Test with py3.7, dj2.2, sqlite]   \u274c  Failure - Main Test with coverage\n[CI/Test with py3.7, dj2.2, sqlite] exitcode '4': failure\n[CI/Test with py3.7, dj2.2, sqlite] \u2b50 Run Post Install Poetry\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[CI/Test with py3.7, dj2.2, sqlite]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[CI/Test with py3.7, dj2.2, sqlite]   \u2705  Success - Post Install Poetry\n[CI/Lint                          ]   | Skipped 2 files\n[CI/Lint                          ]   \u2705  Success - Main Lint with isort\n[CI/Lint                          ] \u2b50 Run Main Lint with pylint\n[CI/Test with py3.7, dj2.2, sqlite] \ud83c\udfc1  Job failed\n[CI/Lint                          ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/8] user= workdir=\n[CI/Lint                          ]   | ************* Module setup.py\n[CI/Lint                          ]   | setup.py:1:0: F0001: No module named setup.py (fatal)\n[CI/Lint                          ]   | ************* Module tests.test_utils\n[CI/Lint                          ]   | tests/test_utils.py:16:4: E0611: No name 'RemovedInDjango50Warning' in module 'django.utils.deprecation' (no-name-in-module)\n[CI/Lint                          ]   | \n[CI/Lint                          ]   | -----------------------------------\n[CI/Lint                          ]   | Your code has been rated at 9.92/10\n[CI/Lint                          ]   | \n[CI/Lint                          ]   \u274c  Failure - Main Lint with pylint\n[CI/Lint                          ] exitcode '3': failure\n[CI/Lint                          ] \u2b50 Run Post Install Poetry\n[CI/Lint                          ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[CI/Lint                          ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[CI/Lint                          ]   \u2705  Success - Post Install Poetry\n[CI/Lint                          ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'Build' failed\n"
}