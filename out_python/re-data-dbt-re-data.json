{
    "repository": "re-data/dbt-re-data",
    "clone_url": "https://github.com/re-data/dbt-re-data.git",
    "timestamp": "2023-05-29T16:35:21.744011Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Run package tests for all dbs/test-other-dbs  ] \ud83d\ude80  Start image=crawlergpt:latest\n[Run package tests for all dbs/test-postgres   ] \ud83d\ude80  Start image=crawlergpt:latest\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/re-data-dbt-re-data] user=0 workdir=\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/re-data-dbt-re-data] user=0 workdir=\n[Run package tests for all dbs/test-postgres   ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v1\n[Run package tests for all dbs/test-other-dbs  ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v1\n[Run package tests for all dbs/test-postgres   ] \u2b50 Run Main Check out\n[Run package tests for all dbs/test-postgres   ]   \u2705  Success - Main Check out\n[Run package tests for all dbs/test-other-dbs  ]   \u2601  git clone 'https://github.com/rlespinasse/github-slug-action' # ref=v3.x\n[Run package tests for all dbs/test-postgres   ] \u2b50 Run Main actions/setup-python@v1\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v1/ dst=/var/run/act/actions/actions-setup-python@v1/\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v1/] user=0 workdir=\n[Run package tests for all dbs/test-other-dbs  ] \ud83e\uddea  Matrix: map[database:snowflake]\n[Run package tests for all dbs/test-other-dbs  ] \u2b50 Run Main Check out\n[Run package tests for all dbs/test-other-dbs  ]   \u2705  Success - Main Check out\n[Run package tests for all dbs/test-other-dbs  ] \u2b50 Run Main actions/setup-python@v1\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v1/ dst=/var/run/act/actions/actions-setup-python@v1/\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v1/] user=0 workdir=\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v1/dist/index.js] user= workdir=\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v1/dist/index.js] user= workdir=\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udcac  ::debug::Semantic version spec of 3.7.x is 3.7.x\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udcac  ::debug::isExplicit: \n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udcac  ::debug::explicit? false\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udcac  ::debug::explicit? true\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udcac  ::debug::explicit? true\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udcac  ::debug::explicit? true\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udcac  ::debug::explicit? true\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udcac  ::debug::explicit? true\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udcac  ::debug::explicit? true\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udcac  ::debug::matched: 3.7.11\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[Run package tests for all dbs/test-other-dbs  ]   | Successfully setup CPython (3.7.11)\n[Run package tests for all dbs/test-other-dbs  ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v1/.github/python.json\n[Run package tests for all dbs/test-other-dbs  ]   \u2705  Success - Main actions/setup-python@v1\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-output:: python-version=3.7.11\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udcac  ::debug::Semantic version spec of 3.7.x is 3.7.x\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udcac  ::debug::isExplicit: \n[Run package tests for all dbs/test-postgres   ]   \ud83d\udcac  ::debug::explicit? false\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udcac  ::debug::explicit? true\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udcac  ::debug::explicit? true\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udcac  ::debug::explicit? true\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udcac  ::debug::explicit? true\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udcac  ::debug::explicit? true\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udcac  ::debug::explicit? true\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udcac  ::debug::matched: 3.7.11\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[Run package tests for all dbs/test-postgres   ]   | Successfully setup CPython (3.7.11)\n[Run package tests for all dbs/test-postgres   ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v1/.github/python.json\n[Run package tests for all dbs/test-postgres   ]   \u2705  Success - Main actions/setup-python@v1\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[Run package tests for all dbs/test-postgres   ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[Run package tests for all dbs/test-other-dbs  ] \u2b50 Run Main Inject slug/short variables\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/rlespinasse-github-slug-action@v3.x/ dst=/var/run/act/actions/rlespinasse-github-slug-action@v3.x/\n[Run package tests for all dbs/test-postgres   ]   \u2699  ::set-output:: python-version=3.7.11\n[Run package tests for all dbs/test-postgres   ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[Run package tests for all dbs/test-postgres   ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/rlespinasse-github-slug-action@v3.x/] user=0 workdir=\n[Run package tests for all dbs/test-postgres   ] \u2b50 Run Main Install dependencies\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=./integration_tests\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/rlespinasse-github-slug-action@v3.x/dist/index.js] user= workdir=\n[Run package tests for all dbs/test-other-dbs  ]   \u2705  Success - Main Inject slug/short variables\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REPOSITORY_SLUG_URL_CS=re-data-dbt-re-data\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REF_SLUG=main\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REF_SLUG_CS=main\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REF_NAME=main\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REPOSITORY_NAME_PART=dbt-re-data\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REPOSITORY_NAME_PART_SLUG=dbt-re-data\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REPOSITORY_NAME_PART_SLUG_CS=dbt-re-data\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REPOSITORY_SLUG_URL=re-data-dbt-re-data\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REPOSITORY_OWNER_PART_SLUG_URL_CS=re-data\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REF_SLUG_URL=main\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REF_NAME_SLUG=main\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REPOSITORY_OWNER_PART=re-data\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REF_NAME_SLUG_CS=main\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REF_NAME_SLUG_URL_CS=main\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REPOSITORY_OWNER_PART_SLUG_CS=re-data\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REPOSITORY_SLUG_CS=re-data-dbt-re-data\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REPOSITORY_OWNER_PART_SLUG=re-data\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REPOSITORY_OWNER_PART_SLUG_URL=re-data\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REPOSITORY_NAME_PART_SLUG_URL=dbt-re-data\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REPOSITORY_NAME_PART_SLUG_URL_CS=dbt-re-data\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REF_SLUG_URL_CS=main\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_SHA_SHORT=1117254e\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REPOSITORY_SLUG=re-data-dbt-re-data\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: GITHUB_REF_NAME_SLUG_URL=main\n[Run package tests for all dbs/test-other-dbs  ] \u2b50 Run Main Set the DQ_SCHEMA environment variable\n[Run package tests for all dbs/test-postgres   ]   | Collecting pytest==6.2.5\n[Run package tests for all dbs/test-postgres   ]   |   Downloading pytest-6.2.5-py3-none-any.whl (280 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting pyyaml==6.0\n[Run package tests for all dbs/test-postgres   ]   |   Downloading PyYAML-6.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (596 kB)\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3.sh] user= workdir=\n[Run package tests for all dbs/test-postgres   ]   | Collecting dbt-core==1.4.0\n[Run package tests for all dbs/test-postgres   ]   |   Downloading dbt_core-1.4.0-py3-none-any.whl (922 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting dbt-postgres==1.4.0\n[Run package tests for all dbs/test-postgres   ]   |   Downloading dbt_postgres-1.4.0-py3-none-any.whl (17 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting attrs>=19.2.0\n[Run package tests for all dbs/test-postgres   ]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting packaging\n[Run package tests for all dbs/test-postgres   ]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting pluggy<2.0,>=0.12\n[Run package tests for all dbs/test-postgres   ]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting py>=1.8.2\n[Run package tests for all dbs/test-postgres   ]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting iniconfig\n[Run package tests for all dbs/test-postgres   ]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting toml\n[Run package tests for all dbs/test-postgres   ]   |   Downloading toml-0.10.2-py2.py3-none-any.whl (16 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting importlib-metadata>=0.12\n[Run package tests for all dbs/test-postgres   ]   |   Downloading importlib_metadata-6.6.0-py3-none-any.whl (22 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting idna<4,>=2.5\n[Run package tests for all dbs/test-postgres   ]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting minimal-snowplow-tracker==0.0.2\n[Run package tests for all dbs/test-postgres   ]   |   Downloading minimal-snowplow-tracker-0.0.2.tar.gz (12 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting dbt-extractor~=0.4.1\n[Run package tests for all dbs/test-postgres   ]   |   Downloading dbt_extractor-0.4.1-cp36-abi3-manylinux_2_5_x86_64.manylinux1_x86_64.whl (1.1 MB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting betterproto==1.2.5\n[Run package tests for all dbs/test-postgres   ]   |   Downloading betterproto-1.2.5.tar.gz (26 kB)\n[Run package tests for all dbs/test-postgres   ]   |   Installing build dependencies: started\n[Run package tests for all dbs/test-other-dbs  ]   \u2705  Success - Main Set the DQ_SCHEMA environment variable\n[Run package tests for all dbs/test-other-dbs  ]   \u2699  ::set-env:: DQ_SCHEMA=dq_main\n[Run package tests for all dbs/test-postgres   ]   |   Installing build dependencies: finished with status 'done'\n[Run package tests for all dbs/test-postgres   ]   |   Getting requirements to build wheel: started\n[Run package tests for all dbs/test-postgres   ]   |   Getting requirements to build wheel: finished with status 'done'\n[Run package tests for all dbs/test-postgres   ]   |     Preparing wheel metadata: started\n[Run package tests for all dbs/test-other-dbs  ] \u2b50 Run Main Print DQ_SCHEMA\n[Run package tests for all dbs/test-postgres   ]   |     Preparing wheel metadata: finished with status 'done'\n[Run package tests for all dbs/test-postgres   ]   | Collecting werkzeug<3,>=1\n[Run package tests for all dbs/test-postgres   ]   |   Downloading Werkzeug-2.2.3-py3-none-any.whl (233 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting mashumaro[msgpack]==3.3.1\n[Run package tests for all dbs/test-postgres   ]   |   Downloading mashumaro-3.3.1-py3-none-any.whl (86 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting sqlparse<0.5,>=0.2.3\n[Run package tests for all dbs/test-postgres   ]   |   Downloading sqlparse-0.4.4-py3-none-any.whl (41 kB)\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Run package tests for all dbs/test-postgres   ]   | Collecting networkx<2.8.1,>=2.3\n[Run package tests for all dbs/test-postgres   ]   |   Downloading networkx-2.6.3-py3-none-any.whl (1.9 MB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting colorama<0.4.7,>=0.3.9\n[Run package tests for all dbs/test-postgres   ]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting hologram<=0.0.15,>=0.0.14\n[Run package tests for all dbs/test-postgres   ]   |   Downloading hologram-0.0.15-py3-none-any.whl (11 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting click<9,>=7.0\n[Run package tests for all dbs/test-postgres   ]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting cffi<2.0.0,>=1.9\n[Run package tests for all dbs/test-postgres   ]   |   Downloading cffi-1.15.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (427 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting isodate<0.7,>=0.6\n[Run package tests for all dbs/test-postgres   ]   |   Downloading isodate-0.6.1-py2.py3-none-any.whl (41 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting typing-extensions>=3.7.4\n[Run package tests for all dbs/test-postgres   ]   |   Downloading typing_extensions-4.6.2-py3-none-any.whl (31 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting Jinja2==3.1.2\n[Run package tests for all dbs/test-postgres   ]   |   Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting requests<3.0.0\n[Run package tests for all dbs/test-postgres   ]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting pathspec<0.11,>=0.9\n[Run package tests for all dbs/test-postgres   ]   |   Downloading pathspec-0.10.3-py3-none-any.whl (29 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting agate<1.7.1,>=1.6\n[Run package tests for all dbs/test-postgres   ]   |   Downloading agate-1.7.0-py2.py3-none-any.whl (97 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting packaging\n[Run package tests for all dbs/test-postgres   ]   |   Downloading packaging-21.3-py3-none-any.whl (40 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting logbook<1.6,>=1.5\n[Run package tests for all dbs/test-postgres   ]   |   Downloading Logbook-1.5.3.tar.gz (85 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting psycopg2-binary~=2.8\n[Run package tests for all dbs/test-postgres   ]   |   Downloading psycopg2_binary-2.9.6-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting grpclib\n[Run package tests for all dbs/test-postgres   ]   |   Downloading grpclib-0.4.4.tar.gz (62 kB)\n[Run package tests for all dbs/test-postgres   ]   |   Installing build dependencies: started\n[Run package tests for all dbs/test-other-dbs  ]   | dq_main\n[Run package tests for all dbs/test-other-dbs  ]   \u2705  Success - Main Print DQ_SCHEMA\n[Run package tests for all dbs/test-other-dbs  ] \u2b50 Run Main Install dependencies\n[Run package tests for all dbs/test-postgres   ]   |   Installing build dependencies: finished with status 'done'\n[Run package tests for all dbs/test-postgres   ]   |   Getting requirements to build wheel: started\n[Run package tests for all dbs/test-postgres   ]   |   Getting requirements to build wheel: finished with status 'done'\n[Run package tests for all dbs/test-postgres   ]   |     Preparing wheel metadata: started\n[Run package tests for all dbs/test-postgres   ]   |     Preparing wheel metadata: finished with status 'done'\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=./integration_tests\n[Run package tests for all dbs/test-postgres   ]   | Collecting stringcase\n[Run package tests for all dbs/test-postgres   ]   |   Downloading stringcase-1.2.0.tar.gz (3.0 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting MarkupSafe>=2.0\n[Run package tests for all dbs/test-postgres   ]   |   Downloading MarkupSafe-2.1.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting msgpack>=0.5.6\n[Run package tests for all dbs/test-postgres   ]   |   Downloading msgpack-1.0.5-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (299 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting six<2.0,>=1.9.0\n[Run package tests for all dbs/test-postgres   ]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting python-slugify>=1.2.1\n[Run package tests for all dbs/test-postgres   ]   |   Downloading python_slugify-8.0.1-py2.py3-none-any.whl (9.7 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting parsedatetime!=2.5,!=2.6,>=2.1\n[Run package tests for all dbs/test-postgres   ]   |   Downloading parsedatetime-2.4.tar.gz (58 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting leather>=0.3.2\n[Run package tests for all dbs/test-postgres   ]   |   Downloading leather-0.3.4-py2.py3-none-any.whl (31 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting Babel>=2.0\n[Run package tests for all dbs/test-postgres   ]   |   Downloading Babel-2.12.1-py3-none-any.whl (10.1 MB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting pytimeparse>=1.1.5\n[Run package tests for all dbs/test-postgres   ]   |   Downloading pytimeparse-1.1.8-py2.py3-none-any.whl (10.0 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting pytz>=2015.7\n[Run package tests for all dbs/test-postgres   ]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting pycparser\n[Run package tests for all dbs/test-postgres   ]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting jsonschema<4.0,>=3.0\n[Run package tests for all dbs/test-postgres   ]   |   Downloading jsonschema-3.2.0-py2.py3-none-any.whl (56 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting python-dateutil<2.9,>=2.8\n[Run package tests for all dbs/test-postgres   ]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting zipp>=0.5\n[Run package tests for all dbs/test-postgres   ]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting pyrsistent>=0.14.0\n[Run package tests for all dbs/test-postgres   ]   |   Downloading pyrsistent-0.19.3-py3-none-any.whl (57 kB)\n[Run package tests for all dbs/test-postgres   ]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from jsonschema<4.0,>=3.0->hologram<=0.0.15,>=0.0.14->dbt-core==1.4.0->-r requirements.txt (line 3)) (47.1.0)\n[Run package tests for all dbs/test-postgres   ]   | Collecting pyparsing!=3.0.5,>=2.0.2\n[Run package tests for all dbs/test-postgres   ]   |   Downloading pyparsing-3.0.9-py3-none-any.whl (98 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting future\n[Run package tests for all dbs/test-postgres   ]   |   Downloading future-0.18.3.tar.gz (840 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting text-unidecode>=1.3\n[Run package tests for all dbs/test-postgres   ]   |   Downloading text_unidecode-1.3-py2.py3-none-any.whl (78 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting urllib3<3,>=1.21.1\n[Run package tests for all dbs/test-postgres   ]   |   Downloading urllib3-2.0.2-py3-none-any.whl (123 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting charset-normalizer<4,>=2\n[Run package tests for all dbs/test-postgres   ]   |   Downloading charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting certifi>=2017.4.17\n[Run package tests for all dbs/test-postgres   ]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting multidict\n[Run package tests for all dbs/test-postgres   ]   |   Downloading multidict-6.0.4-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (94 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting h2<5,>=3.1.0\n[Run package tests for all dbs/test-postgres   ]   |   Downloading h2-4.1.0-py3-none-any.whl (57 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting hyperframe<7,>=6.0\n[Run package tests for all dbs/test-postgres   ]   |   Downloading hyperframe-6.0.1-py3-none-any.whl (12 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting pytest==6.2.5\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading pytest-6.2.5-py3-none-any.whl (280 kB)\n[Run package tests for all dbs/test-postgres   ]   | Collecting hpack<5,>=4.0\n[Run package tests for all dbs/test-postgres   ]   |   Downloading hpack-4.0.0-py3-none-any.whl (32 kB)\n[Run package tests for all dbs/test-postgres   ]   | Using legacy 'setup.py install' for minimal-snowplow-tracker, since package 'wheel' is not installed.\n[Run package tests for all dbs/test-postgres   ]   | Using legacy 'setup.py install' for logbook, since package 'wheel' is not installed.\n[Run package tests for all dbs/test-postgres   ]   | Using legacy 'setup.py install' for parsedatetime, since package 'wheel' is not installed.\n[Run package tests for all dbs/test-postgres   ]   | Using legacy 'setup.py install' for future, since package 'wheel' is not installed.\n[Run package tests for all dbs/test-postgres   ]   | Using legacy 'setup.py install' for stringcase, since package 'wheel' is not installed.\n[Run package tests for all dbs/test-postgres   ]   | Building wheels for collected packages: betterproto, grpclib\n[Run package tests for all dbs/test-postgres   ]   |   Building wheel for betterproto (PEP 517): started\n[Run package tests for all dbs/test-postgres   ]   |   Building wheel for betterproto (PEP 517): finished with status 'done'\n[Run package tests for all dbs/test-postgres   ]   |   Created wheel for betterproto: filename=betterproto-1.2.5-py3-none-any.whl size=21998 sha256=67727dfd47a68b613b8b51ca665ebe343cede42c1c6a6f1d45527f2a88f9ade9\n[Run package tests for all dbs/test-postgres   ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/d5/d7/46/97b7ec73d54fb8fc70775837af159e34b4965eda3481c7e659\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting pyyaml==6.0\n[Run package tests for all dbs/test-postgres   ]   |   Building wheel for grpclib (PEP 517): started\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading PyYAML-6.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (596 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting dbt-core==1.4.0\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading dbt_core-1.4.0-py3-none-any.whl (922 kB)\n[Run package tests for all dbs/test-postgres   ]   |   Building wheel for grpclib (PEP 517): finished with status 'done'\n[Run package tests for all dbs/test-postgres   ]   |   Created wheel for grpclib: filename=grpclib-0.4.4-py3-none-any.whl size=77136 sha256=8edc765167d2018f72f718b2229a2f6a53843045f29db70a37da3cbc6d3f5a79\n[Run package tests for all dbs/test-postgres   ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/64/22/ad/0d7c4059a15a9108a85d1ce827b396b17d41624e8a54553fd0\n[Run package tests for all dbs/test-postgres   ]   | Successfully built betterproto grpclib\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting dbt-postgres==1.4.0\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading dbt_postgres-1.4.0-py3-none-any.whl (17 kB)\n[Run package tests for all dbs/test-postgres   ]   | Installing collected packages: zipp, typing-extensions, importlib-metadata, hyperframe, hpack, urllib3, text-unidecode, six, pytz, pyrsistent, multidict, idna, h2, future, charset-normalizer, certifi, attrs, stringcase, requests, pytimeparse, python-slugify, python-dateutil, pyparsing, pycparser, parsedatetime, msgpack, mashumaro, MarkupSafe, leather, jsonschema, isodate, grpclib, Babel, werkzeug, sqlparse, pyyaml, pathspec, packaging, networkx, minimal-snowplow-tracker, logbook, Jinja2, hologram, dbt-extractor, colorama, click, cffi, betterproto, agate, toml, py, psycopg2-binary, pluggy, iniconfig, dbt-core, pytest, dbt-postgres\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting toml\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading toml-0.10.2-py2.py3-none-any.whl (16 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting pluggy<2.0,>=0.12\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting importlib-metadata>=0.12\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading importlib_metadata-6.6.0-py3-none-any.whl (22 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting iniconfig\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting py>=1.8.2\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting attrs>=19.2.0\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting packaging\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting idna<4,>=2.5\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting colorama<0.4.7,>=0.3.9\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[Run package tests for all dbs/test-postgres   ]   |     Running setup.py install for future: started\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting cffi<2.0.0,>=1.9\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading cffi-1.15.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (427 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting isodate<0.7,>=0.6\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading isodate-0.6.1-py2.py3-none-any.whl (41 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting requests<3.0.0\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting betterproto==1.2.5\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading betterproto-1.2.5.tar.gz (26 kB)\n[Run package tests for all dbs/test-postgres   ]   |     Running setup.py install for future: finished with status 'done'\n[Run package tests for all dbs/test-other-dbs  ]   |   Installing build dependencies: started\n[Run package tests for all dbs/test-postgres   ]   |     Running setup.py install for stringcase: started\n[Run package tests for all dbs/test-postgres   ]   |     Running setup.py install for stringcase: finished with status 'done'\n[Run package tests for all dbs/test-postgres   ]   |     Running setup.py install for parsedatetime: started\n[Run package tests for all dbs/test-postgres   ]   |     Running setup.py install for parsedatetime: finished with status 'done'\n[Run package tests for all dbs/test-other-dbs  ]   |   Installing build dependencies: finished with status 'done'\n[Run package tests for all dbs/test-other-dbs  ]   |   Getting requirements to build wheel: started\n[Run package tests for all dbs/test-other-dbs  ]   |   Getting requirements to build wheel: finished with status 'done'\n[Run package tests for all dbs/test-other-dbs  ]   |     Preparing wheel metadata: started\n[Run package tests for all dbs/test-other-dbs  ]   |     Preparing wheel metadata: finished with status 'done'\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting sqlparse<0.5,>=0.2.3\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading sqlparse-0.4.4-py3-none-any.whl (41 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting dbt-extractor~=0.4.1\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading dbt_extractor-0.4.1-cp36-abi3-manylinux_2_5_x86_64.manylinux1_x86_64.whl (1.1 MB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting logbook<1.6,>=1.5\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading Logbook-1.5.3.tar.gz (85 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting packaging\n[Run package tests for all dbs/test-postgres   ]   |     Running setup.py install for minimal-snowplow-tracker: started\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading packaging-21.3-py3-none-any.whl (40 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting agate<1.7.1,>=1.6\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading agate-1.7.0-py2.py3-none-any.whl (97 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting typing-extensions>=3.7.4\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading typing_extensions-4.6.2-py3-none-any.whl (31 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting hologram<=0.0.15,>=0.0.14\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading hologram-0.0.15-py3-none-any.whl (11 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting minimal-snowplow-tracker==0.0.2\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading minimal-snowplow-tracker-0.0.2.tar.gz (12 kB)\n[Run package tests for all dbs/test-postgres   ]   |     Running setup.py install for minimal-snowplow-tracker: finished with status 'done'\n[Run package tests for all dbs/test-postgres   ]   |     Running setup.py install for logbook: started\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting werkzeug<3,>=1\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading Werkzeug-2.2.3-py3-none-any.whl (233 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting pathspec<0.11,>=0.9\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading pathspec-0.10.3-py3-none-any.whl (29 kB)\n[Run package tests for all dbs/test-postgres   ]   |     Running setup.py install for logbook: finished with status 'done'\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting Jinja2==3.1.2\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting mashumaro[msgpack]==3.3.1\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading mashumaro-3.3.1-py3-none-any.whl (86 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting networkx<2.8.1,>=2.3\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading networkx-2.6.3-py3-none-any.whl (1.9 MB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting click<9,>=7.0\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting psycopg2-binary~=2.8\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading psycopg2_binary-2.9.6-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting grpclib\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading grpclib-0.4.4.tar.gz (62 kB)\n[Run package tests for all dbs/test-other-dbs  ]   |   Installing build dependencies: started\n[Run package tests for all dbs/test-postgres   ]   | Successfully installed Babel-2.12.1 Jinja2-3.1.2 MarkupSafe-2.1.2 agate-1.7.0 attrs-23.1.0 betterproto-1.2.5 certifi-2023.5.7 cffi-1.15.1 charset-normalizer-3.1.0 click-8.1.3 colorama-0.4.6 dbt-core-1.4.0 dbt-extractor-0.4.1 dbt-postgres-1.4.0 future-0.18.3 grpclib-0.4.4 h2-4.1.0 hologram-0.0.15 hpack-4.0.0 hyperframe-6.0.1 idna-3.4 importlib-metadata-6.6.0 iniconfig-2.0.0 isodate-0.6.1 jsonschema-3.2.0 leather-0.3.4 logbook-1.5.3 mashumaro-3.3.1 minimal-snowplow-tracker-0.0.2 msgpack-1.0.5 multidict-6.0.4 networkx-2.6.3 packaging-21.3 parsedatetime-2.4 pathspec-0.10.3 pluggy-1.0.0 psycopg2-binary-2.9.6 py-1.11.0 pycparser-2.21 pyparsing-3.0.9 pyrsistent-0.19.3 pytest-6.2.5 python-dateutil-2.8.2 python-slugify-8.0.1 pytimeparse-1.1.8 pytz-2023.3 pyyaml-6.0 requests-2.31.0 six-1.16.0 sqlparse-0.4.4 stringcase-1.2.0 text-unidecode-1.3 toml-0.10.2 typing-extensions-4.6.2 urllib3-2.0.2 werkzeug-2.2.3 zipp-3.15.0\n[Run package tests for all dbs/test-postgres   ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[Run package tests for all dbs/test-postgres   ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[Run package tests for all dbs/test-other-dbs  ]   |   Installing build dependencies: finished with status 'done'\n[Run package tests for all dbs/test-other-dbs  ]   |   Getting requirements to build wheel: started\n[Run package tests for all dbs/test-other-dbs  ]   |   Getting requirements to build wheel: finished with status 'done'\n[Run package tests for all dbs/test-other-dbs  ]   |     Preparing wheel metadata: started\n[Run package tests for all dbs/test-other-dbs  ]   |     Preparing wheel metadata: finished with status 'done'\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting stringcase\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading stringcase-1.2.0.tar.gz (3.0 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting MarkupSafe>=2.0\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading MarkupSafe-2.1.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting msgpack>=0.5.6\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading msgpack-1.0.5-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (299 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting six<2.0,>=1.9.0\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting Babel>=2.0\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading Babel-2.12.1-py3-none-any.whl (10.1 MB)\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:36:46  Running with dbt=1.4.0\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:36:46  Installing ../\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:36:46    Installed from <local @ ../>\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:36:46  Installing dbt-labs/dbt_utils\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:36:46    Installed from version 1.0.0\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:36:46    Updated version available: 1.1.0\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:36:46  \n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:36:46  Updates available for packages: ['dbt-labs/dbt_utils']                 \n[Run package tests for all dbs/test-postgres   ]   | Update your versions in packages.yml, then run dbt deps\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting leather>=0.3.2\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading leather-0.3.4-py2.py3-none-any.whl (31 kB)\n[Run package tests for all dbs/test-postgres   ]   \u2705  Success - Main Install dependencies\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting python-slugify>=1.2.1\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading python_slugify-8.0.1-py2.py3-none-any.whl (9.7 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting parsedatetime!=2.5,!=2.6,>=2.1\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading parsedatetime-2.4.tar.gz (58 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting pytimeparse>=1.1.5\n[Run package tests for all dbs/test-postgres   ] \u2b50 Run Main Test DB\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading pytimeparse-1.1.8-py2.py3-none-any.whl (10.0 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting pytz>=2015.7\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[Run package tests for all dbs/test-postgres   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=./integration_tests/python_tests\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting pycparser\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting python-dateutil<2.9,>=2.8\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting jsonschema<4.0,>=3.0\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading jsonschema-3.2.0-py2.py3-none-any.whl (56 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting zipp>=0.5\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from jsonschema<4.0,>=3.0->hologram<=0.0.15,>=0.0.14->dbt-core==1.4.0->-r requirements.txt (line 3)) (47.1.0)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting pyrsistent>=0.14.0\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading pyrsistent-0.19.3-py3-none-any.whl (57 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting pyparsing!=3.0.5,>=2.0.2\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading pyparsing-3.0.9-py3-none-any.whl (98 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting future\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading future-0.18.3.tar.gz (840 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting text-unidecode>=1.3\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading text_unidecode-1.3-py2.py3-none-any.whl (78 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting certifi>=2017.4.17\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting urllib3<3,>=1.21.1\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading urllib3-2.0.2-py3-none-any.whl (123 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting charset-normalizer<4,>=2\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting h2<5,>=3.1.0\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading h2-4.1.0-py3-none-any.whl (57 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting multidict\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading multidict-6.0.4-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (94 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting hyperframe<7,>=6.0\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading hyperframe-6.0.1-py3-none-any.whl (12 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting hpack<5,>=4.0\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading hpack-4.0.0-py3-none-any.whl (32 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Using legacy 'setup.py install' for minimal-snowplow-tracker, since package 'wheel' is not installed.\n[Run package tests for all dbs/test-other-dbs  ]   | Using legacy 'setup.py install' for logbook, since package 'wheel' is not installed.\n[Run package tests for all dbs/test-other-dbs  ]   | Using legacy 'setup.py install' for parsedatetime, since package 'wheel' is not installed.\n[Run package tests for all dbs/test-other-dbs  ]   | Using legacy 'setup.py install' for future, since package 'wheel' is not installed.\n[Run package tests for all dbs/test-other-dbs  ]   | Using legacy 'setup.py install' for stringcase, since package 'wheel' is not installed.\n[Run package tests for all dbs/test-other-dbs  ]   | Building wheels for collected packages: betterproto, grpclib\n[Run package tests for all dbs/test-other-dbs  ]   |   Building wheel for betterproto (PEP 517): started\n[Run package tests for all dbs/test-other-dbs  ]   |   Building wheel for betterproto (PEP 517): finished with status 'done'\n[Run package tests for all dbs/test-other-dbs  ]   |   Created wheel for betterproto: filename=betterproto-1.2.5-py3-none-any.whl size=21998 sha256=4b319196a0941ceaa1bf6c33b6d8a2222905226855dda510320452729cdc2792\n[Run package tests for all dbs/test-other-dbs  ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/d5/d7/46/97b7ec73d54fb8fc70775837af159e34b4965eda3481c7e659\n[Run package tests for all dbs/test-other-dbs  ]   |   Building wheel for grpclib (PEP 517): started\n[Run package tests for all dbs/test-postgres   ]   | ============================= test session starts ==============================\n[Run package tests for all dbs/test-postgres   ]   | platform linux -- Python 3.7.11, pytest-6.2.5, py-1.11.0, pluggy-1.0.0\n[Run package tests for all dbs/test-postgres   ]   | rootdir: /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/re-data-dbt-re-data/integration_tests, configfile: pytest.ini\n[Run package tests for all dbs/test-postgres   ]   | collected 6 items\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-other-dbs  ]   |   Building wheel for grpclib (PEP 517): finished with status 'done'\n[Run package tests for all dbs/test-other-dbs  ]   |   Created wheel for grpclib: filename=grpclib-0.4.4-py3-none-any.whl size=77136 sha256=9d1b9371e0e1ccd8e0f919b6960afcf191eca46386c8d927af2cdb0a2666a3df\n[Run package tests for all dbs/test-other-dbs  ]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/64/22/ad/0d7c4059a15a9108a85d1ce827b396b17d41624e8a54553fd0\n[Run package tests for all dbs/test-other-dbs  ]   | Successfully built betterproto grpclib\n[Run package tests for all dbs/test-other-dbs  ]   | Installing collected packages: zipp, typing-extensions, importlib-metadata, hyperframe, hpack, urllib3, text-unidecode, six, pytz, pyrsistent, multidict, idna, h2, future, charset-normalizer, certifi, attrs, stringcase, requests, pytimeparse, python-slugify, python-dateutil, pyparsing, pycparser, parsedatetime, msgpack, mashumaro, MarkupSafe, leather, jsonschema, isodate, grpclib, Babel, werkzeug, sqlparse, pyyaml, pathspec, packaging, networkx, minimal-snowplow-tracker, logbook, Jinja2, hologram, dbt-extractor, colorama, click, cffi, betterproto, agate, toml, py, psycopg2-binary, pluggy, iniconfig, dbt-core, pytest, dbt-postgres\n[Run package tests for all dbs/test-other-dbs  ]   |     Running setup.py install for future: started\n[Run package tests for all dbs/test-other-dbs  ]   |     Running setup.py install for future: finished with status 'done'\n[Run package tests for all dbs/test-other-dbs  ]   |     Running setup.py install for stringcase: started\n[Run package tests for all dbs/test-other-dbs  ]   |     Running setup.py install for stringcase: finished with status 'done'\n[Run package tests for all dbs/test-other-dbs  ]   |     Running setup.py install for parsedatetime: started\n[Run package tests for all dbs/test-other-dbs  ]   |     Running setup.py install for parsedatetime: finished with status 'done'\n[Run package tests for all dbs/test-other-dbs  ]   |     Running setup.py install for minimal-snowplow-tracker: started\n[Run package tests for all dbs/test-postgres   ]   | test_cleaners.py \u001b[0m16:36:55  Running with dbt=1.4.0\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:36:55  Unable to do partial parsing because saved manifest not found. Starting full parse.\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:36:59  Found 41 models, 31 tests, 0 snapshots, 0 analyses, 675 macros, 1 operation, 27 seed files, 1 source, 0 exposures, 0 metrics\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:36:59  \n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:36:59  \n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:36:59  Finished running  in 0 hours 0 minutes and 0.03 seconds (0.03s).\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:36:59  Encountered an error:\n[Run package tests for all dbs/test-postgres   ]   | Database Error\n[Run package tests for all dbs/test-postgres   ]   |   connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[Run package tests for all dbs/test-postgres   ]   |   \tIs the server running on that host and accepting TCP/IP connections?\n[Run package tests for all dbs/test-postgres   ]   |   connection to server at \"localhost\" (::1), port 5432 failed: Cannot assign requested address\n[Run package tests for all dbs/test-postgres   ]   |   \tIs the server running on that host and accepting TCP/IP connections?\n[Run package tests for all dbs/test-postgres   ]   |   \n[Run package tests for all dbs/test-other-dbs  ]   |     Running setup.py install for minimal-snowplow-tracker: finished with status 'done'\n[Run package tests for all dbs/test-other-dbs  ]   |     Running setup.py install for logbook: started\n[Run package tests for all dbs/test-postgres   ]   | Running setup and tests for postgres\n[Run package tests for all dbs/test-postgres   ]   | F\n[Run package tests for all dbs/test-other-dbs  ]   |     Running setup.py install for logbook: finished with status 'done'\n[Run package tests for all dbs/test-other-dbs  ]   | Successfully installed Babel-2.12.1 Jinja2-3.1.2 MarkupSafe-2.1.2 agate-1.7.0 attrs-23.1.0 betterproto-1.2.5 certifi-2023.5.7 cffi-1.15.1 charset-normalizer-3.1.0 click-8.1.3 colorama-0.4.6 dbt-core-1.4.0 dbt-extractor-0.4.1 dbt-postgres-1.4.0 future-0.18.3 grpclib-0.4.4 h2-4.1.0 hologram-0.0.15 hpack-4.0.0 hyperframe-6.0.1 idna-3.4 importlib-metadata-6.6.0 iniconfig-2.0.0 isodate-0.6.1 jsonschema-3.2.0 leather-0.3.4 logbook-1.5.3 mashumaro-3.3.1 minimal-snowplow-tracker-0.0.2 msgpack-1.0.5 multidict-6.0.4 networkx-2.6.3 packaging-21.3 parsedatetime-2.4 pathspec-0.10.3 pluggy-1.0.0 psycopg2-binary-2.9.6 py-1.11.0 pycparser-2.21 pyparsing-3.0.9 pyrsistent-0.19.3 pytest-6.2.5 python-dateutil-2.8.2 python-slugify-8.0.1 pytimeparse-1.1.8 pytz-2023.3 pyyaml-6.0 requests-2.31.0 six-1.16.0 sqlparse-0.4.4 stringcase-1.2.0 text-unidecode-1.3 toml-0.10.2 typing-extensions-4.6.2 urllib3-2.0.2 werkzeug-2.2.3 zipp-3.15.0\n[Run package tests for all dbs/test-other-dbs  ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[Run package tests for all dbs/test-other-dbs  ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[Run package tests for all dbs/test-postgres   ]   | test_filters.py \u001b[0m16:37:02  Running with dbt=1.4.0\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:03  Found 41 models, 31 tests, 0 snapshots, 0 analyses, 675 macros, 1 operation, 27 seed files, 1 source, 0 exposures, 0 metrics\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:03  \n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:03  \n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:03  Finished running  in 0 hours 0 minutes and 0.05 seconds (0.05s).\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:03  Encountered an error:\n[Run package tests for all dbs/test-postgres   ]   | Database Error\n[Run package tests for all dbs/test-postgres   ]   |   connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[Run package tests for all dbs/test-postgres   ]   |   \tIs the server running on that host and accepting TCP/IP connections?\n[Run package tests for all dbs/test-postgres   ]   |   connection to server at \"localhost\" (::1), port 5432 failed: Cannot assign requested address\n[Run package tests for all dbs/test-postgres   ]   |   \tIs the server running on that host and accepting TCP/IP connections?\n[Run package tests for all dbs/test-postgres   ]   |   \n[Run package tests for all dbs/test-postgres   ]   | Running setup and tests for postgres\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting dbt-snowflake==1.4.0\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading dbt_snowflake-1.4.0-py3-none-any.whl (30 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: requests<3.0.0 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from dbt-snowflake==1.4.0) (2.31.0)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting cryptography<39.0.0,>=3.2\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading cryptography-38.0.4-cp36-abi3-manylinux_2_28_x86_64.whl (4.2 MB)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: dbt-core~=1.4.0 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from dbt-snowflake==1.4.0) (1.4.0)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting snowflake-connector-python[secure-local-storage]<2.8.2,>=2.4.1\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading snowflake_connector_python-2.8.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (21.3 MB)\n[Run package tests for all dbs/test-postgres   ]   | F\u001b[0m16:37:06  Running with dbt=1.4.0\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:06  Found 41 models, 31 tests, 0 snapshots, 0 analyses, 675 macros, 1 operation, 27 seed files, 1 source, 0 exposures, 0 metrics\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:06  \n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:06  \n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:06  Finished running  in 0 hours 0 minutes and 0.04 seconds (0.04s).\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:06  Encountered an error:\n[Run package tests for all dbs/test-postgres   ]   | Database Error\n[Run package tests for all dbs/test-postgres   ]   |   connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[Run package tests for all dbs/test-postgres   ]   |   \tIs the server running on that host and accepting TCP/IP connections?\n[Run package tests for all dbs/test-postgres   ]   |   connection to server at \"localhost\" (::1), port 5432 failed: Cannot assign requested address\n[Run package tests for all dbs/test-postgres   ]   |   \tIs the server running on that host and accepting TCP/IP connections?\n[Run package tests for all dbs/test-postgres   ]   |   \n[Run package tests for all dbs/test-postgres   ]   | Running setup and tests for postgres\n[Run package tests for all dbs/test-postgres   ]   | F\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: cffi>=1.12 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from cryptography<39.0.0,>=3.2->dbt-snowflake==1.4.0) (1.15.1)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: pycparser in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from cffi>=1.12->cryptography<39.0.0,>=3.2->dbt-snowflake==1.4.0) (2.21)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: mashumaro[msgpack]==3.3.1 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from dbt-core~=1.4.0->dbt-snowflake==1.4.0) (3.3.1)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: dbt-extractor~=0.4.1 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from dbt-core~=1.4.0->dbt-snowflake==1.4.0) (0.4.1)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: agate<1.7.1,>=1.6 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from dbt-core~=1.4.0->dbt-snowflake==1.4.0) (1.7.0)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: packaging<22.0,>=20.9 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from dbt-core~=1.4.0->dbt-snowflake==1.4.0) (21.3)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: colorama<0.4.7,>=0.3.9 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from dbt-core~=1.4.0->dbt-snowflake==1.4.0) (0.4.6)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: sqlparse<0.5,>=0.2.3 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from dbt-core~=1.4.0->dbt-snowflake==1.4.0) (0.4.4)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: betterproto==1.2.5 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from dbt-core~=1.4.0->dbt-snowflake==1.4.0) (1.2.5)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: pathspec<0.11,>=0.9 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from dbt-core~=1.4.0->dbt-snowflake==1.4.0) (0.10.3)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: pyyaml>=6.0 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from dbt-core~=1.4.0->dbt-snowflake==1.4.0) (6.0)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: typing-extensions>=3.7.4 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from dbt-core~=1.4.0->dbt-snowflake==1.4.0) (4.6.2)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: click<9,>=7.0 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from dbt-core~=1.4.0->dbt-snowflake==1.4.0) (8.1.3)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: werkzeug<3,>=1 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from dbt-core~=1.4.0->dbt-snowflake==1.4.0) (2.2.3)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: isodate<0.7,>=0.6 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from dbt-core~=1.4.0->dbt-snowflake==1.4.0) (0.6.1)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: minimal-snowplow-tracker==0.0.2 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from dbt-core~=1.4.0->dbt-snowflake==1.4.0) (0.0.2)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: Jinja2==3.1.2 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from dbt-core~=1.4.0->dbt-snowflake==1.4.0) (3.1.2)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: idna<4,>=2.5 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from dbt-core~=1.4.0->dbt-snowflake==1.4.0) (3.4)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: networkx<2.8.1,>=2.3 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from dbt-core~=1.4.0->dbt-snowflake==1.4.0) (2.6.3)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: hologram<=0.0.15,>=0.0.14 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from dbt-core~=1.4.0->dbt-snowflake==1.4.0) (0.0.15)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: logbook<1.6,>=1.5 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from dbt-core~=1.4.0->dbt-snowflake==1.4.0) (1.5.3)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: grpclib in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from betterproto==1.2.5->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (0.4.4)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: stringcase in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from betterproto==1.2.5->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (1.2.0)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: MarkupSafe>=2.0 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from Jinja2==3.1.2->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (2.1.2)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: msgpack>=0.5.6 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from mashumaro[msgpack]==3.3.1->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (1.0.5)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: six<2.0,>=1.9.0 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from minimal-snowplow-tracker==0.0.2->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (1.16.0)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: Babel>=2.0 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from agate<1.7.1,>=1.6->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (2.12.1)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: parsedatetime!=2.5,!=2.6,>=2.1 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from agate<1.7.1,>=1.6->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (2.4)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: python-slugify>=1.2.1 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from agate<1.7.1,>=1.6->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (8.0.1)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: leather>=0.3.2 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from agate<1.7.1,>=1.6->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (0.3.4)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: pytimeparse>=1.1.5 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from agate<1.7.1,>=1.6->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (1.1.8)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: pytz>=2015.7 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from Babel>=2.0->agate<1.7.1,>=1.6->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (2023.3)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: importlib-metadata in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from click<9,>=7.0->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (6.6.0)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: jsonschema<4.0,>=3.0 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from hologram<=0.0.15,>=0.0.14->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (3.2.0)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: python-dateutil<2.9,>=2.8 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from hologram<=0.0.15,>=0.0.14->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (2.8.2)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: attrs>=17.4.0 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from jsonschema<4.0,>=3.0->hologram<=0.0.15,>=0.0.14->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (23.1.0)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from jsonschema<4.0,>=3.0->hologram<=0.0.15,>=0.0.14->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (47.1.0)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: pyrsistent>=0.14.0 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from jsonschema<4.0,>=3.0->hologram<=0.0.15,>=0.0.14->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (0.19.3)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from packaging<22.0,>=20.9->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (3.0.9)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: future in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from parsedatetime!=2.5,!=2.6,>=2.1->agate<1.7.1,>=1.6->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (0.18.3)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: text-unidecode>=1.3 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from python-slugify>=1.2.1->agate<1.7.1,>=1.6->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (1.3)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: certifi>=2017.4.17 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from requests<3.0.0->dbt-snowflake==1.4.0) (2023.5.7)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: charset-normalizer<4,>=2 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from requests<3.0.0->dbt-snowflake==1.4.0) (3.1.0)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: urllib3<3,>=1.21.1 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from requests<3.0.0->dbt-snowflake==1.4.0) (2.0.2)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting asn1crypto<2.0.0,>0.24.0\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading asn1crypto-1.5.1-py2.py3-none-any.whl (105 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting oscrypto<2.0.0\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading oscrypto-1.3.0-py2.py3-none-any.whl (194 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting pyjwt<3.0.0\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading PyJWT-2.7.0-py3-none-any.whl (22 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting charset-normalizer<4,>=2\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading charset_normalizer-2.1.1-py3-none-any.whl (39 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting pycryptodomex!=3.5.0,<4.0.0,>=3.2\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading pycryptodomex-3.18.0-cp35-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.1 MB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting urllib3<3,>=1.21.1\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting pyOpenSSL<23.0.0,>=16.2.0\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading pyOpenSSL-22.1.0-py3-none-any.whl (57 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting filelock<4,>=3.5\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading filelock-3.12.0-py3-none-any.whl (10 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting keyring!=16.1.0,<24.0.0\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading keyring-23.13.1-py3-none-any.whl (37 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting jeepney>=0.4.2\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading jeepney-0.8.0-py3-none-any.whl (48 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting SecretStorage>=3.2\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading SecretStorage-3.3.3-py3-none-any.whl (15 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting importlib-resources\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading importlib_resources-5.12.0-py3-none-any.whl (36 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting jaraco.classes\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading jaraco.classes-3.2.3-py3-none-any.whl (6.0 kB)\n[Run package tests for all dbs/test-postgres   ]   | test_monitoring.py \u001b[0m16:37:09  Running with dbt=1.4.0\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:10  Installing ../\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:10    Installed from <local @ ../>\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:10  Installing dbt-labs/dbt_utils\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:10    Installed from version 1.0.0\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:10    Updated version available: 1.1.0\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:10  \n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:10  Updates available for packages: ['dbt-labs/dbt_utils']                 \n[Run package tests for all dbs/test-postgres   ]   | Update your versions in packages.yml, then run dbt deps\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: zipp>=0.5 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from importlib-metadata->click<9,>=7.0->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (3.15.0)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: h2<5,>=3.1.0 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from grpclib->betterproto==1.2.5->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (4.1.0)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: multidict in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from grpclib->betterproto==1.2.5->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (6.0.4)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: hpack<5,>=4.0 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from h2<5,>=3.1.0->grpclib->betterproto==1.2.5->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (4.0.0)\n[Run package tests for all dbs/test-other-dbs  ]   | Requirement already satisfied: hyperframe<7,>=6.0 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from h2<5,>=3.1.0->grpclib->betterproto==1.2.5->dbt-core~=1.4.0->dbt-snowflake==1.4.0) (6.0.1)\n[Run package tests for all dbs/test-other-dbs  ]   | Collecting more-itertools\n[Run package tests for all dbs/test-other-dbs  ]   |   Downloading more_itertools-9.1.0-py3-none-any.whl (54 kB)\n[Run package tests for all dbs/test-other-dbs  ]   | Installing collected packages: urllib3, more-itertools, jeepney, cryptography, charset-normalizer, asn1crypto, SecretStorage, pyOpenSSL, pyjwt, pycryptodomex, oscrypto, jaraco.classes, importlib-resources, filelock, snowflake-connector-python, keyring, dbt-snowflake\n[Run package tests for all dbs/test-other-dbs  ]   |   Attempting uninstall: urllib3\n[Run package tests for all dbs/test-other-dbs  ]   |     Found existing installation: urllib3 2.0.2\n[Run package tests for all dbs/test-other-dbs  ]   |     Uninstalling urllib3-2.0.2:\n[Run package tests for all dbs/test-other-dbs  ]   |       Successfully uninstalled urllib3-2.0.2\n[Run package tests for all dbs/test-other-dbs  ]   |   Attempting uninstall: charset-normalizer\n[Run package tests for all dbs/test-other-dbs  ]   |     Found existing installation: charset-normalizer 3.1.0\n[Run package tests for all dbs/test-other-dbs  ]   |     Uninstalling charset-normalizer-3.1.0:\n[Run package tests for all dbs/test-other-dbs  ]   |       Successfully uninstalled charset-normalizer-3.1.0\n[Run package tests for all dbs/test-other-dbs  ]   | Successfully installed SecretStorage-3.3.3 asn1crypto-1.5.1 charset-normalizer-2.1.1 cryptography-38.0.4 dbt-snowflake-1.4.0 filelock-3.12.0 importlib-resources-5.12.0 jaraco.classes-3.2.3 jeepney-0.8.0 keyring-23.13.1 more-itertools-9.1.0 oscrypto-1.3.0 pyOpenSSL-22.1.0 pycryptodomex-3.18.0 pyjwt-2.7.0 snowflake-connector-python-2.8.1 urllib3-1.26.16\n[Run package tests for all dbs/test-other-dbs  ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[Run package tests for all dbs/test-other-dbs  ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:13  Running with dbt=1.4.0\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:13  Unable to do partial parsing because config vars, config profile, or config target have changed\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:17  Found 41 models, 31 tests, 0 snapshots, 0 analyses, 675 macros, 1 operation, 27 seed files, 1 source, 0 exposures, 0 metrics\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:17  \n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:17  \n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:17  Finished running  in 0 hours 0 minutes and 0.02 seconds (0.02s).\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:17  Encountered an error:\n[Run package tests for all dbs/test-postgres   ]   | Database Error\n[Run package tests for all dbs/test-postgres   ]   |   connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[Run package tests for all dbs/test-postgres   ]   |   \tIs the server running on that host and accepting TCP/IP connections?\n[Run package tests for all dbs/test-postgres   ]   |   connection to server at \"localhost\" (::1), port 5432 failed: Cannot assign requested address\n[Run package tests for all dbs/test-postgres   ]   |   \tIs the server running on that host and accepting TCP/IP connections?\n[Run package tests for all dbs/test-postgres   ]   |   \n[Run package tests for all dbs/test-postgres   ]   | Running setup and tests for postgres\n[Run package tests for all dbs/test-postgres   ]   | F\n[Run package tests for all dbs/test-other-dbs  ]   | \u001b[0m16:37:17  Running with dbt=1.4.0\n[Run package tests for all dbs/test-other-dbs  ]   | \u001b[0m16:37:18  Installing ../\n[Run package tests for all dbs/test-other-dbs  ]   | \u001b[0m16:37:18    Installed from <local @ ../>\n[Run package tests for all dbs/test-other-dbs  ]   | \u001b[0m16:37:18  Installing dbt-labs/dbt_utils\n[Run package tests for all dbs/test-other-dbs  ]   | \u001b[0m16:37:18    Installed from version 1.0.0\n[Run package tests for all dbs/test-other-dbs  ]   | \u001b[0m16:37:18    Updated version available: 1.1.0\n[Run package tests for all dbs/test-other-dbs  ]   | \u001b[0m16:37:18  \n[Run package tests for all dbs/test-other-dbs  ]   | \u001b[0m16:37:18  Updates available for packages: ['dbt-labs/dbt_utils']                 \n[Run package tests for all dbs/test-other-dbs  ]   | Update your versions in packages.yml, then run dbt deps\n[Run package tests for all dbs/test-other-dbs  ]   \u2705  Success - Main Install dependencies\n[Run package tests for all dbs/test-other-dbs  ] \u2b50 Run Main Drop schemas\n[Run package tests for all dbs/test-other-dbs  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/7] user= workdir=./integration_tests\n[Run package tests for all dbs/test-postgres   ]   | test_normalizers.py \u001b[0m16:37:20  Running with dbt=1.4.0\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:20  Unable to do partial parsing because config vars, config profile, or config target have changed\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:24  Found 41 models, 31 tests, 0 snapshots, 0 analyses, 675 macros, 1 operation, 27 seed files, 1 source, 0 exposures, 0 metrics\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:24  \n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:24  \n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:24  Finished running  in 0 hours 0 minutes and 0.03 seconds (0.03s).\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:24  Encountered an error:\n[Run package tests for all dbs/test-postgres   ]   | Database Error\n[Run package tests for all dbs/test-postgres   ]   |   connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[Run package tests for all dbs/test-postgres   ]   |   \tIs the server running on that host and accepting TCP/IP connections?\n[Run package tests for all dbs/test-postgres   ]   |   connection to server at \"localhost\" (::1), port 5432 failed: Cannot assign requested address\n[Run package tests for all dbs/test-postgres   ]   |   \tIs the server running on that host and accepting TCP/IP connections?\n[Run package tests for all dbs/test-postgres   ]   |   \n[Run package tests for all dbs/test-postgres   ]   | Running setup and tests for postgres\n[Run package tests for all dbs/test-postgres   ]   | F\n[Run package tests for all dbs/test-postgres   ]   | test_validate.py \u001b[0m16:37:28  Running with dbt=1.4.0\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:28  Found 41 models, 31 tests, 0 snapshots, 0 analyses, 675 macros, 1 operation, 27 seed files, 1 source, 0 exposures, 0 metrics\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:28  \n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:28  \n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:28  Finished running  in 0 hours 0 minutes and 0.03 seconds (0.03s).\n[Run package tests for all dbs/test-postgres   ]   | \u001b[0m16:37:28  Encountered an error:\n[Run package tests for all dbs/test-postgres   ]   | Database Error\n[Run package tests for all dbs/test-postgres   ]   |   connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[Run package tests for all dbs/test-postgres   ]   |   \tIs the server running on that host and accepting TCP/IP connections?\n[Run package tests for all dbs/test-postgres   ]   |   connection to server at \"localhost\" (::1), port 5432 failed: Cannot assign requested address\n[Run package tests for all dbs/test-postgres   ]   |   \tIs the server running on that host and accepting TCP/IP connections?\n[Run package tests for all dbs/test-postgres   ]   |   \n[Run package tests for all dbs/test-postgres   ]   | Running setup and tests for postgres\n[Run package tests for all dbs/test-postgres   ]   | F\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | =================================== FAILURES ===================================\n[Run package tests for all dbs/test-postgres   ]   | ________________________________ test_cleaners _________________________________\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | db = 'postgres', source_schema = 'dq', debug = True\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   |     def test_cleaners(db, source_schema, debug=True):\n[Run package tests for all dbs/test-postgres   ]   |         dbt_vars = {\n[Run package tests for all dbs/test-postgres   ]   |             'source_schema': source_schema\n[Run package tests for all dbs/test-postgres   ]   |         }\n[Run package tests for all dbs/test-postgres   ]   |     \n[Run package tests for all dbs/test-postgres   ]   |         print (f\"Running setup and tests for {db}\")\n[Run package tests for all dbs/test-postgres   ]   |     \n[Run package tests for all dbs/test-postgres   ]   | >       dbt_seed(f'--select public_macros.cleaning', db, dbt_vars)\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | test_cleaners.py:10: \n[Run package tests for all dbs/test-postgres   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Run package tests for all dbs/test-postgres   ]   | utils/run.py:14: in dbt_seed\n[Run package tests for all dbs/test-postgres   ]   |     dbt_command(f'dbt seed --full-refresh {args}', for_db, dbt_vars, threads=4)\n[Run package tests for all dbs/test-postgres   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | command = 'dbt seed --full-refresh --select public_macros.cleaning'\n[Run package tests for all dbs/test-postgres   ]   | for_db = 'postgres', dbt_vars = {'source_schema': 'dq'}, threads = 4\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   |     def dbt_command(command, for_db, dbt_vars, threads=None):\n[Run package tests for all dbs/test-postgres   ]   |         debug = 'DBT_MACRO_DEBUGGING=1 '\n[Run package tests for all dbs/test-postgres   ]   |         profile_part = f' --profile re_data_{for_db}'\n[Run package tests for all dbs/test-postgres   ]   |         yaml_vars = yaml.dump(dbt_vars)\n[Run package tests for all dbs/test-postgres   ]   |         cmd = f'{debug} {command} --vars \"{yaml_vars}\" {profile_part}'\n[Run package tests for all dbs/test-postgres   ]   |         if threads:\n[Run package tests for all dbs/test-postgres   ]   |             cmd += f' --threads {threads}'\n[Run package tests for all dbs/test-postgres   ]   | >       assert os.system(cmd) == 0\n[Run package tests for all dbs/test-postgres   ]   | E       AssertionError\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | utils/run.py:11: AssertionError\n[Run package tests for all dbs/test-postgres   ]   | ______________________________ test_deduplication ______________________________\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | db = 'postgres', source_schema = 'dq', debug = True\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   |     def test_deduplication(db, source_schema, debug=True):\n[Run package tests for all dbs/test-postgres   ]   |         dbt_vars = {\n[Run package tests for all dbs/test-postgres   ]   |             'source_schema': source_schema\n[Run package tests for all dbs/test-postgres   ]   |         }\n[Run package tests for all dbs/test-postgres   ]   |     \n[Run package tests for all dbs/test-postgres   ]   |         print (f\"Running setup and tests for {db}\")\n[Run package tests for all dbs/test-postgres   ]   |     \n[Run package tests for all dbs/test-postgres   ]   | >       dbt_seed(f'--select public_macros.filtering', db, dbt_vars)\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | test_filters.py:10: \n[Run package tests for all dbs/test-postgres   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Run package tests for all dbs/test-postgres   ]   | utils/run.py:14: in dbt_seed\n[Run package tests for all dbs/test-postgres   ]   |     dbt_command(f'dbt seed --full-refresh {args}', for_db, dbt_vars, threads=4)\n[Run package tests for all dbs/test-postgres   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | command = 'dbt seed --full-refresh --select public_macros.filtering'\n[Run package tests for all dbs/test-postgres   ]   | for_db = 'postgres', dbt_vars = {'source_schema': 'dq'}, threads = 4\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   |     def dbt_command(command, for_db, dbt_vars, threads=None):\n[Run package tests for all dbs/test-postgres   ]   |         debug = 'DBT_MACRO_DEBUGGING=1 '\n[Run package tests for all dbs/test-postgres   ]   |         profile_part = f' --profile re_data_{for_db}'\n[Run package tests for all dbs/test-postgres   ]   |         yaml_vars = yaml.dump(dbt_vars)\n[Run package tests for all dbs/test-postgres   ]   |         cmd = f'{debug} {command} --vars \"{yaml_vars}\" {profile_part}'\n[Run package tests for all dbs/test-postgres   ]   |         if threads:\n[Run package tests for all dbs/test-postgres   ]   |             cmd += f' --threads {threads}'\n[Run package tests for all dbs/test-postgres   ]   | >       assert os.system(cmd) == 0\n[Run package tests for all dbs/test-postgres   ]   | E       AssertionError\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | utils/run.py:11: AssertionError\n[Run package tests for all dbs/test-postgres   ]   | _____________________________ test_get_duplicates ______________________________\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | db = 'postgres', source_schema = 'dq', debug = True\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   |     def test_get_duplicates(db, source_schema, debug=True):\n[Run package tests for all dbs/test-postgres   ]   |         dbt_vars = {\n[Run package tests for all dbs/test-postgres   ]   |             'source_schema': source_schema\n[Run package tests for all dbs/test-postgres   ]   |         }\n[Run package tests for all dbs/test-postgres   ]   |     \n[Run package tests for all dbs/test-postgres   ]   |         print (f\"Running setup and tests for {db}\")\n[Run package tests for all dbs/test-postgres   ]   |     \n[Run package tests for all dbs/test-postgres   ]   | >       dbt_seed(f'--select public_macros.filtering', db, dbt_vars)\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | test_filters.py:21: \n[Run package tests for all dbs/test-postgres   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Run package tests for all dbs/test-postgres   ]   | utils/run.py:14: in dbt_seed\n[Run package tests for all dbs/test-postgres   ]   |     dbt_command(f'dbt seed --full-refresh {args}', for_db, dbt_vars, threads=4)\n[Run package tests for all dbs/test-postgres   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | command = 'dbt seed --full-refresh --select public_macros.filtering'\n[Run package tests for all dbs/test-postgres   ]   | for_db = 'postgres', dbt_vars = {'source_schema': 'dq'}, threads = 4\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   |     def dbt_command(command, for_db, dbt_vars, threads=None):\n[Run package tests for all dbs/test-postgres   ]   |         debug = 'DBT_MACRO_DEBUGGING=1 '\n[Run package tests for all dbs/test-postgres   ]   |         profile_part = f' --profile re_data_{for_db}'\n[Run package tests for all dbs/test-postgres   ]   |         yaml_vars = yaml.dump(dbt_vars)\n[Run package tests for all dbs/test-postgres   ]   |         cmd = f'{debug} {command} --vars \"{yaml_vars}\" {profile_part}'\n[Run package tests for all dbs/test-postgres   ]   |         if threads:\n[Run package tests for all dbs/test-postgres   ]   |             cmd += f' --threads {threads}'\n[Run package tests for all dbs/test-postgres   ]   | >       assert os.system(cmd) == 0\n[Run package tests for all dbs/test-postgres   ]   | E       AssertionError\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | utils/run.py:11: AssertionError\n[Run package tests for all dbs/test-postgres   ]   | _______________________________ test_monitoring ________________________________\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | db = 'postgres', source_schema = 'dq'\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   |     def test_monitoring(db, source_schema):\n[Run package tests for all dbs/test-postgres   ]   |         DBT_VARS.update({'source_schema': source_schema})\n[Run package tests for all dbs/test-postgres   ]   |     \n[Run package tests for all dbs/test-postgres   ]   |         load_deps = 'dbt deps'\n[Run package tests for all dbs/test-postgres   ]   |         assert os.system(load_deps) == 0\n[Run package tests for all dbs/test-postgres   ]   |     \n[Run package tests for all dbs/test-postgres   ]   |         dbt_vars = copy.deepcopy(DBT_VARS)\n[Run package tests for all dbs/test-postgres   ]   |     \n[Run package tests for all dbs/test-postgres   ]   |         print (f\"Running setup and tests for {db}\")\n[Run package tests for all dbs/test-postgres   ]   |     \n[Run package tests for all dbs/test-postgres   ]   | >       dbt_seed('--select monitoring', db, dbt_vars)\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | test_monitoring.py:26: \n[Run package tests for all dbs/test-postgres   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Run package tests for all dbs/test-postgres   ]   | utils/run.py:14: in dbt_seed\n[Run package tests for all dbs/test-postgres   ]   |     dbt_command(f'dbt seed --full-refresh {args}', for_db, dbt_vars, threads=4)\n[Run package tests for all dbs/test-postgres   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | command = 'dbt seed --full-refresh --select monitoring', for_db = 'postgres'\n[Run package tests for all dbs/test-postgres   ]   | dbt_vars = {'re_data:save_test_history': True, 're_data:time_window_end': '2021-05-02 00:00:00', 're_data:time_window_start': '2021-05-01 00:00:00', 'source_schema': 'dq'}\n[Run package tests for all dbs/test-postgres   ]   | threads = 4\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   |     def dbt_command(command, for_db, dbt_vars, threads=None):\n[Run package tests for all dbs/test-postgres   ]   |         debug = 'DBT_MACRO_DEBUGGING=1 '\n[Run package tests for all dbs/test-postgres   ]   |         profile_part = f' --profile re_data_{for_db}'\n[Run package tests for all dbs/test-postgres   ]   |         yaml_vars = yaml.dump(dbt_vars)\n[Run package tests for all dbs/test-postgres   ]   |         cmd = f'{debug} {command} --vars \"{yaml_vars}\" {profile_part}'\n[Run package tests for all dbs/test-postgres   ]   |         if threads:\n[Run package tests for all dbs/test-postgres   ]   |             cmd += f' --threads {threads}'\n[Run package tests for all dbs/test-postgres   ]   | >       assert os.system(cmd) == 0\n[Run package tests for all dbs/test-postgres   ]   | E       AssertionError\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | utils/run.py:11: AssertionError\n[Run package tests for all dbs/test-postgres   ]   | _______________________________ test_normalizers _______________________________\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | db = 'postgres', source_schema = 'dq', debug = True\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   |     def test_normalizers(db, source_schema, debug=True):\n[Run package tests for all dbs/test-postgres   ]   |         dbt_vars = {\n[Run package tests for all dbs/test-postgres   ]   |             'source_schema': source_schema\n[Run package tests for all dbs/test-postgres   ]   |         }\n[Run package tests for all dbs/test-postgres   ]   |     \n[Run package tests for all dbs/test-postgres   ]   |         print (f\"Running setup and tests for {db}\")\n[Run package tests for all dbs/test-postgres   ]   |     \n[Run package tests for all dbs/test-postgres   ]   | >       dbt_seed(f'--select public_macros.normalizing', db, dbt_vars)\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | test_normalizers.py:10: \n[Run package tests for all dbs/test-postgres   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Run package tests for all dbs/test-postgres   ]   | utils/run.py:14: in dbt_seed\n[Run package tests for all dbs/test-postgres   ]   |     dbt_command(f'dbt seed --full-refresh {args}', for_db, dbt_vars, threads=4)\n[Run package tests for all dbs/test-postgres   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | command = 'dbt seed --full-refresh --select public_macros.normalizing'\n[Run package tests for all dbs/test-postgres   ]   | for_db = 'postgres', dbt_vars = {'source_schema': 'dq'}, threads = 4\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   |     def dbt_command(command, for_db, dbt_vars, threads=None):\n[Run package tests for all dbs/test-postgres   ]   |         debug = 'DBT_MACRO_DEBUGGING=1 '\n[Run package tests for all dbs/test-postgres   ]   |         profile_part = f' --profile re_data_{for_db}'\n[Run package tests for all dbs/test-postgres   ]   |         yaml_vars = yaml.dump(dbt_vars)\n[Run package tests for all dbs/test-postgres   ]   |         cmd = f'{debug} {command} --vars \"{yaml_vars}\" {profile_part}'\n[Run package tests for all dbs/test-postgres   ]   |         if threads:\n[Run package tests for all dbs/test-postgres   ]   |             cmd += f' --threads {threads}'\n[Run package tests for all dbs/test-postgres   ]   | >       assert os.system(cmd) == 0\n[Run package tests for all dbs/test-postgres   ]   | E       AssertionError\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | utils/run.py:11: AssertionError\n[Run package tests for all dbs/test-postgres   ]   | _____________________________ test_validate_regex ______________________________\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | db = 'postgres', source_schema = 'dq', debug = True\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   |     def test_validate_regex(db, source_schema, debug=True):\n[Run package tests for all dbs/test-postgres   ]   |         dbt_vars = {\n[Run package tests for all dbs/test-postgres   ]   |             'source_schema': source_schema\n[Run package tests for all dbs/test-postgres   ]   |         }\n[Run package tests for all dbs/test-postgres   ]   |     \n[Run package tests for all dbs/test-postgres   ]   |         print (f\"Running setup and tests for {db}\")\n[Run package tests for all dbs/test-postgres   ]   |     \n[Run package tests for all dbs/test-postgres   ]   |         dbt_seed(\n[Run package tests for all dbs/test-postgres   ]   | >           f'--select public_macros.validating', db, dbt_vars\n[Run package tests for all dbs/test-postgres   ]   |         )\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | test_validate.py:11: \n[Run package tests for all dbs/test-postgres   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Run package tests for all dbs/test-postgres   ]   | utils/run.py:14: in dbt_seed\n[Run package tests for all dbs/test-postgres   ]   |     dbt_command(f'dbt seed --full-refresh {args}', for_db, dbt_vars, threads=4)\n[Run package tests for all dbs/test-postgres   ]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | command = 'dbt seed --full-refresh --select public_macros.validating'\n[Run package tests for all dbs/test-postgres   ]   | for_db = 'postgres', dbt_vars = {'source_schema': 'dq'}, threads = 4\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   |     def dbt_command(command, for_db, dbt_vars, threads=None):\n[Run package tests for all dbs/test-postgres   ]   |         debug = 'DBT_MACRO_DEBUGGING=1 '\n[Run package tests for all dbs/test-postgres   ]   |         profile_part = f' --profile re_data_{for_db}'\n[Run package tests for all dbs/test-postgres   ]   |         yaml_vars = yaml.dump(dbt_vars)\n[Run package tests for all dbs/test-postgres   ]   |         cmd = f'{debug} {command} --vars \"{yaml_vars}\" {profile_part}'\n[Run package tests for all dbs/test-postgres   ]   |         if threads:\n[Run package tests for all dbs/test-postgres   ]   |             cmd += f' --threads {threads}'\n[Run package tests for all dbs/test-postgres   ]   | >       assert os.system(cmd) == 0\n[Run package tests for all dbs/test-postgres   ]   | E       AssertionError\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | utils/run.py:11: AssertionError\n[Run package tests for all dbs/test-postgres   ]   | ============================== slowest durations ===============================\n[Run package tests for all dbs/test-postgres   ]   | 10.85s call     python_tests/test_monitoring.py::test_monitoring\n[Run package tests for all dbs/test-postgres   ]   | 7.58s call     python_tests/test_normalizers.py::test_normalizers\n[Run package tests for all dbs/test-postgres   ]   | 7.36s call     python_tests/test_cleaners.py::test_cleaners\n[Run package tests for all dbs/test-postgres   ]   | 3.44s call     python_tests/test_filters.py::test_get_duplicates\n[Run package tests for all dbs/test-postgres   ]   | 3.29s call     python_tests/test_validate.py::test_validate_regex\n[Run package tests for all dbs/test-postgres   ]   | 3.27s call     python_tests/test_filters.py::test_deduplication\n[Run package tests for all dbs/test-postgres   ]   | \n[Run package tests for all dbs/test-postgres   ]   | (12 durations < 0.005s hidden.  Use -vv to show these durations.)\n[Run package tests for all dbs/test-postgres   ]   | =========================== short test summary info ============================\n[Run package tests for all dbs/test-postgres   ]   | FAILED test_cleaners.py::test_cleaners - AssertionError\n[Run package tests for all dbs/test-postgres   ]   | FAILED test_filters.py::test_deduplication - AssertionError\n[Run package tests for all dbs/test-postgres   ]   | FAILED test_filters.py::test_get_duplicates - AssertionError\n[Run package tests for all dbs/test-postgres   ]   | FAILED test_monitoring.py::test_monitoring - AssertionError\n[Run package tests for all dbs/test-postgres   ]   | FAILED test_normalizers.py::test_normalizers - AssertionError\n[Run package tests for all dbs/test-postgres   ]   | FAILED test_validate.py::test_validate_regex - AssertionError\n[Run package tests for all dbs/test-postgres   ]   | ============================== 6 failed in 35.91s ==============================\n[Run package tests for all dbs/test-postgres   ]   \u274c  Failure - Main Test DB\n[Run package tests for all dbs/test-postgres   ] exitcode '1': failure\n[Run package tests for all dbs/test-postgres   ] \ud83c\udfc1  Job failed\n[Run package tests for all dbs/test-other-dbs  ]   | \u001b[0m16:38:13  Running with dbt=1.4.0\n[Run package tests for all dbs/test-other-dbs  ]   | \u001b[0m16:38:13  Unable to do partial parsing because config vars, config profile, or config target have changed\n[Run package tests for all dbs/test-other-dbs  ]   | \u001b[0m16:38:13  Unable to do partial parsing because env vars used in profiles.yml have changed\n[Run package tests for all dbs/test-other-dbs  ]   | \u001b[0m16:38:13  Unable to do partial parsing because a project dependency has been added\n[Run package tests for all dbs/test-other-dbs  ]   | \u001b[0m16:38:17  Encountered an error while running operation: Database Error\n[Run package tests for all dbs/test-other-dbs  ]   |   251005: User is empty\n[Run package tests for all dbs/test-other-dbs  ]   \u274c  Failure - Main Drop schemas\n[Run package tests for all dbs/test-other-dbs  ] exitcode '1': failure\n[Run package tests for all dbs/test-other-dbs  ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'test-other-dbs' failed\n"
}