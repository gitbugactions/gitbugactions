{
    "repository": "Shougo/deoplete.nvim",
    "clone_url": "https://github.com/Shougo/deoplete.nvim.git",
    "timestamp": "2023-05-29T15:46:17.448961Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)] \ud83d\ude80  Start image=crawlergpt:latest\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/Shougo-deoplete.nvim] user=0 workdir=\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \u2601  git clone 'https://github.com/rhysd/action-setup-vim' # ref=v1\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \u2601  git clone 'https://github.com/actions/checkout' # ref=v2\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)] \ud83e\uddea  Matrix: map[build:nightly python-version:3.7]\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)] \u2b50 Run Main actions/checkout@v2\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \u2705  Success - Main actions/checkout@v2\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)] \u2b50 Run Main Setup Python\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::isExplicit: \n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::explicit? false\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::explicit? true\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::explicit? true\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::explicit? true\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::explicit? true\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::explicit? true\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::explicit? true\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::matched: 3.7.11\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Successfully setup CPython (3.7.11)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \u2705  Success - Main Setup Python\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \u2699  ::set-output:: python-version=3.7.11\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)] \u2b50 Run Main Install dependencies\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (21.2.4)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting pip\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Installing collected packages: pip\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Attempting uninstall: pip\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |     Found existing installation: pip 21.2.4\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |     Uninstalling pip-21.2.4:\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |       Successfully uninstalled pip-21.2.4\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Successfully installed pip-23.1.2\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting pynvim (from -r test/requirements.txt (line 1))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading pynvim-0.4.3.tar.gz (56 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 56.2/56.2 kB 4.1 MB/s eta 0:00:00\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Installing build dependencies: started\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Installing build dependencies: finished with status 'done'\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Getting requirements to build wheel: started\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Getting requirements to build wheel: finished with status 'done'\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Preparing metadata (pyproject.toml): started\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting pytest (from -r test/requirements.txt (line 2))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading pytest-7.3.1-py3-none-any.whl (320 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 320.5/320.5 kB 18.1 MB/s eta 0:00:00\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting flake8 (from -r test/requirements.txt (line 3))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading flake8-5.0.4-py2.py3-none-any.whl (61 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.9/61.9 kB 5.3 MB/s eta 0:00:00\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting mypy (from -r test/requirements.txt (line 4))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading mypy-1.3.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.9 MB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 11.9/11.9 MB 34.4 MB/s eta 0:00:00\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting vim-vint (from -r test/requirements.txt (line 5))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading vim_vint-0.3.21-py2.py3-none-any.whl (89 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 89.2/89.2 kB 3.6 MB/s eta 0:00:00\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting pytest-cov (from -r test/requirements.txt (line 6))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading pytest_cov-4.1.0-py3-none-any.whl (21 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting msgpack>=0.5.0 (from pynvim->-r test/requirements.txt (line 1))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading msgpack-1.0.5-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (299 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 299.7/299.7 kB 7.3 MB/s eta 0:00:00\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting greenlet (from pynvim->-r test/requirements.txt (line 1))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading greenlet-2.0.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (566 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 566.1/566.1 kB 29.2 MB/s eta 0:00:00\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting iniconfig (from pytest->-r test/requirements.txt (line 2))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting packaging (from pytest->-r test/requirements.txt (line 2))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 3.1 MB/s eta 0:00:00\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting pluggy<2.0,>=0.12 (from pytest->-r test/requirements.txt (line 2))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting exceptiongroup>=1.0.0rc8 (from pytest->-r test/requirements.txt (line 2))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting tomli>=1.0.0 (from pytest->-r test/requirements.txt (line 2))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting importlib-metadata>=0.12 (from pytest->-r test/requirements.txt (line 2))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading importlib_metadata-6.6.0-py3-none-any.whl (22 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting mccabe<0.8.0,>=0.7.0 (from flake8->-r test/requirements.txt (line 3))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading mccabe-0.7.0-py2.py3-none-any.whl (7.3 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting pycodestyle<2.10.0,>=2.9.0 (from flake8->-r test/requirements.txt (line 3))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading pycodestyle-2.9.1-py2.py3-none-any.whl (41 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 41.5/41.5 kB 872.7 kB/s eta 0:00:00\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting pyflakes<2.6.0,>=2.5.0 (from flake8->-r test/requirements.txt (line 3))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading pyflakes-2.5.0-py2.py3-none-any.whl (66 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 66.1/66.1 kB 2.3 MB/s eta 0:00:00\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting importlib-metadata>=0.12 (from pytest->-r test/requirements.txt (line 2))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading importlib_metadata-4.2.0-py3-none-any.whl (16 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting typing-extensions>=3.10 (from mypy->-r test/requirements.txt (line 4))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading typing_extensions-4.6.2-py3-none-any.whl (31 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting mypy-extensions>=1.0.0 (from mypy->-r test/requirements.txt (line 4))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting typed-ast<2,>=1.4.0 (from mypy->-r test/requirements.txt (line 4))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading typed_ast-1.5.4-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (843 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 843.7/843.7 kB 13.8 MB/s eta 0:00:00\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting PyYAML>=3.11 (from vim-vint->-r test/requirements.txt (line 5))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading PyYAML-6.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (596 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 596.3/596.3 kB 35.1 MB/s eta 0:00:00\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting ansicolor>=0.2.4 (from vim-vint->-r test/requirements.txt (line 5))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading ansicolor-0.3.2-py2.py3-none-any.whl (9.8 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting chardet>=2.3.0 (from vim-vint->-r test/requirements.txt (line 5))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading chardet-5.1.0-py3-none-any.whl (199 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 199.1/199.1 kB 4.8 MB/s eta 0:00:00\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting coverage[toml]>=5.2.1 (from pytest-cov->-r test/requirements.txt (line 6))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading coverage-7.2.6-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (225 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 225.5/225.5 kB 13.0 MB/s eta 0:00:00\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Collecting zipp>=0.5 (from importlib-metadata>=0.12->pytest->-r test/requirements.txt (line 2))\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Building wheels for collected packages: pynvim\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Building wheel for pynvim (pyproject.toml): started\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Building wheel for pynvim (pyproject.toml): finished with status 'done'\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Created wheel for pynvim: filename=pynvim-0.4.3-py3-none-any.whl size=41585 sha256=eee84a968b0b49fd9b8cf2912da99509397f0120abc13f815f97d0e68c80ba1a\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/1e/00/ed/740cf701d24a8123e11f0463a6fc354af9734505f09aab7d4e\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Successfully built pynvim\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Installing collected packages: msgpack, ansicolor, zipp, typing-extensions, typed-ast, tomli, PyYAML, pyflakes, pycodestyle, packaging, mypy-extensions, mccabe, iniconfig, greenlet, exceptiongroup, coverage, chardet, vim-vint, pynvim, mypy, importlib-metadata, pluggy, flake8, pytest, pytest-cov\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Successfully installed PyYAML-6.0 ansicolor-0.3.2 chardet-5.1.0 coverage-7.2.6 exceptiongroup-1.1.1 flake8-5.0.4 greenlet-2.0.2 importlib-metadata-4.2.0 iniconfig-2.0.0 mccabe-0.7.0 msgpack-1.0.5 mypy-1.3.0 mypy-extensions-1.0.0 packaging-23.1 pluggy-1.0.0 pycodestyle-2.9.1 pyflakes-2.5.0 pynvim-0.4.3 pytest-7.3.1 pytest-cov-4.1.0 tomli-2.0.1 typed-ast-1.5.4 typing-extensions-4.6.2 vim-vint-0.3.21 zipp-3.15.0\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | \n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | [notice] To update, run: pip install --upgrade pip\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \u2705  Success - Main Install dependencies\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)] \u2b50 Run Main Initialize Neovim\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/rhysd-action-setup-vim@v1/ dst=/var/run/act/actions/rhysd-action-setup-vim@v1/\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/rhysd-action-setup-vim@v1/] user=0 workdir=\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/rhysd-action-setup-vim@v1/src/index.js] user= workdir=\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Extracted configuration: { version: 'nightly', neovim: true, os: 'linux', token: '' }\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::Detected operating system: linux\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::Installing Neovim version 'nightly' on Linux\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Downloading Neovim nightly on linux from https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz to /home/runneradmin/nvim-nightly\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::Created temporary directory /tmp\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::Downloading asset /tmp/nvim-linux64.tar.gz\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::Downloaded asset /tmp/nvim-linux64.tar.gz\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | [command]/usr/bin/tar xzf /tmp/nvim-linux64.tar.gz\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::Unarchived asset /tmp/nvim-linux64\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::Installed Neovim nightly on linux to /home/runneradmin/nvim-nightly\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::Installed directory '/home/runneradmin/nvim-nightly/bin' was validated\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | [command]/home/runneradmin/nvim-nightly/bin/nvim --version\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | NVIM v0.10.0-dev-411+g9dd48f783\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Build type: RelWithDebInfo\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | LuaJIT 2.1.0-beta3\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Compilation: /usr/bin/gcc-10 -O2 -g -Og -g -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wshadow -Wconversion -Wvla -Wdouble-promotion -Wmissing-noreturn -Wmissing-format-attribute -Wmissing-prototypes -fno-common -Wno-unused-result -Wimplicit-fallthrough -fdiagnostics-color=always -fstack-protector-strong -DUNIT_TESTING -DINCLUDE_GENERATED_DECLARATIONS -D_GNU_SOURCE -DNVIM_TS_HAS_SET_MAX_START_DEPTH -I/__w/neovim/neovim/.deps/usr/include/luajit-2.1 -I/usr/include -I/__w/neovim/neovim/.deps/usr/include -I/__w/neovim/neovim/build/src/nvim/auto -I/__w/neovim/neovim/build/include -I/__w/neovim/neovim/build/cmake.config -I/__w/neovim/neovim/src -I/usr/include -I/__w/neovim/neovim/.deps/usr/include -I/__w/neovim/neovim/.deps/usr/include -I/__w/neovim/neovim/.deps/usr/include -I/__w/neovim/neovim/.deps/usr/include -I/__w/neovim/neovim/.deps/usr/include -I/__w/neovim/neovim/.deps/usr/include\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | \n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |    system vimrc file: \"$VIM/sysinit.vim\"\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   fall-back for $VIM: \"/__w/neovim/neovim/build/nvim.AppDir/usr/share/nvim\"\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | \n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Run :checkhealth for more info\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Installed version:\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | NVIM v0.10.0-dev-411+g9dd48f783\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Build type: RelWithDebInfo\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | LuaJIT 2.1.0-beta3\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Compilation: /usr/bin/gcc-10 -O2 -g -Og -g -Wall -Wextra -pedantic -Wno-unused-parameter -Wstrict-prototypes -std=gnu99 -Wshadow -Wconversion -Wvla -Wdouble-promotion -Wmissing-noreturn -Wmissing-format-attribute -Wmissing-prototypes -fno-common -Wno-unused-result -Wimplicit-fallthrough -fdiagnostics-color=always -fstack-protector-strong -DUNIT_TESTING -DINCLUDE_GENERATED_DECLARATIONS -D_GNU_SOURCE -DNVIM_TS_HAS_SET_MAX_START_DEPTH -I/__w/neovim/neovim/.deps/usr/include/luajit-2.1 -I/usr/include -I/__w/neovim/neovim/.deps/usr/include -I/__w/neovim/neovim/build/src/nvim/auto -I/__w/neovim/neovim/build/include -I/__w/neovim/neovim/build/cmake.config -I/__w/neovim/neovim/src -I/usr/include -I/__w/neovim/neovim/.deps/usr/include -I/__w/neovim/neovim/.deps/usr/include -I/__w/neovim/neovim/.deps/usr/include -I/__w/neovim/neovim/.deps/usr/include -I/__w/neovim/neovim/.deps/usr/include -I/__w/neovim/neovim/.deps/usr/include\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | \n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |    system vimrc file: \"$VIM/sysinit.vim\"\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   |   fall-back for $VIM: \"/__w/neovim/neovim/build/nvim.AppDir/usr/share/nvim\"\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | \n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Run :checkhealth for more info\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | \n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::Installed executable '/home/runneradmin/nvim-nightly/bin/nvim' was validated\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::'/home/runneradmin/nvim-nightly/bin' was set to $PATH\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Installed executable: /home/runneradmin/nvim-nightly/bin/nvim\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   | Installation successfully done: { executable: 'nvim', binDir: '/home/runneradmin/nvim-nightly/bin' }\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \u2705  Success - Main Initialize Neovim\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \u2699  ::set-env:: PATH=/home/runneradmin/nvim-nightly/bin:/opt/hostedtoolcache/Python/3.7.11/x64/bin:/opt/hostedtoolcache/Python/3.7.11/x64:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \u2699  ::set-output:: executable=/home/runneradmin/nvim-nightly/bin/nvim\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)] \u2b50 Run Main Clone vim-themis\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-checkout@v2/ dst=/var/run/act/actions/actions-checkout@v2/\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-checkout@v2/] user=0 workdir=\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-checkout@v2/dist/index.js] user= workdir=\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::GITHUB_WORKSPACE = '/tmp/de65f406-fe28-11ed-a890-af2cc187fc11/Shougo-deoplete.nvim'\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::qualified repository = 'thinca/vim-themis'\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::ref = ''\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::commit = 'undefined'\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::clean = true\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::fetch depth = 1\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::lfs = false\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::submodules = false\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udcac  ::debug::recursive submodules = false\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \u2757  ::error::Input required and not supplied: token\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \u274c  Failure - Main Clone vim-themis\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)] exitcode '1': failure\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)] \u2b50 Run Post Clone vim-themis\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-checkout@v2/dist/index.js] user= workdir=\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)]   \u2705  Success - Post Clone vim-themis\n[Lint, Test & Coverage/Python 3.7 - Neovim (nightly)] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'Python ${{ matrix.python-version }} - Neovim (${{ matrix.build }})' failed\n"
}