{
    "repository": "django-compressor/django-compressor",
    "clone_url": "https://github.com/django-compressor/django-compressor.git",
    "timestamp": "2023-05-29T14:01:16.248609Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[CI/test] \ud83d\ude80  Start image=crawlergpt:latest\n[CI/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[CI/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[CI/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/django-compressor-django-compressor] user=0 workdir=\n[CI/test]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[CI/test] \ud83e\uddea  Matrix: map[versions:map[python:3.8 toxenv:py38-3.2.X]]\n[CI/test] \u2b50 Run Main actions/checkout@v3\n[CI/test]   \u2705  Success - Main actions/checkout@v3\n[CI/test] \u2b50 Run Main actions/setup-python@v4\n[CI/test]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[CI/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[CI/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[CI/test]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[CI/test]   \u2753  ::group::Installed versions\n[CI/test]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[CI/test]   \ud83d\udcac  ::debug::isExplicit: \n[CI/test]   \ud83d\udcac  ::debug::explicit? false\n[CI/test]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[CI/test]   \ud83d\udcac  ::debug::explicit? true\n[CI/test]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[CI/test]   \ud83d\udcac  ::debug::explicit? true\n[CI/test]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[CI/test]   \ud83d\udcac  ::debug::explicit? true\n[CI/test]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[CI/test]   \ud83d\udcac  ::debug::explicit? true\n[CI/test]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[CI/test]   \ud83d\udcac  ::debug::explicit? true\n[CI/test]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[CI/test]   \ud83d\udcac  ::debug::explicit? true\n[CI/test]   \ud83d\udcac  ::debug::evaluating 6 versions\n[CI/test]   \ud83d\udcac  ::debug::matched: 3.8.11\n[CI/test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[CI/test]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[CI/test]   | Successfully set up CPython (3.8.11)\n[CI/test]   \u2753  ::endgroup::\n[CI/test]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[CI/test]   \u2705  Success - Main actions/setup-python@v4\n[CI/test]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[CI/test]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib/pkgconfig\n[CI/test]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[CI/test]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[CI/test]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[CI/test]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[CI/test]   \u2699  ::set-output:: python-version=3.8.11\n[CI/test]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.8.11/x64/bin/python\n[CI/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[CI/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[CI/test] \u2b50 Run Main pip install tox\npython setup.py install_egg_info\n[CI/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[CI/test]   | Collecting tox\n[CI/test]   |   Downloading tox-4.5.2-py3-none-any.whl (148 kB)\n[CI/test]   | Collecting pluggy>=1\n[CI/test]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[CI/test]   | Collecting tomli>=2.0.1\n[CI/test]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[CI/test]   | Collecting filelock>=3.12\n[CI/test]   |   Downloading filelock-3.12.0-py3-none-any.whl (10 kB)\n[CI/test]   | Collecting chardet>=5.1\n[CI/test]   |   Downloading chardet-5.1.0-py3-none-any.whl (199 kB)\n[CI/test]   | Collecting packaging>=23.1\n[CI/test]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[CI/test]   | Collecting cachetools>=5.3\n[CI/test]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[CI/test]   | Collecting platformdirs>=3.5.1\n[CI/test]   |   Downloading platformdirs-3.5.1-py3-none-any.whl (15 kB)\n[CI/test]   | Collecting pyproject-api>=1.5.1\n[CI/test]   |   Downloading pyproject_api-1.5.1-py3-none-any.whl (12 kB)\n[CI/test]   \u274c  Failure - Main pip install tox\npython setup.py install_egg_info\n[CI/test] Error response from daemon: No such container: d4aecaa0be5fa34e28a7d951b11b2c25745cedd60ef7ce917a590105e67c098b\n[CI/test] failed to remove container: Error response from daemon: No such container: d4aecaa0be5fa34e28a7d951b11b2c25745cedd60ef7ce917a590105e67c098b\n[CI/test] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'test' failed\n"
}