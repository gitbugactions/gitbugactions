{
    "repository": "python-websockets/websockets",
    "clone_url": "https://github.com/python-websockets/websockets.git",
    "timestamp": "2023-05-29T14:44:39.240758Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Run tests/Run test coverage checks] \ud83d\ude80  Start image=crawlergpt:latest\n[Run tests/Run code quality checks ] \ud83d\ude80  Start image=crawlergpt:latest\n[Run tests/Run test coverage checks]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Run tests/Run code quality checks ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Run tests/Run code quality checks ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run tests/Run test coverage checks]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run tests/Run test coverage checks]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run tests/Run code quality checks ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Run tests/Run code quality checks ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/python-websockets-websockets] user=0 workdir=\n[Run tests/Run test coverage checks]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/python-websockets-websockets] user=0 workdir=\n[Run tests/Run test coverage checks]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[Run tests/Run code quality checks ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[Run tests/Run test coverage checks] \u2b50 Run Main Check out repository\n[Run tests/Run code quality checks ] \u2b50 Run Main Check out repository\n[Run tests/Run test coverage checks]   \u2705  Success - Main Check out repository\n[Run tests/Run code quality checks ]   \u2705  Success - Main Check out repository\n[Run tests/Run test coverage checks] \u2b50 Run Main Install Python 3.x\n[Run tests/Run code quality checks ] \u2b50 Run Main Install Python 3.x\n[Run tests/Run test coverage checks]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[Run tests/Run code quality checks ]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[Run tests/Run code quality checks ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[Run tests/Run test coverage checks]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[Run tests/Run test coverage checks]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[Run tests/Run code quality checks ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[Run tests/Run test coverage checks]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[Run tests/Run test coverage checks]   \u2753  ::group::Installed versions\n[Run tests/Run test coverage checks]   \ud83d\udcac  ::debug::Semantic version spec of 3.x is 3.x\n[Run tests/Run test coverage checks]   \ud83d\udcac  ::debug::isExplicit: \n[Run tests/Run test coverage checks]   \ud83d\udcac  ::debug::explicit? false\n[Run tests/Run test coverage checks]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Run tests/Run test coverage checks]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/Run test coverage checks]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Run tests/Run test coverage checks]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/Run test coverage checks]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Run tests/Run test coverage checks]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/Run test coverage checks]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Run tests/Run test coverage checks]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/Run test coverage checks]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Run tests/Run test coverage checks]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/Run test coverage checks]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Run tests/Run test coverage checks]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/Run test coverage checks]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Run tests/Run test coverage checks]   \ud83d\udcac  ::debug::matched: 3.9.6\n[Run tests/Run test coverage checks]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[Run tests/Run test coverage checks]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[Run tests/Run test coverage checks]   | Successfully set up CPython (3.9.6)\n[Run tests/Run test coverage checks]   \u2753  ::endgroup::\n[Run tests/Run test coverage checks]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[Run tests/Run code quality checks ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[Run tests/Run code quality checks ]   \u2753  ::group::Installed versions\n[Run tests/Run code quality checks ]   \ud83d\udcac  ::debug::Semantic version spec of 3.x is 3.x\n[Run tests/Run code quality checks ]   \ud83d\udcac  ::debug::isExplicit: \n[Run tests/Run code quality checks ]   \ud83d\udcac  ::debug::explicit? false\n[Run tests/Run code quality checks ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Run tests/Run code quality checks ]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/Run code quality checks ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Run tests/Run code quality checks ]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/Run code quality checks ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Run tests/Run code quality checks ]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/Run code quality checks ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Run tests/Run code quality checks ]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/Run code quality checks ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Run tests/Run code quality checks ]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/Run code quality checks ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Run tests/Run code quality checks ]   \ud83d\udcac  ::debug::explicit? true\n[Run tests/Run code quality checks ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Run tests/Run code quality checks ]   \ud83d\udcac  ::debug::matched: 3.9.6\n[Run tests/Run code quality checks ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[Run tests/Run code quality checks ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[Run tests/Run code quality checks ]   | Successfully set up CPython (3.9.6)\n[Run tests/Run code quality checks ]   \u2753  ::endgroup::\n[Run tests/Run code quality checks ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[Run tests/Run test coverage checks]   \u2705  Success - Main Install Python 3.x\n[Run tests/Run code quality checks ]   \u2705  Success - Main Install Python 3.x\n[Run tests/Run code quality checks ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[Run tests/Run code quality checks ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[Run tests/Run code quality checks ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib/pkgconfig\n[Run tests/Run code quality checks ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[Run tests/Run code quality checks ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[Run tests/Run code quality checks ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[Run tests/Run test coverage checks]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[Run tests/Run test coverage checks]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[Run tests/Run test coverage checks]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[Run tests/Run test coverage checks]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[Run tests/Run test coverage checks]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib/pkgconfig\n[Run tests/Run test coverage checks]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[Run tests/Run code quality checks ]   \u2699  ::set-output:: python-version=3.9.6\n[Run tests/Run code quality checks ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.9.6/x64/bin/python\n[Run tests/Run test coverage checks]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.9.6/x64/bin/python\n[Run tests/Run test coverage checks]   \u2699  ::set-output:: python-version=3.9.6\n[Run tests/Run test coverage checks]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[Run tests/Run test coverage checks]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[Run tests/Run code quality checks ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[Run tests/Run code quality checks ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[Run tests/Run code quality checks ] \u2b50 Run Main Install tox\n[Run tests/Run test coverage checks] \u2b50 Run Main Install tox\n[Run tests/Run code quality checks ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Run tests/Run test coverage checks]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Run tests/Run test coverage checks]   | Collecting tox\n[Run tests/Run test coverage checks]   |   Downloading tox-4.5.2-py3-none-any.whl (148 kB)\n[Run tests/Run code quality checks ]   | Collecting tox\n[Run tests/Run code quality checks ]   |   Downloading tox-4.5.2-py3-none-any.whl (148 kB)\n[Run tests/Run test coverage checks]   | Collecting pluggy>=1\n[Run tests/Run test coverage checks]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[Run tests/Run code quality checks ]   | Collecting cachetools>=5.3\n[Run tests/Run code quality checks ]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[Run tests/Run test coverage checks]   | Collecting colorama>=0.4.6\n[Run tests/Run test coverage checks]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[Run tests/Run code quality checks ]   | Collecting pluggy>=1\n[Run tests/Run code quality checks ]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[Run tests/Run test coverage checks]   | Collecting packaging>=23.1\n[Run tests/Run test coverage checks]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[Run tests/Run code quality checks ]   | Collecting tomli>=2.0.1\n[Run tests/Run code quality checks ]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[Run tests/Run test coverage checks]   | Collecting pyproject-api>=1.5.1\n[Run tests/Run test coverage checks]   |   Downloading pyproject_api-1.5.1-py3-none-any.whl (12 kB)\n[Run tests/Run test coverage checks]   | Collecting chardet>=5.1\n[Run tests/Run test coverage checks]   |   Downloading chardet-5.1.0-py3-none-any.whl (199 kB)\n[Run tests/Run test coverage checks]   | Collecting platformdirs>=3.5.1\n[Run tests/Run test coverage checks]   |   Downloading platformdirs-3.5.1-py3-none-any.whl (15 kB)\n[Run tests/Run test coverage checks]   | Collecting tomli>=2.0.1\n[Run tests/Run code quality checks ]   | Collecting virtualenv>=20.23\n[Run tests/Run code quality checks ]   |   Downloading virtualenv-20.23.0-py3-none-any.whl (3.3 MB)\n[Run tests/Run test coverage checks]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[Run tests/Run code quality checks ]   | Collecting filelock>=3.12\n[Run tests/Run code quality checks ]   |   Downloading filelock-3.12.0-py3-none-any.whl (10 kB)\n[Run tests/Run code quality checks ]   | Collecting platformdirs>=3.5.1\n[Run tests/Run test coverage checks]   | Collecting virtualenv>=20.23\n[Run tests/Run code quality checks ]   |   Downloading platformdirs-3.5.1-py3-none-any.whl (15 kB)\n[Run tests/Run test coverage checks]   |   Downloading virtualenv-20.23.0-py3-none-any.whl (3.3 MB)\n[Run tests/Run code quality checks ]   | Collecting colorama>=0.4.6\n[Run tests/Run code quality checks ]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[Run tests/Run code quality checks ]   | Collecting pyproject-api>=1.5.1\n[Run tests/Run code quality checks ]   |   Downloading pyproject_api-1.5.1-py3-none-any.whl (12 kB)\n[Run tests/Run test coverage checks]   | Collecting filelock>=3.12\n[Run tests/Run test coverage checks]   |   Downloading filelock-3.12.0-py3-none-any.whl (10 kB)\n[Run tests/Run code quality checks ]   | Collecting packaging>=23.1\n[Run tests/Run code quality checks ]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[Run tests/Run code quality checks ]   | Collecting chardet>=5.1\n[Run tests/Run code quality checks ]   |   Downloading chardet-5.1.0-py3-none-any.whl (199 kB)\n[Run tests/Run test coverage checks]   | Collecting cachetools>=5.3\n[Run tests/Run test coverage checks]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[Run tests/Run code quality checks ]   | Collecting distlib<1,>=0.3.6\n[Run tests/Run code quality checks ]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[Run tests/Run test coverage checks]   | Collecting distlib<1,>=0.3.6\n[Run tests/Run test coverage checks]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[Run tests/Run test coverage checks]   | Installing collected packages: tomli, platformdirs, packaging, filelock, distlib, virtualenv, pyproject-api, pluggy, colorama, chardet, cachetools, tox\n[Run tests/Run code quality checks ]   | Installing collected packages: tomli, platformdirs, packaging, filelock, distlib, virtualenv, pyproject-api, pluggy, colorama, chardet, cachetools, tox\n[Run tests/Run code quality checks ]   | Successfully installed cachetools-5.3.1 chardet-5.1.0 colorama-0.4.6 distlib-0.3.6 filelock-3.12.0 packaging-23.1 platformdirs-3.5.1 pluggy-1.0.0 pyproject-api-1.5.1 tomli-2.0.1 tox-4.5.2 virtualenv-20.23.0\n[Run tests/Run test coverage checks]   | Successfully installed cachetools-5.3.1 chardet-5.1.0 colorama-0.4.6 distlib-0.3.6 filelock-3.12.0 packaging-23.1 platformdirs-3.5.1 pluggy-1.0.0 pyproject-api-1.5.1 tomli-2.0.1 tox-4.5.2 virtualenv-20.23.0\n[Run tests/Run test coverage checks]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[Run tests/Run test coverage checks]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.9.6/x64/bin/python -m pip install --upgrade pip' command.\n[Run tests/Run test coverage checks]   \u2705  Success - Main Install tox\n[Run tests/Run test coverage checks] \u2b50 Run Main Run tests with coverage\n[Run tests/Run test coverage checks]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Run tests/Run code quality checks ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[Run tests/Run code quality checks ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.9.6/x64/bin/python -m pip install --upgrade pip' command.\n[Run tests/Run code quality checks ]   \u2705  Success - Main Install tox\n[Run tests/Run code quality checks ] \u2b50 Run Main Check code formatting\n[Run tests/Run code quality checks ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Run tests/Run code quality checks ]   | black: install_deps> python -I -m pip install black\n[Run tests/Run test coverage checks]   | coverage: install_deps> python -I -m pip install coverage\n[Run tests/Run test coverage checks]   | .pkg: install_requires> python -I -m pip install setuptools\n[Run tests/Run test coverage checks]   | .pkg: _optional_hooks> python /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta\n[Run tests/Run test coverage checks]   | .pkg: get_requires_for_build_sdist> python /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta\n[Run tests/Run test coverage checks]   | .pkg: freeze> python -m pip freeze --all\n[Run tests/Run test coverage checks]   | .pkg: pip==23.1.2,setuptools==67.7.2,wheel==0.40.0\n[Run tests/Run test coverage checks]   | .pkg: build_sdist> python /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta\n[Run tests/Run test coverage checks]   | coverage: install_package> python -I -m pip install --force-reinstall --no-deps /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/python-websockets-websockets/.tox/.tmp/package/1/websockets-12.0.dev23+g1bf9d1d.tar.gz\n[Run tests/Run code quality checks ]   | .pkg: _optional_hooks> python /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta\n[Run tests/Run code quality checks ]   | .pkg: get_requires_for_build_sdist> python /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta\n[Run tests/Run code quality checks ]   | .pkg: freeze> python -m pip freeze --all\n[Run tests/Run code quality checks ]   | .pkg: pip==23.1.2,setuptools==67.7.2,wheel==0.40.0\n[Run tests/Run code quality checks ]   | .pkg: build_sdist> python /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta\n[Run tests/Run code quality checks ]   | black: install_package> python -I -m pip install --force-reinstall --no-deps /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/python-websockets-websockets/.tox/.tmp/package/2/websockets-12.0.dev23+g1bf9d1d.tar.gz\n[Run tests/Run test coverage checks]   | coverage: freeze> python -m pip freeze --all\n[Run tests/Run test coverage checks]   | coverage: coverage==7.2.6,pip==23.1.2,setuptools==67.7.2,websockets @ file:///tmp/de65f406-fe28-11ed-a890-af2cc187fc11/python-websockets-websockets/.tox/.tmp/package/1/websockets-12.0.dev23%2Bg1bf9d1d.tar.gz#sha256=0c41de1730bfbae8a3aeab7741f63e52d4bdc7e40effbe5114f8f4d613a20970,wheel==0.40.0\n[Run tests/Run test coverage checks]   | coverage: commands[0]> python -m coverage erase\n[Run tests/Run test coverage checks]   | Can't read 'pyproject.toml' without TOML support. Install with [toml] extra\n[Run tests/Run test coverage checks]   | coverage: exit 1 (0.20 seconds) /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/python-websockets-websockets> python -m coverage erase pid=127\n[Run tests/Run test coverage checks]   | .pkg: _exit> python /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta\n[Run tests/Run test coverage checks]   |   coverage: FAIL code 1 (21.47=setup[21.27]+cmd[0.20] seconds)\n[Run tests/Run test coverage checks]   |   evaluation failed :( (21.70 seconds)\n[Run tests/Run test coverage checks]   \u274c  Failure - Main Run tests with coverage\n[Run tests/Run test coverage checks] exitcode '1': failure\n[Run tests/Run code quality checks ]   | black: freeze> python -m pip freeze --all\n[Run tests/Run code quality checks ]   | black: black==23.3.0,click==8.1.3,mypy-extensions==1.0.0,packaging==23.1,pathspec==0.11.1,pip==23.1.2,platformdirs==3.5.1,setuptools==67.7.2,tomli==2.0.1,typing_extensions==4.6.2,websockets @ file:///tmp/de65f406-fe28-11ed-a890-af2cc187fc11/python-websockets-websockets/.tox/.tmp/package/2/websockets-12.0.dev23%2Bg1bf9d1d.tar.gz#sha256=5bf28cc72633cc95c62b1a1f1c78fee00c57ba6ffc65ee50f4d0ee55fd0e7ce1,wheel==0.40.0\n[Run tests/Run code quality checks ]   | black: commands[0]> black --check src tests\n[Run tests/Run code quality checks ]   | All done! \u2728 \ud83c\udf70 \u2728\n[Run tests/Run code quality checks ]   | 82 files would be left unchanged.\n[Run tests/Run code quality checks ]   | .pkg: _exit> python /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta\n[Run tests/Run code quality checks ]   |   black: OK (24.03=setup[22.83]+cmd[1.20] seconds)\n[Run tests/Run code quality checks ]   |   congratulations :) (24.21 seconds)\n[Run tests/Run code quality checks ]   \u2705  Success - Main Check code formatting\n[Run tests/Run code quality checks ] \u2b50 Run Main Check code style\n[Run tests/Run code quality checks ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[Run tests/Run test coverage checks] \ud83c\udfc1  Job failed\n[Run tests/Run code quality checks ]   | ruff: install_deps> python -I -m pip install ruff\n[Run tests/Run code quality checks ]   | .pkg: _optional_hooks> python /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta\n[Run tests/Run code quality checks ]   | .pkg: get_requires_for_build_sdist> python /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta\n[Run tests/Run code quality checks ]   | .pkg: freeze> python -m pip freeze --all\n[Run tests/Run code quality checks ]   | .pkg: pip==23.1.2,setuptools==67.7.2,wheel==0.40.0\n[Run tests/Run code quality checks ]   | .pkg: build_sdist> python /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta\n[Run tests/Run code quality checks ]   | ruff: install_package> python -I -m pip install --force-reinstall --no-deps /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/python-websockets-websockets/.tox/.tmp/package/3/websockets-12.0.dev23+g1bf9d1d.tar.gz\n[Run tests/Run code quality checks ]   | ruff: freeze> python -m pip freeze --all\n[Run tests/Run code quality checks ]   | ruff: pip==23.1.2,ruff==0.0.270,setuptools==67.7.2,websockets @ file:///tmp/de65f406-fe28-11ed-a890-af2cc187fc11/python-websockets-websockets/.tox/.tmp/package/3/websockets-12.0.dev23%2Bg1bf9d1d.tar.gz#sha256=a0c3ad28d2483ba13315f2809c8ce845e2a6219dc06750798b4eaeb42004443b,wheel==0.40.0\n[Run tests/Run code quality checks ]   | ruff: commands[0]> ruff src tests\n[Run tests/Run code quality checks ]   | .pkg: _exit> python /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta\n[Run tests/Run code quality checks ]   |   ruff: OK (15.45=setup[15.36]+cmd[0.09] seconds)\n[Run tests/Run code quality checks ]   |   congratulations :) (15.59 seconds)\n[Run tests/Run code quality checks ]   \u2705  Success - Main Check code style\n[Run tests/Run code quality checks ] \u2b50 Run Main Check types statically\n[Run tests/Run code quality checks ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[Run tests/Run code quality checks ]   | mypy: install_deps> python -I -m pip install mypy\n[Run tests/Run code quality checks ]   | .pkg: _optional_hooks> python /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta\n[Run tests/Run code quality checks ]   | .pkg: get_requires_for_build_sdist> python /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta\n[Run tests/Run code quality checks ]   | .pkg: freeze> python -m pip freeze --all\n[Run tests/Run code quality checks ]   | .pkg: pip==23.1.2,setuptools==67.7.2,wheel==0.40.0\n[Run tests/Run code quality checks ]   | .pkg: build_sdist> python /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta\n[Run tests/Run code quality checks ]   | mypy: install_package> python -I -m pip install --force-reinstall --no-deps /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/python-websockets-websockets/.tox/.tmp/package/4/websockets-12.0.dev23+g1bf9d1d.tar.gz\n[Run tests/Run code quality checks ]   | mypy: freeze> python -m pip freeze --all\n[Run tests/Run code quality checks ]   | mypy: mypy==1.3.0,mypy-extensions==1.0.0,pip==23.1.2,setuptools==67.7.2,tomli==2.0.1,typing_extensions==4.6.2,websockets @ file:///tmp/de65f406-fe28-11ed-a890-af2cc187fc11/python-websockets-websockets/.tox/.tmp/package/4/websockets-12.0.dev23%2Bg1bf9d1d.tar.gz#sha256=700be81fb4b64a9b867d48282f641b5715fb0fb93f0fbcdf194705a184a71431,wheel==0.40.0\n[Run tests/Run code quality checks ]   | mypy: commands[0]> mypy --strict src\n[Run tests/Run code quality checks ]   | src/websockets/legacy/async_timeout.py:21: error: Function is missing a type annotation  [no-untyped-def]\n[Run tests/Run code quality checks ]   | src/websockets/legacy/protocol.py:1645: error: Name \"ExceptionGroup\" is not defined  [name-defined]\n[Run tests/Run code quality checks ]   | Found 2 errors in 2 files (checked 39 source files)\n[Run tests/Run code quality checks ]   | mypy: exit 1 (6.09 seconds) /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/python-websockets-websockets> mypy --strict src pid=429\n[Run tests/Run code quality checks ]   | .pkg: _exit> python /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages/pyproject_api/_backend.py True setuptools.build_meta\n[Run tests/Run code quality checks ]   |   mypy: FAIL code 1 (22.95=setup[16.86]+cmd[6.09] seconds)\n[Run tests/Run code quality checks ]   |   evaluation failed :( (23.09 seconds)\n[Run tests/Run code quality checks ]   \u274c  Failure - Main Check types statically\n[Run tests/Run code quality checks ] exitcode '1': failure\n[Run tests/Run code quality checks ] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Job 'Run test coverage checks' failed\n"
}