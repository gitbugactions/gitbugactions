{
    "repository": "singingwolfboy/flask-misaka",
    "clone_url": "https://github.com/singingwolfboy/flask-misaka.git",
    "timestamp": "2023-05-29T14:36:21.965902Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[Test/pytest: Python 2.x] \ud83d\ude80  Start image=crawlergpt:latest\n[Test/pytest: Python 2.x]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Test/pytest: Python 2.x]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/pytest: Python 2.x]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Test/pytest: Python 2.x]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/singingwolfboy-flask-misaka] user=0 workdir=\n[Test/pytest: Python 2.x]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[Test/pytest: Python 2.x]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v1\n[Test/pytest: Python 2.x] \ud83e\uddea  Matrix: map[python-version:2.x]\n[Test/pytest: Python 2.x] \u2b50 Run Main actions/checkout@v2\n[Test/pytest: Python 2.x]   \u2705  Success - Main actions/checkout@v2\n[Test/pytest: Python 2.x] \u2b50 Run Main actions/setup-python@v2\n[Test/pytest: Python 2.x]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[Test/pytest: Python 2.x]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[Test/pytest: Python 2.x]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[Test/pytest: Python 2.x]   \ud83d\udcac  ::debug::Semantic version spec of 2.x is 2.x\n[Test/pytest: Python 2.x]   \ud83d\udcac  ::debug::isExplicit: \n[Test/pytest: Python 2.x]   \ud83d\udcac  ::debug::explicit? false\n[Test/pytest: Python 2.x]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Test/pytest: Python 2.x]   \ud83d\udcac  ::debug::explicit? true\n[Test/pytest: Python 2.x]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Test/pytest: Python 2.x]   \ud83d\udcac  ::debug::explicit? true\n[Test/pytest: Python 2.x]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Test/pytest: Python 2.x]   \ud83d\udcac  ::debug::explicit? true\n[Test/pytest: Python 2.x]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Test/pytest: Python 2.x]   \ud83d\udcac  ::debug::explicit? true\n[Test/pytest: Python 2.x]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Test/pytest: Python 2.x]   \ud83d\udcac  ::debug::explicit? true\n[Test/pytest: Python 2.x]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Test/pytest: Python 2.x]   \ud83d\udcac  ::debug::explicit? true\n[Test/pytest: Python 2.x]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Test/pytest: Python 2.x]   \ud83d\udcac  ::debug::matched: 2.7.18\n[Test/pytest: Python 2.x]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/2.7.18/x64\n[Test/pytest: Python 2.x]   \ud83d\udcac  ::debug::Found tool in cache Python 2.7.18 x64\n[Test/pytest: Python 2.x]   | Successfully setup CPython (2.7.18)\n[Test/pytest: Python 2.x]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[Test/pytest: Python 2.x]   \u2705  Success - Main actions/setup-python@v2\n[Test/pytest: Python 2.x]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/2.7.18/x64\n[Test/pytest: Python 2.x]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/2.7.18/x64/lib\n[Test/pytest: Python 2.x]   \u2699  ::set-output:: python-version=2.7.18\n[Test/pytest: Python 2.x]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64\n[Test/pytest: Python 2.x]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/2.7.18/x64/bin\n[Test/pytest: Python 2.x] \u2b50 Run Main Install dependencies\n[Test/pytest: Python 2.x]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[Test/pytest: Python 2.x]   | DEPRECATION: Python 2.7 reached the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 is no longer maintained. pip 21.0 will drop support for Python 2.7 in January 2021. More details about Python 2 support in pip can be found at https://pip.pypa.io/en/latest/development/release-process/#python-2-support pip 21.0 will remove support for this functionality.\n[Test/pytest: Python 2.x]   | Collecting Flask>=0.7\n[Test/pytest: Python 2.x]   |   Downloading Flask-1.1.4-py2.py3-none-any.whl (94 kB)\n[Test/pytest: Python 2.x]   | Collecting misaka<3.0,>=2.0\n[Test/pytest: Python 2.x]   |   Downloading misaka-2.1.1.tar.gz (125 kB)\n[Test/pytest: Python 2.x]   | Collecting coverage\n[Test/pytest: Python 2.x]   |   Downloading coverage-5.5-cp27-cp27mu-manylinux2010_x86_64.whl (236 kB)\n[Test/pytest: Python 2.x]   | Collecting mock\n[Test/pytest: Python 2.x]   |   Downloading mock-3.0.5-py2.py3-none-any.whl (25 kB)\n[Test/pytest: Python 2.x]   | Collecting click<8.0,>=5.1\n[Test/pytest: Python 2.x]   |   Downloading click-7.1.2-py2.py3-none-any.whl (82 kB)\n[Test/pytest: Python 2.x]   | Collecting Jinja2<3.0,>=2.10.1\n[Test/pytest: Python 2.x]   |   Downloading Jinja2-2.11.3-py2.py3-none-any.whl (125 kB)\n[Test/pytest: Python 2.x]   | Collecting Werkzeug<2.0,>=0.15\n[Test/pytest: Python 2.x]   |   Downloading Werkzeug-1.0.1-py2.py3-none-any.whl (298 kB)\n[Test/pytest: Python 2.x]   | Collecting itsdangerous<2.0,>=0.24\n[Test/pytest: Python 2.x]   |   Downloading itsdangerous-1.1.0-py2.py3-none-any.whl (16 kB)\n[Test/pytest: Python 2.x]   | Collecting cffi>=1.0.0\n[Test/pytest: Python 2.x]   |   Downloading cffi-1.15.1-cp27-cp27mu-manylinux1_x86_64.whl (390 kB)\n[Test/pytest: Python 2.x]   | Collecting funcsigs>=1; python_version < \"3.3\"\n[Test/pytest: Python 2.x]   |   Downloading funcsigs-1.0.2-py2.py3-none-any.whl (17 kB)\n[Test/pytest: Python 2.x]   | Collecting six\n[Test/pytest: Python 2.x]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[Test/pytest: Python 2.x]   | Collecting MarkupSafe>=0.23\n[Test/pytest: Python 2.x]   |   Downloading MarkupSafe-1.1.1-cp27-cp27mu-manylinux1_x86_64.whl (24 kB)\n[Test/pytest: Python 2.x]   | Collecting pycparser\n[Test/pytest: Python 2.x]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[Test/pytest: Python 2.x]   | Using legacy 'setup.py install' for misaka, since package 'wheel' is not installed.\n[Test/pytest: Python 2.x]   | Installing collected packages: click, MarkupSafe, Jinja2, Werkzeug, itsdangerous, Flask, pycparser, cffi, misaka, coverage, funcsigs, six, mock\n[Test/pytest: Python 2.x]   |     Running setup.py install for misaka: started\n[Test/pytest: Python 2.x]   |     Running setup.py install for misaka: finished with status 'done'\n[Test/pytest: Python 2.x]   | Successfully installed Flask-1.1.4 Jinja2-2.11.3 MarkupSafe-1.1.1 Werkzeug-1.0.1 cffi-1.15.1 click-7.1.2 coverage-5.5 funcsigs-1.0.2 itsdangerous-1.1.0 misaka-2.1.1 mock-3.0.5 pycparser-2.21 six-1.16.0\n[Test/pytest: Python 2.x]   \u2705  Success - Main Install dependencies\n[Test/pytest: Python 2.x] \u2b50 Run Main Run tests\n[Test/pytest: Python 2.x]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Test/pytest: Python 2.x]   | running test\n[Test/pytest: Python 2.x]   | running egg_info\n[Test/pytest: Python 2.x]   | creating Flask_Misaka.egg-info\n[Test/pytest: Python 2.x]   | writing requirements to Flask_Misaka.egg-info/requires.txt\n[Test/pytest: Python 2.x]   | writing Flask_Misaka.egg-info/PKG-INFO\n[Test/pytest: Python 2.x]   | writing top-level names to Flask_Misaka.egg-info/top_level.txt\n[Test/pytest: Python 2.x]   | writing dependency_links to Flask_Misaka.egg-info/dependency_links.txt\n[Test/pytest: Python 2.x]   | writing manifest file 'Flask_Misaka.egg-info/SOURCES.txt'\n[Test/pytest: Python 2.x]   | reading manifest file 'Flask_Misaka.egg-info/SOURCES.txt'\n[Test/pytest: Python 2.x]   | reading manifest template 'MANIFEST.in'\n[Test/pytest: Python 2.x]   | warning: no previously-included files matching '*.pyc' found under directory 'docs'\n[Test/pytest: Python 2.x]   | warning: no previously-included files matching '*.pyo' found under directory 'docs'\n[Test/pytest: Python 2.x]   | warning: no previously-included files matching '*.DS_Store' found under directory 'docs'\n[Test/pytest: Python 2.x]   | no previously-included directories found matching 'docs/_build'\n[Test/pytest: Python 2.x]   | no previously-included directories found matching 'docs/_themes/.git'\n[Test/pytest: Python 2.x]   | writing manifest file 'Flask_Misaka.egg-info/SOURCES.txt'\n[Test/pytest: Python 2.x]   | running build_ext\n[Test/pytest: Python 2.x]   | test_init (tests.FactoryPatternTests) ... ok\n[Test/pytest: Python 2.x]   | test_custom_renderer (tests.MarkdownExtensionTests) ... ok\n[Test/pytest: Python 2.x]   | test_defaults (tests.MarkdownExtensionTests) ... ok\n[Test/pytest: Python 2.x]   | test_defined_and_undefined_options (tests.MarkdownExtensionTests) ... ok\n[Test/pytest: Python 2.x]   | test_inverse_ext (tests.MarkdownExtensionTests) ... ok\n[Test/pytest: Python 2.x]   | test_inverse_render (tests.MarkdownExtensionTests) ... ok\n[Test/pytest: Python 2.x]   | test_one_ext (tests.MarkdownExtensionTests) ... ok\n[Test/pytest: Python 2.x]   | test_one_ext_one_render (tests.MarkdownExtensionTests) ... ok\n[Test/pytest: Python 2.x]   | test_one_render (tests.MarkdownExtensionTests) ... ok\n[Test/pytest: Python 2.x]   | test_override_defaults (tests.MarkdownExtensionTests) ... ok\n[Test/pytest: Python 2.x]   | test_set_defaults (tests.MarkdownExtensionTests) ... ok\n[Test/pytest: Python 2.x]   | test_smartypants (tests.MarkdownExtensionTests) ... ok\n[Test/pytest: Python 2.x]   | test_smartypants_table (tests.MarkdownExtensionTests)\n[Test/pytest: Python 2.x]   | smartypants should not interfere with processing tables ... ok\n[Test/pytest: Python 2.x]   | test_two_ext (tests.MarkdownExtensionTests) ... ok\n[Test/pytest: Python 2.x]   | test_two_ext_two_render (tests.MarkdownExtensionTests) ... ok\n[Test/pytest: Python 2.x]   | test_two_render (tests.MarkdownExtensionTests) ... ok\n[Test/pytest: Python 2.x]   | test_undefined_option (tests.MarkdownExtensionTests) ... ok\n[Test/pytest: Python 2.x]   | \n[Test/pytest: Python 2.x]   | ----------------------------------------------------------------------\n[Test/pytest: Python 2.x]   | Ran 17 tests in 0.015s\n[Test/pytest: Python 2.x]   | \n[Test/pytest: Python 2.x]   | OK\n[Test/pytest: Python 2.x]   \u2705  Success - Main Run tests\n[Test/pytest: Python 2.x] \u2b50 Run Main Upload coverage to Codecov\n[Test/pytest: Python 2.x]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/codecov-codecov-action@v1/ dst=/var/run/act/actions/codecov-codecov-action@v1/\n[Test/pytest: Python 2.x]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/codecov-codecov-action@v1/] user=0 workdir=\n[Test/pytest: Python 2.x]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v1/dist/index.js] user= workdir=\n[Test/pytest: Python 2.x]   | [command]/usr/bin/bash codecov.sh -n  -F  -Q github-action-v1.5.2\n[Test/pytest: Python 2.x]   | \n[Test/pytest: Python 2.x]   |   _____          _\n[Test/pytest: Python 2.x]   |  / ____|        | |\n[Test/pytest: Python 2.x]   | | |     ___   __| | ___  ___ _____   __\n[Test/pytest: Python 2.x]   | | |    / _ \\ / _` |/ _ \\/ __/ _ \\ \\ / /\n[Test/pytest: Python 2.x]   | | |___| (_) | (_| |  __/ (_| (_) \\ V /\n[Test/pytest: Python 2.x]   |  \\_____\\___/ \\__,_|\\___|\\___\\___/ \\_/\n[Test/pytest: Python 2.x]   |                               Bash-1.0.3\n[Test/pytest: Python 2.x]   | \n[Test/pytest: Python 2.x]   | \n[Test/pytest: Python 2.x]   | \u001b[0;36m==>\u001b[0m git version 2.33.0 found\n[Test/pytest: Python 2.x]   | \u001b[0;36m==>\u001b[0m curl 7.68.0 (x86_64-pc-linux-gnu) libcurl/7.68.0 OpenSSL/1.1.1f zlib/1.2.11 brotli/1.0.7 libidn2/2.2.0 libpsl/0.21.0 (+libidn2/2.2.0) libssh/0.9.3/openssl/zlib nghttp2/1.40.0 librtmp/2.3\n[Test/pytest: Python 2.x]   | Release-Date: 2020-01-08\n[Test/pytest: Python 2.x]   | Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtmp rtsp scp sftp smb smbs smtp smtps telnet tftp \n[Test/pytest: Python 2.x]   | Features: AsynchDNS brotli GSS-API HTTP2 HTTPS-proxy IDN IPv6 Kerberos Largefile libz NTLM NTLM_WB PSL SPNEGO SSL TLS-SRP UnixSockets\n[Test/pytest: Python 2.x]   | \u001b[0;90m==>\u001b[0m GitHub Actions detected.\n[Test/pytest: Python 2.x]   |     Env vars used:\n[Test/pytest: Python 2.x]   |       -> GITHUB_ACTIONS:    true\n[Test/pytest: Python 2.x]   |       -> GITHUB_HEAD_REF:   \n[Test/pytest: Python 2.x]   |       -> GITHUB_REF:        refs/heads/main\n[Test/pytest: Python 2.x]   |       -> GITHUB_REPOSITORY: singingwolfboy/flask-misaka\n[Test/pytest: Python 2.x]   |       -> GITHUB_RUN_ID:     1\n[Test/pytest: Python 2.x]   |       -> GITHUB_SHA:        d960e512ac1ea16225d236984fcf130a46bb7b83\n[Test/pytest: Python 2.x]   |       -> GITHUB_WORKFLOW:   Test\n[Test/pytest: Python 2.x]   |     \u001b[0;90mproject root:\u001b[0m .\n[Test/pytest: Python 2.x]   |     \u001b[0;32mYaml not found, that's ok! Learn more at\u001b[0m \u001b[0;36mhttp://docs.codecov.io/docs/codecov-yaml\u001b[0m\n[Test/pytest: Python 2.x]   | \u001b[0;90m==>\u001b[0m Running gcov in . \u001b[0;90m(disable via -X gcov)\u001b[0m\n[Test/pytest: Python 2.x]   | \u001b[0;90m==>\u001b[0m Python coveragepy exists \u001b[0;90mdisable via -X coveragepy\u001b[0m\n[Test/pytest: Python 2.x]   |     \u001b[0;90m->\u001b[0m Running coverage xml\n[Test/pytest: Python 2.x]   | \u001b[0;90m==>\u001b[0m Searching for coverage reports in:\n[Test/pytest: Python 2.x]   |     \u001b[0;32m+\u001b[0m .\n[Test/pytest: Python 2.x]   |     \u001b[0;90m->\u001b[0m Found 1 reports\n[Test/pytest: Python 2.x]   | \u001b[0;90m==>\u001b[0m Detecting git/mercurial file structure\n[Test/pytest: Python 2.x]   | \u001b[0;90m==>\u001b[0m Reading reports\n[Test/pytest: Python 2.x]   |     \u001b[0;32m+\u001b[0m ./coverage.xml \u001b[0;90mbytes=2445\u001b[0m\n[Test/pytest: Python 2.x]   | \u001b[0;90m==>\u001b[0m Appending adjustments\n[Test/pytest: Python 2.x]   |     \u001b[0;36mhttps://docs.codecov.io/docs/fixing-reports\u001b[0m\n[Test/pytest: Python 2.x]   |     \u001b[0;90m->\u001b[0m No adjustments found\n[Test/pytest: Python 2.x]   | \u001b[0;90m==>\u001b[0m Gzipping contents\n[Test/pytest: Python 2.x]   |         4.0K\t/tmp/codecov.cZhVBC.gz\n[Test/pytest: Python 2.x]   | \u001b[0;90m==>\u001b[0m Uploading reports\n[Test/pytest: Python 2.x]   |     \u001b[0;90murl:\u001b[0m https://codecov.io\n[Test/pytest: Python 2.x]   |     \u001b[0;90mquery:\u001b[0m branch=main&commit=d960e512ac1ea16225d236984fcf130a46bb7b83&build=1&build_url=http%3A%2F%2Fgithub.com%2Fsingingwolfboy%2Fflask-misaka%2Factions%2Fruns%2F1&name=&tag=&slug=singingwolfboy%2Fflask-misaka&service=github-actions&flags=&pr=&job=Test&cmd_args=n,F,Q\n[Test/pytest: Python 2.x]   | \u001b[0;90m->\u001b[0m  Pinging Codecov\n[Test/pytest: Python 2.x]   | https://codecov.io/upload/v4?package=github-action-v1.5.2-1.0.3&token=secret&branch=main&commit=d960e512ac1ea16225d236984fcf130a46bb7b83&build=1&build_url=http%3A%2F%2Fgithub.com%2Fsingingwolfboy%2Fflask-misaka%2Factions%2Fruns%2F1&name=&tag=&slug=singingwolfboy%2Fflask-misaka&service=github-actions&flags=&pr=&job=Test&cmd_args=n,F,Q\n[Test/pytest: Python 2.x]   | \u001b[0;31m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\n[Test/pytest: Python 2.x]   | 404\u001b[0m\n[Test/pytest: Python 2.x]   | \u001b[0;90m==>\u001b[0m Uploading to Codecov\n[Test/pytest: Python 2.x]   |   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n[Test/pytest: Python 2.x]   |                                  Dload  Upload   Total   Spent    Left  Speed\n[Test/pytest: Python 2.x]   | \r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100   907  100   171  100   736    571   2461 --:--:-- --:--:-- --:--:--  3160\n[Test/pytest: Python 2.x]   |     \u001b[0;32m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\u001b[0m\n[Test/pytest: Python 2.x]   \u2705  Success - Main Upload coverage to Codecov\n[Test/pytest: Python 2.x] \u2b50 Run Post actions/setup-python@v2\n[Test/pytest: Python 2.x]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[Test/pytest: Python 2.x]   \u2705  Success - Post actions/setup-python@v2\n[Test/pytest: Python 2.x] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}