{
    "repository": "awslabs/amazon-kinesis-client-python",
    "clone_url": "https://github.com/awslabs/amazon-kinesis-client-python.git",
    "timestamp": "2023-05-29T15:42:59.604008Z",
    "clone_success": true,
    "number of actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_stdout": "[UnitTestCoverage/build] \ud83d\ude80  Start image=crawlergpt:latest\n[UnitTestCoverage/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[UnitTestCoverage/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[UnitTestCoverage/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[UnitTestCoverage/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/awslabs-amazon-kinesis-client-python] user=0 workdir=\n[UnitTestCoverage/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[UnitTestCoverage/build] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.6]\n[UnitTestCoverage/build] \u2b50 Run Main actions/checkout@v2\n[UnitTestCoverage/build]   \u2705  Success - Main actions/checkout@v2\n[UnitTestCoverage/build] \u2b50 Run Main Set up Python 3.6\n[UnitTestCoverage/build]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[UnitTestCoverage/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[UnitTestCoverage/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[UnitTestCoverage/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.6 is 3.6\n[UnitTestCoverage/build]   \ud83d\udcac  ::debug::isExplicit: \n[UnitTestCoverage/build]   \ud83d\udcac  ::debug::explicit? false\n[UnitTestCoverage/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[UnitTestCoverage/build]   \ud83d\udcac  ::debug::explicit? true\n[UnitTestCoverage/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[UnitTestCoverage/build]   \ud83d\udcac  ::debug::explicit? true\n[UnitTestCoverage/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[UnitTestCoverage/build]   \ud83d\udcac  ::debug::explicit? true\n[UnitTestCoverage/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[UnitTestCoverage/build]   \ud83d\udcac  ::debug::explicit? true\n[UnitTestCoverage/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[UnitTestCoverage/build]   \ud83d\udcac  ::debug::explicit? true\n[UnitTestCoverage/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[UnitTestCoverage/build]   \ud83d\udcac  ::debug::explicit? true\n[UnitTestCoverage/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[UnitTestCoverage/build]   \ud83d\udcac  ::debug::matched: 3.6.14\n[UnitTestCoverage/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.6.14/x64\n[UnitTestCoverage/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.6.14 x64\n[UnitTestCoverage/build]   | Successfully setup CPython (3.6.14)\n[UnitTestCoverage/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[UnitTestCoverage/build]   \u2705  Success - Main Set up Python 3.6\n[UnitTestCoverage/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.6.14/x64\n[UnitTestCoverage/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.6.14/x64/lib\n[UnitTestCoverage/build]   \u2699  ::set-output:: python-version=3.6.14\n[UnitTestCoverage/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64\n[UnitTestCoverage/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64/bin\n[UnitTestCoverage/build] \u2b50 Run Main Install dependencies\n[UnitTestCoverage/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[UnitTestCoverage/build]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (21.2.4)\n[UnitTestCoverage/build]   | Collecting pip\n[UnitTestCoverage/build]   |   Downloading pip-21.3.1-py3-none-any.whl (1.7 MB)\n[UnitTestCoverage/build]   | Installing collected packages: pip\n[UnitTestCoverage/build]   |   Attempting uninstall: pip\n[UnitTestCoverage/build]   |     Found existing installation: pip 21.2.4\n[UnitTestCoverage/build]   |     Uninstalling pip-21.2.4:\n[UnitTestCoverage/build]   |       Successfully uninstalled pip-21.2.4\n[UnitTestCoverage/build]   | Successfully installed pip-21.3.1\n[UnitTestCoverage/build]   | Collecting boto\n[UnitTestCoverage/build]   |   Downloading boto-2.49.0-py2.py3-none-any.whl (1.4 MB)\n[UnitTestCoverage/build]   | Collecting argparse\n[UnitTestCoverage/build]   |   Downloading argparse-1.4.0-py2.py3-none-any.whl (23 kB)\n[UnitTestCoverage/build]   | Installing collected packages: boto, argparse\n[UnitTestCoverage/build]   | Successfully installed argparse-1.4.0 boto-2.49.0\n[UnitTestCoverage/build]   | Collecting pytest\n[UnitTestCoverage/build]   |   Downloading pytest-7.0.1-py3-none-any.whl (296 kB)\n[UnitTestCoverage/build]   | Collecting mock\n[UnitTestCoverage/build]   |   Downloading mock-5.0.2-py3-none-any.whl (30 kB)\n[UnitTestCoverage/build]   | Collecting pluggy<2.0,>=0.12\n[UnitTestCoverage/build]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[UnitTestCoverage/build]   | Collecting tomli>=1.0.0\n[UnitTestCoverage/build]   |   Downloading tomli-1.2.3-py3-none-any.whl (12 kB)\n[UnitTestCoverage/build]   | Collecting iniconfig\n[UnitTestCoverage/build]   |   Downloading iniconfig-1.1.1-py2.py3-none-any.whl (5.0 kB)\n[UnitTestCoverage/build]   | Collecting attrs>=19.2.0\n[UnitTestCoverage/build]   |   Downloading attrs-22.2.0-py3-none-any.whl (60 kB)\n[UnitTestCoverage/build]   | Collecting importlib-metadata>=0.12\n[UnitTestCoverage/build]   |   Downloading importlib_metadata-4.8.3-py3-none-any.whl (17 kB)\n[UnitTestCoverage/build]   | Collecting py>=1.8.2\n[UnitTestCoverage/build]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[UnitTestCoverage/build]   | Collecting packaging\n[UnitTestCoverage/build]   |   Downloading packaging-21.3-py3-none-any.whl (40 kB)\n[UnitTestCoverage/build]   | Collecting typing-extensions>=3.6.4\n[UnitTestCoverage/build]   |   Downloading typing_extensions-4.1.1-py3-none-any.whl (26 kB)\n[UnitTestCoverage/build]   | Collecting zipp>=0.5\n[UnitTestCoverage/build]   |   Downloading zipp-3.6.0-py3-none-any.whl (5.3 kB)\n[UnitTestCoverage/build]   | Collecting pyparsing!=3.0.5,>=2.0.2\n[UnitTestCoverage/build]   |   Downloading pyparsing-3.0.9-py3-none-any.whl (98 kB)\n[UnitTestCoverage/build]   | Installing collected packages: zipp, typing-extensions, pyparsing, importlib-metadata, tomli, py, pluggy, packaging, iniconfig, attrs, pytest, mock\n[UnitTestCoverage/build]   | Successfully installed attrs-22.2.0 importlib-metadata-4.8.3 iniconfig-1.1.1 mock-5.0.2 packaging-21.3 pluggy-1.0.0 py-1.11.0 pyparsing-3.0.9 pytest-7.0.1 tomli-1.2.3 typing-extensions-4.1.1 zipp-3.6.0\n[UnitTestCoverage/build]   \u2705  Success - Main Install dependencies\n[UnitTestCoverage/build] \u2b50 Run Main Test with pytest\n[UnitTestCoverage/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[UnitTestCoverage/build]   | ============================= test session starts ==============================\n[UnitTestCoverage/build]   | platform linux -- Python 3.6.14, pytest-7.0.1, pluggy-1.0.0\n[UnitTestCoverage/build]   | rootdir: /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/awslabs-amazon-kinesis-client-python\n[UnitTestCoverage/build]   | collected 11 items\n[UnitTestCoverage/build]   | \n[UnitTestCoverage/build]   | test/test_amazon_kclpy.py ....                                           [ 36%]\n[UnitTestCoverage/build]   | test/test_amazon_kclpy_input_output_integration.py .                     [ 45%]\n[UnitTestCoverage/build]   | test/v3/delegate_test.py ......                                          [100%]\n[UnitTestCoverage/build]   | \n[UnitTestCoverage/build]   | =============================== warnings summary ===============================\n[UnitTestCoverage/build]   | test/test_amazon_kclpy_input_output_integration.py:63\n[UnitTestCoverage/build]   |   /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/awslabs-amazon-kinesis-client-python/test/test_amazon_kclpy_input_output_integration.py:63: DeprecationWarning: invalid escape sequence \\s\n[UnitTestCoverage/build]   |     return re.sub('\\s*', '', s)\n[UnitTestCoverage/build]   | \n[UnitTestCoverage/build]   | test/v3/__init__.py:5\n[UnitTestCoverage/build]   |   /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/awslabs-amazon-kinesis-client-python/test/v3/__init__.py:5: PytestUnknownMarkWarning: Unknown pytest.mark.webtests - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n[UnitTestCoverage/build]   |     pytestmark = pytest.mark.webtests\n[UnitTestCoverage/build]   | \n[UnitTestCoverage/build]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[UnitTestCoverage/build]   | ======================== 11 passed, 2 warnings in 0.34s ========================\n[UnitTestCoverage/build]   \u2705  Success - Main Test with pytest\n[UnitTestCoverage/build] \u2b50 Run Post Set up Python 3.6\n[UnitTestCoverage/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[UnitTestCoverage/build]   \u2705  Success - Post Set up Python 3.6\n[UnitTestCoverage/build] \ud83c\udfc1  Job succeeded\n",
    "actions_stderr": ""
}