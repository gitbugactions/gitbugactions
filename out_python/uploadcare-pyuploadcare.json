{
    "repository": "uploadcare/pyuploadcare",
    "clone_url": "https://github.com/uploadcare/pyuploadcare.git",
    "timestamp": "2023-05-29T14:15:15.248311Z",
    "clone_success": true,
    "number of actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_stdout": "[Tests/lint] \ud83d\ude80  Start image=crawlergpt:latest\n[Tests/lint]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[Tests/lint]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/lint]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[Tests/lint]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /tmp/de65f406-fe28-11ed-a890-af2cc187fc11/uploadcare-pyuploadcare] user=0 workdir=\n[Tests/lint]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[Tests/lint]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[Tests/lint] \u2b50 Run Pre Install Poetry\n[Tests/lint]   \u2705  Success - Pre Install Poetry\n[Tests/lint] \ud83e\uddea  Matrix: map[python-version:3.9]\n[Tests/lint] \u2b50 Run Main actions/checkout@v2\n[Tests/lint]   \u2705  Success - Main actions/checkout@v2\n[Tests/lint] \u2b50 Run Main Set up Python 3.9\n[Tests/lint]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[Tests/lint]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[Tests/lint]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[Tests/lint]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[Tests/lint]   \u2753  ::group::Installed versions\n[Tests/lint]   \ud83d\udcac  ::debug::Semantic version spec of 3.9 is 3.9\n[Tests/lint]   \ud83d\udcac  ::debug::isExplicit: \n[Tests/lint]   \ud83d\udcac  ::debug::explicit? false\n[Tests/lint]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[Tests/lint]   \ud83d\udcac  ::debug::explicit? true\n[Tests/lint]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[Tests/lint]   \ud83d\udcac  ::debug::explicit? true\n[Tests/lint]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[Tests/lint]   \ud83d\udcac  ::debug::explicit? true\n[Tests/lint]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[Tests/lint]   \ud83d\udcac  ::debug::explicit? true\n[Tests/lint]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[Tests/lint]   \ud83d\udcac  ::debug::explicit? true\n[Tests/lint]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[Tests/lint]   \ud83d\udcac  ::debug::explicit? true\n[Tests/lint]   \ud83d\udcac  ::debug::evaluating 6 versions\n[Tests/lint]   \ud83d\udcac  ::debug::matched: 3.9.6\n[Tests/lint]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[Tests/lint]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[Tests/lint]   | Successfully set up CPython (3.9.6)\n[Tests/lint]   \u2753  ::endgroup::\n[Tests/lint]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[Tests/lint]   \u2705  Success - Main Set up Python 3.9\n[Tests/lint]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib/pkgconfig\n[Tests/lint]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[Tests/lint]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[Tests/lint]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[Tests/lint]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[Tests/lint]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[Tests/lint]   \u2699  ::set-output:: python-version=3.9.6\n[Tests/lint]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.9.6/x64/bin/python\n[Tests/lint]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[Tests/lint]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[Tests/lint] \u2b50 Run Main Install Poetry\n[Tests/lint]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[Tests/lint]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1000 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[Tests/lint] \u2b50 Run Main Install and configure Poetry\n[Tests/lint]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[Tests/lint]   | \n[Tests/lint]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[Tests/lint]   | \n[Tests/lint]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[Tests/lint]   | \n[Tests/lint]   | Retrieving Poetry metadata\n[Tests/lint]   | \n[Tests/lint]   | # Welcome to Poetry!\n[Tests/lint]   | \n[Tests/lint]   | This will download and install the latest version of Poetry,\n[Tests/lint]   | a dependency and package manager for Python.\n[Tests/lint]   | \n[Tests/lint]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[Tests/lint]   | \n[Tests/lint]   | /home/runneradmin/.local/bin\n[Tests/lint]   | \n[Tests/lint]   | You can uninstall at any time by executing this script with the --uninstall option,\n[Tests/lint]   | and these changes will be reverted.\n[Tests/lint]   | \n[Tests/lint]   | Installing Poetry (1.5.0)\n[Tests/lint]   | Installing Poetry (1.5.0): Creating environment\n[Tests/lint]   | Installing Poetry (1.5.0): Installing Poetry\n[Tests/lint]   | Installing Poetry (1.5.0): Creating script\n[Tests/lint]   | Installing Poetry (1.5.0): Done\n[Tests/lint]   | \n[Tests/lint]   | Poetry (1.5.0) is installed now. Great!\n[Tests/lint]   | \n[Tests/lint]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[Tests/lint]   | environment variable.\n[Tests/lint]   | \n[Tests/lint]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[Tests/lint]   | \n[Tests/lint]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[Tests/lint]   | \n[Tests/lint]   | You can test that everything is set up by executing:\n[Tests/lint]   | \n[Tests/lint]   | `poetry --version`\n[Tests/lint]   | \n[Tests/lint]   | \n[Tests/lint]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[Tests/lint]   | \n[Tests/lint]   | \u001b[33mDone \u2705\u001b[0m\n[Tests/lint]   | \n[Tests/lint]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[Tests/lint]   \u2705  Success - Main Install and configure Poetry\n[Tests/lint]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[Tests/lint]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[Tests/lint]   \u2705  Success - Main Install Poetry\n[Tests/lint]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[Tests/lint]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[Tests/lint] \u2b50 Run Main Install dependencies\n[Tests/lint]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[Tests/lint]   | Creating virtualenv pyuploadcare-NIEto-bq-py3.9 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[Tests/lint]   | Updating dependencies\n[Tests/lint]   | Resolving dependencies...\n[Tests/lint]   \u274c  Failure - Main Install dependencies\n[Tests/lint] Error response from daemon: Could not find the file /var/run/act/workflow/pathcmd.txt in container 38a3081cd42d1a9f03879bfea9902b6aeb1a2f7befdf69e94e201ed00ffea408\n[Tests/lint] \u2b50 Run Post Install Poetry\n[Tests/lint]   \ud83d\udc33  docker cp src=/home/andre-silva/.cache/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[Tests/lint]   \u274c  Failure - Post Install Poetry\n[Tests/lint] failed to remove container: Error response from daemon: No such container: 38a3081cd42d1a9f03879bfea9902b6aeb1a2f7befdf69e94e201ed00ffea408\n[Tests/lint] \ud83c\udfc1  Job failed\n",
    "actions_stderr": "Error: Error occurred running finally: Error occurred running finally: Error occurred running finally: Error response from daemon: No such container: 38a3081cd42d1a9f03879bfea9902b6aeb1a2f7befdf69e94e201ed00ffea408 (original error: <nil>) (original error: <nil>) (original error: <nil>)\n"
}