{
    "repository": "EntilZha/PyFunctional",
    "stars": 2184,
    "language": "python",
    "size": 751,
    "clone_url": "https://github.com/EntilZha/PyFunctional.git",
    "timestamp": "2023-06-28T10:46:51.673834Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_accumulate",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_add",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_aggregate",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_all",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_any",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_average",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_base_sequence",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_cache",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_cartesian",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_constructor",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_contains",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_count",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_count_by_key",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_count_by_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_dict",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_difference",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_distinct",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_distinct_by",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_drop",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_drop_right",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_drop_while",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_enumerate",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_eq",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_exists",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_filter",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_filter_not",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_find",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_first",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_flat_map",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_flatten",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_fold_left",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_fold_right",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_for_all",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_for_each",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_getitem",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_group_by",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_group_by_key",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_grouped",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_grouped_returns_list",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_grouped_returns_list_of_lists",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_hash",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_head",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_head_option",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_init",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_inits",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_inner_join",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_intersection",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_is_iterable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_iter",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_iterator_consumption",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_join",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_last",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_last_option",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_left_join",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_len",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_lineage_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_lineage_repr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_list",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_make_string",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_map",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_map_filter",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_max",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_max_by",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_min",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_min_by",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_ne",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_non_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_non_zero_bool",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_order_by",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_outer_join",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_partition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_peek",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_product",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_reduce",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_reduce_by_key",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_repr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_repr_max_lines",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_reverse",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_right_join",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_select",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_seq",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_set",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_single_call",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_slice",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_sliding",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_sorted",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_starmap",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_str",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_sum",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_symmetric_difference",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_tabulate",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_tabulate_namedtuple",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_tail",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_tails",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_take",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_take_while",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_to_dict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_to_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_union",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_where",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_wrap",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_wrap_objects",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_wrap_pandas",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skip pandas tests if pandas is not installed",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_zip",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestPipeline",
                "name": "test_zip_with_index",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestExtend",
                "name": "test_custom_functions",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_accumulate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_add",
                "time": 0.497,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_aggregate",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_all",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_any",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_average",
                "time": 0.415,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_base_sequence",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_cache",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "pseq doesn't support functions with side-effects",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_cartesian",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_constructor",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_contains",
                "time": 0.483,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_count",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_count_by_key",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_count_by_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_dict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_difference",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_distinct",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_distinct_by",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_drop",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_drop_right",
                "time": 2.271,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_drop_while",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_enumerate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_eq",
                "time": 0.433,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_exists",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_filter",
                "time": 0.435,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_filter_not",
                "time": 0.44,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_find",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_first",
                "time": 2.319,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_flat_map",
                "time": 0.477,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_flatten",
                "time": 0.409,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_fold_left",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_fold_right",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_for_all",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_for_each",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_getitem",
                "time": 0.431,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_group_by",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_group_by_key",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_grouped",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_grouped_returns_list",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_grouped_returns_list_of_lists",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_hash",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_head",
                "time": 0.801,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_head_option",
                "time": 1.429,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_init",
                "time": 0.444,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_inits",
                "time": 1.293,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_inner_join",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_intersection",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_is_iterable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_iter",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_iterator_consumption",
                "time": 0.906,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_join",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_last",
                "time": 1.273,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_last_option",
                "time": 0.873,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_left_join",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_len",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_lineage_name",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_lineage_repr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_make_string",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_map",
                "time": 0.46,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_map_filter",
                "time": 0.466,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_max",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_max_by",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_min",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_min_by",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_ne",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_non_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_non_zero_bool",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_order_by",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_outer_join",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_partition",
                "time": 0.394,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_peek",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_product",
                "time": 0.396,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_reduce",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_reduce_by_key",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_repr",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_repr_max_lines",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_reverse",
                "time": 0.834,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_right_join",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_select",
                "time": 0.443,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_seq",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_set",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_single_call",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "pseq doesn't support functions with side-effects",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_slice",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_sliding",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_sorted",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_starmap",
                "time": 0.874,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_str",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_sum",
                "time": 0.442,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_symmetric_difference",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_tabulate",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_tabulate_namedtuple",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_tail",
                "time": 0.482,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_tails",
                "time": 1.34,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_take",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_take_while",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_to_dict",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_to_list",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_union",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_where",
                "time": 0.601,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_wrap",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_wrap_objects",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_wrap_pandas",
                "time": 0.008,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skip pandas tests if pandas is not installed",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_zip",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_functional.TestParallelPipeline",
                "name": "test_zip_with_index",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_io.TestUtil",
                "name": "test_bz2_file",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_io.TestUtil",
                "name": "test_gzip_file",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_io.TestUtil",
                "name": "test_reusable_file",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_io.TestUtil",
                "name": "test_universal_write_open",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_io.TestUtil",
                "name": "test_xz_file",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_bz2_csv",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_bz2_json",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_bz2_jsonl",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_csv",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_csv_dict_reader",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_disable_compression",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_gzip_csv",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_gzip_json",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_gzip_jsonl",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_json",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_jsonl",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_open",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_open_bz2",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_open_gzip",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_open_xz",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_pandas",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_range",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_sqlite3",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_to_csv",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_to_csv_compressed",
                "time": 0.098,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_to_csv_win",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skip CSV test if not on Windows",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_to_file",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_to_file_compressed",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_to_json",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_to_json_compressed",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_to_jsonl",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_to_jsonl_compressed",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_to_pandas",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_to_sqlite3_dict",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_to_sqlite3_failure",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_to_sqlite3_file",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_to_sqlite3_namedtuple",
                "time": 0.082,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_to_sqlite3_query",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_to_sqlite3_tuple",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_to_sqlite3_typerror",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_xz_csv",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_xz_json",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestStreams",
                "name": "test_xz_jsonl",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_bz2_csv",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_bz2_json",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_bz2_jsonl",
                "time": 0.598,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_csv",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_csv_dict_reader",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_disable_compression",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_gzip_csv",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_gzip_json",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_gzip_jsonl",
                "time": 0.474,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_json",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_jsonl",
                "time": 1.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_open",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_open_bz2",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_open_gzip",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_open_xz",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_pandas",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_range",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_sqlite3",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_to_csv",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_to_csv_compressed",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_to_csv_win",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Skip CSV test if not on Windows",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_to_file",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_to_file_compressed",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_to_json",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_to_json_compressed",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_to_jsonl",
                "time": 1.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_to_jsonl_compressed",
                "time": 3.225,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_to_pandas",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_to_sqlite3_dict",
                "time": 0.746,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_to_sqlite3_failure",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_to_sqlite3_file",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_to_sqlite3_namedtuple",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "pseq can't serialize all functions",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_to_sqlite3_query",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_to_sqlite3_tuple",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_to_sqlite3_typerror",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_xz_csv",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_xz_json",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_streams.TestParallelStreams",
                "name": "test_xz_jsonl",
                "time": 0.503,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_util.TestUtil",
                "name": "test_compute_partition_size",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_util.TestUtil",
                "name": "test_default_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_util.TestUtil",
                "name": "test_is_namedtuple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_util.TestUtil",
                "name": "test_lazy_parallelize",
                "time": 1.646,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_util.TestUtil",
                "name": "test_pack_unpack",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "functional.test.test_util.TestUtil",
                "name": "test_split_every",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[b2157474-d2e7-4cd4-a7a4-58989fe80871/build] \ud83d\ude80  Start image=crawlergpt:latest\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/EntilZha-PyFunctional] user=0 workdir=\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v1\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build] \ud83e\uddea  Matrix: map[python-version:3.7]\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build] \u2b50 Run Main actions/checkout@v3\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2705  Success - Main actions/checkout@v3\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build] \u2b50 Run Main Set up Python 3.7\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/1032283e-2e54-422d-bd25-b9d4b4c4d2f5/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2753  ::group::Installed versions\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udcac  ::debug::isExplicit: \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udcac  ::debug::explicit? false\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udcac  ::debug::explicit? true\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udcac  ::debug::explicit? true\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udcac  ::debug::explicit? true\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udcac  ::debug::explicit? true\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udcac  ::debug::explicit? true\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udcac  ::debug::explicit? true\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udcac  ::debug::matched: 3.7.11\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Successfully set up CPython (3.7.11)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2753  ::endgroup::\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2705  Success - Main Set up Python 3.7\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2699  ::set-output:: python-version=3.7.11\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build] \u2b50 Run Main Install dependencies\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (21.2.4)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting pip\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting poetry\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading poetry-1.5.1-py3-none-any.whl (225 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting crashtest<0.5.0,>=0.4.1\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading crashtest-0.4.1-py3-none-any.whl (7.6 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting jsonschema<5.0.0,>=4.10.0\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading jsonschema-4.17.3-py3-none-any.whl (90 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting packaging>=20.4\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting html5lib<2.0,>=1.0\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading html5lib-1.1-py2.py3-none-any.whl (112 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting cleo<3.0.0,>=2.0.0\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading cleo-2.0.1-py3-none-any.whl (77 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting shellingham<2.0,>=1.5\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading shellingham-1.5.0.post1-py2.py3-none-any.whl (9.4 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting poetry-plugin-export<2.0.0,>=1.4.0\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading poetry_plugin_export-1.4.0-py3-none-any.whl (10 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting tomlkit<1.0.0,>=0.11.4\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading tomlkit-0.11.8-py3-none-any.whl (35 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting pexpect<5.0.0,>=4.7.0\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting urllib3<2.0.0,>=1.26.0\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting filelock<4.0.0,>=3.8.0\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting platformdirs<4.0.0,>=3.0.0\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting poetry-core==1.6.1\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading poetry_core-1.6.1-py3-none-any.whl (450 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting keyring<24.0.0,>=23.9.0\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading keyring-23.13.1-py3-none-any.whl (37 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting requests-toolbelt<2,>=0.9.1\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading requests_toolbelt-1.0.0-py2.py3-none-any.whl (54 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting backports.cached-property<2.0.0,>=1.0.2\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading backports.cached_property-1.0.2-py3-none-any.whl (6.1 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting pkginfo<2.0.0,>=1.9.4\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading pkginfo-1.9.6-py3-none-any.whl (30 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting dulwich<0.22.0,>=0.21.2\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading dulwich-0.21.5-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (508 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting tomli<3.0.0,>=2.0.1\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting build<0.11.0,>=0.10.0\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading build-0.10.0-py3-none-any.whl (17 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting virtualenv<21.0.0,>=20.22.0\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting importlib-metadata>=4.4\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting trove-classifiers>=2022.5.19\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading trove_classifiers-2023.5.24-py3-none-any.whl (13 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting installer<0.8.0,>=0.7.0\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading installer-0.7.0-py3-none-any.whl (453 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting lockfile<0.13.0,>=0.12.2\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading lockfile-0.12.2-py2.py3-none-any.whl (13 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting requests<3.0,>=2.18\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting pyproject-hooks<2.0.0,>=1.0.0\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading pyproject_hooks-1.0.0-py3-none-any.whl (9.3 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting cachecontrol[filecache]<0.13.0,>=0.12.9\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading CacheControl-0.12.14-py2.py3-none-any.whl (21 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting msgpack>=0.5.2\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading msgpack-1.0.5-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (299 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting rapidfuzz<3.0.0,>=2.2.0\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading rapidfuzz-2.15.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting typing-extensions\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading typing_extensions-4.6.3-py3-none-any.whl (31 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting six>=1.9\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting webencodings\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting zipp>=0.5\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting importlib-resources>=1.4.0\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading importlib_resources-5.12.0-py3-none-any.whl (36 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading pyrsistent-0.19.3-py3-none-any.whl (57 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting pkgutil-resolve-name>=1.3.10\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading pkgutil_resolve_name-1.3.10-py3-none-any.whl (4.7 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting attrs>=17.4.0\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting jeepney>=0.4.2\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading jeepney-0.8.0-py3-none-any.whl (48 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting SecretStorage>=3.2\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading SecretStorage-3.3.3-py3-none-any.whl (15 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting jaraco.classes\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading jaraco.classes-3.2.3-py3-none-any.whl (6.0 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting ptyprocess>=0.5\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting certifi>=2017.4.17\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting charset-normalizer<4,>=2\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting idna<4,>=2.5\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting cryptography>=2.0\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading cryptography-41.0.1-cp37-abi3-manylinux_2_28_x86_64.whl (4.3 MB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting cffi>=1.12\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading cffi-1.15.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (427 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting pycparser\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting distlib<1,>=0.3.6\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Collecting more-itertools\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Downloading more_itertools-9.1.0-py3-none-any.whl (54 kB)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Installing collected packages: pycparser, zipp, urllib3, typing-extensions, idna, charset-normalizer, cffi, certifi, tomli, requests, msgpack, more-itertools, jeepney, importlib-metadata, cryptography, webencodings, six, SecretStorage, rapidfuzz, pyrsistent, pyproject-hooks, ptyprocess, poetry-core, platformdirs, pkgutil-resolve-name, packaging, lockfile, jaraco.classes, importlib-resources, filelock, distlib, crashtest, cachecontrol, attrs, virtualenv, trove-classifiers, tomlkit, shellingham, requests-toolbelt, poetry-plugin-export, pkginfo, pexpect, keyring, jsonschema, installer, html5lib, dulwich, cleo, build, backports.cached-property, poetry, pip\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   Attempting uninstall: pip\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |     Found existing installation: pip 21.2.4\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |     Uninstalling pip-21.2.4:\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |       Successfully uninstalled pip-21.2.4\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Successfully installed SecretStorage-3.3.3 attrs-23.1.0 backports.cached-property-1.0.2 build-0.10.0 cachecontrol-0.12.14 certifi-2023.5.7 cffi-1.15.1 charset-normalizer-3.1.0 cleo-2.0.1 crashtest-0.4.1 cryptography-41.0.1 distlib-0.3.6 dulwich-0.21.5 filelock-3.12.2 html5lib-1.1 idna-3.4 importlib-metadata-6.7.0 importlib-resources-5.12.0 installer-0.7.0 jaraco.classes-3.2.3 jeepney-0.8.0 jsonschema-4.17.3 keyring-23.13.1 lockfile-0.12.2 more-itertools-9.1.0 msgpack-1.0.5 packaging-23.1 pexpect-4.8.0 pip-23.1.2 pkginfo-1.9.6 pkgutil-resolve-name-1.3.10 platformdirs-3.8.0 poetry-1.5.1 poetry-core-1.6.1 poetry-plugin-export-1.4.0 ptyprocess-0.7.0 pycparser-2.21 pyproject-hooks-1.0.0 pyrsistent-0.19.3 rapidfuzz-2.15.1 requests-2.31.0 requests-toolbelt-1.0.0 shellingham-1.5.0.post1 six-1.16.0 tomli-2.0.1 tomlkit-0.11.8 trove-classifiers-2023.5.24 typing-extensions-4.6.3 urllib3-1.26.16 virtualenv-20.23.1 webencodings-0.5.1 zipp-3.15.0\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Creating virtualenv pyfunctional-TFWxu800-py3.7 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Installing dependencies from lock file\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Package operations: 31 installs, 0 updates, 0 removals\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing typing-extensions (4.6.0)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing zipp (3.4.0)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing importlib-metadata (3.4.0)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing pyparsing (2.4.7)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing exceptiongroup (1.1.1)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing iniconfig (2.0.0)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing lazy-object-proxy (1.4.3)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing packaging (20.8)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing pluggy (0.13.1)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing tomli (2.0.1)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing typed-ast (1.5.4)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing wrapt (1.15.0)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing appdirs (1.4.4)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing astroid (2.15.5)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing attrs (20.3.0)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing click (7.1.2)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing coverage (7.2.5)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing dill (0.3.6)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing isort (5.7.0)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing mccabe (0.6.1)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing pathspec (0.8.1)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing platformdirs (3.5.1)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing pytest (7.3.1)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing regex (2020.11.13)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing toml (0.10.2)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing tomlkit (0.11.8)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing black (19.10b0)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing pylint (2.17.4)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing pypandoc (1.5)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing pytest-cov (4.0.0)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   \u2022 Installing tabulate (0.9.0)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Installing the current project: PyFunctional (1.4.3)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Reading package lists...\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Building dependency tree...\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Reading state information...\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | The following additional packages will be installed:\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   pandoc-data\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Suggested packages:\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   texlive-latex-recommended texlive-xetex texlive-luatex pandoc-citeproc\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   texlive-latex-extra context wkhtmltopdf librsvg2-bin groff ghc nodejs python\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   libjs-mathjax node-katex\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | The following NEW packages will be installed:\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   pandoc pandoc-data\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | 0 upgraded, 2 newly installed, 0 to remove and 20 not upgraded.\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Need to get 15.5 MB of archives.\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | After this operation, 125 MB of additional disk space will be used.\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 pandoc-data all 2.5-3build2 [76.0 kB]\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 pandoc amd64 2.5-3build2 [15.4 MB]\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Fetched 15.5 MB in 6s (2754 kB/s)\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Selecting previously unselected package pandoc-data.\r\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | (Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 193678 files and directories currently installed.)\r\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Preparing to unpack .../pandoc-data_2.5-3build2_all.deb ...\r\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Unpacking pandoc-data (2.5-3build2) ...\r\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Selecting previously unselected package pandoc.\r\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Preparing to unpack .../pandoc_2.5-3build2_amd64.deb ...\r\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Unpacking pandoc (2.5-3build2) ...\r\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Setting up pandoc-data (2.5-3build2) ...\r\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Setting up pandoc (2.5-3build2) ...\r\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2705  Success - Main Install dependencies\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build] \u2b50 Run Main Pylint\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Report\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | ======\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | 1416 statements analysed.\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Statistics by type\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | ------------------\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +---------+-------+-----------+-----------+------------+---------+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | |type     |number |old number |difference |%documented |%badname |\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +=========+=======+===========+===========+============+=========+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | |module   |12     |NC         |NC         |25.00       |0.00     |\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +---------+-------+-----------+-----------+------------+---------+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | |class    |16     |NC         |NC         |50.00       |0.00     |\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +---------+-------+-----------+-----------+------------+---------+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | |method   |196    |NC         |NC         |72.96       |0.00     |\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +---------+-------+-----------+-----------+------------+---------+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | |function |78     |NC         |NC         |93.59       |0.00     |\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +---------+-------+-----------+-----------+------------+---------+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | 4404 lines have been analyzed\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Raw metrics\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | -----------\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +----------+-------+------+---------+-----------+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | |type      |number |%     |previous |difference |\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +==========+=======+======+=========+===========+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | |code      |2004   |45.50 |NC       |NC         |\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +----------+-------+------+---------+-----------+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | |docstring |1876   |42.60 |NC       |NC         |\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +----------+-------+------+---------+-----------+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | |comment   |34     |0.77  |NC       |NC         |\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +----------+-------+------+---------+-----------+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | |empty     |490    |11.13 |NC       |NC         |\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +----------+-------+------+---------+-----------+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Duplication\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | -----------\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +-------------------------+------+---------+-----------+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | |                         |now   |previous |difference |\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +=========================+======+=========+===========+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | |nb duplicated lines      |0     |NC       |NC         |\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +-------------------------+------+---------+-----------+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | |percent duplicated lines |0.000 |NC       |NC         |\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +-------------------------+------+---------+-----------+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Messages by category\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | --------------------\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +-----------+-------+---------+-----------+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | |type       |number |previous |difference |\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +===========+=======+=========+===========+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | |convention |0      |NC       |NC         |\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +-----------+-------+---------+-----------+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | |refactor   |0      |NC       |NC         |\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +-----------+-------+---------+-----------+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | |warning    |0      |NC       |NC         |\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +-----------+-------+---------+-----------+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | |error      |0      |NC       |NC         |\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +-----------+-------+---------+-----------+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Messages\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | --------\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +-----------+------------+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | |message id |occurrences |\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | +===========+============+\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | ------------------------------------\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Your code has been rated at 10.00/10\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2705  Success - Main Pylint\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build] \u2b50 Run Main black\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | All done! \u2728 \ud83c\udf70 \u2728\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | 13 files would be left unchanged.\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2705  Success - Main black\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build] \u2b50 Run Main Test with pytest\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | ============================= test session starts ==============================\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | platform linux -- Python 3.7.11, pytest-7.3.1, pluggy-0.13.1\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/EntilZha-PyFunctional\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | plugins: cov-4.0.0\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | collected 300 items\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | functional/test/test_functional.py ..................................... [ 12%]\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | ..................................................................s..... [ 36%]\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | .....s.................................................................. [ 60%]\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | .........s...................s..                                         [ 71%]\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | functional/test/test_io.py .....                                         [ 72%]\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | functional/test/test_streams.py ....................s................... [ 86%]\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | ..................s..........s......                                     [ 98%]\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | functional/test/test_util.py ......                                      [100%]\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/EntilZha-PyFunctional/report.xml -\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | ---------- coverage: platform linux, python 3.7.11-final-0 -----------\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Coverage XML written to file coverage.xml\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | ======================= 293 passed, 7 skipped in 34.47s ========================\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2705  Success - Main Test with pytest\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build] \u2b50 Run Main codecov/codecov-action@v1\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/1032283e-2e54-422d-bd25-b9d4b4c4d2f5/act/codecov-codecov-action@v1/ dst=/var/run/act/actions/codecov-codecov-action@v1/\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/codecov-codecov-action@v1/] user=0 workdir=\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v1/dist/index.js] user= workdir=\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | [command]/usr/bin/bash codecov.sh -n  -F  -Q github-action-v1.5.2 -f ./coverage.xml\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   _____          _\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |  / ____|        | |\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | | |     ___   __| | ___  ___ _____   __\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | | |    / _ \\ / _` |/ _ \\/ __/ _ \\ \\ / /\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | | |___| (_) | (_| |  __/ (_| (_) \\ V /\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |  \\_____\\___/ \\__,_|\\___|\\___\\___/ \\_/\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |                               Bash-1.0.3\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \u001b[0;36m==>\u001b[0m git version 2.33.0 found\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \u001b[0;36m==>\u001b[0m curl 7.68.0 (x86_64-pc-linux-gnu) libcurl/7.68.0 OpenSSL/1.1.1f zlib/1.2.11 brotli/1.0.7 libidn2/2.2.0 libpsl/0.21.0 (+libidn2/2.2.0) libssh/0.9.3/openssl/zlib nghttp2/1.40.0 librtmp/2.3\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Release-Date: 2020-01-08\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtmp rtsp scp sftp smb smbs smtp smtps telnet tftp \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | Features: AsynchDNS brotli GSS-API HTTP2 HTTPS-proxy IDN IPv6 Kerberos Largefile libz NTLM NTLM_WB PSL SPNEGO SSL TLS-SRP UnixSockets\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \u001b[0;90m==>\u001b[0m GitHub Actions detected.\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |     Env vars used:\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |       -> GITHUB_ACTIONS:    true\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |       -> GITHUB_HEAD_REF:   \n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |       -> GITHUB_REF:        refs/heads/master\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |       -> GITHUB_REPOSITORY: EntilZha/PyFunctional\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |       -> GITHUB_RUN_ID:     1\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |       -> GITHUB_SHA:        e5eb3d39561528f08449376a8ce53e0d4e286b41\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |       -> GITHUB_WORKFLOW:   b2157474-d2e7-4cd4-a7a4-58989fe80871\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |     \u001b[0;90mproject root:\u001b[0m .\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |     \u001b[0;32mYaml not found, that's ok! Learn more at\u001b[0m \u001b[0;36mhttp://docs.codecov.io/docs/codecov-yaml\u001b[0m\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |     \u001b[0;90m->\u001b[0m Found 1 reports\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \u001b[0;90m==>\u001b[0m Detecting git/mercurial file structure\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \u001b[0;90m==>\u001b[0m Reading reports\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |     \u001b[0;32m+\u001b[0m ./coverage.xml \u001b[0;90mbytes=86581\u001b[0m\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \u001b[0;90m==>\u001b[0m Appending adjustments\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |     \u001b[0;36mhttps://docs.codecov.io/docs/fixing-reports\u001b[0m\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |     \u001b[0;90m->\u001b[0m No adjustments found\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \u001b[0;90m==>\u001b[0m Gzipping contents\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |         8.0K\t/tmp/codecov.4IXiBy.gz\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \u001b[0;90m==>\u001b[0m Uploading reports\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |     \u001b[0;90murl:\u001b[0m https://codecov.io\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |     \u001b[0;90mquery:\u001b[0m branch=master&commit=e5eb3d39561528f08449376a8ce53e0d4e286b41&build=1&build_url=http%3A%2F%2Fgithub.com%2FEntilZha%2FPyFunctional%2Factions%2Fruns%2F1&name=&tag=&slug=EntilZha%2FPyFunctional&service=github-actions&flags=&pr=&job=b2157474-d2e7-4cd4-a7a4-58989fe80871&cmd_args=n,F,Q,f\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \u001b[0;90m->\u001b[0m  Pinging Codecov\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | https://codecov.io/upload/v4?package=github-action-v1.5.2-1.0.3&token=secret&branch=master&commit=e5eb3d39561528f08449376a8ce53e0d4e286b41&build=1&build_url=http%3A%2F%2Fgithub.com%2FEntilZha%2FPyFunctional%2Factions%2Fruns%2F1&name=&tag=&slug=EntilZha%2FPyFunctional&service=github-actions&flags=&pr=&job=b2157474-d2e7-4cd4-a7a4-58989fe80871&cmd_args=n,F,Q,f\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \u001b[0;31m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | 404\u001b[0m\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \u001b[0;90m==>\u001b[0m Uploading to Codecov\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |                                  Dload  Upload   Total   Spent    Left  Speed\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   | \r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100  6920  100   171  100  6749    329  13003 --:--:-- --:--:-- --:--:-- 13333\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   |     \u001b[0;32m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\u001b[0m\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2705  Success - Main codecov/codecov-action@v1\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build] \u2b50 Run Post Set up Python 3.7\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build]   \u2705  Success - Post Set up Python 3.7\n[b2157474-d2e7-4cd4-a7a4-58989fe80871/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/EntilZha-PyFunctional/.github/workflows/pythonpackage-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 256.4301755428314
    }
}