{
    "repository": "pmariglia/showdown",
    "stars": 201,
    "language": "python",
    "size": 3105,
    "clone_url": "https://github.com/pmariglia/showdown.git",
    "timestamp": "2023-06-28T13:46:57.649637Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "unittest"
    ],
    "actions_test_build_tools": [
        "unittest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_accuracy_does_not_go_below_negative_6",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_accuracy_increase_does_not_produce_two_states",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_accuracy_reduction_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_accuracy_reduction_move_into_contrary_with_tackle_causes_one_state",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_accuracy_reduction_move_into_tackle_causes_multiple_states",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_aegislash_stats_change_when_using_kingsshield",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_aegislash_stats_do_not_change_when_using_non_damaging_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_aegislash_with_stancechange_has_stats_change_even_if_target_is_immune_to_move",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_airballoon_makes_immune",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_already_disabled_moves_are_not_disabled",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_analytic_boosts_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_attack_does_not_go_above_6",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_attack_into_healing_produces_one_state",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_attack_into_healing_with_multiple_attack_damage_rolls",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_aurabreak_prevents_dark_aura",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_auroraveil_fails_without_hail",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_auroraveil_works_in_hail",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_avalanche_into_switch_does_not_increase_avalanche_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_axekick_causes_crash_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_baneful_bunker_cannot_be_used_when_protect_is_in_the_side_conditions",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_baneful_bunker_has_the_same_effect_as_protect",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_baneful_bunker_with_contact_move_causes_poison",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_barbbarrage_double_damage_versus_poisoned",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_beadsofruin_damage_amp",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_beastboost_does_not_boost_beyond_6",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_beastboost_prefers_attack_over_any_stat_when_tied",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_beastboost_prefers_special_defense_over_speed",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_beastboost_will_boost_speed",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_being_dragged_into_pkmn_with_choice_item_does_not_lock_other_moves",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_being_flinched_does_not_result_in_type_change",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_being_hit_by_fire_move_while_frozen_always_thaws",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_being_hit_by_fire_move_while_slower_while_frozen_always_thaws",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_bellydrum_kills_user_when_hp_is_less_than_half",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_bellydrum_works_properly_in_basic_case",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_blackglasses_boosts_dark_moves",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_blaze_boosts_damage_below_one_third",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_bodypress_damage_is_different_with_different_defense_stats",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_bodypress_damage_is_the_same_regardless_of_attack",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_bodyslam_into_ground_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_boltbeak_does_double_damage_when_moving_first",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_boltbeak_does_double_damage_when_opponent_switches",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_boltbeak_does_normal_damage_when_moving_second",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_bonemerang_does_double_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_boosting_move_into_haze",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_boosting_move_with_speedboost",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_bot_moves_are_not_locked_when_a_choice_item_is_tricked",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_both_leftovers_healing",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_both_leftovers_healing_and_poison_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_bounce_does_damage_on_second_turn",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_burned_with_guts_doubles_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_calmmind_into_defiant",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_calmmind_versus_competitive",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_cannot_be_frozen_in_harsh_sunlight",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_ceaselessedge_creates_spikes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_charcoal_boosts_fire_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_charged_solarbeam_executes_normally",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_charm_against_pokemon_with_clearamulet",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_charm_against_pokemon_with_clearbody",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_chillyreception_allows_switch",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_chloroblast",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_choice_band_boosts_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_clangoroussoul",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_clanorous_soul_fails_when_at_less_than_one_third_hp",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_clearbody_using_boost",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_clearsmog_removes_status_boosts",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_closecombat_kills_and_reduces_stats",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_collisioncourse_supereffective_boost",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_contact_move_into_flamebody_results_in_two_states_where_one_is_burned",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_contact_move_into_static_results_in_two_states_where_one_is_paralysis",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_contact_with_fluffy",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_contrary_boosts_leafstorm",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_contrary_unboosts_meteormash",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_corrosion_poisons_steel_types",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_cottondown_drops_speed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_cottondown_drops_speed_for_non_contact_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_courtchange_does_not_swap_zero_value_side_condition",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_courtchange_swaps_rocks",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_courtchange_swaps_rocks_and_spikes",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_covertcloak_does_not_stop_poweruppunch_boost",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_crash_move_with_banefulbunker",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_crosschop_missing_activates_blunder_policy",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_damp_blocks_explosion_moves",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_darkaura_boosts_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_defeatist_does_half_damage_at_less_than_half_health",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_defog_into_competitive_boosts_special_attack_by_2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_defog_into_defiant_boosts_attack_by_2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_defog_removes_terrain",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_defog_removes_terrain_and_spikes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_defog_works_even_if_defender_is_ghost",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_desolate_land_makes_water_moves_fail",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_does_not_work_through_flinched",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_double_earthquake_with_double_levitate_does_nothing",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_double_no_item_produces_no_instructions",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_double_weather_move_sets_weathers_properly",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_double_zap_cannon",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_doubleironbash_does_double_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_doubleshock_changes_user_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_doubleshock_fails_if_user_is_not_electric",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_dousedrive_makes_waterabsorb_activate",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_dragondance_with_contrary",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_dragondarts_does_double_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_dragontail_behaves_well_with_regular_move",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_draining_move_into_liquidooze",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_dryskin_damages_when_weather_is_sun",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_dryskin_does_not_overheal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_dryskin_does_not_overkill",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_dryskin_heals_when_weather_is_rain",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_dying_when_being_pursuited",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_dynamax_cannon_does_double_damage_versus_dynamaxed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_dynamax_cannon_does_normal_damage_versus_non_dynamaxed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_eartheater",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_eartheater_versus_water_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_earthquake_hits_into_levitate_when_user_has_moldbreaker",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_earthquake_hits_into_levitate_when_user_has_turboblaze",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_electric_immune_to_thunderwave",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_electric_terrain_blocks_sleep",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_electric_terrain_does_not_block_sleep_for_non_grounded",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_electric_type_is_immune_to_static",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_electro_ball_does_damage_when_speed_is_equal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_electro_ball_does_damage_when_speed_is_much_greater",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_electrodrift_supereffective_boost",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_ember_cannot_burn_when_defender_has_covertcoak",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_end_of_turn_instructions_execute_in_correct_order",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_endeavor_brings_hp_to_equal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_endeavor_does_nothing_when_user_hp_greater_than_target_hp",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_evasion_boosting_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_evasion_boosting_move_causes_two_states",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_evasion_boosting_move_with_contrary_causes_one_state",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_eviolite_reduces_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_expandingforce_power_boost_in_terrain",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_explosion_kills_the_user",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fainted_pkmn_doesnt_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fainted_pokemon_cannot_cause_sleepclause",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fainted_pokemon_cannot_heal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fainted_pokemon_gets_no_speedboost_or_leftovers_heal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fainting_pokemon_does_not_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fairywind_into_windrider",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fast_uturn_results_in_switching_out_for_bot",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fast_uturn_results_in_switching_out_move_for_enemy",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fast_uturn_switch_into_choice_pkmn_does_not_lock_moves",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fast_voltswitch_results_in_switching_out_for_opponent",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_faster_pkmn_does_not_flinch",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fillet_away_boosts_if_health_allows",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fillet_away_fails_if_health_is_below_half",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_finalgambit_does_damage_equal_to_health_and_faints_user",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fire_move_hits_flashfire_pokemon_when_user_has_moldbreaker",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fire_type_cannot_be_burned",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fire_type_cannot_be_burned_by_flameorb",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fire_type_cannot_be_burned_from_secondary",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fire_type_is_immune_to_flamebody_burn",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fire_with_fluffy",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fishious_rend_does_double_damage_when_moving_first",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fishious_rend_does_normal_damage_when_moving_second",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_flameorb_burns_at_end_of_turn",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_flameorb_cannot_burn_paralyzed_pokemon",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_flinching_as_second_move_does_not_produce_extra_state",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_flinching_move_versus_secondary_effect_produces_three_states",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_flipturn_causes_switch",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fly_does_damage_on_second_turn",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fly_makes_user_invulnerable",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_fly_without_z_crystal_charges",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_focuspunch_into_damaging_move_gives_correct_states",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_focuspunch_into_non_damaging_move_gives_correct_states",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_frozen_pokemon_versus_switch",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_furcoat",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_futuresight_damage_at_end_of_turn_for_both_sides",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_futuresight_damage_at_end_of_turn_from_active_pokemon",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_futuresight_damage_at_end_of_turn_from_reserve_pokemon",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_futuresight_damage_halved_by_lightscreen",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_futuresight_damage_is_boosted_by_terrain",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_futuresight_does_not_do_damage_to_dark_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_galewings_does_not_increase_priority_when_hp_is_not_full",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_galewings_increases_priority",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_galvanize_boosts_normal_move_to_give_it_stab",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_galvanize_boosts_normal_move_without_stab",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_geargrind_does_double_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_ghost_immune_to_seismic_toss",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_ghost_immune_to_superfang",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_glaiverush_adds_volatile",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_goodasgold_versus_non_status_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_goodasgold_versus_status_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_gorilla_tactics_locks_other_moves_even_without_choice_item",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_gorilla_tactics_with_choice_item_locks_moves",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_gorillatactics_boost_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_grassknot_does_damage_on_heavy_pokemon",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_grassknot_does_damage_on_light_pokemon",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_ground_immune_to_aurawheel",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_ground_immune_to_thunderwave",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_ground_not_immune_to_aurawheel_when_morpeko_hangry_is_active",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_ground_type_does_not_allow_voltswitch",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_ground_type_is_not_immune_to_static",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_growth_boosts_by_two_in_the_sun",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_gryo_ball_does_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_gryo_ball_does_damage_when_speed_is_equal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_gust_can_hit_versus_bounce",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_gust_can_hit_versus_fly",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_hail_causes_correct_damage_to_kill",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_has_no_effect_when_weather_is_already_active",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_having_glaiverush_volatile_doubles_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_having_glaiverush_volatile_makes_move_not_able_to_miss_against_you",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_having_protect_volatile_status_causes_tackle_to_miss",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_having_wish_causes_heal_at_the_end_of_the_turn",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_haze_removes_status_boosts",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_haze_removes_status_boosts_for_both_sides",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_heatcrash_damage_for_the_same_weight",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_heatcrash_into_flashfire",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_heavyslam_damage_for_10_times_the_weight",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_heavyslam_damage_for_4_times_the_weight",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_heavyslam_damage_for_the_same_weight",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_highjumpkick_causes_crash",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_highjumpkick_causes_crash_with_previous_move",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_highjumpkick_crash_when_switching_into_ghost",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_hugepower",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_hustle",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_hydration_cures_poison_before_it_does_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_hydration_cures_sleep_at_end_of_turn_in_rain",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_hydrosteam_power_boosted_in_sun",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_ice_type_cannot_be_frozen",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_icebeam_into_scald",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_icebody_does_not_overheal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_icebody_healing",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_icescales_does_not_halve_physical_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_icescales_halves_special_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_icespinner_removes_terrain",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_immune_by_ability_does_not_allow_voltswitch",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_infestation_starts_volatile_status",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_infiltrator_goes_through_reflect",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_infiltrator_move_goes_through_sub",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_infiltrator_toxic_bypasses_sub",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_inflicting_with_leechseed_produces_sap_instruction",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_innerfocus_immune_to_intimidate",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_innerfocus_prevents_flinching",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_ironfist",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_junglehealing_cures_status",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_junglehealing_heals",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_justified_boosts_attack_versus_dark_move",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_killing_a_pokemon_with_poison",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_killing_a_pokemon_with_poisonheal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_killing_a_pokemon_with_various_end_of_turn_action_items",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_knocking_out_with_beastboost_gives_a_boost_to_highest_stat",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_knockoff_does_more_damage_when_item_can_be_removed",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_knockoff_does_not_amplify_damage_for_primal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_knockoff_does_not_amplify_damage_or_remove_item_for_mega",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_knockoff_missing_does_not_remove_item",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_knockoff_removes_item",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_lastrespects_damage_boost",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_leechseed_does_not_sap_when_dead",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_leechseed_sap_does_not_overheal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_leechseed_sap_into_removing_protect_side_condition",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_leftovers_has_no_effect_when_at_full_hp",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_leftovers_healing",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_leftovers_healing_with_speedboost",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_lifedew_healing",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_lifeorb_gives_recoil",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_light_screen_halves_special_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_liquidvoice_boosts_sound_move_into_water_and_hits_ghost_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_liquidvoice_versus_waterabsorb",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_lowkick_does_damage_on_heavy_pokemon",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_lowkick_does_damage_on_light_pokemon",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_lunarblessing_cures_status",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_lunarblessing_heals",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_magic_bounced_stealthrock_doesnt_exceed_one_level",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_magicguard_does_not_take_leechseed_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_magicguard_does_not_take_poison_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_magmaarmor_prevents_frozen",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_magmastorm_residual_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_magnetrise_versus_earthquake",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_marvelscale_does_not_reduce_special_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_marvelscale_reduces_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_memento_into_competitive",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_memento_into_defiant",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_memories_change_multiattack_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_memories_change_multiattack_type_to_not_very_effective",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_meteorbeam_charges_on_the_first_turn",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_meteorbeam_executes_when_volatile_status_is_active",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_misty_terrain_blocks_status",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_misty_terrain_does_not_block_status_on_ungrounded_pkmn",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_mistyexplosion_does_more_in_mistyterrain",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_mistyexplosion_kills_user",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_moonblast_boosts_opponent_with_contrary",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_moonblast_secondary_into_competitive",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_moonblast_secondary_into_defiant",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_morningsun_in_sand",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_morningsun_in_sunlight",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_motordrive",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_move_missing_does_not_trigger_static",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_move_without_protect_flag_goes_through_protect",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_multiattack_with_no_item_is_normal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_mysticwater_boosts_water_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_negative_boost_inflictions",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_neuroforce_boosts_if_supereffective",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_no_boost_from_non_damaging_dark_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_no_type_change_instruction_if_there_are_no_types_to_change",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_no_type_change_instruction_if_user_gets_flinched",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_noguard",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_non_contact_move_does_not_activate_static",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_non_contact_move_with_banefulbunker",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_non_damaging_move_causes_type_change_instruction",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_non_priority_move_versus_armortail",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_noretreat_boosts_own_stats_and_starts_volatile_status",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_noretreat_fails_when_user_has_volatile_status",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_normal_immune_to_night_shade",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_not_knocking_out_with_beastboost_does_not_increase_stat",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_obstruct_protects",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_only_first_protect_actives",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_opponent_boost_does_affect_foulplay",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_opponent_move_locks_when_choicescarf_is_tricked",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_opponent_using_move_with_choice_item_locks_non_disabled_moves",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_opponent_using_move_with_choice_item_locks_other_moves",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_opponent_with_unaware_does_not_make_him_take_more_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_opposite_pokemon_darkaura_boosts_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_overcoat_protects_from_spore",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_overgrow_boosts_damage_below_one_third",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_own_boost_does_not_affect_foulplay",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_painsplit_does_not_overheal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_painsplit_does_not_overheal_enemy",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_painsplit_properly_splits_health",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_paralysis_from_same_turn_makes_flamebody_not_trigger",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_paralyzed_pokemon_produces_two_states_when_trying_to_attack",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_paralyzed_pokemon_reacts_properly_to_weather",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_parentalbond",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_parting_shot_allows_switch",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_partingshot_into_competitive_boosts_special_attack_by_4",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_partingshot_into_defiant_boosts_attack_by_4",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_pastelveil_prevents_poison",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_phantomforce_does_damage_if_user_has_phantomforce_volatilestatus",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_phantomforce_does_damage_if_user_has_phantomforce_volatilestatus_and_avoids_damage_if_it_is_slower",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_phantomforce_does_not_stop_opponents_move_if_phantomforce_goes_second",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_phantomforce_preparation_does_not_cause_lifeorb_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_phantomforce_preparation_puts_user_in_semi_invulnerable_turn",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_phantomforce_versus_whirlwind",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_pkmn_with_goodasgold_cannot_be_dragged",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_pkmn_with_guarddog_cannot_be_dragged",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_poinsoned_pokemon_cannot_be_burned_by_flamebody",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_poison_move_into_steel_type_does_nothing",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_poison_type_cannot_be_toxiced_by_toxicorb",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_poison_type_cannot_miss_toxic",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_poisoning_move_shows_poison_damage_on_opponents_turn",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_pokemon_boosting_into_roar",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_pokemon_with_active_substitute_switching_into_phazing_move",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_pokemon_with_active_substitute_switching_into_phazing_move_that_gets_reflected",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_poltergeist_does_not_fail_against_target_with_an_unknown_item",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_poltergeist_fails_against_target_with_no_item",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_populationbomb_damage_boost",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_powder_into_powder_gives_correct_states",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_powder_move_into_tackle_produces_correct_states",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_prankster_glare_works_on_non_dark_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_prankster_physical_move_has_the_same_effect_on_dark_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_prankster_spore_does_not_work_on_dark_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_prankster_spore_works_on_non_dark_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_pre_existing_leechseed_produces_sap_instruction",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_pre_existing_leechseed_produces_sap_instruction_with_one_health_after_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_previously_existing_toxic_results_in_correct_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_priority_move_versus_armortail",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_protean_causes_attack_to_have_stab",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_protean_changes_types_before_doing_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_protean_does_not_activate_if_pkmn_has_volatilestatus",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_protect_and_hjk_interaction_when_protect_was_previously_used",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_protect_behind_a_sub_works",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_protect_cannot_be_used_when_it_exists_as_a_side_condition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_protect_does_not_stop_leechseed_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_protect_does_not_stop_status_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_protect_does_not_stop_weather_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_protect_into_hjk_causes_crash_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_protectivepads_causes_static_to_not_trigger",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_protectivepads_protects_from_flamebody",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_protosynthesisatk_does_not_increase_special_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_protosynthesisatk_increases_physical_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_psyblade_boosted_in_terrain",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_psyshock_boost_in_terrain",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_psyshock_damage_is_the_same_regardless_of_spdef_boost",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_punkrock_decreases_sound_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_punkrock_increases_sound_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_purifyingsalt_cannot_be_statused",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_purifyingsalt_reduce_ghost_moves",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_pursuit_into_switch_causes_pursuit_to_happen_first_with_double_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_quarkdriveatk_does_not_increase_special_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_quarkdriveatk_increases_physical_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_quarkdrivedef_does_not_increase_spd",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_quarkdrivedef_increases_defense",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_quarkdrivespa_increases_special_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_quarkdrivespd_increases_special_defense",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_queenlymajesty_stops_priority_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_quickfeet_boost_ignores_paralysis",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_quickfeet_boosts_speed",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_raging_bull_type_change",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_rain_doubles_water_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_rain_makes_hurricane_always_hit",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_raindish_does_not_overheal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_raindish_heals_when_weather_is_rain",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_reckless",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_reflect_does_not_halve_special_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_reflect_halves_damage_when_used",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_reflect_halves_physical_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_refrigerate",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_regular_damaging_move_with_speed_boost",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_removes_flinch_status_when_pokemon_faints",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_rest_heals_user_and_puts_to_sleep",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_revelationdance_changes_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_risingvoltage_power_boost_in_terrain",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_rockhead_removes_recoil_for_one_but_not_the_other",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_rocks_can_be_used_versus_magic_bounce_when_user_has_moldbreaker",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_rocky_helmet_and_rough_skin_do_not_activate_on_protect",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_rocky_helmet_hurts_attacker",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_rockypayload",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_roost_volatilestatus_is_removed_at_end_of_turn",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_roost_volatilestatus_makes_ground_move_hit_flying_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_roost_volatilestatus_makes_ground_move_hit_pure_flying_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_ruination_does_half_health",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_saltcure_residual_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_saltcure_residual_damage_on_water_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_sand_causes_correct_damage_to_kill",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_sand_does_not_increase_special_defense_for_ground",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_sand_properly_increses_special_defense_for_rock",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_sandforce_with_normal_move_has_no_boost",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_sandforce_with_steel_move_boosts_power",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_sapsipper_with_leafblade",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_sapsipper_with_leechseed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_scaleshot_damage_with_boosts",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_scrappy_hits_ghost",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_secondary_poison_effect_with_immunity",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_secondary_poison_effect_with_shielddust",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_seismic_toss_deals_damage_by_level",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_serenegrace",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_serenegrace_on_paralyzed_pokemon",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_sets_futuresight_even_if_opponent_has_it_active",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_sharpness_with_slicing_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_sheerforce_works_properly",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_shellsmash_with_whiteherb_doesnt_lower_stats",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_shieldsdown_with_25_percent_can_be_burned",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_shieldsdown_with_50_percent_can_be_burned",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_shieldsdown_with_75_percent_cannot_be_burned",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_shoreup_in_sand",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_side_conditions_are_unmodified_after_instruction_generation",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_silktrap_into_contact_move",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_silktrap_into_crash_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_silktrap_into_noncontact_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_skill_link_increases_tailslap_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_sleep_clause_prevents_multiple_pokemon_from_being_asleep",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_sleep_versus_comatose",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_sleep_versus_sweetveil",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_sleep_versus_vitalspirit",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_slow_uturn_results_in_switching_out_for_bot",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_slow_uturn_results_in_switching_out_for_opponent",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_snow_properly_increses_defense_for_ice",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_snowscape",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_solarbeam_does_not_do_damage_but_sets_volatile_status",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_solarpower_self_damage_at_the_end_of_the_turn",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_sound_move_goes_through_substitute",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_soundproof_immune_to_partingshot",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_soundproof_immune_to_sound_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_speed_boosting_move_with_speedboost",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_spikes_goes_to_3_layers",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_spikes_into_mortal_spin_clears_the_spikes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_spikes_into_rapid_spin_clears_the_spikes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_spikes_into_rapid_spin_does_not_clear_spikes_when_user_is_ghost_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_spikes_into_tidyup_clears_the_spikes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_spiky_shield_does_not_work_when_user_has_protect_side_condition",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_spiky_shield_has_the_same_effect_as_protect",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_spiky_shield_into_contact_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_spiky_shield_into_crash_attack",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_spiky_shield_into_non_contact_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_stakeout_does_double_damage_versus_switch",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_stamina_does_not_increase_defence_when_hit_with_status_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_stamina_increases_defence_when_hit_with_damaging_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_stealthrock_into_magicbounce_properly_reflects",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_stealthrock_into_switch",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_stealthrock_is_unaffected_by_protect",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_stealthrock_produces_correct_instruction",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_stealthrock_produces_no_instructions_when_it_exists",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_steam_engine_boosts_speed_when_hit_by_water_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_steamengine_does_not_overboost",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_steel_beam_only_does_as_much_damage_as_the_user_has_hitpoints",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_steel_beam_reduces_hp_by_half",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_steelroller_fails_without_terrain_active",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_steelroller_works_in_terrain",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_steelworker_boosts_steel_moves",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_steelyspirit_boosts_steel_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_stoneaxe_produces_correct_instruction",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_stormdrain",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_strengthsap_does_not_overheal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_strengthsap_lowers_attack_and_heals_user",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_strengthsap_when_targets_attack_is_lowered",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_strongjaw",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_sturdy_causes_no_damage_if_maxhp_is_1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_sturdy_mon_can_be_killed_when_not_at_maxhp",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_sturdy_prevents_ohko",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_substitute_breaks_when_pkmn_behind_it_has_1_health",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_substitute_fails_if_user_has_less_than_one_quarter_maxhp",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_substitute_into_strong_attack_removes_volatile_status",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_substitute_into_weak_attack_does_not_remove_volatile_status",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_suckerpunch_into_swordsdance_makes_suckerpunch_miss",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_suckerpunch_into_tackle_makes_suckerpunch_hit",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_sun_does_not_require_solarbeam_charge",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_sun_doubles_fire_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_superfang_does_half_health",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_superpower_correctly_unboosts_opponent",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_surf_hits_through_dive",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_surgesurfer_boosts_speed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_swarm_boosts_damage_below_one_third",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_swarm_does_not_boost_when_at_half_health",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switch_flying_into_earthquake",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switch_in_with_dauntless_shield_causes_defense_to_raise",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switch_in_with_intrepid_sword_causes_attack_to_raise",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switch_into_electricsurge_starts_terrain",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switch_into_grassysurge_starts_terrain",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switch_into_intimidate_causes_opponent_attack_to_lower",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switch_into_mistysurge_starts_terrain",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switch_into_ninetales_starts_sun_weather",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switch_into_politoed_does_not_start_rain_weather_when_desolate_land_is_active",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switch_into_politoed_does_not_start_rain_weather_when_rain_is_already_active",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switch_into_politoed_starts_rain_weather",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switch_into_psychicsurge_starts_terrain",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switch_into_rock_does_no_damage_with_heavy_duty_boots",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switch_into_rocks_does_neutral_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switch_into_side_with_rocks_and_spikes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switch_into_side_with_rocks_and_spikes_when_one_kills",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switch_into_spike_does_no_damage_with_heavy_duty_boots",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switch_into_toxicspikes_plus_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switch_into_toxicspikes_plus_setting_rocks_from_opponent",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switch_move_with_choice_item",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switcheroo_behaves_the_same_as_trick",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switching_in_with_snowwarning_does_not_produce_instruction_if_weather_already_set",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switching_in_with_snowwarning_produces_correct_ice_weather_instruction",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switching_into_intimidate_into_competitive",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switching_into_intimidate_into_defiant",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switching_into_intimidate_into_rattled",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switching_into_pkmn_with_choice_item_does_not_lock_other_moves",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switching_into_pkmn_with_screen_cleaner_removes_screens_for_both_sides",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switching_into_stickyweb_lowers_speed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switching_into_stickyweb_with_whitesmoke_does_not_lower_speed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switching_out_unlocks_locked_moves",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switching_out_with_natural_cure_removes_status",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switching_with_intimidate_into_clearamulet",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switching_with_intimidate_into_guarddog",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switching_with_protosynthesis_boosterenergy",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switching_with_protosynthesis_boosterenergy_boosting_attack",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_switching_with_quarkdrive_boosterenergy",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_swordofruin_damage_amp",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_tabletsofruin_damage_reduction",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_tackle_into_ironbarbs_causes_no_recoil_when_attacker_has_neutralizing_gas",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_tackle_into_ironbarbs_causes_recoil",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_tackle_into_roughskin_causes_recoil",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_tanglinghair_drops_speed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_tarshot_increases_fire_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_tarshot_lowers_speed_and_sets_volatile_status",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_taunt_into_uturn_causes_taunt_to_be_removed_after_switching",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_taunt_sets_taunt_status",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_taunt_volatile_status_does_not_prevent_damaging_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_taunt_volatile_status_prevents_non_damaging_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_technician",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_teleport_causes_switch_and_moves_second",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_terablast_changes_type_if_terastallized",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_terrainpulse_fails_against_dark_type_in_psychicterrain",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_terrainpulse_fails_against_ghost_type_without_terrain",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_terrainpulse_fails_against_ground_type_in_electricterrain",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_thawing_produces_thaw_instruction",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_there_is_a_type_change_instruction_if_a_protean_user_misses_due_to_accuracy",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_thermalexchange_versus_fire_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_thermalexchange_versus_water_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_thickclub_with_marowak_does_not_double_special_attack",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_thickclub_with_marowak_doubles_attack",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_thickclub_with_random_pokemon_does_not_double_attack",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_thickfat",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_thousandarrows_versus_airballoon_hits",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_thousandarrows_versus_double_type_does_not_change_the_original_type_list",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_thousandarrows_versus_levitate_hits",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_thousandarrows_versus_ungrounded_pokemon_hits",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_thunder_produces_all_states",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_thunder_produces_all_states_with_damage_rolls_accounted_for",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_thunderwave_into_ground_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_thunderwave_into_limber",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_tintedlens_doubles_not_very_effective_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_torrent_boosts_damage_below_one_third",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_toughclaws",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_toxic_cannot_drop_below_0_hp",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_toxicorb_toxics_the_user",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_triage_boosts_priority",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_trick_fails_against_silvally_with_memory",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_trick_fails_against_sticky_hold",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_trick_fails_against_z_crystal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_trick_fails_on_opponent_with_substitute",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_trick_succeeds_when_user_is_behind_substitute",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_trick_switches_when_opponent_has_no_item",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_trick_switches_when_user_has_no_item",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_tripledive",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_twinbeam",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_two_pokemon_switching",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_unaware_ignore_defense_boost",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_unaware_ignore_opponent_attack_boost",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_unaware_ignore_special_defense_boost",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_unaware_on_attacker_does_not_reduce_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_unseenfist_does_not_ignore_protect_with_non_contact_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_unseenfist_ignores_protect_with_contact_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_flareblitz_move_while_frozen_always_thaws_user",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_futuresight_does_nothing_if_futuresight_is_already_active",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_futuresight_sets_futuresight_and_decrements_at_the_end_of_turn",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_ground_move_with_libero_makes_pokemon_immune_to_electric_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_hail_sets_the_weather",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_move_with_choice_item_locks_other_moves",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_non_protect_move_causes_protect_side_condition_to_be_removed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_outrage_locks_other_moves",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_protect_adds_volatile_status_and_side_condition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_ragingfury_locks_other_moves",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_raindance_sets_the_weather",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_raindance_sets_the_weather_correctly_as_a_second_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_roost_with_choice_item",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_sandstorm_sets_the_weather",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_scald_while_frozen_always_thaws_user",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_sunnyday_changes_the_weather_from_rain",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_sunnyday_in_heavyrain_does_not_change_weather",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_sunnyday_into_solarbeam_causes_solarbeam_to_not_charge",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_sunnyday_sets_the_weather",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_tailwind_with_windrider",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_toxic_results_in_first_damage_to_be_one_sixteenth",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_trick_swaps_items_with_opponent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_trickroom_sets_trickroom",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_using_wish_sets_the_wish_value_to_half_of_the_users_max_health",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_uturn_when_there_are_no_available_switches_works",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_uturn_works_with_multiple_states_before",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_vcreate_into_tanglinghair_drops_stats_correctly",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_vesselofruin_damage_reduction",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_voltabsorb",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_waking_up_produces_wake_up_instruction",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_waterbubble_doubles_water_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_waterbubble_halves_fire_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_waterbubble_prevents_burn",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_weakarmor_activates_on_physical_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_weakarmor_activates_on_physical_move_when_the_pokemon_uses_a_boosting_move",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_weakarmor_does_not_activate_on_special_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_weakarmor_does_not_activate_on_status_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_weaknesspolicy_activates_on_super_effective_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_weaknesspolicy_does_not_activate_on_resisted_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_weaknesspolicy_does_not_activate_on_standard_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_weaknesspolicy_does_not_activate_on_status_move",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_wellbakedbody_versus_fire_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_whirlwind_behaves_correctly_with_a_regular_move",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_whirlwind_creates_one_transposition_for_each_reserve_pokemon",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_whirlwind_does_nothing_when_no_reserves_are_alive",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_whirlwind_into_teleport_properly_does_nothing_for_the_teleport",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_whirlwind_into_whirlwind_properly_does_nothing_for_second_whirlwind",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_whirlwind_removes_status_boosts",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_whirlwind_removes_volatile_statuses",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_willowisp_misses_versus_protect",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_willowisp_missing_activates_blunder_policy",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_willowisp_on_flashfire",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_wish_activating_at_full_hp_produces_no_instruction",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_wish_cannot_be_used_while_wish_is_active",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_wish_does_not_heal_when_active_pokemon_is_dead_but_still_decrements",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestBattleMechanics",
                "name": "test_wish_does_not_overheal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestZPower",
                "name": "test_does_not_set_item_when_the_bot_moves",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestZPower",
                "name": "test_sets_item_to_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestPokemonInit",
                "name": "test_alternate_pokemon_name_initializes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parse_smogon_stats.TestGetSmogonStatsFileName",
                "name": "test_returns_previous_year_properly",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parse_smogon_stats.TestGetSmogonStatsFileName",
                "name": "test_returns_single_digit_month_properly",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parse_smogon_stats.TestGetSmogonStatsFileName",
                "name": "test_works_with_double_digit_month",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestRequestMessage",
                "name": "test_force_switch_properly_sets_the_force_switch_flag",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestRequestMessage",
                "name": "test_request_sets_force_switch_to_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestRequestMessage",
                "name": "test_wait_does_not_initialize_pokemon",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestRequestMessage",
                "name": "test_wait_properly_sets_wait_flag",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleItems",
                "name": "test_can_not_have_choice_specs_flag_does_not_affect_choice_band_guess",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleItems",
                "name": "test_does_not_guess_assultvest_when_can_have_assultvest_flag_is_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleItems",
                "name": "test_does_not_guess_choice_band_when_can_not_have_band_or_specs_is_true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleItems",
                "name": "test_does_not_guess_choice_item_when_can_have_choice_item_flag_is_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleItems",
                "name": "test_does_not_guess_lifeorb_when_can_have_lifeorb_is_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleItems",
                "name": "test_gets_none_when_item_is_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleItems",
                "name": "test_gets_revealed_item_when_item_is_revealed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleItems",
                "name": "test_gets_two_items_when_they_are_equally_likely",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleItems",
                "name": "test_guesses_assultvest_when_can_have_assultvest_flag_is_true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleItems",
                "name": "test_guesses_choice_item_when_can_have_choice_item_flag_is_true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleItems",
                "name": "test_guesses_choiceband_when_can_not_have_band_is_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleItems",
                "name": "test_guesses_life_orb",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleItems",
                "name": "test_ignores_item_in_pass_items",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleItems",
                "name": "test_stops_once_cumulative_percentage_exceeds_limit",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleItems",
                "name": "test_works_with_one_item",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleMoves",
                "name": "test_chance_moves_are_not_affected_by_known_moves",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleMoves",
                "name": "test_chance_moves_are_not_guessed_if_known_plus_expected_equals_four",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleMoves",
                "name": "test_does_not_get_already_revealed_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleMoves",
                "name": "test_does_not_get_already_revealed_move_and_guesses_expected_moves",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleMoves",
                "name": "test_does_not_get_moves_below_threshold",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleMoves",
                "name": "test_expected_plus_known_does_not_exceed_four_with_chance_moves",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleMoves",
                "name": "test_gets_four_moves_when_none_are_known",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleMoves",
                "name": "test_gets_less_likely_moves_as_chance_moves",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleMoves",
                "name": "test_gets_only_first_3_moves_when_one_move_is_known",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDirectStatusEffects",
                "name": "test_100_percent_status_returns_one_state",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDirectStatusEffects",
                "name": "test_75_percent_status_returns_two_states",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDirectStatusEffects",
                "name": "test_frozen_pokemon_cannot_be_burned",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDirectStatusEffects",
                "name": "test_frozen_state_cannot_be_changed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDirectStatusEffects",
                "name": "test_poison_type_cannot_be_poisoned",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDirectStatusEffects",
                "name": "test_sleep_clause_activates",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDirectStatusEffects",
                "name": "test_status_cannot_be_inflicted_on_pkmn_in_substitute",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDirectStatusEffects",
                "name": "test_steel_type_cannot_be_poisoned",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDirectStatusEffects",
                "name": "test_switching_in_pokemon_cannot_be_statused_if_it_is_already_statused",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_initialize_battler.TestInitializeBattler",
                "name": "test_initialize_pokemon_with_no_item",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_initialize_battler.TestInitializeBattler",
                "name": "test_initialize_with_hidden_power_produces_correct_hidden_power",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_initialize_battler.TestInitializeBattler",
                "name": "test_initialize_with_z_move_available",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_initialize_battler.TestInitializeBattler",
                "name": "test_reviving_pokemon",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_items.TestChoiceSpecs",
                "name": "test_choice_scarf_boosts_special",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_items.TestChoiceSpecs",
                "name": "test_choice_scarf_does_not_boost_physical",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_choicescarf_is_not_checked_when_switching_happens",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_does_not_guess_choicescarf_when_bot_is_speed_unboosted",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_does_not_guess_choicescarf_when_item_is_known",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_does_not_guess_choicescarf_when_item_is_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_does_not_guess_choicescarf_when_opponent_could_have_prankster",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_does_not_guess_choicescarf_when_opponent_is_speed_boosted",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_does_not_guess_choicescarf_when_opponent_uses_grassyglide_in_grassy_terrain",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_does_not_guess_item_when_bot_moves_first",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_does_not_guess_item_when_moves_are_different_priority",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_does_not_guess_item_when_opponent_can_be_faster",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_does_not_guess_scarf_in_trickroom",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_does_not_guess_scarf_under_trickroom_when_opponent_could_be_slower",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_guesses_choicescarf_from_update_battle",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_guesses_choicescarf_when_opponent_should_always_be_slower",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_guesses_scarf_in_trickroom_when_opponent_cannot_be_slower",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_only_one_move_causes_no_item_to_be_guessed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_pokemon_possibly_having_swiftswim_in_rain_does_not_result_in_a_choicescarf_guess",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_pokemon_with_possible_quickfeet_does_have_choice_scarf_inferred_if_ability_revealed_to_something_else",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_pokemon_with_possible_quickfeet_does_not_have_choice_scarf_inferred",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_possible_surgesurfer_does_not_result_in_scarf_inferral",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_priority_move_with_unknown_move_does_not_cause_guess",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_seismitoad_choicescarf_is_guessed_when_ability_has_been_revealed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_surgesurfer_pokemon_choice_item_is_guessed_if_ability_is_revealed_to_be_otherwise",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_swiftswim_causing_opponent_to_be_faster_results_in_not_guessing_choicescarf",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_unknown_moves_defaults_to_0_priority",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGuessChoiceScarf",
                "name": "test_uses_randombattle_spread_when_guessing_for_randombattle",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamage",
                "name": "test_bots_reflect_does_not_reduce_its_own_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamage",
                "name": "test_earthquake_into_levitate_does_zero_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamage",
                "name": "test_moldbreaker_ignores_levitate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamage",
                "name": "test_phantomforce_move_produces_damage_amount",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamage",
                "name": "test_solarbeam_move_produces_damage_amount",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromSpecialLogicMoves",
                "name": "test_works_with_previous_instructions",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestInactive",
                "name": "test_capture_group_failing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestInactive",
                "name": "test_capture_group_failing_but_message_starts_with_username",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestInactive",
                "name": "test_different_inactive_message_does_not_change_time",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestInactive",
                "name": "test_sets_time_to_15_seconds",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestInactive",
                "name": "test_sets_to_60_seconds",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decide.TestGetWeightedChoices",
                "name": "test_opponent_moves_overlapping",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decide.TestGetWeightedChoices",
                "name": "test_returns_correct_values_for_score_lookups_with_different_moves",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decide.TestGetWeightedChoices",
                "name": "test_returns_correct_values_for_score_lookups_with_different_moves_containing_some_overlap",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decide.TestGetWeightedChoices",
                "name": "test_returns_even_distribution_between_two_pure_strategies",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state.TestPokemon",
                "name": "test_item_can_be_removed_returns_false_if_item_is_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state.TestPokemon",
                "name": "test_item_can_be_removed_returns_false_if_pokemon_has_substitute",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state.TestPokemon",
                "name": "test_item_can_be_removed_returns_false_if_pokemon_is_holding_zcrystal",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state.TestPokemon",
                "name": "test_item_can_be_removed_returns_false_if_pokemon_is_silvallybug",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state.TestPokemon",
                "name": "test_item_can_be_removed_returns_false_if_target_is_kyogreprimal",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state.TestPokemon",
                "name": "test_item_can_be_removed_returns_true_if_pokemon_is_silvallynormal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state.TestPokemon",
                "name": "test_pokemon_item_can_be_removed_returns_true_in_basic_case",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestUpdateAbility",
                "name": "test_sets_ability_for_bot",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestUpdateAbility",
                "name": "test_sets_ability_for_opponent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestUpdateAbility",
                "name": "test_update_ability_from_ability_string_properly_updates_ability",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestUpdateAbility",
                "name": "test_update_ability_from_ability_string_properly_updates_ability_for_bot",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestActivate",
                "name": "test_sets_ability_from_activate",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestActivate",
                "name": "test_sets_item_from_activate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestActivate",
                "name": "test_sets_item_when_poltergeist_activates",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestActivate",
                "name": "test_sets_item_when_poltergeist_activates_and_move_is_lowercase",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromVolatileStatus",
                "name": "test_does_not_alter_pre_existing_volatile_status",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromVolatileStatus",
                "name": "test_does_not_apply_duplicate_status",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromVolatileStatus",
                "name": "test_does_not_apply_status_if_substitute_is_active_on_pokemon",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromVolatileStatus",
                "name": "test_frozen_state_is_unaffected",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromVolatileStatus",
                "name": "test_returns_one_state_with_volatile_status_set",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestRemoveDuplicateInstructions",
                "name": "test_combines_multiple_duplicates",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestRemoveDuplicateInstructions",
                "name": "test_combines_two_instructions_but_keeps_many_others",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestRemoveDuplicateInstructions",
                "name": "test_combines_two_instructions_but_keeps_the_other",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestRemoveDuplicateInstructions",
                "name": "test_does_not_combine_when_instructions_are_different",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestRemoveDuplicateInstructions",
                "name": "test_turns_two_identical_instructions_into_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decide.TestPickSafest",
                "name": "test_returns_better_option_for_two_different_moves",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decide.TestPickSafest",
                "name": "test_returns_only_options_from_one_item_dictionary",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decide.TestPickSafest",
                "name": "test_returns_option_with_the_lowest_minimum_in_2_by_2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decide.TestPickSafest",
                "name": "test_returns_option_with_the_lowest_minimum_in_3_by_3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_accounts_for_paralysis_on_bots_side_when_calculating_speed_range",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_accounts_for_paralysis_when_calculating_speed_range",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_accounts_for_tailwind_on_bot_side_when_calculating_speed_ranges",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_accounts_for_tailwind_on_both_side_when_calculating_speed_ranges",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_accounts_for_tailwind_on_opponent_side_when_calculating_speed_ranges",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_bot_using_grassyglide_in_grassy_terrain_does_not_cause_maxspeed_to_be_set",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_bots_unknown_move_is_used_as_a_zero_priority_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_does_not_set_minspeed_when_opponent_could_have_unburden_activated",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_minspeed_interaction_with_boosted_speed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_minspeed_interaction_with_bot_and_opponents_boosted_speed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_minspeed_interaction_with_bots_boosted_speed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_minspeed_is_correctly_set_when_bot_has_choicescarf",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_minspeed_is_correctly_set_when_bot_has_choicescarf_and_opponent_is_boosted",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_minspeed_is_not_set_when_opponent_has_choicescarf",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_minspeed_is_not_set_when_rain_is_up_and_opponent_can_have_swiftswim",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_minspeed_is_set_when_only_rain_is_up",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_minspeed_is_set_when_rain_is_not_up_but_opponent_could_have_swiftswim",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_move_from_magicbounce_after_switching_does_not_set_speed_range",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_nothing_happens_with_priority_move_in_trickroom",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_opponent_has_unknown_choicescarf_causing_it_to_be_faster",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_opponent_using_grassyglide_in_grassy_terrain_does_not_cause_minspeed_to_be_set",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_opponents_unknown_move_is_used_as_a_zero_priority_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_sets_maxspeed_when_bot_goes_first",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_sets_maxspeed_when_opponent_goes_first_in_trickroom",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckSpeedRanges",
                "name": "test_sets_minspeed_when_opponent_goes_first",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestInactiveOff",
                "name": "test_turns_timer_off",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestEndVolatileStatus",
                "name": "test_halves_bots_hp_when_dynamax_ends",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestEndVolatileStatus",
                "name": "test_halves_opponent_hp_when_dynamax_ends",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestEndVolatileStatus",
                "name": "test_removes_volatile_status_from_opponent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestEndVolatileStatus",
                "name": "test_removes_volatile_status_from_user",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_boosting_ability_with_speed_range",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_choicescarf_set_properly_fails_when_speed_range_is_present",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_does_not_set_choice_band_if_can_not_have_band_is_true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_does_not_set_choice_item_if_can_have_can_have_choice_item_is_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_does_not_set_heavydutyboots_if_can_have_heavydutyboots_is_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_does_not_set_lifeorb_if_can_have_lifeorb_is_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_item_being_none_allows_set_to_match",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_item_being_unknown_allows_set_to_match",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_item_matching_matches_set",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_item_mismatching_does_not_match_set",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_matching_ability_returns_valid_set",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_max_speed_check_invalidates_a_set",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_min_speed_check_invalidates_a_set",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_mismatching_ability_means_set_is_not_returned",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_omits_ability_mismatch_when_flag_is_unset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_omits_item_and_ability_mismatch_when_both_flags_are_unset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_omits_item_mismatch_when_flag_is_unset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_pkmn_not_existing_in_datasets_returns_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_pokemon_with_less_than_four_moves_works",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_populating_datasets_from_file_with_empty_list",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_populating_datasets_using_known_pokemon",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_predict_set_returns_more_common_set",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_predict_set_returns_none_when_no_set_matches",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_predict_set_returns_pokemonset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_datasets.TestTeamDatasets",
                "name": "test_predict_set_returns_set_if_moves_are_a_subset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestStartVolatileStatus",
                "name": "test_adds_volatile_status_from_move_string",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestStartVolatileStatus",
                "name": "test_does_not_add_the_same_volatile_status_twice",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestStartVolatileStatus",
                "name": "test_doubles_hp_when_dynamax_starts_for_bot",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestStartVolatileStatus",
                "name": "test_doubles_hp_when_dynamax_starts_for_opponent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestStartVolatileStatus",
                "name": "test_flashfire_sets_ability_on_bot",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestStartVolatileStatus",
                "name": "test_flashfire_sets_ability_on_opponent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestStartVolatileStatus",
                "name": "test_sets_ability",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestStartVolatileStatus",
                "name": "test_terastallize",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestStartVolatileStatus",
                "name": "test_terastallize_sets_new_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestStartVolatileStatus",
                "name": "test_typechange_changes_the_type_of_the_user",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestStartVolatileStatus",
                "name": "test_typechange_from_multiple_types",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestStartVolatileStatus",
                "name": "test_typechange_starts_volatilestatus",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestStartVolatileStatus",
                "name": "test_typechange_works_with_reflect_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestStartVolatileStatus",
                "name": "test_volatile_status_is_set_on_opponent_pokemon",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestStartVolatileStatus",
                "name": "test_volatile_status_is_set_on_user_pokemon",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_items.TestChoiceBand",
                "name": "test_choice_band_boosts_physical",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_items.TestChoiceBand",
                "name": "test_choice_band_does_not_boost_special",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromHazardClearingMoves",
                "name": "test_defog_clears_both_sides_side_conditions",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromHazardClearingMoves",
                "name": "test_rapidspin_clears_stealthrocks",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromHazardClearingMoves",
                "name": "test_rapidspin_clears_stealthrocks_and_spikes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromHazardClearingMoves",
                "name": "test_rapidspin_does_not_clear_reflect",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_blacksludge_causes_heal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_blacksludge_does_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_blacksludge_does_not_overkill",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_burn_killing_into_leechseed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_double_leftovers_and_poison_and_weather_and_leechseed_executes_in_correct_order",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_dying_from_poison_causes_leechseed_not_to_sap",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_faster_pokemon_dying_from_poison_into_leech_seed_from_other_side",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_hail_does_not_damage_ice_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_ice_damages_pokemon",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_instructions_stop_when_weather_kills",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_leech_seed_does_not_overheal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_leech_seed_only_saps_1_when_pokemon_has_1_hp",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_leech_seed_saps_health",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_leftovers_causes_heal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_leftovers_does_not_overheal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_poison_damage_and_leftovers_heal_together",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_poison_damage_and_leftovers_heal_together_when_poison_kills",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_poison_does_one_eigth_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_poison_killing_into_leechseed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_poison_only_does_one_damage_if_that_is_all_it_has",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_poisonheal_heals",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_previous_instructions_are_interpreted_correctly",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_sand_damages_pokemon",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_sand_does_not_damage_steel_type",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_toxic_does_one_eighth_damage_when_toxic_count_is_one_and_gives_toxic_count_instruction",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_toxic_does_one_quarter_damage_when_toxic_count_is_3_and_gives_toxic_count_instruction",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_toxic_does_one_sixteenth_damage_when_toxic_count_is_zero_and_gives_toxic_count_instruction",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromStatusDamage",
                "name": "test_toxic_status_with_leftovers_when_toxic_kills",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestHealOrDamage",
                "name": "test_damage_caused_by_an_item_properly_sets_opponents_item",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestHealOrDamage",
                "name": "test_damage_caused_by_non_toxic_damage_does_not_increase_toxic_count",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestHealOrDamage",
                "name": "test_damage_caused_by_toxic_increases_side_condition_toxic_counter_for_opponent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestHealOrDamage",
                "name": "test_damage_caused_by_toxic_increases_side_condition_toxic_counter_for_user",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestHealOrDamage",
                "name": "test_damage_sets_bots_active_pokemon_to_correct_hp",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestHealOrDamage",
                "name": "test_damage_sets_bots_active_pokemon_to_correct_maxhp",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestHealOrDamage",
                "name": "test_damage_sets_bots_active_pokemon_to_zero_hp",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestHealOrDamage",
                "name": "test_damage_sets_opponents_active_pokemon_to_correct_hp",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestHealOrDamage",
                "name": "test_does_not_set_item_when_item_is_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestHealOrDamage",
                "name": "test_fainted_message_properly_faints_opponents_pokemon",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestHealOrDamage",
                "name": "test_healing_from_ability_does_not_set_bots_ability",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestHealOrDamage",
                "name": "test_healing_from_ability_sets_ability_to_opponent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestHealOrDamage",
                "name": "test_healing_from_revivalblessing_for_bot_pkmn",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestHealOrDamage",
                "name": "test_healing_from_revivalblessing_for_opponent_pkmn",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestHealOrDamage",
                "name": "test_sets_ability_when_the_bot_is_damaged_from_opponents_ability",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestHealOrDamage",
                "name": "test_sets_ability_when_the_information_is_present",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestHealOrDamage",
                "name": "test_sets_ability_when_the_opponent_is_damaged_from_bots_ability",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestHealOrDamage",
                "name": "test_sets_item_when_it_causes_the_bot_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestHealOrDamage",
                "name": "test_sets_item_when_it_causes_the_opponent_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestHealOrDamage",
                "name": "test_toxic_count_increases_to_2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestGetPokemonInfoFromCondition",
                "name": "test_basic_case",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestGetPokemonInfoFromCondition",
                "name": "test_burned_case",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestGetPokemonInfoFromCondition",
                "name": "test_fainted_case",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestGetPokemonInfoFromCondition",
                "name": "test_poisoned_case",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestClearNegativeBoost",
                "name": "test_clears_multiple_negative_boosts",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestClearNegativeBoost",
                "name": "test_clears_negative_boosts",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestClearNegativeBoost",
                "name": "test_clears_only_negative_boosts",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestClearNegativeBoost",
                "name": "test_does_not_clear_positive_boost",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleAbilities",
                "name": "test_does_not_exceed_threshold",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleAbilities",
                "name": "test_does_not_get_low_percentage_ability",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleAbilities",
                "name": "test_gets_multiple_abilities",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleAbilities",
                "name": "test_gets_revealed_item_when_item_is_revealed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestGetPossibleAbilities",
                "name": "test_ignored_ability_in_pass_abilities",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_select_best_move.TestGetAllOptions",
                "name": "test_airballoon_allows_holder_to_switch",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_select_best_move.TestGetAllOptions",
                "name": "test_arenatrap_traps_non_grounded",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_select_best_move.TestGetAllOptions",
                "name": "test_bot_can_switch_as_flying_type_versus_arenatrap",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_select_best_move.TestGetAllOptions",
                "name": "test_bot_with_shadowtag_prevents_switch_options_for_opponent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_select_best_move.TestGetAllOptions",
                "name": "test_double_faint_returns_correct_decisions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_select_best_move.TestGetAllOptions",
                "name": "test_double_faint_with_no_reserve_pokemon_returns_correct_decisions",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_select_best_move.TestGetAllOptions",
                "name": "test_ghost_type_can_switch_out_versus_shadow_tag",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_select_best_move.TestGetAllOptions",
                "name": "test_non_steel_can_switch_out_versus_magnetpull",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_select_best_move.TestGetAllOptions",
                "name": "test_opponent_pokemon_with_phantomforce_volatilestatus_must_use_phantomforce",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_select_best_move.TestGetAllOptions",
                "name": "test_opponent_with_shadowtag_prevents_switch_options",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_select_best_move.TestGetAllOptions",
                "name": "test_partiallytrapped_removes_switch_options_for_bot",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_select_best_move.TestGetAllOptions",
                "name": "test_partiallytrapped_removes_switch_options_for_opponent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_select_best_move.TestGetAllOptions",
                "name": "test_returns_all_options_in_normal_situation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_select_best_move.TestGetAllOptions",
                "name": "test_returns_nothing_for_user_when_opponent_active_is_dead",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_select_best_move.TestGetAllOptions",
                "name": "test_returns_only_switches_for_user_and_nothing_for_opponent_when_user_active_is_dead",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_select_best_move.TestGetAllOptions",
                "name": "test_self_pokemon_with_phantomforce_volatilestatus_must_use_phantomforce",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_select_best_move.TestGetAllOptions",
                "name": "test_shedshell_can_always_switch",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_select_best_move.TestGetAllOptions",
                "name": "test_steel_type_cannot_switch_out_versus_magnetpull",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestPrepare",
                "name": "test_prepare_sets_volatile_status_on_pokemon",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromHealingMoves",
                "name": "test_frozen_state_does_not_change",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromHealingMoves",
                "name": "test_healing_does_not_exceed_max_health",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromHealingMoves",
                "name": "test_negative_healing",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromHealingMoves",
                "name": "test_previous_instruction_affect_this_instruction",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromHealingMoves",
                "name": "test_previous_instructions_result_in_correct_recovery",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromHealingMoves",
                "name": "test_returns_one_state_with_health_recovered",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestConvertToMega",
                "name": "test_changes_venusaur_to_its_mega_form",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestConvertToMega",
                "name": "test_converts_when_it_is_in_sets_lookup_and_check_sets_is_true",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestConvertToMega",
                "name": "test_converts_when_it_is_not_in_sets_lookup_and_check_sets_is_false",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestConvertToMega",
                "name": "test_does_not_convert_if_item_is_none",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestConvertToMega",
                "name": "test_does_not_convert_if_item_is_revealed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestConvertToMega",
                "name": "test_does_not_convert_when_it_is_not_in_sets_lookup_and_check_sets_is_true",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestConvertToMega",
                "name": "test_preserves_previous_boosts",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestConvertToMega",
                "name": "test_preserves_previous_hitpoints",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestConvertToMega",
                "name": "test_preserves_previous_moves",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestConvertToMega",
                "name": "test_preserves_previous_status_condition",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestFormChange",
                "name": "test_changes_with_formechange_message",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestFormChange",
                "name": "test_does_not_set_base_name_for_illusion_ending",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestFormChange",
                "name": "test_multiple_forme_changes_does_not_ruin_base_name",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestFormChange",
                "name": "test_preserves_base_name_when_form_changes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestFormChange",
                "name": "test_preserves_boosts",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestFormChange",
                "name": "test_preserves_item",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestFormChange",
                "name": "test_preserves_status",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestFormChange",
                "name": "test_removes_pokemon_from_reserve_if_it_is_in_there",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_move_special_effects.TestSuckerPunch",
                "name": "test_suckerpunch_hits_when_opponent_tries_to_attack",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_move_special_effects.TestSuckerPunch",
                "name": "test_suckerpunch_misses_verus_a_switch",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_move_special_effects.TestSuckerPunch",
                "name": "test_suckerpunch_misses_when_it_is_the_second_move",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_move_special_effects.TestSuckerPunch",
                "name": "test_suckerpunch_misses_when_opponent_selects_non_damaging_move",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestStartFutureSight",
                "name": "test_does_not_set_futuresight_as_a_volatilestatus",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestStartFutureSight",
                "name": "test_sets_futuresight_on_side_that_used_the_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestNormalizeName",
                "name": "test_removes_nonascii_characters",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestSpreadsAreAlike",
                "name": "test_custom_is_not_the_same_as_max_values",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestSpreadsAreAlike",
                "name": "test_different_natures_are_not_alike",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestSpreadsAreAlike",
                "name": "test_two_similar_spreads_are_alike",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestSpreadsAreAlike",
                "name": "test_very_similar_returns_true",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_airballoon_item_does_not_cause_sticky_web_effect",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_basic_switch_with_no_side_effects",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_flying_immune_to_toxicspikes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_flying_poison_doesnt_clear_toxic_spikes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_flying_switch_into_sticky_web_does_not_drop_speed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_levitate_ability_does_not_cause_sticky_web_effect",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_poison_switch_into_toxicspikes_clears_the_spikes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_poison_switch_into_two_toxicspikes_clears_the_spikes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_regenerator_does_not_overheal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_regenerator_heals_one_third_hp",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_seed_boost_doesnt_occur_if_stat_is_maxed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_switch_into_double_toxicspikes_causes_toxic",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_switch_into_intimidate_does_not_lower_attack_when_already_at_negative_6",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_switch_into_intimidate_lowers_opponent_attack",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_switch_into_pokemon_with_desolateland_sets_weather_when_primordial_sea_is_active",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_switch_into_pokemon_with_drizze_does_not_set_weather_when_desolate_land_is_active",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_switch_into_pokemon_with_drizze_sets_weather",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_switch_into_pokemon_with_drought_sets_weather",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_switch_into_pokemon_with_primordialsea_sets_weather_when_desolateland_is_active",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_switch_into_stealth_rock_as_flying_does_more_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_switch_into_stealth_rock_gives_damage_instruction",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_switch_into_stealth_rock_with_1hp_gives_damage_instruction_of_1hp",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_switch_into_stick_web_drops_speed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_switch_into_three_spikes_as_flying_does_nothing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_switch_into_toxicspikes_causes_poison",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_switch_unboosts_active_pokemon",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_switching_into_pokemon_with_grassyseed_causes_that_seed_boost_to_occur_if_terrain_is_up",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_switching_into_pokemon_with_psychicseed_causes_that_seed_boost_to_occur_if_terrain_is_up",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_toxic_count_is_reset_if_it_exists_on_switch_out",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetStateFromSwitch",
                "name": "test_volatile_status_is_removed_on_switch_out",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_add_revealed_move_does_not_add_move_twice",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_adds_move_to_opponent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_decrements_seen_move_pp_if_seen_again",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_does_not_set_can_have_choice_item_to_false_if_the_same_move_is_used_when_the_pkmn_has_an_unknown_item",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_does_not_set_can_have_life_orb_to_false_if_pokemon_could_have_magic_guard",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_does_not_set_can_have_life_orb_to_false_if_pokemon_could_have_sheerforce",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_does_not_set_item_to_unknown_if_the_known_item_is_not_a_choice_item_and_two_different_moves_are_used",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_does_not_set_move_for_magicbounch",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_failed_wish_does_not_set_wish",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_new_move_has_one_pp_less_than_max",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_properly_sets_last_used_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_removes_volatilestatus_if_pkmn_has_it_when_using_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_sets_can_have_choice_item_to_false_even_if_item_is_known",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_sets_can_have_choice_item_to_false_if_two_different_moves_are_used_when_the_pkmn_has_an_unknown_item",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_sets_can_have_life_orb_to_false_if_damaging_move_is_used",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_sets_item_to_unknown_if_the_pokemon_has_choice_item_but_two_different_moves_are_used",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_unknown_move_does_not_try_to_decrement",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_using_a_boosting_physical_move_does_not_set_can_have_choice_item_to_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_using_a_boosting_special_move_does_not_set_can_have_choice_item_to_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_using_a_boosting_status_move_sets_can_have_choice_item_to_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_using_nonstatus_move_does_not_set_can_have_assultvest_to_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_using_status_move_sets_can_have_assaultvest_to_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestMove",
                "name": "test_wish_sets_battler_wish",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromFlinchingMoves",
                "name": "test_0_percent_flinching_move_returns_one_state",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromFlinchingMoves",
                "name": "test_100_percent_flinching_move_returns_one_state",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromFlinchingMoves",
                "name": "test_30_percent_flinching_move_returns_two_states",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromFlinchingMoves",
                "name": "test_pre_exising_percentage_propagates_downward",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_items.TestEviolite",
                "name": "test_reduces_physical_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_items.TestEviolite",
                "name": "test_reduces_special_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromFlinched",
                "name": "test_flinch_being_false_does_not_freeze_the_state",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromFlinched",
                "name": "test_flinch_sets_state_to_frozen_and_returns_one_state",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDamage",
                "name": "test_0_damage_move_with_50_accuracy_returns_one_state_that_is_frozen",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDamage",
                "name": "test_0_percent_move_returns_one_state_with_no_changes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDamage",
                "name": "test_100_percent_killing_move_doesnt_drop_health_below_zero",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDamage",
                "name": "test_100_percent_move_returns_one_state",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDamage",
                "name": "test_100_percent_move_returns_one_state_when_state_percentage_already_existed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDamage",
                "name": "test_100_percent_move_that_does_no_damage_hurts_the_attacker",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDamage",
                "name": "test_100_percent_move_with_drain_heals_the_attacker",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDamage",
                "name": "test_100_percent_move_with_recoil_hurts_the_attacker",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDamage",
                "name": "test_50_percent_move_returns_two_states_with_proper_percentages",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDamage",
                "name": "test_75_percent_move_returns_two_states_with_proper_percentages",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDamage",
                "name": "test_95_percent_move_with_crash_hurts_the_attacker",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDamage",
                "name": "test_95_percent_move_with_no_damage_causes_crash",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromDamage",
                "name": "test_frozen_state_does_not_change",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_basic_case_of_switching_in_and_not_taking_damage_sets_heavydutyboots",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_basic_case_of_switching_in_and_taking_damage_does_not_set_heavydutyboots",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_basic_case_of_switching_in_and_taking_damage_sets_can_have_heavydutyboots_to_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_being_caught_in_stickyweb_does_not_set_set_heavydutyboots",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_being_caught_in_stickyweb_sets_can_have_heavydutyboots_to_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_double_switch_where_other_side_takes_damage_does_not_set_hdb_for_the_first_side",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_flying_type_does_not_trigger_heavydutyboots_check_on_toxicspikes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_getting_poisoned_by_toxicspikes_does_not_set_heavydutyboots",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_getting_poisoned_by_two_layers_of_toxicspikes_does_not_set_heavydutyboots",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_getting_toxiced_by_toxic_afterwards_still_sets_heavydutyboots",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_having_airballoon_does_notcause_a_heavydutyboost_inferral",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_having_an_item_bypasses_this_check",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_not_being_caught_in_stickyweb_sets_item_to_heavydutyboots",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_not_getting_poisoned_by_toxicspikes_sets_heavydutyboots",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_not_taking_damage_from_spikes_sets_heavydutyboots",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_nothing_is_set_when_there_are_no_hazards_on_the_field",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_parser_deals_with_empty_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_parser_deals_with_empty_line_with_toxicspikes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_pokemon_that_could_have_magicguard_does_not_set_heavydutyboots_when_no_damage_is_taken",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_taking_damage_from_spikes_does_not_set_heavydutyboots",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_taking_damage_from_spikes_sets_can_have_heavydutyboots_to_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckHeavyDutyBoots",
                "name": "test_toxicorb_poisoning_at_the_end_of_the_turn_does_not_infer_heavydutyboots",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromConditionsThatFreezeState",
                "name": "test_asleep_attacker_results_in_two_instructions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromConditionsThatFreezeState",
                "name": "test_frozen_attacker_results_in_two_instructions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromConditionsThatFreezeState",
                "name": "test_paralyzed_attacker_results_in_two_instructions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromConditionsThatFreezeState",
                "name": "test_powder_against_fire_has_no_effect",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromConditionsThatFreezeState",
                "name": "test_powder_move_on_grass_type_does_nothing_and_freezes_the_state",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromConditionsThatFreezeState",
                "name": "test_powder_move_used_by_asleep_pokemon_produces_correct_states",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestRemoveDuplicateSpreads",
                "name": "test_all_spreads_remain",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestRemoveDuplicateSpreads",
                "name": "test_different_spreads_remain",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestRemoveDuplicateSpreads",
                "name": "test_only_one_spread_remains_when_all_are_alike",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCureStatus",
                "name": "test_curestatus_works_on_active_pokemon",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCureStatus",
                "name": "test_curestatus_works_on_active_pokemon_for_bot",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCureStatus",
                "name": "test_curestatus_works_on_reserve_pokemon",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestStatus",
                "name": "test_bots_active_pokemon_has_status_properly_set",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestStatus",
                "name": "test_opponents_active_pokemon_has_status_properly_set",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestStatus",
                "name": "test_status_from_item_properly_sets_that_item",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_converter.TestSinglePokemonExportToDict",
                "name": "test_deals_with_carriagereturn_after_line",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_converter.TestSinglePokemonExportToDict",
                "name": "test_deals_with_newline_after_line",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_converter.TestSinglePokemonExportToDict",
                "name": "test_deals_with_nicknames",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_converter.TestSinglePokemonExportToDict",
                "name": "test_deals_with_space_after_line",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_converter.TestSinglePokemonExportToDict",
                "name": "test_gendered_pokemon_with_item",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_converter.TestSinglePokemonExportToDict",
                "name": "test_gendered_pokemon_without_item",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_converter.TestSinglePokemonExportToDict",
                "name": "test_parses_terra_type",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_converter.TestSinglePokemonExportToDict",
                "name": "test_pkmn_with_ability",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_converter.TestSinglePokemonExportToDict",
                "name": "test_pkmn_with_evs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_converter.TestSinglePokemonExportToDict",
                "name": "test_pkmn_with_moves",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_converter.TestSinglePokemonExportToDict",
                "name": "test_pkmn_with_moves_in_random_places",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_converter.TestSinglePokemonExportToDict",
                "name": "test_pkmn_with_nature",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_converter.TestSinglePokemonExportToDict",
                "name": "test_pkmn_with_space_in_name",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_converter.TestSinglePokemonExportToDict",
                "name": "test_pkmn_with_space_in_name_with_gender",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_converter.TestSinglePokemonExportToDict",
                "name": "test_pkmn_with_space_in_name_with_gender_and_item",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_converter.TestSinglePokemonExportToDict",
                "name": "test_pokemon_with_item",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_converter.TestSinglePokemonExportToDict",
                "name": "test_pokemon_with_level",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_team_converter.TestSinglePokemonExportToDict",
                "name": "test_pokemon_without_item",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromBoosts",
                "name": "test_50_percent_boost_returns_two_states",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromBoosts",
                "name": "test_boosts_cannot_exceed_max_boosts",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromBoosts",
                "name": "test_boosts_cannot_go_below_min_boosts",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromBoosts",
                "name": "test_boosts_cannot_go_below_min_boosts_with_previous_instruction_lowering_boost",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromBoosts",
                "name": "test_boosts_cannot_go_below_min_boosts_with_previous_instruction_lowering_boost_with_percentage_hit_not_1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromBoosts",
                "name": "test_guaranteed_atk_boost_returns_one_state",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromBoosts",
                "name": "test_guaranteed_atk_boost_returns_one_state_when_attack_boost_already_existed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromBoosts",
                "name": "test_multiple_new_boosts_with_multiple_pre_existing_boosts",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromBoosts",
                "name": "test_no_boosts_results_in_one_unchanged_state",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromBoosts",
                "name": "test_pre_existing_boost_does_not_affect_new_boost",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestUserMovesFirst",
                "name": "test_bot_moves_first_when_move_priorities_are_the_same_and_it_is_faster",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestUserMovesFirst",
                "name": "test_both_using_priority_causes_faster_to_move_first",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestUserMovesFirst",
                "name": "test_choice_scarf_causes_a_difference_in_effective_speed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestUserMovesFirst",
                "name": "test_double_switch_results_in_faster_moving_first",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestUserMovesFirst",
                "name": "test_grassyglide_does_not_go_first_without_terrain",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestUserMovesFirst",
                "name": "test_grassyglide_goes_first_in_terrain",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestUserMovesFirst",
                "name": "test_opponent_moves_first_when_move_priorities_are_the_same_and_it_is_faster",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestUserMovesFirst",
                "name": "test_paralysis_reduces_speed_by_half",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestUserMovesFirst",
                "name": "test_prankster_does_not_result_in_tackle_going_first",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestUserMovesFirst",
                "name": "test_prankster_results_in_status_move_going_first",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestUserMovesFirst",
                "name": "test_priority_causes_slower_to_move_first",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestUserMovesFirst",
                "name": "test_priority_move_goes_first_in_trickroom",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestUserMovesFirst",
                "name": "test_protosynthesisspe_boosts_speed_to_allow_moving_first",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestUserMovesFirst",
                "name": "test_pursuit_moves_first_when_opponent_is_switching",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestUserMovesFirst",
                "name": "test_pursuit_moves_second_when_slower",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestUserMovesFirst",
                "name": "test_quarkdrivespe_boosts_speed_to_allow_moving_first",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestUserMovesFirst",
                "name": "test_quickattack_still_goes_first_when_user_has_prankster",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestUserMovesFirst",
                "name": "test_switch_always_moves_first",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestUserMovesFirst",
                "name": "test_tailwind_at_0_does_not_boost",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestUserMovesFirst",
                "name": "test_tailwind_doubling_speed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_mechanics.TestUserMovesFirst",
                "name": "test_trickroom_results_in_slower_pokemon_going_first",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestBoostAndUnboost",
                "name": "test_boost_does_not_lower_below_negative_6",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestBoostAndUnboost",
                "name": "test_boost_lowers_one_when_it_hits_the_limit",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestBoostAndUnboost",
                "name": "test_multiple_boost_properly_updates",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestBoostAndUnboost",
                "name": "test_opponent_boost_properly_updates_opponent_pokemons_boosts",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestBoostAndUnboost",
                "name": "test_unboost_does_not_lower_below_negative_6",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestBoostAndUnboost",
                "name": "test_unboost_lowers_one_when_it_hits_the_limit",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestBoostAndUnboost",
                "name": "test_unboost_works_properly_on_opponent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestBoostAndUnboost",
                "name": "test_unboost_works_properly_on_user",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestBoostAndUnboost",
                "name": "test_user_boosts_updates_properly",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckChoiceItem",
                "name": "test_does_guess_choiceband_when_bot_shellsmashes_but_white_herb_clears_negative_boosts",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckChoiceItem",
                "name": "test_does_not_guess_choiceband_for_special_move",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckChoiceItem",
                "name": "test_does_not_guess_choiceband_when_acrobatics_is_used",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckChoiceItem",
                "name": "test_does_not_guess_choiceband_when_bot_uses_shellsmash_just_before",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckChoiceItem",
                "name": "test_does_not_guess_choiceband_when_can_have_choice_item_is_false",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckChoiceItem",
                "name": "test_does_not_guess_choiceband_when_damage_is_typical",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckChoiceItem",
                "name": "test_does_not_guess_choiceband_when_guts_flameorb_facade_is_used",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckChoiceItem",
                "name": "test_does_not_guess_choiceband_when_knockoff_is_used",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckChoiceItem",
                "name": "test_does_not_guess_choiceband_when_opponent_crits",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckChoiceItem",
                "name": "test_does_not_guess_choiceband_when_pursuit_does_double_damage",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckChoiceItem",
                "name": "test_does_not_guess_choiceband_when_suckerpunch_is_used",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckChoiceItem",
                "name": "test_does_not_infer_choice_item_when_pikachu_can_have_a_lightball",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckChoiceItem",
                "name": "test_does_not_set_can_not_have_band_or_specs_to_true_when_damage_kills",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckChoiceItem",
                "name": "test_does_not_set_can_not_have_band_or_specs_to_true_when_pikachu_can_have_lightball",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckChoiceItem",
                "name": "test_guesses_choiceband_for_basic_use_case",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckChoiceItem",
                "name": "test_guesses_choiceband_when_bot_moves_first",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckChoiceItem",
                "name": "test_guesses_choicespecs_for_basic_case_in_randombattle",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckChoiceItem",
                "name": "test_min_roll_choiceband_guesses_correctly",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckChoiceItem",
                "name": "test_sets_can_not_have_band_or_specs_to_true_when_damage_is_too_low",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestCheckChoiceItem",
                "name": "test_sets_can_not_have_specs_when_attack_is_special",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattle",
                "name": "test_double_fainted_active_pokemon",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattle",
                "name": "test_gets_multiple_moves_for_both_sides",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattle",
                "name": "test_gets_multiple_switches_and_multiple_moves",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattle",
                "name": "test_gets_multiple_switches_and_splash",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattle",
                "name": "test_gets_one_switch_and_splash",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattle",
                "name": "test_gets_only_move_for_both_sides",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattle",
                "name": "test_gives_no_options_for_user_and_only_switches_for_opponent_when_opponent_active_is_dead",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattle",
                "name": "test_gives_no_options_for_user_and_only_switches_for_opponent_when_wait_is_true",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattle",
                "name": "test_ignores_moves_and_gives_opponent_no_option_when_force_switch_is_true",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattle",
                "name": "test_ignores_moves_and_gives_opponent_no_option_when_user_active_is_dead",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattle",
                "name": "test_opponent_has_moves_when_uturn_moves_first",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattle",
                "name": "test_opponent_has_no_moves_results_in_splash_or_switches",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattle",
                "name": "test_opponent_has_no_moves_when_uturn_happens_after_switch",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattle",
                "name": "test_opponent_has_no_moves_when_uturn_kills_and_opponent_has_already_moved",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattle",
                "name": "test_opponent_has_no_moves_when_uturn_kills_and_opponent_has_already_switched_in",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattle",
                "name": "test_opponent_has_no_moves_when_uturn_kills_and_opponent_has_not_moved_yet",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattle",
                "name": "test_opponent_has_no_moves_when_uturn_moves_second",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattle",
                "name": "test_phantomforce_volatilestatus_makes_the_move_forced_for_opponent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattle",
                "name": "test_phantomforce_volatilestatus_makes_the_move_forced_for_user",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattle",
                "name": "test_reviving_pokemon_must_choose_fainted_pokemon_to_switch",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattle",
                "name": "test_reviving_pokemon_only_chooses_fainted_pokemon_to_switch",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_apply_and_reverse_change_types",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_apply_and_reverse_field",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_apply_and_reverse_field_when_previous_field_exists",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_apply_and_reverse_setting_weather_works",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_apply_and_reverse_setting_weather_works_with_weather_previously_existing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_apply_and_reverse_trickroom",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_apply_status_is_properly_reversed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_apply_status_properly_applies_status",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_apply_volatile_status_properly_applies_status",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_boost_is_properly_applied",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_boost_is_properly_reversed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_boost_is_properly_reversed_when_a_boost_previously_existed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_change_stats_basic_case",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_change_types_properly_changes_types",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_changing_item",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_changing_item_and_reversing_item",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_damage_is_properly_applied",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_damage_is_properly_reversed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_decrement_wish",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_decrement_wish_and_reverse_decrement_wish",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_disable_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_enable_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_end_active_field",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_healing_is_properly_applied",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_healing_is_properly_reversed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_previous_wish_reverses_to_exactly_the_same",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_remove_status_is_properly_reversed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_remove_status_properly_removes_status",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_reverse_change_stats_basic_case",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_reverse_change_types",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_reverse_disable_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_reverse_enable_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_reverse_instruction_sets_trickroom",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_reverse_instruction_unsets_trickroom",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_reverse_setting_field",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_reverse_setting_weather",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_reverse_switch_instruction_replaces_active",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_reverse_volatile_status_properly_removes_status",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_reversing_changE_item",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_reversing_end_active_field",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_reversing_weather_when_previous_weather_exists",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_setting_field",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_setting_weather",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_setting_weather_when_previous_weather_exists",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_side_end_is_properly_applied",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_side_end_is_properly_reversed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_side_start_is_properly_applied",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_side_start_is_properly_reversed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_switch_instruction_places_active_into_reserve",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_switch_instruction_replaces_active",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_switch_instruction_replaces_active_for_opponent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_toggle_trickroom_sets_trickroom",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_toggle_trickroom_unsets_trickroom",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_unboost_is_properly_applied",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_unboost_is_properly_reversed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_wish_starting",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state_mutator.TestStatemutator",
                "name": "test_wish_starting_and_reversing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestClearAllBoosts",
                "name": "test_clears_bots_boosts",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestClearAllBoosts",
                "name": "test_clears_opponents_and_botsboosts",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestClearAllBoosts",
                "name": "test_clears_opponents_boosts",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestNoInit",
                "name": "test_renames_battle_when_rename_message_occurs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_already_seen_pokemon_is_the_same_object_as_the_one_in_the_reserve",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_arceus_ghost_switching_in",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_bot_switching_properly_heals_pokemon_if_it_had_regenerator",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_bot_switching_with_regenerator_does_not_overheal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_ditto_switching_resets_boosts",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_ditto_switching_resets_stats",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_ditto_switching_resets_types",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_ditto_switching_sets_ability_to_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_ditto_switching_sets_moves_to_empty_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_existing_boosts_on_bots_active_pokemon_are_cleared_when_switching",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_existing_boosts_on_opponents_active_pokemon_are_cleared_when_switching",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_fainted_pokemon_switching_does_not_heal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_nickname_attribute_is_set_when_switching",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_silvally_steel_replaces_silvally",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_switch_does_not_reset_types_if_pkmn_has_been_terastallized",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_switch_into_already_seen_pokemon_does_not_create_a_new_pokemon",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_switch_opponents_pokemon_creates_reserve_of_length_1_when_reserve_was_previously_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_switch_opponents_pokemon_successfully_creates_new_pokemon_for_active",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_switch_opponents_pokemon_successfully_places_previous_active_pokemon_in_reserve",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_switch_properly_resets_types_when_pkmn_was_typechanged",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_switch_resets_toxic_count_for_opponent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_switch_resets_toxic_count_for_opponent_when_there_is_no_toxic_count",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_switch_resets_toxic_count_for_user",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_switching_into_the_same_pokemon_does_not_put_that_pokemon_in_the_reserves",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_switching_sets_last_move_to_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_user_switching_causes_active_pokemon_to_be_placed_in_reserve",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_user_switching_causes_pokemon_to_switch",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwitchOrDrag",
                "name": "test_user_switching_removes_volatile_statuses",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromSideConditions",
                "name": "test_spikes_can_have_more_than_one",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromSideConditions",
                "name": "test_spikes_stops_at_3",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromSideConditions",
                "name": "test_using_spikes_sets_side_condition",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromSideConditions",
                "name": "test_using_stealthrock_into_side_already_containing_stealthrock_does_nothing",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_instruction_generator.TestGetInstructionsFromSideConditions",
                "name": "test_using_stealthrock_sets_side_condition",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestTransform",
                "name": "test_pokemon_with_nicknames_transform_properly",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestTransform",
                "name": "test_transform_into_switching_pokemon_properly_copies_the_pokemon_that_was_in_before_the_switch",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestTransform",
                "name": "test_transform_sets_ability_to_opposing_pokemons_ability",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestTransform",
                "name": "test_transform_sets_boosts_to_opposing_pokemons_boosts",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestTransform",
                "name": "test_transform_sets_moves_to_opposing_pokemons_moves",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestTransform",
                "name": "test_transform_sets_stats_to_opposing_pokemons_stats",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestTransform",
                "name": "test_transform_sets_transform_volatile_status",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestTransform",
                "name": "test_transform_sets_types_to_opposing_pokemons_types",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestSetMakesSense",
                "name": "test_multiple_move_nastyplot_with_choicespecs_does_not_make_sense",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestSetMakesSense",
                "name": "test_nastyplot_with_choicespecs_does_not_make_sense",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestSetMakesSense",
                "name": "test_standard_set_makes_sense",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestSetMakesSense",
                "name": "test_swordsdance_with_choiceband_does_not_make_sense",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestSetMakesSense",
                "name": "test_trick_with_scarf_makes_sense",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestWeather",
                "name": "test_sets_weather_ability_when_it_is_present",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestWeather",
                "name": "test_starts_weather_properly",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGetDamageDealt",
                "name": "test_assigns_damage_dealt_from_opponent_to_bot",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGetDamageDealt",
                "name": "test_assigns_damage_from_move_that_causes_status_as_secondary",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGetDamageDealt",
                "name": "test_assigns_damage_to_bot_on_faint",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGetDamageDealt",
                "name": "test_assigns_damage_to_opponent_on_faint",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGetDamageDealt",
                "name": "test_assigns_damage_to_opponent_on_faint_from_1_hp",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGetDamageDealt",
                "name": "test_assigns_damage_when_bots_pokemon_has_no_last_used_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGetDamageDealt",
                "name": "test_assigns_nothing_on_substitute",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGetDamageDealt",
                "name": "test_crit_sets_crit_flag",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGetDamageDealt",
                "name": "test_does_not_assign_anything_when_move_does_no_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGetDamageDealt",
                "name": "test_does_not_catch_second_moves_damage_after_a_heal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGetDamageDealt",
                "name": "test_does_not_set_damage_when_status_move_occurs",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGetDamageDealt",
                "name": "test_doing_damage_to_opponent_gets_correct_percentage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGetDamageDealt",
                "name": "test_entire_message_finishing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGetDamageDealt",
                "name": "test_lifeorb_does_not_assign_damage",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGetDamageDealt",
                "name": "test_stop_after_the_end_of_this_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestGetDamageDealt",
                "name": "test_supereffective_damage_is_captured",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattlerActiveLockedIntoMove",
                "name": "test_calmmind_gets_locked_when_user_has_assaultvest",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattlerActiveLockedIntoMove",
                "name": "test_choice_item_with_previous_move_being_a_switch_returns_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattlerActiveLockedIntoMove",
                "name": "test_choice_item_with_previous_move_used_by_this_pokemon_returns_true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattlerActiveLockedIntoMove",
                "name": "test_fakeout_gets_locked_when_last_used_move_was_by_the_active_pokemon",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattlerActiveLockedIntoMove",
                "name": "test_fakeout_is_not_disabled_when_the_last_used_move_was_a_switch",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattlerActiveLockedIntoMove",
                "name": "test_firstimpression_gets_locked_when_last_used_move_was_by_the_active_pokemon",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattlerActiveLockedIntoMove",
                "name": "test_firstimpression_is_not_disabled_when_the_last_used_move_was_a_switch",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattlerActiveLockedIntoMove",
                "name": "test_non_choice_item_possession_returns_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattlerActiveLockedIntoMove",
                "name": "test_tackle_is_not_disabled_when_user_has_assaultvest",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattlerActiveLockedIntoMove",
                "name": "test_taunt_does_not_lock_physical_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattlerActiveLockedIntoMove",
                "name": "test_taunt_does_not_lock_special_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattlerActiveLockedIntoMove",
                "name": "test_taunt_locks_status_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle.TestBattlerActiveLockedIntoMove",
                "name": "test_taunt_with_multiple_moves",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestBattleIsOver",
                "name": "test_returns_false_when_all_pokemon_are_alive",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestBattleIsOver",
                "name": "test_returns_false_when_all_pokemon_are_alive_for_opponent",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestBattleIsOver",
                "name": "test_returns_false_when_only_active_is_dead",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestBattleIsOver",
                "name": "test_returns_false_when_only_active_is_dead_for_opponent",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestBattleIsOver",
                "name": "test_returns_false_when_only_reserve_are_dead",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestBattleIsOver",
                "name": "test_returns_false_when_only_reserve_are_dead_for_opponent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestBattleIsOver",
                "name": "test_returns_true_when_all_pokemon_for_opponent_are_dead",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestBattleIsOver",
                "name": "test_returns_true_when_all_pokemon_for_user_are_dead",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_4x_resistance_calculates_properly",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_4x_weakness_calculates_properly",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_aurora_veil_properly_halves_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_boosts_properly_affect_damage_calculation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_burn_does_not_modify_special_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_burn_modifier_properly_halves_physical_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_damage_is_not_increased_if_attacker_is_not_grounded",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_electric_terrain_increases_electric_damage_for_grounded_pokemon",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_fire_blast_from_charizard_to_venusaur_without_modifiers",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_flashfire_increases_fire_move_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_grassy_terrain_increases_grass_type_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_immunity_calculates_properly",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_light_screen_properly_halves_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_misty_terrain_halves_dragon_moves",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_move_versus_completely_typeless_pokemon",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_move_versus_completely_typeless_pokemon_with_question_mark_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_move_versus_partially_typeless_pokemon",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_move_versus_partially_typeless_pokemon_with_question_mark_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_psychic_terrain_does_not_affect_priority_on_non_grounded",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_psychic_terrain_increases_psychic_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_psychic_terrain_makes_priority_move_do_nothing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_rain_properly_amplifies_water_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_rain_properly_reduces_fire_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_reflect_properly_halves_damage",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_sand_does_not_double_ground_spdef",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_sand_increases_rock_spdef",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_stab_without_weakness_calculates_properly",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_sun_stab_and_2x_weakness",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_sun_weakens_water_moves",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_terastallized_pokemon_does_not_get_stab_on_nonterra_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_terastallized_pokemon_gets_2x_stab_when_terratype_in_original_types",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_terastallized_pokemon_gets_normal_stab_when_terratype_not_in_original_types",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_damage_calculator.TestCalculateDamageAmount",
                "name": "test_terastallized_pokemon_gets_normal_stab_with_original_types",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSingleTurn",
                "name": "test_does_not_set_for_non_protect_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSingleTurn",
                "name": "test_sets_protect_side_condition_for_bot_when_used",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSingleTurn",
                "name": "test_sets_protect_side_condition_for_opponent_when_used",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSingleTurn",
                "name": "test_sets_protect_side_condition_when_prefixed_by_move",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwapSideConditions",
                "name": "test_does_nothing_when_no_side_conditions_are_present",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwapSideConditions",
                "name": "test_swaps_multiple_side_conditions_on_either_side",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwapSideConditions",
                "name": "test_swaps_one_layer_of_spikes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestSwapSideConditions",
                "name": "test_swaps_one_layer_of_spikes_with_two_layers_of_spikes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestUpkeep",
                "name": "test_does_not_reduce_future_sight_if_it_is_0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestUpkeep",
                "name": "test_does_not_reduce_protect_when_it_is_0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestUpkeep",
                "name": "test_does_not_reduce_wish_if_it_is_0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestUpkeep",
                "name": "test_reduces_future_sight_if_it_is_larger_than_0_for_the_bot",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestUpkeep",
                "name": "test_reduces_protect_for_bot",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestUpkeep",
                "name": "test_reduces_wish_if_it_is_larger_than_0_for_the_bot",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_battle_modifiers.TestUpkeep",
                "name": "test_reduces_wish_if_it_is_larger_than_0_for_the_opponent",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state.TestPokemonInit",
                "name": "test_pokemon_init_gives_correct_number_of_physical_moves",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_state.TestPokemonInit",
                "name": "test_state_serialization_and_loading_results_in_the_same_state",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build] \ud83d\ude80  Start image=crawlergpt:latest\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pmariglia-showdown] user=0 workdir=\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v1\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build] \u2b50 Run Main actions/checkout@v1\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \u2705  Success - Main actions/checkout@v1\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build] \u2b50 Run Main Set up Python\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/a429d485-f6ec-4159-8e24-a5712d4cddfc/act/actions-setup-python@v1/ dst=/var/run/act/actions/actions-setup-python@v1/\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v1/] user=0 workdir=\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v1/dist/index.js] user= workdir=\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udcac  ::debug::isExplicit: \n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udcac  ::debug::explicit? false\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udcac  ::debug::explicit? true\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udcac  ::debug::explicit? true\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udcac  ::debug::explicit? true\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udcac  ::debug::explicit? true\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udcac  ::debug::explicit? true\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udcac  ::debug::explicit? true\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udcac  ::debug::matched: 3.8.11\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Successfully setup CPython (3.8.11)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v1/.github/python.json\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \u2705  Success - Main Set up Python\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \u2699  ::set-output:: python-version=3.8.11\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build] \u2b50 Run Main Install dependencies\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (21.2.4)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Collecting pip\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Installing collected packages: pip\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Attempting uninstall: pip\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |     Found existing installation: pip 21.2.4\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |     Uninstalling pip-21.2.4:\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |       Successfully uninstalled pip-21.2.4\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Successfully installed pip-23.1.2\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Collecting requests==2.31.0 (from -r requirements.txt (line 1))\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.6/62.6 kB 5.9 MB/s eta 0:00:00\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Collecting environs==4.1.0 (from -r requirements.txt (line 2))\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Downloading environs-4.1.0-py2.py3-none-any.whl (8.7 kB)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Collecting websockets==10.3 (from -r requirements.txt (line 3))\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Downloading websockets-10.3-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (111 kB)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 111.3/111.3 kB 6.2 MB/s eta 0:00:00\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Collecting python-dateutil==2.8.0 (from -r requirements.txt (line 4))\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Downloading python_dateutil-2.8.0-py2.py3-none-any.whl (226 kB)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 226.8/226.8 kB 5.8 MB/s eta 0:00:00\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Collecting charset-normalizer<4,>=2 (from requests==2.31.0->-r requirements.txt (line 1))\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Downloading charset_normalizer-3.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (195 kB)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 195.9/195.9 kB 9.3 MB/s eta 0:00:00\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Collecting idna<4,>=2.5 (from requests==2.31.0->-r requirements.txt (line 1))\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 2.5 MB/s eta 0:00:00\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Collecting urllib3<3,>=1.21.1 (from requests==2.31.0->-r requirements.txt (line 1))\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 123.6/123.6 kB 4.0 MB/s eta 0:00:00\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Collecting certifi>=2017.4.17 (from requests==2.31.0->-r requirements.txt (line 1))\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 2.8 MB/s eta 0:00:00\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Collecting marshmallow>=2.7.0 (from environs==4.1.0->-r requirements.txt (line 2))\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Downloading marshmallow-3.19.0-py3-none-any.whl (49 kB)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 49.1/49.1 kB 967.8 kB/s eta 0:00:00\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Collecting python-dotenv (from environs==4.1.0->-r requirements.txt (line 2))\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Downloading python_dotenv-1.0.0-py3-none-any.whl (19 kB)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Collecting six>=1.5 (from python-dateutil==2.8.0->-r requirements.txt (line 4))\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Collecting packaging>=17.0 (from marshmallow>=2.7.0->environs==4.1.0->-r requirements.txt (line 2))\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 2.2 MB/s eta 0:00:00\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Installing collected packages: websockets, urllib3, six, python-dotenv, packaging, idna, charset-normalizer, certifi, requests, python-dateutil, marshmallow, environs\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Successfully installed certifi-2023.5.7 charset-normalizer-3.1.0 environs-4.1.0 idna-3.4 marshmallow-3.19.0 packaging-23.1 python-dateutil-2.8.0 python-dotenv-1.0.0 requests-2.31.0 six-1.16.0 urllib3-2.0.3 websockets-10.3\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | \n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | [notice] A new release of pip is available: 21.1.1 -> 23.1.2\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | [notice] To update, run: pip install --upgrade pip\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Collecting nashpy==0.0.17 (from -r requirements-docker.txt (line 1))\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Downloading nashpy-0.0.17-py3-none-any.whl (10 kB)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Collecting pandas==1.4.3 (from -r requirements-docker.txt (line 2))\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Downloading pandas-1.4.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.7 MB)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 11.7/11.7 MB 20.2 MB/s eta 0:00:00\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Collecting numpy==1.23.1 (from -r requirements-docker.txt (line 3))\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Downloading numpy-1.23.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.1 MB)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 17.1/17.1 MB 21.9 MB/s eta 0:00:00\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Collecting scipy>=0.19.0 (from nashpy==0.0.17->-r requirements-docker.txt (line 1))\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Downloading scipy-1.10.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (34.5 MB)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 34.5/34.5 MB 13.6 MB/s eta 0:00:00\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Collecting python-dateutil>=2.8.1 (from pandas==1.4.3->-r requirements-docker.txt (line 2))\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 247.7/247.7 kB 5.6 MB/s eta 0:00:00\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Collecting pytz>=2020.1 (from pandas==1.4.3->-r requirements-docker.txt (line 2))\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 502.3/502.3 kB 4.6 MB/s eta 0:00:00\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Requirement already satisfied: six>=1.5 in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (from python-dateutil>=2.8.1->pandas==1.4.3->-r requirements-docker.txt (line 2)) (1.16.0)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Installing collected packages: pytz, python-dateutil, numpy, scipy, pandas, nashpy\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Attempting uninstall: python-dateutil\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |     Found existing installation: python-dateutil 2.8.0\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |     Uninstalling python-dateutil-2.8.0:\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |       Successfully uninstalled python-dateutil-2.8.0\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Successfully installed nashpy-0.0.17 numpy-1.23.1 pandas-1.4.3 python-dateutil-2.8.2 pytz-2023.3 scipy-1.10.1\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | \n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | [notice] A new release of pip is available: 21.1.1 -> 23.1.2\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | [notice] To update, run: pip install --upgrade pip\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \u2705  Success - Main Install dependencies\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build] \u2b50 Run Main Test with unittests\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Collecting unittest-xml-reporting\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Downloading unittest_xml_reporting-3.2.0-py2.py3-none-any.whl (20 kB)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Collecting lxml (from unittest-xml-reporting)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |   Downloading lxml-4.9.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (7.1 MB)\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 7.1/7.1 MB 19.0 MB/s eta 0:00:00\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Installing collected packages: lxml, unittest-xml-reporting\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Successfully installed lxml-4.9.2 unittest-xml-reporting-3.2.0\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | \n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | [notice] A new release of pip is available: 21.1.1 -> 23.1.2\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | [notice] To update, run: pip install --upgrade pip\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | \n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Running tests...\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | ----------------------------------------------------------------------\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   |n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | ----------------------------------------------------------------------\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Ran 1366 tests in 2.357s\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | \n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | OK\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | \n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   | Generating XML reports...\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build]   \u2705  Success - Main Test with unittests\n[dce70da3-1823-4e78-8ac9-a5a6ca2cf8ea/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/pmariglia-showdown/.github/workflows/pythonapp-crawler.yml",
        "build_tool": "unittest",
        "elapsed_time": 105.00631737709045
    }
}