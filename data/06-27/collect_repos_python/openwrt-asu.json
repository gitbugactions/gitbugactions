{
    "repository": "openwrt/asu",
    "stars": 223,
    "language": "python",
    "size": 1814,
    "clone_url": "https://github.com/openwrt/asu.git",
    "timestamp": "2023-07-01T11:34:59.811786Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_api",
                "name": "test_api_build",
                "time": 0.477,
                "results": [
                    {
                        "result": "Failure",
                        "message": "AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n  - 200 OK\n  + 500 INTERNAL SERVER ERROR",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_version_code",
                "time": 0.34,
                "results": [
                    {
                        "result": "Failure",
                        "message": "AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n  - 200 OK\n  + 500 INTERNAL SERVER ERROR",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_rootfs_size",
                "time": 0.262,
                "results": [
                    {
                        "result": "Failure",
                        "message": "AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n  - 200 OK\n  + 500 INTERNAL SERVER ERROR",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_version_code_bad",
                "time": 0.217,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_diff_packages",
                "time": 0.208,
                "results": [
                    {
                        "result": "Failure",
                        "message": "AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n  - 200 OK\n  + 500 INTERNAL SERVER ERROR",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_latest_default",
                "time": 0.258,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_mapping",
                "time": 0.231,
                "results": [
                    {
                        "result": "Failure",
                        "message": "AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n  - 200 OK\n  + 500 INTERNAL SERVER ERROR",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_mapping_abi",
                "time": 0.295,
                "results": [
                    {
                        "result": "Failure",
                        "message": "AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n  - 200 OK\n  + 500 INTERNAL SERVER ERROR",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_bad_target",
                "time": 0.204,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_get",
                "time": 0.272,
                "results": [
                    {
                        "result": "Failure",
                        "message": "AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n  - 200 OK\n  + 500 INTERNAL SERVER ERROR",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_packages_versions",
                "time": 0.391,
                "results": [
                    {
                        "result": "Failure",
                        "message": "AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n  - 200 OK\n  + 500 INTERNAL SERVER ERROR",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_packages_versions_bad",
                "time": 0.439,
                "results": [
                    {
                        "result": "Failure",
                        "message": "AssertionError: assert 'init' == 'Error: Impos...: 0.0 vs. 1.0'\n  - Error: Impossible package selection: test1 version not as requested: 0.0 vs. 1.0\n  + init",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_packages_duplicate",
                "time": 0.265,
                "results": [
                    {
                        "result": "Failure",
                        "message": "AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n  - 200 OK\n  + 500 INTERNAL SERVER ERROR",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_get_not_found",
                "time": 0.229,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_get_no_post",
                "time": 0.201,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_empty_packages_list",
                "time": 0.224,
                "results": [
                    {
                        "result": "Failure",
                        "message": "AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n  - 200 OK\n  + 500 INTERNAL SERVER ERROR",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_withouth_packages_list",
                "time": 0.335,
                "results": [
                    {
                        "result": "Failure",
                        "message": "AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n  - 200 OK\n  + 500 INTERNAL SERVER ERROR",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_prerelease_snapshot",
                "time": 0.199,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_prerelease_rc",
                "time": 0.234,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_bad_packages_str",
                "time": 0.199,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_empty_request",
                "time": 0.204,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_real_x86",
                "time": 0.242,
                "results": [
                    {
                        "result": "Failure",
                        "message": "AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n  - 200 OK\n  + 500 INTERNAL SERVER ERROR",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_real_ath79",
                "time": 0.254,
                "results": [
                    {
                        "result": "Failure",
                        "message": "AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n  - 200 OK\n  + 500 INTERNAL SERVER ERROR",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_needed",
                "time": 0.234,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_bad_distro",
                "time": 0.212,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_bad_branch",
                "time": 0.218,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_bad_version",
                "time": 0.495,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_bad_profile",
                "time": 0.35,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_defaults_empty",
                "time": 0.34,
                "results": [
                    {
                        "result": "Failure",
                        "message": "AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n  - 200 OK\n  + 500 INTERNAL SERVER ERROR",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_defaults_filled_not_allowed",
                "time": 0.394,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_api",
                "name": "test_api_build_defaults_filled_allowed",
                "time": 0.391,
                "results": [
                    {
                        "result": "Failure",
                        "message": "AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n  - 200 OK\n  + 500 INTERNAL SERVER ERROR",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_get_str_hash",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_get_file_hash",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_get_packages_hash",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_get_request_hash",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_diff_packages",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_fingerprint_pubkey_usign",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_verify_usign",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_remove_prefix",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_get_version_container_tag",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_check_manifest",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_common",
                "name": "test_run_container",
                "time": 0.007,
                "results": [
                    {
                        "result": "Failure",
                        "message": "podman.errors.exceptions.APIError: http://%2Ftmp%2Fpodman.sock/v4.5.0/libpod/containers/create (POST operation failed)",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_factory",
                "name": "test_pathlib",
                "time": 0.374,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_factory",
                "name": "test_branches_yaml",
                "time": 0.378,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_factory",
                "name": "test_branches_default",
                "time": 0.466,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_factory",
                "name": "test_other",
                "time": 0.37,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_factory",
                "name": "test_json_store",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_janitor",
                "name": "test_update_branch",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_janitor",
                "name": "test_update_meta_latest_json",
                "time": 0.276,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_janitor",
                "name": "test_update_meta_overview_json",
                "time": 0.245,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stats",
                "name": "test_stats_image_builds",
                "time": 0.398,
                "results": [
                    {
                        "result": "Failure",
                        "message": "AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n  - 200 OK\n  + 500 INTERNAL SERVER ERROR",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stats",
                "name": "test_stats_cache",
                "time": 0.446,
                "results": [
                    {
                        "result": "Failure",
                        "message": "AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n  - 200 OK\n  + 500 INTERNAL SERVER ERROR",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stats",
                "name": "test_stats_clients_luci",
                "time": 0.385,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stats",
                "name": "test_stats_clients_unknown",
                "time": 0.472,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stats",
                "name": "test_stats_clients_auc",
                "time": 0.353,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stats",
                "name": "test_stats_clients_auc_possible_new_format",
                "time": 0.416,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8] \ud83d\ude80  Start image=crawlergpt:latest\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu] user=0 workdir=\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v1\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v1\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8] \ud83e\uddea  Matrix: map[python-version:3.8]\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8] \u2b50 Run Main actions/checkout@v2\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \u2705  Success - Main actions/checkout@v2\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8] \u2b50 Run Main Install ImageBuilder prereqs\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/1] user= workdir=\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Reading package lists...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Building dependency tree...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Reading state information...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | libncurses5-dev is already the newest version (6.2-0ubuntu2).\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | 0 upgraded, 0 newly installed, 0 to remove and 20 not upgraded.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \u2705  Success - Main Install ImageBuilder prereqs\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8] \u2b50 Run Main actions/setup-python@v1\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udc33  docker cp src=/tmp/act-cache/728d2079-c34b-4790-98c3-f5b97e32877f/act/actions-setup-python@v1/ dst=/var/run/act/actions/actions-setup-python@v1/\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v1/] user=0 workdir=\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v1/dist/index.js] user= workdir=\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udcac  ::debug::isExplicit: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udcac  ::debug::explicit? false\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udcac  ::debug::explicit? true\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udcac  ::debug::explicit? true\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udcac  ::debug::explicit? true\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udcac  ::debug::explicit? true\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udcac  ::debug::explicit? true\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udcac  ::debug::explicit? true\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udcac  ::debug::evaluating 6 versions\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udcac  ::debug::matched: 3.8.11\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Successfully setup CPython (3.8.11)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \u2753 add-matcher /run/act/actions/actions-setup-python@v1/.github/python.json\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \u2705  Success - Main actions/setup-python@v1\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \u2699  ::set-output:: python-version=3.8.11\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8] \u2b50 Run Main Display Python version\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | 3.8.11 (default, Jul  5 2021, 19:22:52) \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | [GCC 9.3.0]\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \u2705  Success - Main Display Python version\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8] \u2b50 Run Main Install dependencies\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting poetry\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading poetry-1.5.1-py3-none-any.whl (225 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting dulwich<0.22.0,>=0.21.2\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading dulwich-0.21.5-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (512 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting jsonschema<5.0.0,>=4.10.0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading jsonschema-4.17.3-py3-none-any.whl (90 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting shellingham<2.0,>=1.5\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading shellingham-1.5.0.post1-py2.py3-none-any.whl (9.4 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting trove-classifiers>=2022.5.19\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading trove_classifiers-2023.5.24-py3-none-any.whl (13 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting crashtest<0.5.0,>=0.4.1\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading crashtest-0.4.1-py3-none-any.whl (7.6 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting cachecontrol[filecache]<0.13.0,>=0.12.9\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading CacheControl-0.12.14-py2.py3-none-any.whl (21 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting packaging>=20.4\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting virtualenv<21.0.0,>=20.22.0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting requests<3.0,>=2.18\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting tomlkit<1.0.0,>=0.11.4\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading tomlkit-0.11.8-py3-none-any.whl (35 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting platformdirs<4.0.0,>=3.0.0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting filelock<4.0.0,>=3.8.0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting build<0.11.0,>=0.10.0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading build-0.10.0-py3-none-any.whl (17 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting poetry-core==1.6.1\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading poetry_core-1.6.1-py3-none-any.whl (450 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting pexpect<5.0.0,>=4.7.0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting urllib3<2.0.0,>=1.26.0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting keyring<24.0.0,>=23.9.0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading keyring-23.13.1-py3-none-any.whl (37 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting poetry-plugin-export<2.0.0,>=1.4.0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading poetry_plugin_export-1.4.0-py3-none-any.whl (10 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting pkginfo<2.0.0,>=1.9.4\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading pkginfo-1.9.6-py3-none-any.whl (30 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting requests-toolbelt<2,>=0.9.1\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading requests_toolbelt-1.0.0-py2.py3-none-any.whl (54 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting importlib-metadata>=4.4\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting lockfile<0.13.0,>=0.12.2\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading lockfile-0.12.2-py2.py3-none-any.whl (13 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting pyproject-hooks<2.0.0,>=1.0.0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading pyproject_hooks-1.0.0-py3-none-any.whl (9.3 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting tomli<3.0.0,>=2.0.1\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting installer<0.8.0,>=0.7.0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading installer-0.7.0-py3-none-any.whl (453 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting html5lib<2.0,>=1.0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading html5lib-1.1-py2.py3-none-any.whl (112 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting cleo<3.0.0,>=2.0.0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading cleo-2.0.1-py3-none-any.whl (77 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting msgpack>=0.5.2\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading msgpack-1.0.5-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (322 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting rapidfuzz<3.0.0,>=2.2.0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading rapidfuzz-2.15.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting six>=1.9\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting webencodings\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting zipp>=0.5\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading pyrsistent-0.19.3-py3-none-any.whl (57 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting importlib-resources>=1.4.0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading importlib_resources-5.12.0-py3-none-any.whl (36 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting attrs>=17.4.0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting pkgutil-resolve-name>=1.3.10\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading pkgutil_resolve_name-1.3.10-py3-none-any.whl (4.7 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting jeepney>=0.4.2\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading jeepney-0.8.0-py3-none-any.whl (48 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting jaraco.classes\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading jaraco.classes-3.2.3-py3-none-any.whl (6.0 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting SecretStorage>=3.2\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading SecretStorage-3.3.3-py3-none-any.whl (15 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting ptyprocess>=0.5\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting certifi>=2017.4.17\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting charset-normalizer<4,>=2\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading charset_normalizer-3.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (195 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting idna<4,>=2.5\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting cryptography>=2.0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading cryptography-41.0.1-cp37-abi3-manylinux_2_28_x86_64.whl (4.3 MB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting cffi>=1.12\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading cffi-1.15.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (442 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting pycparser\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting distlib<1,>=0.3.6\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Collecting more-itertools\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   Downloading more_itertools-9.1.0-py3-none-any.whl (54 kB)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Installing collected packages: pycparser, urllib3, idna, charset-normalizer, cffi, certifi, zipp, tomli, requests, msgpack, more-itertools, jeepney, cryptography, webencodings, six, SecretStorage, rapidfuzz, pyrsistent, pyproject-hooks, ptyprocess, poetry-core, platformdirs, pkgutil-resolve-name, packaging, lockfile, jaraco.classes, importlib-resources, importlib-metadata, filelock, distlib, crashtest, cachecontrol, attrs, virtualenv, trove-classifiers, tomlkit, shellingham, requests-toolbelt, poetry-plugin-export, pkginfo, pexpect, keyring, jsonschema, installer, html5lib, dulwich, cleo, build, poetry\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Successfully installed SecretStorage-3.3.3 attrs-23.1.0 build-0.10.0 cachecontrol-0.12.14 certifi-2023.5.7 cffi-1.15.1 charset-normalizer-3.1.0 cleo-2.0.1 crashtest-0.4.1 cryptography-41.0.1 distlib-0.3.6 dulwich-0.21.5 filelock-3.12.2 html5lib-1.1 idna-3.4 importlib-metadata-6.7.0 importlib-resources-5.12.0 installer-0.7.0 jaraco.classes-3.2.3 jeepney-0.8.0 jsonschema-4.17.3 keyring-23.13.1 lockfile-0.12.2 more-itertools-9.1.0 msgpack-1.0.5 packaging-23.1 pexpect-4.8.0 pkginfo-1.9.6 pkgutil-resolve-name-1.3.10 platformdirs-3.8.0 poetry-1.5.1 poetry-core-1.6.1 poetry-plugin-export-1.4.0 ptyprocess-0.7.0 pycparser-2.21 pyproject-hooks-1.0.0 pyrsistent-0.19.3 rapidfuzz-2.15.1 requests-2.31.0 requests-toolbelt-1.0.0 shellingham-1.5.0.post1 six-1.16.0 tomli-2.0.1 tomlkit-0.11.8 trove-classifiers-2023.5.24 urllib3-1.26.16 virtualenv-20.23.1 webencodings-0.5.1 zipp-3.15.0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.8.11/x64/bin/python -m pip install --upgrade pip' command.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Creating virtualenv asu-i6ndNwkt-py3.8 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Installing dependencies from lock file\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Package operations: 56 installs, 0 updates, 0 removals\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing markupsafe (2.1.2)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing zipp (3.15.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing async-timeout (4.0.2)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing attrs (23.1.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing certifi (2023.5.7)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing charset-normalizer (2.1.1)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing click (8.1.3)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing idna (3.4)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing importlib-metadata (6.6.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing importlib-resources (5.12.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing itsdangerous (2.1.2)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing jinja2 (3.1.2)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing pkgutil-resolve-name (1.3.10)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing pycparser (2.21)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing pyrsistent (0.19.3)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing pyyaml (6.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing urllib3 (1.26.16)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing werkzeug (2.2.3)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing cffi (1.15.1)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing clickclick (20.10.2)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing inflection (0.5.1)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing iniconfig (2.0.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing mccabe (0.6.1)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing mypy-extensions (1.0.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing pathspec (0.11.1)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing flask (2.2.5)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing pluggy (1.0.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing packaging (23.1)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing pyflakes (2.4.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing jsonschema (4.17.3)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing platformdirs (3.5.1)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing six (1.16.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing sortedcontainers (2.4.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing swagger-ui-bundle (0.0.9)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing toml (0.10.2)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing redis (4.5.5)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing requests (2.31.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing py (1.11.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing pycodestyle (2.8.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing tomli (2.0.1)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing typing-extensions (4.6.2)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing pyxdg (0.28)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing black (22.12.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing connexion (2.14.2)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing coverage (6.5.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing fakeredis (2.13.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing flake8 (4.0.1)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing flask-cors (3.0.10)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing isort (5.12.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing podman (4.5.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing prometheus-client (0.13.1)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing pynacl (1.5.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing pytest-httpserver (1.0.8)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing gunicorn (20.1.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing rq (1.15.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   \u2022 Installing pytest (6.2.5)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Installing the current project: asu (0.0.0)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \u2705  Success - Main Install dependencies\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8] \u2b50 Run Main Lint with flake8\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | 0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ./asu/build.py:26:1: C901 'build' is too complex (18)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ./asu/asu.py:18:1: C901 'create_app' is too complex (14)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ./asu/common.py:199:56: E203 whitespace before ':'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | 2     C901 'create_app' is too complex (14)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | 1     E203 whitespace before ':'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | 3\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \u2705  Success - Main Lint with flake8\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8] \u2b50 Run Main Stylecheck with black\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | reformatted asu/api.py\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | All done! \u2728 \ud83c\udf70 \u2728\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | 1 file reformatted, 12 files left unchanged.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \u2705  Success - Main Stylecheck with black\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8] \u2b50 Run Main Test with pytest\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/7] user= workdir=\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | cannot clone: Operation not permitted\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | Error: cannot re-exec process\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ============================= test session starts ==============================\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | platform linux -- Python 3.8.11, pytest-6.2.5, py-1.11.0, pluggy-1.0.0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | plugins: httpserver-1.0.8\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | collected 56 items\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py FFF.F.FF.FFFF..FF....FF.....F.F                        [ 55%]\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_common.py ..........F                                         [ 75%]\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_factory.py .....                                              [ 83%]\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_janitor.py ...                                                [ 89%]\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_stats.py FF....                                               [100%]\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | =================================== FAILURES ===================================\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ________________________________ test_api_build ________________________________\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | client = <FlaskClient <Flask 'asu.asu'>>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def test_api_build(client):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response = client.post(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"/api/v1/build\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             json=dict(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 version=\"1.2.3\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 target=\"testtarget/testsubtarget\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 profile=\"testprofile\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 packages=[\"test1\", \"test2\"],\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       assert response.status == \"200 OK\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E       AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         - 200 OK\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         + 500 INTERNAL SERVER ERROR\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py:14: AssertionError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ------------------------------ Captured log call -------------------------------\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:35 Store path: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmper_so3qt/store\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:41 Building {'packages': {'test1', 'test2'}, 'profile': 'testprofile', 'target': 'testtarget/testsubtarget', 'version': '1.2.3', 'distro': 'openwrt', 'branch': '1.2', 'arch': '', 'store_path': PosixPath('/tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmper_so3qt/store'), 'branch_data': {'name': '1.2', 'enabled': True, 'snapshot': True, 'versions': ['1.2.3'], 'git_branch': 'master', 'path': 'snapshots', 'path_packages': 'snapshots/packages', 'repos': ['base'], 'pubkey': 'RWRqylWEtrAZQ9hlSSEkqCJD4SAFswJQR1yoMfD3mzO3TEnY7LGthxPi', 'updates': 'dev', 'targets': {'testtarget/testsubtarget': 'testarch', 'x86/64': 'x86_64'}, 'package_changes': {'package_to_remove': None, 'package_to_replace': 'valid_new_package'}}, 'repository_allow_list': [], 'request_hash': '06fd5094f8bbe8cfa0c0c796776196ba'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _________________________ test_api_build_version_code __________________________\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | client = <FlaskClient <Flask 'asu.asu'>>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def test_api_build_version_code(client):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response = client.post(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"/api/v1/build\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             json=dict(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 version=\"1.2.3\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 version_code=\"r12647-cb44ab4f5d\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 target=\"testtarget/testsubtarget\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 profile=\"testprofile\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 packages=[\"test1\", \"test2\"],\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       assert response.status == \"200 OK\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E       AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         - 200 OK\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         + 500 INTERNAL SERVER ERROR\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py:29: AssertionError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ------------------------------ Captured log call -------------------------------\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:35 Store path: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmps_g2lvwc/store\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:41 Building {'packages': {'test1', 'test2'}, 'profile': 'testprofile', 'target': 'testtarget/testsubtarget', 'version': '1.2.3', 'version_code': 'r12647-cb44ab4f5d', 'distro': 'openwrt', 'branch': '1.2', 'arch': '', 'store_path': PosixPath('/tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmps_g2lvwc/store'), 'branch_data': {'name': '1.2', 'enabled': True, 'snapshot': True, 'versions': ['1.2.3'], 'git_branch': 'master', 'path': 'snapshots', 'path_packages': 'snapshots/packages', 'repos': ['base'], 'pubkey': 'RWRqylWEtrAZQ9hlSSEkqCJD4SAFswJQR1yoMfD3mzO3TEnY7LGthxPi', 'updates': 'dev', 'targets': {'testtarget/testsubtarget': 'testarch', 'x86/64': 'x86_64'}, 'package_changes': {'package_to_remove': None, 'package_to_replace': 'valid_new_package'}}, 'repository_allow_list': [], 'request_hash': '798b875b3b04acc8cb0fe2ea1f1b9859'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | __________________________ test_api_build_rootfs_size __________________________\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | client = <FlaskClient <Flask 'asu.asu'>>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def test_api_build_rootfs_size(client):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response = client.post(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"/api/v1/build\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             json=dict(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 version=\"1.2.3\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 target=\"testtarget/testsubtarget\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 profile=\"testprofile\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 packages=[\"test1\", \"test2\"],\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 rootfs_size_mb=100,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       assert response.status == \"200 OK\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E       AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         - 200 OK\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         + 500 INTERNAL SERVER ERROR\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py:43: AssertionError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ------------------------------ Captured log call -------------------------------\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:35 Store path: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpk5exfjhm/store\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:41 Building {'packages': {'test1', 'test2'}, 'profile': 'testprofile', 'rootfs_size_mb': 100, 'target': 'testtarget/testsubtarget', 'version': '1.2.3', 'distro': 'openwrt', 'branch': '1.2', 'arch': '', 'store_path': PosixPath('/tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpk5exfjhm/store'), 'branch_data': {'name': '1.2', 'enabled': True, 'snapshot': True, 'versions': ['1.2.3'], 'git_branch': 'master', 'path': 'snapshots', 'path_packages': 'snapshots/packages', 'repos': ['base'], 'pubkey': 'RWRqylWEtrAZQ9hlSSEkqCJD4SAFswJQR1yoMfD3mzO3TEnY7LGthxPi', 'updates': 'dev', 'targets': {'testtarget/testsubtarget': 'testarch', 'x86/64': 'x86_64'}, 'package_changes': {'package_to_remove': None, 'package_to_replace': 'valid_new_package'}}, 'repository_allow_list': [], 'request_hash': '0b15b0ff70b4b7a49c7a52cf3c1e3316'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _________________________ test_api_build_diff_packages _________________________\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | client = <FlaskClient <Flask 'asu.asu'>>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def test_api_build_diff_packages(client):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response = client.post(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"/api/v1/build\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             json=dict(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 version=\"1.2.3\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 target=\"testtarget/testsubtarget\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 profile=\"testprofile\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 packages=[\"test1\", \"test2\"],\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 diff_packages=True,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       assert response.status == \"200 OK\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E       AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         - 200 OK\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         + 500 INTERNAL SERVER ERROR\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py:72: AssertionError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ------------------------------ Captured log call -------------------------------\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:35 Store path: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpe8hp8kc_/store\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:41 Building {'diff_packages': True, 'packages': {'test1', 'test2'}, 'profile': 'testprofile', 'target': 'testtarget/testsubtarget', 'version': '1.2.3', 'distro': 'openwrt', 'branch': '1.2', 'arch': '', 'store_path': PosixPath('/tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpe8hp8kc_/store'), 'branch_data': {'name': '1.2', 'enabled': True, 'snapshot': True, 'versions': ['1.2.3'], 'git_branch': 'master', 'path': 'snapshots', 'path_packages': 'snapshots/packages', 'repos': ['base'], 'pubkey': 'RWRqylWEtrAZQ9hlSSEkqCJD4SAFswJQR1yoMfD3mzO3TEnY7LGthxPi', 'updates': 'dev', 'targets': {'testtarget/testsubtarget': 'testarch', 'x86/64': 'x86_64'}, 'package_changes': {'package_to_remove': None, 'package_to_replace': 'valid_new_package'}}, 'repository_allow_list': [], 'request_hash': 'ac6ade9c9e45d94ac08daba2037b8018'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ____________________________ test_api_build_mapping ____________________________\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | client = <FlaskClient <Flask 'asu.asu'>>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def test_api_build_mapping(client):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response = client.post(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"/api/v1/build\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             json=dict(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 version=\"1.2.3\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 target=\"testtarget/testsubtarget\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 profile=\"testvendor,testprofile\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 packages=[\"test1\", \"test2\"],\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       assert response.status == \"200 OK\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E       AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         - 200 OK\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         + 500 INTERNAL SERVER ERROR\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py:96: AssertionError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ------------------------------ Captured log call -------------------------------\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:35 Store path: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpbullsc3h/store\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:41 Building {'packages': {'test1', 'test2'}, 'profile': 'testprofile', 'target': 'testtarget/testsubtarget', 'version': '1.2.3', 'distro': 'openwrt', 'branch': '1.2', 'arch': '', 'store_path': PosixPath('/tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpbullsc3h/store'), 'branch_data': {'name': '1.2', 'enabled': True, 'snapshot': True, 'versions': ['1.2.3'], 'git_branch': 'master', 'path': 'snapshots', 'path_packages': 'snapshots/packages', 'repos': ['base'], 'pubkey': 'RWRqylWEtrAZQ9hlSSEkqCJD4SAFswJQR1yoMfD3mzO3TEnY7LGthxPi', 'updates': 'dev', 'targets': {'testtarget/testsubtarget': 'testarch', 'x86/64': 'x86_64'}, 'package_changes': {'package_to_remove': None, 'package_to_replace': 'valid_new_package'}}, 'repository_allow_list': [], 'request_hash': 'd72e7826437b35f7101134a086f63ae5'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | __________________________ test_api_build_mapping_abi __________________________\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | client = <FlaskClient <Flask 'asu.asu'>>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def test_api_build_mapping_abi(client):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response = client.post(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"/api/v1/build\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             json=dict(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 version=\"1.2.3\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 target=\"testtarget/testsubtarget\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 profile=\"testvendor,testprofile\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 packages=[\"test1-1\", \"test2\"],\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       assert response.status == \"200 OK\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E       AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         - 200 OK\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         + 500 INTERNAL SERVER ERROR\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py:109: AssertionError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ------------------------------ Captured log call -------------------------------\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:35 Store path: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmp8u5d2km3/store\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:41 Building {'packages': {'test2', 'test1-1'}, 'profile': 'testprofile', 'target': 'testtarget/testsubtarget', 'version': '1.2.3', 'distro': 'openwrt', 'branch': '1.2', 'arch': '', 'store_path': PosixPath('/tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmp8u5d2km3/store'), 'branch_data': {'name': '1.2', 'enabled': True, 'snapshot': True, 'versions': ['1.2.3'], 'git_branch': 'master', 'path': 'snapshots', 'path_packages': 'snapshots/packages', 'repos': ['base'], 'pubkey': 'RWRqylWEtrAZQ9hlSSEkqCJD4SAFswJQR1yoMfD3mzO3TEnY7LGthxPi', 'updates': 'dev', 'targets': {'testtarget/testsubtarget': 'testarch', 'x86/64': 'x86_64'}, 'package_changes': {'package_to_remove': None, 'package_to_replace': 'valid_new_package'}}, 'repository_allow_list': [], 'request_hash': 'b2c790340fbd3afc0456110a17741007'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ______________________________ test_api_build_get ______________________________\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | client = <FlaskClient <Flask 'asu.asu'>>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def test_api_build_get(client):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response = client.post(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"/api/v1/build\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             json=dict(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 version=\"1.2.3\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 target=\"testtarget/testsubtarget\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 profile=\"testprofile\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 packages=[\"test1\", \"test2\"],\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         request_hash = response.json[\"request_hash\"]\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response = client.get(f\"/api/v1/build/{request_hash}\")\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       assert response.status == \"200 OK\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E       AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         - 200 OK\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         + 500 INTERNAL SERVER ERROR\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py:140: AssertionError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ------------------------------ Captured log call -------------------------------\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:35 Store path: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpntbcrdt0/store\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:41 Building {'packages': {'test1', 'test2'}, 'profile': 'testprofile', 'target': 'testtarget/testsubtarget', 'version': '1.2.3', 'distro': 'openwrt', 'branch': '1.2', 'arch': '', 'store_path': PosixPath('/tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpntbcrdt0/store'), 'branch_data': {'name': '1.2', 'enabled': True, 'snapshot': True, 'versions': ['1.2.3'], 'git_branch': 'master', 'path': 'snapshots', 'path_packages': 'snapshots/packages', 'repos': ['base'], 'pubkey': 'RWRqylWEtrAZQ9hlSSEkqCJD4SAFswJQR1yoMfD3mzO3TEnY7LGthxPi', 'updates': 'dev', 'targets': {'testtarget/testsubtarget': 'testarch', 'x86/64': 'x86_64'}, 'package_changes': {'package_to_remove': None, 'package_to_replace': 'valid_new_package'}}, 'repository_allow_list': [], 'request_hash': '06fd5094f8bbe8cfa0c0c796776196ba'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _______________________ test_api_build_packages_versions _______________________\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | client = <FlaskClient <Flask 'asu.asu'>>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def test_api_build_packages_versions(client):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response = client.post(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"/api/v1/build\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             json=dict(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 version=\"1.2.3\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 target=\"testtarget/testsubtarget\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 profile=\"testprofile\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 packages_versions={\"test1\": \"1.0\", \"test2\": \"2.0\"},\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         request_hash = response.json[\"request_hash\"]\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response = client.get(f\"/api/v1/build/{request_hash}\")\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       assert response.status == \"200 OK\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E       AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         - 200 OK\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         + 500 INTERNAL SERVER ERROR\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py:156: AssertionError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ------------------------------ Captured log call -------------------------------\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:35 Store path: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpkx7odwah/store\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:41 Building {'packages_versions': {'test1': '1.0', 'test2': '2.0'}, 'profile': 'testprofile', 'target': 'testtarget/testsubtarget', 'version': '1.2.3', 'distro': 'openwrt', 'branch': '1.2', 'packages': {'test1', 'test2'}, 'arch': '', 'store_path': PosixPath('/tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpkx7odwah/store'), 'branch_data': {'name': '1.2', 'enabled': True, 'snapshot': True, 'versions': ['1.2.3'], 'git_branch': 'master', 'path': 'snapshots', 'path_packages': 'snapshots/packages', 'repos': ['base'], 'pubkey': 'RWRqylWEtrAZQ9hlSSEkqCJD4SAFswJQR1yoMfD3mzO3TEnY7LGthxPi', 'updates': 'dev', 'targets': {'testtarget/testsubtarget': 'testarch', 'x86/64': 'x86_64'}, 'package_changes': {'package_to_remove': None, 'package_to_replace': 'valid_new_package'}}, 'repository_allow_list': [], 'request_hash': 'bff9c4091211172b69f6bc019d273be0'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _____________________ test_api_build_packages_versions_bad _____________________\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | client = <FlaskClient <Flask 'asu.asu'>>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def test_api_build_packages_versions_bad(client):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response = client.post(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"/api/v1/build\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             json=dict(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 version=\"1.2.3\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 target=\"testtarget/testsubtarget\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 profile=\"testprofile\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 packages_versions={\"test1\": \"0.0\", \"test2\": \"2.0\"},\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         request_hash = response.json[\"request_hash\"]\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response = client.get(f\"/api/v1/build/{request_hash}\")\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         assert response.status == \"500 INTERNAL SERVER ERROR\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       assert (\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             response.json.get(\"detail\")\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             == \"Error: Impossible package selection: test1 version not as requested: 0.0 vs. 1.0\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E       AssertionError: assert 'init' == 'Error: Impos...: 0.0 vs. 1.0'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         - Error: Impossible package selection: test1 version not as requested: 0.0 vs. 1.0\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         + init\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py:173: AssertionError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ------------------------------ Captured log call -------------------------------\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:35 Store path: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpncwx6atg/store\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:41 Building {'packages_versions': {'test1': '0.0', 'test2': '2.0'}, 'profile': 'testprofile', 'target': 'testtarget/testsubtarget', 'version': '1.2.3', 'distro': 'openwrt', 'branch': '1.2', 'packages': {'test1', 'test2'}, 'arch': '', 'store_path': PosixPath('/tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpncwx6atg/store'), 'branch_data': {'name': '1.2', 'enabled': True, 'snapshot': True, 'versions': ['1.2.3'], 'git_branch': 'master', 'path': 'snapshots', 'path_packages': 'snapshots/packages', 'repos': ['base'], 'pubkey': 'RWRqylWEtrAZQ9hlSSEkqCJD4SAFswJQR1yoMfD3mzO3TEnY7LGthxPi', 'updates': 'dev', 'targets': {'testtarget/testsubtarget': 'testarch', 'x86/64': 'x86_64'}, 'package_changes': {'package_to_remove': None, 'package_to_replace': 'valid_new_package'}}, 'repository_allow_list': [], 'request_hash': 'a4bf484ff5cad20cdb75ac9dfb8220e4'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ______________________ test_api_build_packages_duplicate _______________________\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | client = <FlaskClient <Flask 'asu.asu'>>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def test_api_build_packages_duplicate(client):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response = client.post(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"/api/v1/build\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             json=dict(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 version=\"1.2.3\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 target=\"testtarget/testsubtarget\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 profile=\"testprofile\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 packages=[\"test1\", \"test2\"],\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 packages_versions={\"test1\": \"1.0\", \"test2\": \"2.0\"},\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       assert response.status == \"200 OK\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E       AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         - 200 OK\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         + 500 INTERNAL SERVER ERROR\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py:190: AssertionError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ------------------------------ Captured log call -------------------------------\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:35 Store path: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmperu7sr7v/store\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:41 Building {'packages': {'test1', 'test2'}, 'packages_versions': {'test1': '1.0', 'test2': '2.0'}, 'profile': 'testprofile', 'target': 'testtarget/testsubtarget', 'version': '1.2.3', 'distro': 'openwrt', 'branch': '1.2', 'arch': '', 'store_path': PosixPath('/tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmperu7sr7v/store'), 'branch_data': {'name': '1.2', 'enabled': True, 'snapshot': True, 'versions': ['1.2.3'], 'git_branch': 'master', 'path': 'snapshots', 'path_packages': 'snapshots/packages', 'repos': ['base'], 'pubkey': 'RWRqylWEtrAZQ9hlSSEkqCJD4SAFswJQR1yoMfD3mzO3TEnY7LGthxPi', 'updates': 'dev', 'targets': {'testtarget/testsubtarget': 'testarch', 'x86/64': 'x86_64'}, 'package_changes': {'package_to_remove': None, 'package_to_replace': 'valid_new_package'}}, 'repository_allow_list': [], 'request_hash': '1c546694727b2d2e643e7263fb72f100'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ______________________ test_api_build_empty_packages_list ______________________\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | client = <FlaskClient <Flask 'asu.asu'>>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def test_api_build_empty_packages_list(client):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response = client.post(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"/api/v1/build\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             json=dict(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 version=\"1.2.3\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 target=\"testtarget/testsubtarget\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 profile=\"testprofile\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 packages=[],\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       assert response.status == \"200 OK\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E       AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         - 200 OK\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         + 500 INTERNAL SERVER ERROR\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py:213: AssertionError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ------------------------------ Captured log call -------------------------------\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:35 Store path: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpla0bn1sk/store\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:41 Building {'packages': set(), 'profile': 'testprofile', 'target': 'testtarget/testsubtarget', 'version': '1.2.3', 'distro': 'openwrt', 'branch': '1.2', 'arch': '', 'store_path': PosixPath('/tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpla0bn1sk/store'), 'branch_data': {'name': '1.2', 'enabled': True, 'snapshot': True, 'versions': ['1.2.3'], 'git_branch': 'master', 'path': 'snapshots', 'path_packages': 'snapshots/packages', 'repos': ['base'], 'pubkey': 'RWRqylWEtrAZQ9hlSSEkqCJD4SAFswJQR1yoMfD3mzO3TEnY7LGthxPi', 'updates': 'dev', 'targets': {'testtarget/testsubtarget': 'testarch', 'x86/64': 'x86_64'}, 'package_changes': {'package_to_remove': None, 'package_to_replace': 'valid_new_package'}}, 'repository_allow_list': [], 'request_hash': '4b43d635f5b5fa08a7889fff01346c07'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ____________________ test_api_build_withouth_packages_list _____________________\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | client = <FlaskClient <Flask 'asu.asu'>>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def test_api_build_withouth_packages_list(client):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response = client.post(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"/api/v1/build\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             json=dict(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 version=\"1.2.3\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 target=\"testtarget/testsubtarget\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 profile=\"testprofile\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       assert response.status == \"200 OK\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E       AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         - 200 OK\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         + 500 INTERNAL SERVER ERROR\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py:225: AssertionError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ------------------------------ Captured log call -------------------------------\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:35 Store path: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpwu9iff6t/store\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:41 Building {'profile': 'testprofile', 'target': 'testtarget/testsubtarget', 'version': '1.2.3', 'distro': 'openwrt', 'branch': '1.2', 'packages': set(), 'arch': '', 'store_path': PosixPath('/tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpwu9iff6t/store'), 'branch_data': {'name': '1.2', 'enabled': True, 'snapshot': True, 'versions': ['1.2.3'], 'git_branch': 'master', 'path': 'snapshots', 'path_packages': 'snapshots/packages', 'repos': ['base'], 'pubkey': 'RWRqylWEtrAZQ9hlSSEkqCJD4SAFswJQR1yoMfD3mzO3TEnY7LGthxPi', 'updates': 'dev', 'targets': {'testtarget/testsubtarget': 'testarch', 'x86/64': 'x86_64'}, 'package_changes': {'package_to_remove': None, 'package_to_replace': 'valid_new_package'}}, 'repository_allow_list': [], 'request_hash': '4b43d635f5b5fa08a7889fff01346c07'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ___________________________ test_api_build_real_x86 ____________________________\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | app = <Flask 'asu.asu'>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     @pytest.mark.slow\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def test_api_build_real_x86(app):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         client = app.test_client()\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         app.config[\"UPSTREAM_URL\"] = \"https://downloads.openwrt.org\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response = client.post(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"/api/v1/build\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             json=dict(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 target=\"x86/64\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 version=\"21.02.7\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 packages=[\"tmux\", \"vim\"],\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 profile=\"some_random_cpu_which_doesnt_exists_as_profile\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       assert response.status == \"200 OK\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E       AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         - 200 OK\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         + 500 INTERNAL SERVER ERROR\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py:293: AssertionError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ------------------------------ Captured log call -------------------------------\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:35 Store path: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpl4oz3lrr/store\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:41 Building {'packages': {'tmux', 'vim'}, 'profile': 'generic', 'target': 'x86/64', 'version': '21.02.7', 'distro': 'openwrt', 'branch': '21.02', 'arch': '', 'store_path': PosixPath('/tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpl4oz3lrr/store'), 'branch_data': {'name': '21.02', 'enabled': True, 'snapshot': True, 'versions': ['21.02.7', '21.02.0', '21.02.0-rc4', '21.02-SNAPSHOT'], 'git_branch': 'openwrt-21.02', 'path': 'releases/{version}', 'path_packages': 'releases/packages-{branch}', 'repos': ['base'], 'pubkey': 'RWRqylWEtrAZQ9hlSSEkqCJD4SAFswJQR1yoMfD3mzO3TEnY7LGthxPi', 'updates': 'rc', 'targets': {'testtarget/testsubtarget': 'testarch'}}, 'repository_allow_list': [], 'request_hash': 'eab135b00f0b8438d22deeb57f35f5ae'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | __________________________ test_api_build_real_ath79 ___________________________\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | app = <Flask 'asu.asu'>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     @pytest.mark.slow\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def test_api_build_real_ath79(app):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         client = app.test_client()\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         app.config[\"UPSTREAM_URL\"] = \"https://downloads.openwrt.org\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response = client.post(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"/api/v1/build\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             json=dict(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 target=\"ath79/generic\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 version=\"21.02.7\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 packages=[\"tmux\", \"vim\"],\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 profile=\"tplink_tl-wdr4300-v1\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       assert response.status == \"200 OK\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E       AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         - 200 OK\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         + 500 INTERNAL SERVER ERROR\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py:325: AssertionError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ------------------------------ Captured log call -------------------------------\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:35 Store path: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpou2c6ez2/store\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:41 Building {'packages': {'tmux', 'vim'}, 'profile': 'tplink_tl-wdr4300-v1', 'target': 'ath79/generic', 'version': '21.02.7', 'distro': 'openwrt', 'branch': '21.02', 'arch': '', 'store_path': PosixPath('/tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpou2c6ez2/store'), 'branch_data': {'name': '21.02', 'enabled': True, 'snapshot': True, 'versions': ['21.02.7', '21.02.0', '21.02.0-rc4', '21.02-SNAPSHOT'], 'git_branch': 'openwrt-21.02', 'path': 'releases/{version}', 'path_packages': 'releases/packages-{branch}', 'repos': ['base'], 'pubkey': 'RWRqylWEtrAZQ9hlSSEkqCJD4SAFswJQR1yoMfD3mzO3TEnY7LGthxPi', 'updates': 'rc', 'targets': {'testtarget/testsubtarget': 'testarch'}}, 'repository_allow_list': [], 'request_hash': '8b15973ebb6fe26c10b0066a63febdef'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ________________________ test_api_build_defaults_empty _________________________\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | client = <FlaskClient <Flask 'asu.asu'>>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def test_api_build_defaults_empty(client):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response = client.post(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"/api/v1/build\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             json=dict(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 version=\"1.2.3\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 target=\"testtarget/testsubtarget\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 profile=\"testprofile\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 defaults=\"\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       assert response.status == \"200 OK\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E       AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         - 200 OK\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         + 500 INTERNAL SERVER ERROR\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py:433: AssertionError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ------------------------------ Captured log call -------------------------------\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:35 Store path: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmprz9rte0v/store\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:41 Building {'defaults': '', 'profile': 'testprofile', 'target': 'testtarget/testsubtarget', 'version': '1.2.3', 'distro': 'openwrt', 'branch': '1.2', 'packages': set(), 'arch': '', 'store_path': PosixPath('/tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmprz9rte0v/store'), 'branch_data': {'name': '1.2', 'enabled': True, 'snapshot': True, 'versions': ['1.2.3'], 'git_branch': 'master', 'path': 'snapshots', 'path_packages': 'snapshots/packages', 'repos': ['base'], 'pubkey': 'RWRqylWEtrAZQ9hlSSEkqCJD4SAFswJQR1yoMfD3mzO3TEnY7LGthxPi', 'updates': 'dev', 'targets': {'testtarget/testsubtarget': 'testarch', 'x86/64': 'x86_64'}, 'package_changes': {'package_to_remove': None, 'package_to_replace': 'valid_new_package'}}, 'repository_allow_list': [], 'request_hash': '4b43d635f5b5fa08a7889fff01346c07'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ____________________ test_api_build_defaults_filled_allowed ____________________\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | app = <Flask 'asu.asu'>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def test_api_build_defaults_filled_allowed(app):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         app.config[\"ALLOW_DEFAULTS\"] = True\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         client = app.test_client()\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response = client.post(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"/api/v1/build\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             json=dict(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 version=\"1.2.3\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 target=\"testtarget/testsubtarget\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 profile=\"testprofile\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 defaults=\"echo\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       assert response.status == \"200 OK\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E       AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         - 200 OK\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         + 500 INTERNAL SERVER ERROR\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py:463: AssertionError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ------------------------------ Captured log call -------------------------------\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:35 Store path: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpvqyf91a2/store\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:41 Building {'defaults': 'echo', 'profile': 'testprofile', 'target': 'testtarget/testsubtarget', 'version': '1.2.3', 'distro': 'openwrt', 'branch': '1.2', 'packages': set(), 'arch': '', 'store_path': PosixPath('/tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpvqyf91a2/store'), 'branch_data': {'name': '1.2', 'enabled': True, 'snapshot': True, 'versions': ['1.2.3'], 'git_branch': 'master', 'path': 'snapshots', 'path_packages': 'snapshots/packages', 'repos': ['base'], 'pubkey': 'RWRqylWEtrAZQ9hlSSEkqCJD4SAFswJQR1yoMfD3mzO3TEnY7LGthxPi', 'updates': 'dev', 'targets': {'testtarget/testsubtarget': 'testarch', 'x86/64': 'x86_64'}, 'package_changes': {'package_to_remove': None, 'package_to_replace': 'valid_new_package'}}, 'repository_allow_list': [], 'request_hash': 'ca6122559630df13592439686ae32ebe'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ______________________________ test_run_container ______________________________\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSSocket fd=11, family=AddressFamily.AF_UNIX, type=SocketKind.SOCK_STREAM, proto=0>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | kwargs = {}, netloc = '/tmp/podman.sock'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def connect(self, **kwargs):  # pylint: disable=unused-argument\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"Returns socket for UNIX domain socket.\"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         netloc = unquote(urlparse(self.uds).netloc)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         try:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >           super().connect(netloc)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E           FileNotFoundError: [Errno 2] No such file or directory\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/podman/api/uds.py:43: FileNotFoundError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | The above exception was the direct cause of the following exception:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSConnectionPool object at 0x7fe9fd111a00>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | method = 'POST', url = '/v4.5.0/libpod/containers/create'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | body = '{\"cap_drop\": [\"all\"], \"command\": [\"make\", \"info\"], \"image\": \"ghcr.io/openwrt/imagebuilder:testtarget-testsubtarget-v1.2.3\", \"no_new_privileges\": true, \"privileged\": false, \"userns\": {\"nsmode\": \"keep-id\"}}'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | headers = {'User-Agent': 'PodmanPy/4.5.0 (API v4.5.0; Compatible v1.40)', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '204'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | retries = Retry(total=0, connect=None, read=False, redirect=None, status=None)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | redirect = False, assert_same_host = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | timeout = Timeout(connect=None, read=None, total=None), pool_timeout = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | release_conn = False, chunked = False, body_pos = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | response_kw = {'decode_content': False, 'preload_content': False}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | parsed_url = Url(scheme=None, auth=None, host=None, port=None, path='/v4.5.0/libpod/containers/create', query=None, fragment=None)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | destination_scheme = None, conn = None, release_this_conn = True\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | http_tunnel_required = False, err = None, clean_exit = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def urlopen(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         self,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         method,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         url,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         body=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         headers=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         retries=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         redirect=True,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         assert_same_host=True,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         timeout=_Default,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         pool_timeout=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         release_conn=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         chunked=False,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         body_pos=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         **response_kw\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     ):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         Get a connection from the pool and perform an HTTP request. This is the\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         lowest level call for making a request, so you'll need to specify all\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         the raw details.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         .. note::\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |            More commonly, it's appropriate to use a convenience method provided\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |            by :class:`.RequestMethods`, such as :meth:`request`.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         .. note::\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |            `release_conn` will only behave as expected if\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |            `preload_content=False` because we want to make\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |            `preload_content=False` the default behaviour someday soon without\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |            breaking backwards compatibility.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param method:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             HTTP request method (such as GET, POST, PUT, etc.)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param url:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             The URL to perform the request on.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param body:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Data to send in the request body, either :class:`str`, :class:`bytes`,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             an iterable of :class:`str`/:class:`bytes`, or a file-like object.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param headers:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Dictionary of custom headers to send, such as User-Agent,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If-None-Match, etc. If None, pool headers are used. If provided,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             these headers completely replace any pool-specific headers.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param retries:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Configure the number of retries to allow before raising a\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             :class:`~urllib3.exceptions.MaxRetryError` exception.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Pass ``None`` to retry until you receive a response. Pass a\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             :class:`~urllib3.util.retry.Retry` object for fine-grained control\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             over different types of retries.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Pass an integer number to retry connection errors that many times,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             but no other types of errors. Pass zero to never retry.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If ``False``, then retries are disabled and any exception is raised\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             immediately. Also, instead of raising a MaxRetryError on redirects,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             the redirect response will be returned.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param redirect:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If True, automatically handle redirects (status codes 301, 302,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             303, 307, 308). Each redirect counts as a retry. Disabling retries\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             will disable redirect, too.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param assert_same_host:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If ``True``, will make sure that the host of the pool requests is\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             consistent else will raise HostChangedError. When ``False``, you can\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             use the pool on an HTTP proxy and request foreign hosts.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param timeout:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If specified, overrides the default timeout for this one\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             request. It may be a float (in seconds) or an instance of\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             :class:`urllib3.util.Timeout`.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param pool_timeout:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If set and the pool is set to block=True, then this method will\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             block for ``pool_timeout`` seconds and raise EmptyPoolError if no\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             connection is available within the time period.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param release_conn:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If False, then the urlopen call will not release the connection\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             back into the pool once a response is received (but will release if\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             you read the entire contents of the response such as when\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             `preload_content=True`). This is useful if you're not preloading\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             the response's content immediately. You will need to call\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ``r.release_conn()`` on the response ``r`` to return the connection\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             back into the pool. If None, it takes the value of\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ``response_kw.get('preload_content', True)``.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param chunked:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If True, urllib3 will send the body using chunked transfer\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             encoding. Otherwise, urllib3 will send the body using the standard\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             content-length form. Defaults to False.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param int body_pos:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Position to seek to in file-like body in the event of a retry or\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             redirect. Typically this won't need to be set because urllib3 will\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             auto-populate the value when needed.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param \\\\**response_kw:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Additional parameters are passed to\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             :meth:`urllib3.response.HTTPResponse.from_httplib`\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         parsed_url = parse_url(url)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         destination_scheme = parsed_url.scheme\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if headers is None:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             headers = self.headers\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if not isinstance(retries, Retry):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             retries = Retry.from_int(retries, redirect=redirect, default=self.retries)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if release_conn is None:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             release_conn = response_kw.get(\"preload_content\", True)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Check host\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if assert_same_host and not self.is_same_host(url):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             raise HostChangedError(self, url, retries)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Ensure that the URL we're connecting to is properly encoded\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if url.startswith(\"/\"):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             url = six.ensure_str(_encode_target(url))\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         else:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             url = six.ensure_str(parsed_url.url)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         conn = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Track whether `conn` needs to be released before\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # returning/raising/recursing. Update this variable if necessary, and\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # leave `release_conn` constant throughout the function. That way, if\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # the function recurses, the original value of `release_conn` will be\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # passed down into the recursive call, and its value will be respected.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         #\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # See issue #651 [1] for details.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         #\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # [1] <https://github.com/urllib3/urllib3/issues/651>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         release_this_conn = release_conn\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         http_tunnel_required = connection_requires_http_tunnel(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             self.proxy, self.proxy_config, destination_scheme\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Merge the proxy headers. Only done when not using HTTP CONNECT. We\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # have to copy the headers dict so we can safely change it without those\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # changes being reflected in anyone else's copy.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if not http_tunnel_required:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             headers = headers.copy()\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             headers.update(self.proxy_headers)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Must keep the exception bound to a separate variable or else Python 3\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # complains about UnboundLocalError.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         err = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Keep track of whether we cleanly exited the except block. This\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # ensures we do proper cleanup in finally.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         clean_exit = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Rewind body position, if needed. Record current position\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # for future rewinds in the event of a redirect/retry.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         body_pos = set_file_position(body, body_pos)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         try:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # Request a connection from the queue.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             timeout_obj = self._get_timeout(timeout)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             conn = self._get_conn(timeout=pool_timeout)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             conn.timeout = timeout_obj.connect_timeout\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             is_new_proxy_conn = self.proxy is not None and not getattr(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 conn, \"sock\", None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             if is_new_proxy_conn and http_tunnel_required:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 self._prepare_proxy(conn)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # Make the request on the httplib connection object.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >           httplib_response = self._make_request(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 conn,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 method,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 url,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 timeout=timeout_obj,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 body=body,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 headers=headers,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 chunked=chunked,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/urllib3/connectionpool.py:714: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSConnectionPool object at 0x7fe9fd111a00>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | conn = <podman.api.uds.UDSConnection object at 0x7fe9fd3478e0>, method = 'POST'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | url = '/v4.5.0/libpod/containers/create'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | timeout = Timeout(connect=None, read=None, total=None), chunked = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | httplib_request_kw = {'body': '{\"cap_drop\": [\"all\"], \"command\": [\"make\", \"info\"], \"image\": \"ghcr.io/openwrt/imagebuilder:testtarget-testsub...p, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '204'}}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | timeout_obj = Timeout(connect=None, read=None, total=None)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def _make_request(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         self, conn, method, url, timeout=_Default, chunked=False, **httplib_request_kw\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     ):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         Perform a request on a given urllib connection object taken from our\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         pool.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param conn:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             a connection from one of our connection pools\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param timeout:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Socket timeout in seconds for the request. This can be a\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             float or integer, which will set the same timeout value for\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             the socket connect and the socket read, or an instance of\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             :class:`urllib3.util.Timeout`, which gives you more fine-grained\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             control over your timeouts.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         self.num_requests += 1\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         timeout_obj = self._get_timeout(timeout)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         timeout_obj.start_connect()\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         conn.timeout = Timeout.resolve_default_timeout(timeout_obj.connect_timeout)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Trigger any extra validation we need to do.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         try:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             self._validate_conn(conn)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         except (SocketTimeout, BaseSSLError) as e:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # Py2 raises this as a BaseSSLError, Py3 raises it as socket timeout.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             self._raise_timeout(err=e, url=url, timeout_value=conn.timeout)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             raise\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # conn.request() calls http.client.*.request, not the method in\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # urllib3.request. It also calls makefile (recv) on the socket.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         try:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             if chunked:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 conn.request_chunked(method, url, **httplib_request_kw)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             else:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >               conn.request(method, url, **httplib_request_kw)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/urllib3/connectionpool.py:415: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSConnection object at 0x7fe9fd3478e0>, method = 'POST'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | url = '/v4.5.0/libpod/containers/create'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | body = '{\"cap_drop\": [\"all\"], \"command\": [\"make\", \"info\"], \"image\": \"ghcr.io/openwrt/imagebuilder:testtarget-testsubtarget-v1.2.3\", \"no_new_privileges\": true, \"privileged\": false, \"userns\": {\"nsmode\": \"keep-id\"}}'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | headers = {'User-Agent': 'PodmanPy/4.5.0 (API v4.5.0; Compatible v1.40)', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '204'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def request(self, method, url, body=None, headers={}, *,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 encode_chunked=False):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"Send a complete request to the server.\"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       self._send_request(method, url, body, headers, encode_chunked)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/http/client.py:1256: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSConnection object at 0x7fe9fd3478e0>, method = 'POST'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | url = '/v4.5.0/libpod/containers/create'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | body = b'{\"cap_drop\": [\"all\"], \"command\": [\"make\", \"info\"], \"image\": \"ghcr.io/openwrt/imagebuilder:testtarget-testsubtarget-v1.2.3\", \"no_new_privileges\": true, \"privileged\": false, \"userns\": {\"nsmode\": \"keep-id\"}}'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | headers = {'User-Agent': 'PodmanPy/4.5.0 (API v4.5.0; Compatible v1.40)', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '204'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | encode_chunked = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def _send_request(self, method, url, body, headers, encode_chunked):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Honor explicitly requested Host: and Accept-Encoding: headers.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         header_names = frozenset(k.lower() for k in headers)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         skips = {}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if 'host' in header_names:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             skips['skip_host'] = 1\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if 'accept-encoding' in header_names:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             skips['skip_accept_encoding'] = 1\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         self.putrequest(method, url, **skips)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # chunked encoding will happen if HTTP/1.1 is used and either\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # the caller passes encode_chunked=True or the following\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # conditions hold:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # 1. content-length has not been explicitly set\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # 2. the body is a file or iterable, but not a str or bytes-like\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # 3. Transfer-Encoding has NOT been explicitly set by the caller\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if 'content-length' not in header_names:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # only chunk body if not explicitly set for backwards\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # compatibility, assuming the client code is already handling the\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # chunking\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             if 'transfer-encoding' not in header_names:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 # if content-length cannot be automatically determined, fall\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 # back to chunked encoding\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 encode_chunked = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 content_length = self._get_content_length(body, method)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 if content_length is None:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     if body is not None:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                         if self.debuglevel > 0:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                             print('Unable to determine size of %r' % body)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                         encode_chunked = True\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                         self.putheader('Transfer-Encoding', 'chunked')\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 else:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     self.putheader('Content-Length', str(content_length))\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         else:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             encode_chunked = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         for hdr, value in headers.items():\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             self.putheader(hdr, value)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if isinstance(body, str):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # RFC 2616 Section 3.7.1 says that text default has a\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # default charset of iso-8859-1.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             body = _encode(body, 'body')\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       self.endheaders(body, encode_chunked=encode_chunked)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/http/client.py:1302: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSConnection object at 0x7fe9fd3478e0>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | message_body = b'{\"cap_drop\": [\"all\"], \"command\": [\"make\", \"info\"], \"image\": \"ghcr.io/openwrt/imagebuilder:testtarget-testsubtarget-v1.2.3\", \"no_new_privileges\": true, \"privileged\": false, \"userns\": {\"nsmode\": \"keep-id\"}}'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def endheaders(self, message_body=None, *, encode_chunked=False):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"Indicate that the last header line has been sent to the server.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         This method sends the request to the server.  The optional message_body\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         argument can be used to pass a message body associated with the\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         request.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if self.__state == _CS_REQ_STARTED:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             self.__state = _CS_REQ_SENT\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         else:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             raise CannotSendHeader()\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       self._send_output(message_body, encode_chunked=encode_chunked)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/http/client.py:1251: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSConnection object at 0x7fe9fd3478e0>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | message_body = b'{\"cap_drop\": [\"all\"], \"command\": [\"make\", \"info\"], \"image\": \"ghcr.io/openwrt/imagebuilder:testtarget-testsubtarget-v1.2.3\", \"no_new_privileges\": true, \"privileged\": false, \"userns\": {\"nsmode\": \"keep-id\"}}'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | encode_chunked = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def _send_output(self, message_body=None, encode_chunked=False):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"Send the currently buffered request and clear the buffer.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         Appends an extra \\\\r\\\\n to the buffer.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         A message_body may be specified, to be appended to the request.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         self._buffer.extend((b\"\", b\"\"))\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         msg = b\"\\r\\n\".join(self._buffer)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         del self._buffer[:]\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       self.send(msg)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/http/client.py:1011: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSConnection object at 0x7fe9fd3478e0>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | data = b'POST /v4.5.0/libpod/containers/create HTTP/1.1\\r\\nHost: %2ftmp%2fpodman.sock\\r\\nUser-Agent: PodmanPy/4.5.0 (API v4.5...zip, deflate\\r\\nAccept: */*\\r\\nConnection: keep-alive\\r\\ncontent-type: application/json\\r\\nContent-Length: 204\\r\\n\\r\\n'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def send(self, data):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"Send `data' to the server.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         ``data`` can be a string object, a bytes object, an array object, a\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         file-like object that supports a .read() method, or an iterable object.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if self.sock is None:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             if self.auto_open:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >               self.connect()\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/http/client.py:951: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSConnection object at 0x7fe9fd3478e0>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def connect(self) -> None:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"Connect to Podman service via UNIX domain socket.\"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         sock = UDSSocket(self.uds)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         sock.settimeout(self.timeout)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       sock.connect()\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/podman/api/uds.py:88: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSSocket fd=11, family=AddressFamily.AF_UNIX, type=SocketKind.SOCK_STREAM, proto=0>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | kwargs = {}, netloc = '/tmp/podman.sock'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def connect(self, **kwargs):  # pylint: disable=unused-argument\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"Returns socket for UNIX domain socket.\"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         netloc = unquote(urlparse(self.uds).netloc)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         try:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             super().connect(netloc)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         except Exception as e:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >           raise APIError(f\"Unable to make connection to UDS '{netloc}'\") from e\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E           podman.errors.exceptions.APIError: Unable to make connection to UDS '/tmp/podman.sock'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/podman/api/uds.py:45: APIError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | During handling of the above exception, another exception occurred:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSAdapter object at 0x7fe9fd1111f0>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | request = <PreparedRequest [POST]>, stream = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | timeout = Timeout(connect=None, read=None, total=None), verify = True\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | cert = None, proxies = OrderedDict()\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def send(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     ):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"Sends PreparedRequest object. Returns Response object.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param stream: (optional) Whether to stream the request content.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param timeout: (optional) How long to wait for the server to send\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             data before giving up, as a float, or a :ref:`(connect timeout,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             read timeout) <timeouts>` tuple.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :type timeout: float or tuple or urllib3 Timeout object\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param verify: (optional) Either a boolean, in which case it controls whether\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             we verify the server's TLS certificate, or a string, in which case it\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             must be a path to a CA bundle to use\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param cert: (optional) Any user-provided SSL certificate to be trusted.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param proxies: (optional) The proxies dictionary to apply to the request.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :rtype: requests.Response\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         try:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             conn = self.get_connection(request.url, proxies)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         except LocationValueError as e:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             raise InvalidURL(e, request=request)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         self.cert_verify(conn, request.url, verify, cert)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         url = self.request_url(request, proxies)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         self.add_headers(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             request,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             stream=stream,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             timeout=timeout,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             verify=verify,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             cert=cert,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             proxies=proxies,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         chunked = not (request.body is None or \"Content-Length\" in request.headers)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if isinstance(timeout, tuple):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             try:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 connect, read = timeout\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 timeout = TimeoutSauce(connect=connect, read=read)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             except ValueError:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 raise ValueError(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     f\"Invalid timeout {timeout}. Pass a (connect, read) timeout tuple, \"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     f\"or a single float to set both timeouts to the same value.\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         elif isinstance(timeout, TimeoutSauce):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             pass\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         else:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             timeout = TimeoutSauce(connect=timeout, read=timeout)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         try:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >           resp = conn.urlopen(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 method=request.method,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 url=url,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 body=request.body,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 headers=request.headers,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 redirect=False,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 assert_same_host=False,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 preload_content=False,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 decode_content=False,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 retries=self.max_retries,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 timeout=timeout,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 chunked=chunked,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/requests/adapters.py:486: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSConnectionPool object at 0x7fe9fd111a00>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | method = 'POST', url = '/v4.5.0/libpod/containers/create'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | body = '{\"cap_drop\": [\"all\"], \"command\": [\"make\", \"info\"], \"image\": \"ghcr.io/openwrt/imagebuilder:testtarget-testsubtarget-v1.2.3\", \"no_new_privileges\": true, \"privileged\": false, \"userns\": {\"nsmode\": \"keep-id\"}}'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | headers = {'User-Agent': 'PodmanPy/4.5.0 (API v4.5.0; Compatible v1.40)', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '204'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | retries = Retry(total=0, connect=None, read=False, redirect=None, status=None)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | redirect = False, assert_same_host = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | timeout = Timeout(connect=None, read=None, total=None), pool_timeout = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | release_conn = False, chunked = False, body_pos = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | response_kw = {'decode_content': False, 'preload_content': False}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | parsed_url = Url(scheme=None, auth=None, host=None, port=None, path='/v4.5.0/libpod/containers/create', query=None, fragment=None)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | destination_scheme = None, conn = None, release_this_conn = True\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | http_tunnel_required = False, err = None, clean_exit = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def urlopen(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         self,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         method,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         url,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         body=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         headers=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         retries=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         redirect=True,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         assert_same_host=True,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         timeout=_Default,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         pool_timeout=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         release_conn=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         chunked=False,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         body_pos=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         **response_kw\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     ):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         Get a connection from the pool and perform an HTTP request. This is the\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         lowest level call for making a request, so you'll need to specify all\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         the raw details.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         .. note::\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |            More commonly, it's appropriate to use a convenience method provided\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |            by :class:`.RequestMethods`, such as :meth:`request`.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         .. note::\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |            `release_conn` will only behave as expected if\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |            `preload_content=False` because we want to make\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |            `preload_content=False` the default behaviour someday soon without\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |            breaking backwards compatibility.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param method:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             HTTP request method (such as GET, POST, PUT, etc.)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param url:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             The URL to perform the request on.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param body:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Data to send in the request body, either :class:`str`, :class:`bytes`,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             an iterable of :class:`str`/:class:`bytes`, or a file-like object.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param headers:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Dictionary of custom headers to send, such as User-Agent,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If-None-Match, etc. If None, pool headers are used. If provided,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             these headers completely replace any pool-specific headers.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param retries:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Configure the number of retries to allow before raising a\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             :class:`~urllib3.exceptions.MaxRetryError` exception.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Pass ``None`` to retry until you receive a response. Pass a\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             :class:`~urllib3.util.retry.Retry` object for fine-grained control\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             over different types of retries.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Pass an integer number to retry connection errors that many times,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             but no other types of errors. Pass zero to never retry.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If ``False``, then retries are disabled and any exception is raised\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             immediately. Also, instead of raising a MaxRetryError on redirects,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             the redirect response will be returned.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param redirect:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If True, automatically handle redirects (status codes 301, 302,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             303, 307, 308). Each redirect counts as a retry. Disabling retries\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             will disable redirect, too.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param assert_same_host:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If ``True``, will make sure that the host of the pool requests is\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             consistent else will raise HostChangedError. When ``False``, you can\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             use the pool on an HTTP proxy and request foreign hosts.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param timeout:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If specified, overrides the default timeout for this one\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             request. It may be a float (in seconds) or an instance of\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             :class:`urllib3.util.Timeout`.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param pool_timeout:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If set and the pool is set to block=True, then this method will\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             block for ``pool_timeout`` seconds and raise EmptyPoolError if no\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             connection is available within the time period.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param release_conn:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If False, then the urlopen call will not release the connection\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             back into the pool once a response is received (but will release if\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             you read the entire contents of the response such as when\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             `preload_content=True`). This is useful if you're not preloading\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             the response's content immediately. You will need to call\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ``r.release_conn()`` on the response ``r`` to return the connection\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             back into the pool. If None, it takes the value of\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ``response_kw.get('preload_content', True)``.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param chunked:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If True, urllib3 will send the body using chunked transfer\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             encoding. Otherwise, urllib3 will send the body using the standard\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             content-length form. Defaults to False.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param int body_pos:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Position to seek to in file-like body in the event of a retry or\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             redirect. Typically this won't need to be set because urllib3 will\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             auto-populate the value when needed.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param \\\\**response_kw:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Additional parameters are passed to\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             :meth:`urllib3.response.HTTPResponse.from_httplib`\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         parsed_url = parse_url(url)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         destination_scheme = parsed_url.scheme\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if headers is None:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             headers = self.headers\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if not isinstance(retries, Retry):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             retries = Retry.from_int(retries, redirect=redirect, default=self.retries)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if release_conn is None:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             release_conn = response_kw.get(\"preload_content\", True)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Check host\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if assert_same_host and not self.is_same_host(url):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             raise HostChangedError(self, url, retries)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Ensure that the URL we're connecting to is properly encoded\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if url.startswith(\"/\"):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             url = six.ensure_str(_encode_target(url))\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         else:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             url = six.ensure_str(parsed_url.url)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         conn = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Track whether `conn` needs to be released before\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # returning/raising/recursing. Update this variable if necessary, and\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # leave `release_conn` constant throughout the function. That way, if\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # the function recurses, the original value of `release_conn` will be\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # passed down into the recursive call, and its value will be respected.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         #\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # See issue #651 [1] for details.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         #\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # [1] <https://github.com/urllib3/urllib3/issues/651>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         release_this_conn = release_conn\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         http_tunnel_required = connection_requires_http_tunnel(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             self.proxy, self.proxy_config, destination_scheme\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Merge the proxy headers. Only done when not using HTTP CONNECT. We\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # have to copy the headers dict so we can safely change it without those\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # changes being reflected in anyone else's copy.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if not http_tunnel_required:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             headers = headers.copy()\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             headers.update(self.proxy_headers)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Must keep the exception bound to a separate variable or else Python 3\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # complains about UnboundLocalError.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         err = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Keep track of whether we cleanly exited the except block. This\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # ensures we do proper cleanup in finally.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         clean_exit = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Rewind body position, if needed. Record current position\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # for future rewinds in the event of a redirect/retry.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         body_pos = set_file_position(body, body_pos)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         try:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # Request a connection from the queue.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             timeout_obj = self._get_timeout(timeout)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             conn = self._get_conn(timeout=pool_timeout)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             conn.timeout = timeout_obj.connect_timeout\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             is_new_proxy_conn = self.proxy is not None and not getattr(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 conn, \"sock\", None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             if is_new_proxy_conn and http_tunnel_required:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 self._prepare_proxy(conn)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # Make the request on the httplib connection object.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             httplib_response = self._make_request(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 conn,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 method,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 url,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 timeout=timeout_obj,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 body=body,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 headers=headers,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 chunked=chunked,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # If we're going to release the connection in ``finally:``, then\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # the response doesn't need to know about the connection. Otherwise\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # it will also try to release it and we'll have a double-release\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # mess.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             response_conn = conn if not release_conn else None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # Pass method to Response for length checking\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             response_kw[\"request_method\"] = method\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # Import httplib's response into our own wrapper object\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             response = self.ResponseCls.from_httplib(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 httplib_response,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 pool=self,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 connection=response_conn,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 retries=retries,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 **response_kw\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # Everything went great!\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             clean_exit = True\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         except EmptyPoolError:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # Didn't get a connection from the pool, no need to clean up\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             clean_exit = True\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             release_this_conn = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             raise\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         except (\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             TimeoutError,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             HTTPException,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             SocketError,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ProtocolError,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             BaseSSLError,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             SSLError,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             CertificateError,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         ) as e:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # Discard the connection for these exceptions. It will be\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # replaced during the next _get_conn() call.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             clean_exit = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             def _is_ssl_error_message_from_http_proxy(ssl_error):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 # We're trying to detect the message 'WRONG_VERSION_NUMBER' but\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 # SSLErrors are kinda all over the place when it comes to the message,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 # so we try to cover our bases here!\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 message = \" \".join(re.split(\"[^a-z]\", str(ssl_error).lower()))\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 return (\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     \"wrong version number\" in message or \"unknown protocol\" in message\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # Try to detect a common user error with proxies which is to\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # set an HTTP proxy to be HTTPS when it should be 'http://'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # (ie {'http': 'http://proxy', 'https': 'https://proxy'})\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # Instead we add a nice error message and point to a URL.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             if (\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 isinstance(e, BaseSSLError)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 and self.proxy\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 and _is_ssl_error_message_from_http_proxy(e)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 and conn.proxy\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 and conn.proxy.scheme == \"https\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 e = ProxyError(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     \"Your proxy appears to only use HTTP and not HTTPS, \"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     \"try changing your proxy URL to be HTTP. See: \"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     \"https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     \"#https-proxy-error-http-proxy\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     SSLError(e),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             elif isinstance(e, (BaseSSLError, CertificateError)):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 e = SSLError(e)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             elif isinstance(e, (SocketError, NewConnectionError)) and self.proxy:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 e = ProxyError(\"Cannot connect to proxy.\", e)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             elif isinstance(e, (SocketError, HTTPException)):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 e = ProtocolError(\"Connection aborted.\", e)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >           retries = retries.increment(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/urllib3/connectionpool.py:798: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = Retry(total=0, connect=None, read=False, redirect=None, status=None)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | method = 'POST', url = '/v4.5.0/libpod/containers/create', response = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | error = ProtocolError('Connection aborted.', APIError(\"Unable to make connection to UDS '/tmp/podman.sock'\"))\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _pool = <podman.api.uds.UDSConnectionPool object at 0x7fe9fd111a00>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _stacktrace = <traceback object at 0x7fe9fd0c3440>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def increment(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         self,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         method=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         url=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         error=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         _pool=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         _stacktrace=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     ):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"Return a new Retry object with incremented retry counters.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param response: A response object, or None, if the server did not\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             return a response.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :type response: :class:`~urllib3.response.HTTPResponse`\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param Exception error: An error encountered during the request, or\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             None if the response was received successfully.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :return: A new ``Retry`` object.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if self.total is False and error:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # Disabled, indicate to re-raise the error.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             raise six.reraise(type(error), error, _stacktrace)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         total = self.total\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if total is not None:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             total -= 1\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         connect = self.connect\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         read = self.read\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         redirect = self.redirect\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         status_count = self.status\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         other = self.other\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         cause = \"unknown\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         status = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         redirect_location = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if error and self._is_connection_error(error):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # Connect retry?\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             if connect is False:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 raise six.reraise(type(error), error, _stacktrace)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             elif connect is not None:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 connect -= 1\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         elif error and self._is_read_error(error):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # Read retry?\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             if read is False or not self._is_method_retryable(method):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >               raise six.reraise(type(error), error, _stacktrace)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/urllib3/util/retry.py:550: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tp = <class 'urllib3.exceptions.ProtocolError'>, value = None, tb = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def reraise(tp, value, tb=None):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         try:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             if value is None:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 value = tp()\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             if value.__traceback__ is not tb:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >               raise value.with_traceback(tb)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/urllib3/packages/six.py:769: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSConnectionPool object at 0x7fe9fd111a00>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | method = 'POST', url = '/v4.5.0/libpod/containers/create'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | body = '{\"cap_drop\": [\"all\"], \"command\": [\"make\", \"info\"], \"image\": \"ghcr.io/openwrt/imagebuilder:testtarget-testsubtarget-v1.2.3\", \"no_new_privileges\": true, \"privileged\": false, \"userns\": {\"nsmode\": \"keep-id\"}}'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | headers = {'User-Agent': 'PodmanPy/4.5.0 (API v4.5.0; Compatible v1.40)', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '204'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | retries = Retry(total=0, connect=None, read=False, redirect=None, status=None)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | redirect = False, assert_same_host = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | timeout = Timeout(connect=None, read=None, total=None), pool_timeout = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | release_conn = False, chunked = False, body_pos = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | response_kw = {'decode_content': False, 'preload_content': False}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | parsed_url = Url(scheme=None, auth=None, host=None, port=None, path='/v4.5.0/libpod/containers/create', query=None, fragment=None)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | destination_scheme = None, conn = None, release_this_conn = True\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | http_tunnel_required = False, err = None, clean_exit = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def urlopen(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         self,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         method,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         url,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         body=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         headers=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         retries=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         redirect=True,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         assert_same_host=True,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         timeout=_Default,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         pool_timeout=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         release_conn=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         chunked=False,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         body_pos=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         **response_kw\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     ):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         Get a connection from the pool and perform an HTTP request. This is the\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         lowest level call for making a request, so you'll need to specify all\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         the raw details.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         .. note::\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |            More commonly, it's appropriate to use a convenience method provided\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |            by :class:`.RequestMethods`, such as :meth:`request`.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         .. note::\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |            `release_conn` will only behave as expected if\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |            `preload_content=False` because we want to make\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |            `preload_content=False` the default behaviour someday soon without\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |            breaking backwards compatibility.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param method:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             HTTP request method (such as GET, POST, PUT, etc.)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param url:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             The URL to perform the request on.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param body:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Data to send in the request body, either :class:`str`, :class:`bytes`,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             an iterable of :class:`str`/:class:`bytes`, or a file-like object.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param headers:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Dictionary of custom headers to send, such as User-Agent,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If-None-Match, etc. If None, pool headers are used. If provided,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             these headers completely replace any pool-specific headers.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param retries:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Configure the number of retries to allow before raising a\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             :class:`~urllib3.exceptions.MaxRetryError` exception.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Pass ``None`` to retry until you receive a response. Pass a\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             :class:`~urllib3.util.retry.Retry` object for fine-grained control\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             over different types of retries.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Pass an integer number to retry connection errors that many times,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             but no other types of errors. Pass zero to never retry.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If ``False``, then retries are disabled and any exception is raised\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             immediately. Also, instead of raising a MaxRetryError on redirects,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             the redirect response will be returned.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param redirect:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If True, automatically handle redirects (status codes 301, 302,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             303, 307, 308). Each redirect counts as a retry. Disabling retries\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             will disable redirect, too.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param assert_same_host:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If ``True``, will make sure that the host of the pool requests is\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             consistent else will raise HostChangedError. When ``False``, you can\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             use the pool on an HTTP proxy and request foreign hosts.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param timeout:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If specified, overrides the default timeout for this one\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             request. It may be a float (in seconds) or an instance of\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             :class:`urllib3.util.Timeout`.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param pool_timeout:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If set and the pool is set to block=True, then this method will\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             block for ``pool_timeout`` seconds and raise EmptyPoolError if no\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             connection is available within the time period.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param release_conn:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If False, then the urlopen call will not release the connection\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             back into the pool once a response is received (but will release if\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             you read the entire contents of the response such as when\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             `preload_content=True`). This is useful if you're not preloading\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             the response's content immediately. You will need to call\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ``r.release_conn()`` on the response ``r`` to return the connection\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             back into the pool. If None, it takes the value of\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ``response_kw.get('preload_content', True)``.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param chunked:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If True, urllib3 will send the body using chunked transfer\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             encoding. Otherwise, urllib3 will send the body using the standard\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             content-length form. Defaults to False.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param int body_pos:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Position to seek to in file-like body in the event of a retry or\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             redirect. Typically this won't need to be set because urllib3 will\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             auto-populate the value when needed.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param \\\\**response_kw:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Additional parameters are passed to\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             :meth:`urllib3.response.HTTPResponse.from_httplib`\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         parsed_url = parse_url(url)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         destination_scheme = parsed_url.scheme\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if headers is None:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             headers = self.headers\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if not isinstance(retries, Retry):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             retries = Retry.from_int(retries, redirect=redirect, default=self.retries)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if release_conn is None:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             release_conn = response_kw.get(\"preload_content\", True)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Check host\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if assert_same_host and not self.is_same_host(url):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             raise HostChangedError(self, url, retries)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Ensure that the URL we're connecting to is properly encoded\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if url.startswith(\"/\"):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             url = six.ensure_str(_encode_target(url))\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         else:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             url = six.ensure_str(parsed_url.url)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         conn = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Track whether `conn` needs to be released before\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # returning/raising/recursing. Update this variable if necessary, and\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # leave `release_conn` constant throughout the function. That way, if\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # the function recurses, the original value of `release_conn` will be\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # passed down into the recursive call, and its value will be respected.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         #\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # See issue #651 [1] for details.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         #\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # [1] <https://github.com/urllib3/urllib3/issues/651>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         release_this_conn = release_conn\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         http_tunnel_required = connection_requires_http_tunnel(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             self.proxy, self.proxy_config, destination_scheme\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Merge the proxy headers. Only done when not using HTTP CONNECT. We\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # have to copy the headers dict so we can safely change it without those\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # changes being reflected in anyone else's copy.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if not http_tunnel_required:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             headers = headers.copy()\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             headers.update(self.proxy_headers)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Must keep the exception bound to a separate variable or else Python 3\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # complains about UnboundLocalError.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         err = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Keep track of whether we cleanly exited the except block. This\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # ensures we do proper cleanup in finally.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         clean_exit = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Rewind body position, if needed. Record current position\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # for future rewinds in the event of a redirect/retry.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         body_pos = set_file_position(body, body_pos)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         try:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # Request a connection from the queue.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             timeout_obj = self._get_timeout(timeout)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             conn = self._get_conn(timeout=pool_timeout)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             conn.timeout = timeout_obj.connect_timeout\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             is_new_proxy_conn = self.proxy is not None and not getattr(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 conn, \"sock\", None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             if is_new_proxy_conn and http_tunnel_required:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 self._prepare_proxy(conn)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # Make the request on the httplib connection object.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >           httplib_response = self._make_request(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 conn,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 method,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 url,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 timeout=timeout_obj,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 body=body,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 headers=headers,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 chunked=chunked,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/urllib3/connectionpool.py:714: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSConnectionPool object at 0x7fe9fd111a00>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | conn = <podman.api.uds.UDSConnection object at 0x7fe9fd3478e0>, method = 'POST'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | url = '/v4.5.0/libpod/containers/create'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | timeout = Timeout(connect=None, read=None, total=None), chunked = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | httplib_request_kw = {'body': '{\"cap_drop\": [\"all\"], \"command\": [\"make\", \"info\"], \"image\": \"ghcr.io/openwrt/imagebuilder:testtarget-testsub...p, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '204'}}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | timeout_obj = Timeout(connect=None, read=None, total=None)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def _make_request(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         self, conn, method, url, timeout=_Default, chunked=False, **httplib_request_kw\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     ):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         Perform a request on a given urllib connection object taken from our\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         pool.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param conn:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             a connection from one of our connection pools\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param timeout:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Socket timeout in seconds for the request. This can be a\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             float or integer, which will set the same timeout value for\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             the socket connect and the socket read, or an instance of\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             :class:`urllib3.util.Timeout`, which gives you more fine-grained\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             control over your timeouts.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         self.num_requests += 1\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         timeout_obj = self._get_timeout(timeout)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         timeout_obj.start_connect()\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         conn.timeout = Timeout.resolve_default_timeout(timeout_obj.connect_timeout)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Trigger any extra validation we need to do.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         try:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             self._validate_conn(conn)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         except (SocketTimeout, BaseSSLError) as e:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # Py2 raises this as a BaseSSLError, Py3 raises it as socket timeout.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             self._raise_timeout(err=e, url=url, timeout_value=conn.timeout)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             raise\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # conn.request() calls http.client.*.request, not the method in\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # urllib3.request. It also calls makefile (recv) on the socket.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         try:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             if chunked:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 conn.request_chunked(method, url, **httplib_request_kw)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             else:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >               conn.request(method, url, **httplib_request_kw)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/urllib3/connectionpool.py:415: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSConnection object at 0x7fe9fd3478e0>, method = 'POST'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | url = '/v4.5.0/libpod/containers/create'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | body = '{\"cap_drop\": [\"all\"], \"command\": [\"make\", \"info\"], \"image\": \"ghcr.io/openwrt/imagebuilder:testtarget-testsubtarget-v1.2.3\", \"no_new_privileges\": true, \"privileged\": false, \"userns\": {\"nsmode\": \"keep-id\"}}'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | headers = {'User-Agent': 'PodmanPy/4.5.0 (API v4.5.0; Compatible v1.40)', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '204'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def request(self, method, url, body=None, headers={}, *,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 encode_chunked=False):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"Send a complete request to the server.\"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       self._send_request(method, url, body, headers, encode_chunked)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/http/client.py:1256: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSConnection object at 0x7fe9fd3478e0>, method = 'POST'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | url = '/v4.5.0/libpod/containers/create'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | body = b'{\"cap_drop\": [\"all\"], \"command\": [\"make\", \"info\"], \"image\": \"ghcr.io/openwrt/imagebuilder:testtarget-testsubtarget-v1.2.3\", \"no_new_privileges\": true, \"privileged\": false, \"userns\": {\"nsmode\": \"keep-id\"}}'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | headers = {'User-Agent': 'PodmanPy/4.5.0 (API v4.5.0; Compatible v1.40)', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '204'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | encode_chunked = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def _send_request(self, method, url, body, headers, encode_chunked):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Honor explicitly requested Host: and Accept-Encoding: headers.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         header_names = frozenset(k.lower() for k in headers)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         skips = {}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if 'host' in header_names:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             skips['skip_host'] = 1\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if 'accept-encoding' in header_names:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             skips['skip_accept_encoding'] = 1\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         self.putrequest(method, url, **skips)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # chunked encoding will happen if HTTP/1.1 is used and either\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # the caller passes encode_chunked=True or the following\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # conditions hold:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # 1. content-length has not been explicitly set\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # 2. the body is a file or iterable, but not a str or bytes-like\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # 3. Transfer-Encoding has NOT been explicitly set by the caller\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if 'content-length' not in header_names:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # only chunk body if not explicitly set for backwards\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # compatibility, assuming the client code is already handling the\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # chunking\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             if 'transfer-encoding' not in header_names:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 # if content-length cannot be automatically determined, fall\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 # back to chunked encoding\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 encode_chunked = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 content_length = self._get_content_length(body, method)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 if content_length is None:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     if body is not None:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                         if self.debuglevel > 0:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                             print('Unable to determine size of %r' % body)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                         encode_chunked = True\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                         self.putheader('Transfer-Encoding', 'chunked')\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 else:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     self.putheader('Content-Length', str(content_length))\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         else:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             encode_chunked = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         for hdr, value in headers.items():\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             self.putheader(hdr, value)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if isinstance(body, str):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # RFC 2616 Section 3.7.1 says that text default has a\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             # default charset of iso-8859-1.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             body = _encode(body, 'body')\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       self.endheaders(body, encode_chunked=encode_chunked)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/http/client.py:1302: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSConnection object at 0x7fe9fd3478e0>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | message_body = b'{\"cap_drop\": [\"all\"], \"command\": [\"make\", \"info\"], \"image\": \"ghcr.io/openwrt/imagebuilder:testtarget-testsubtarget-v1.2.3\", \"no_new_privileges\": true, \"privileged\": false, \"userns\": {\"nsmode\": \"keep-id\"}}'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def endheaders(self, message_body=None, *, encode_chunked=False):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"Indicate that the last header line has been sent to the server.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         This method sends the request to the server.  The optional message_body\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         argument can be used to pass a message body associated with the\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         request.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if self.__state == _CS_REQ_STARTED:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             self.__state = _CS_REQ_SENT\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         else:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             raise CannotSendHeader()\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       self._send_output(message_body, encode_chunked=encode_chunked)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/http/client.py:1251: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSConnection object at 0x7fe9fd3478e0>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | message_body = b'{\"cap_drop\": [\"all\"], \"command\": [\"make\", \"info\"], \"image\": \"ghcr.io/openwrt/imagebuilder:testtarget-testsubtarget-v1.2.3\", \"no_new_privileges\": true, \"privileged\": false, \"userns\": {\"nsmode\": \"keep-id\"}}'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | encode_chunked = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def _send_output(self, message_body=None, encode_chunked=False):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"Send the currently buffered request and clear the buffer.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         Appends an extra \\\\r\\\\n to the buffer.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         A message_body may be specified, to be appended to the request.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         self._buffer.extend((b\"\", b\"\"))\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         msg = b\"\\r\\n\".join(self._buffer)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         del self._buffer[:]\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       self.send(msg)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/http/client.py:1011: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSConnection object at 0x7fe9fd3478e0>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | data = b'POST /v4.5.0/libpod/containers/create HTTP/1.1\\r\\nHost: %2ftmp%2fpodman.sock\\r\\nUser-Agent: PodmanPy/4.5.0 (API v4.5...zip, deflate\\r\\nAccept: */*\\r\\nConnection: keep-alive\\r\\ncontent-type: application/json\\r\\nContent-Length: 204\\r\\n\\r\\n'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def send(self, data):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"Send `data' to the server.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         ``data`` can be a string object, a bytes object, an array object, a\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         file-like object that supports a .read() method, or an iterable object.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if self.sock is None:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             if self.auto_open:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >               self.connect()\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/http/client.py:951: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSConnection object at 0x7fe9fd3478e0>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def connect(self) -> None:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"Connect to Podman service via UNIX domain socket.\"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         sock = UDSSocket(self.uds)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         sock.settimeout(self.timeout)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       sock.connect()\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/podman/api/uds.py:88: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSSocket fd=11, family=AddressFamily.AF_UNIX, type=SocketKind.SOCK_STREAM, proto=0>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | kwargs = {}, netloc = '/tmp/podman.sock'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def connect(self, **kwargs):  # pylint: disable=unused-argument\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"Returns socket for UNIX domain socket.\"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         netloc = unquote(urlparse(self.uds).netloc)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         try:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             super().connect(netloc)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         except Exception as e:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >           raise APIError(f\"Unable to make connection to UDS '{netloc}'\") from e\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E           urllib3.exceptions.ProtocolError: ('Connection aborted.', APIError(\"Unable to make connection to UDS '/tmp/podman.sock'\"))\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/podman/api/uds.py:45: ProtocolError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | During handling of the above exception, another exception occurred:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.client.APIClient object at 0x7fe9fd111370>, method = 'POST'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | path = 'containers/create'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | data = '{\"cap_drop\": [\"all\"], \"command\": [\"make\", \"info\"], \"image\": \"ghcr.io/openwrt/imagebuilder:testtarget-testsubtarget-v1.2.3\", \"no_new_privileges\": true, \"privileged\": false, \"userns\": {\"nsmode\": \"keep-id\"}}'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | params = None, headers = {'content-type': 'application/json'}, timeout = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | stream = False, kwargs = {}, timeout_kw = {'timeout': None}, compatible = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | path_prefix = '/v4.5.0/libpod/'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | uri = ParseResult(scheme='http', netloc='%2Ftmp%2Fpodman.sock', path='/v4.5.0/libpod/containers/create', params='', query='', fragment='')\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def _request(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         self,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         method: str,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         path: Union[str, bytes],\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         data: _Data = None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         params: Union[None, bytes, Mapping[str, str]] = None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         headers: Optional[Mapping[str, str]] = None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         timeout: _Timeout = None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         stream: Optional[bool] = None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         **kwargs,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     ) -> APIResponse:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"HTTP operation against configured Podman service.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         Args:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             method: HTTP method to use for request\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             path: Relative path to RESTful resource.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             params: Optional parameters to include with URL.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             headers: Optional headers to include in request.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             timeout: Number of seconds to wait on request, or (connect timeout, read timeout) tuple\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         Keyword Args:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             compatible: Will override the default path prefix with compatible prefix\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         Raises:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             APIError: when service returns an error\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Only set timeout if one is given, lower level APIs will not override None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         timeout_kw = {}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         timeout = timeout or self.timeout\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if timeout_kw is not None:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             timeout_kw[\"timeout\"] = timeout\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         compatible = kwargs.get(\"compatible\", False)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         path_prefix = self.compatible_prefix if compatible else self.path_prefix\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         path = path.lstrip(\"/\")  # leading / makes urljoin crazy...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # TODO should we have an option for HTTPS support?\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Build URL for operation from base_url\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         uri = urllib.parse.ParseResult(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"http\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             self.base_url.netloc,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             urllib.parse.urljoin(path_prefix, path),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             self.base_url.params,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             self.base_url.query,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             self.base_url.fragment,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         try:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             return APIResponse(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >               self.request(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     method.upper(),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     uri.geturl(),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     params=params,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     data=data,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     headers=(headers or {}),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     stream=stream,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     **timeout_kw,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/podman/api/client.py:404: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.client.APIClient object at 0x7fe9fd111370>, method = 'POST'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | url = 'http://%2Ftmp%2Fpodman.sock/v4.5.0/libpod/containers/create'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | params = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | data = '{\"cap_drop\": [\"all\"], \"command\": [\"make\", \"info\"], \"image\": \"ghcr.io/openwrt/imagebuilder:testtarget-testsubtarget-v1.2.3\", \"no_new_privileges\": true, \"privileged\": false, \"userns\": {\"nsmode\": \"keep-id\"}}'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | headers = {'content-type': 'application/json'}, cookies = None, files = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | auth = None, timeout = None, allow_redirects = True, proxies = {}, hooks = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | stream = False, verify = None, cert = None, json = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def request(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         self,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         method,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         url,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         params=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         data=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         headers=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         cookies=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         files=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         auth=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         timeout=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         allow_redirects=True,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         proxies=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         hooks=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         stream=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         verify=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         cert=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         json=None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     ):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"Constructs a :class:`Request <Request>`, prepares it and sends it.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         Returns :class:`Response <Response>` object.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param method: method for the new :class:`Request` object.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param url: URL for the new :class:`Request` object.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param params: (optional) Dictionary or bytes to be sent in the query\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             string for the :class:`Request`.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param data: (optional) Dictionary, list of tuples, bytes, or file-like\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             object to send in the body of the :class:`Request`.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param json: (optional) json to send in the body of the\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             :class:`Request`.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param headers: (optional) Dictionary of HTTP Headers to send with the\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             :class:`Request`.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param cookies: (optional) Dict or CookieJar object to send with the\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             :class:`Request`.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param files: (optional) Dictionary of ``'filename': file-like-objects``\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             for multipart encoding upload.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param auth: (optional) Auth tuple or callable to enable\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             Basic/Digest/Custom HTTP Auth.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param timeout: (optional) How long to wait for the server to send\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             data before giving up, as a float, or a :ref:`(connect timeout,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             read timeout) <timeouts>` tuple.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :type timeout: float or tuple\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param allow_redirects: (optional) Set to True by default.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :type allow_redirects: bool\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param proxies: (optional) Dictionary mapping protocol or protocol and\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             hostname to the URL of the proxy.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param stream: (optional) whether to immediately download the response\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             content. Defaults to ``False``.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param verify: (optional) Either a boolean, in which case it controls whether we verify\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             the server's TLS certificate, or a string, in which case it must be a path\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             to a CA bundle to use. Defaults to ``True``. When set to\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ``False``, requests will accept any TLS certificate presented by\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             the server, and will ignore hostname mismatches and/or expired\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             certificates, which will make your application vulnerable to\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             man-in-the-middle (MitM) attacks. Setting verify to ``False``\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             may be useful during local development or testing.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param cert: (optional) if String, path to ssl client cert file (.pem).\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             If Tuple, ('cert', 'key') pair.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :rtype: requests.Response\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Create the Request.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         req = Request(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             method=method.upper(),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             url=url,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             headers=headers,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             files=files,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             data=data or {},\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             json=json,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             params=params or {},\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             auth=auth,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             cookies=cookies,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             hooks=hooks,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         prep = self.prepare_request(req)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         proxies = proxies or {}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         settings = self.merge_environment_settings(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             prep.url, proxies, stream, verify, cert\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Send the request.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         send_kwargs = {\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"timeout\": timeout,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"allow_redirects\": allow_redirects,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         }\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         send_kwargs.update(settings)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       resp = self.send(prep, **send_kwargs)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/requests/sessions.py:589: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.client.APIClient object at 0x7fe9fd111370>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | request = <PreparedRequest [POST]>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | kwargs = {'cert': None, 'proxies': OrderedDict(), 'stream': False, 'timeout': None, ...}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | allow_redirects = True, stream = False, hooks = {'response': []}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | adapter = <podman.api.uds.UDSAdapter object at 0x7fe9fd1111f0>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | start = 1688211602.6607788\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def send(self, request, **kwargs):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"Send a given PreparedRequest.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :rtype: requests.Response\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Set defaults that the hooks can utilize to ensure they always have\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # the correct parameters to reproduce the previous request.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         kwargs.setdefault(\"stream\", self.stream)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         kwargs.setdefault(\"verify\", self.verify)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         kwargs.setdefault(\"cert\", self.cert)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if \"proxies\" not in kwargs:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             kwargs[\"proxies\"] = resolve_proxies(request, self.proxies, self.trust_env)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # It's possible that users might accidentally send a Request object.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Guard against that specific failure case.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if isinstance(request, Request):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             raise ValueError(\"You can only send PreparedRequests.\")\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Set up variables needed for resolve_redirects and dispatching of hooks\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         allow_redirects = kwargs.pop(\"allow_redirects\", True)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         stream = kwargs.get(\"stream\")\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         hooks = request.hooks\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Get the appropriate adapter to use\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         adapter = self.get_adapter(url=request.url)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Start time (approximately) of the request\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         start = preferred_clock()\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Send the request\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       r = adapter.send(request, **kwargs)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/requests/sessions.py:703: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.uds.UDSAdapter object at 0x7fe9fd1111f0>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | request = <PreparedRequest [POST]>, stream = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | timeout = Timeout(connect=None, read=None, total=None), verify = True\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | cert = None, proxies = OrderedDict()\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def send(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         self, request, stream=False, timeout=None, verify=True, cert=None, proxies=None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     ):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"Sends PreparedRequest object. Returns Response object.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param request: The :class:`PreparedRequest <PreparedRequest>` being sent.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param stream: (optional) Whether to stream the request content.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param timeout: (optional) How long to wait for the server to send\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             data before giving up, as a float, or a :ref:`(connect timeout,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             read timeout) <timeouts>` tuple.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :type timeout: float or tuple or urllib3 Timeout object\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param verify: (optional) Either a boolean, in which case it controls whether\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             we verify the server's TLS certificate, or a string, in which case it\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             must be a path to a CA bundle to use\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param cert: (optional) Any user-provided SSL certificate to be trusted.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :param proxies: (optional) The proxies dictionary to apply to the request.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         :rtype: requests.Response\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         try:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             conn = self.get_connection(request.url, proxies)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         except LocationValueError as e:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             raise InvalidURL(e, request=request)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         self.cert_verify(conn, request.url, verify, cert)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         url = self.request_url(request, proxies)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         self.add_headers(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             request,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             stream=stream,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             timeout=timeout,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             verify=verify,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             cert=cert,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             proxies=proxies,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         chunked = not (request.body is None or \"Content-Length\" in request.headers)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if isinstance(timeout, tuple):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             try:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 connect, read = timeout\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 timeout = TimeoutSauce(connect=connect, read=read)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             except ValueError:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 raise ValueError(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     f\"Invalid timeout {timeout}. Pass a (connect, read) timeout tuple, \"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     f\"or a single float to set both timeouts to the same value.\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         elif isinstance(timeout, TimeoutSauce):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             pass\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         else:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             timeout = TimeoutSauce(connect=timeout, read=timeout)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         try:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             resp = conn.urlopen(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 method=request.method,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 url=url,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 body=request.body,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 headers=request.headers,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 redirect=False,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 assert_same_host=False,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 preload_content=False,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 decode_content=False,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 retries=self.max_retries,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 timeout=timeout,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 chunked=chunked,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         except (ProtocolError, OSError) as err:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >           raise ConnectionError(err, request=request)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E           requests.exceptions.ConnectionError: ('Connection aborted.', APIError(\"Unable to make connection to UDS '/tmp/podman.sock'\"))\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/requests/adapters.py:501: ConnectionError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | The above exception was the direct cause of the following exception:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def test_run_container():\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if getenv(\"CONTAINER_HOST\"):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             podman = PodmanClient().from_env()\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         else:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             podman = PodmanClient(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 base_url=\"unix:///Users/user/.lima/default/sock/podman.sock\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       returncode, stdout, stderr = run_container(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             podman,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"ghcr.io/openwrt/imagebuilder:testtarget-testsubtarget-v1.2.3\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             [\"make\", \"info\"],\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_common.py:102: \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | asu/common.py:244: in run_container\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     container = podman.containers.run(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/podman/domain/containers_run.py:61: in run\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     container = self.create(image=image, command=command, **kwargs)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/podman/domain/containers_create.py:275: in create\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     response = self.client.post(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/podman/api/client.py:306: in post\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     return self._request(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | self = <podman.api.client.APIClient object at 0x7fe9fd111370>, method = 'POST'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | path = 'containers/create'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | data = '{\"cap_drop\": [\"all\"], \"command\": [\"make\", \"info\"], \"image\": \"ghcr.io/openwrt/imagebuilder:testtarget-testsubtarget-v1.2.3\", \"no_new_privileges\": true, \"privileged\": false, \"userns\": {\"nsmode\": \"keep-id\"}}'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | params = None, headers = {'content-type': 'application/json'}, timeout = None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | stream = False, kwargs = {}, timeout_kw = {'timeout': None}, compatible = False\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | path_prefix = '/v4.5.0/libpod/'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | uri = ParseResult(scheme='http', netloc='%2Ftmp%2Fpodman.sock', path='/v4.5.0/libpod/containers/create', params='', query='', fragment='')\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def _request(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         self,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         method: str,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         path: Union[str, bytes],\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         data: _Data = None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         params: Union[None, bytes, Mapping[str, str]] = None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         headers: Optional[Mapping[str, str]] = None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         timeout: _Timeout = None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         stream: Optional[bool] = None,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         **kwargs,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     ) -> APIResponse:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"HTTP operation against configured Podman service.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         Args:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             method: HTTP method to use for request\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             path: Relative path to RESTful resource.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             params: Optional parameters to include with URL.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             headers: Optional headers to include in request.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             timeout: Number of seconds to wait on request, or (connect timeout, read timeout) tuple\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         Keyword Args:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             compatible: Will override the default path prefix with compatible prefix\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         Raises:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             APIError: when service returns an error\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         \"\"\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Only set timeout if one is given, lower level APIs will not override None\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         timeout_kw = {}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         timeout = timeout or self.timeout\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         if timeout_kw is not None:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             timeout_kw[\"timeout\"] = timeout\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         compatible = kwargs.get(\"compatible\", False)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         path_prefix = self.compatible_prefix if compatible else self.path_prefix\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         path = path.lstrip(\"/\")  # leading / makes urljoin crazy...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # TODO should we have an option for HTTPS support?\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         # Build URL for operation from base_url\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         uri = urllib.parse.ParseResult(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"http\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             self.base_url.netloc,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             urllib.parse.urljoin(path_prefix, path),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             self.base_url.params,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             self.base_url.query,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             self.base_url.fragment,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         try:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             return APIResponse(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 self.request(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     method.upper(),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     uri.geturl(),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     params=params,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     data=data,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     headers=(headers or {}),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     stream=stream,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                     **timeout_kw,\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         except OSError as e:\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >           raise APIError(uri.geturl(), explanation=f\"{method.upper()} operation failed\") from e\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E           podman.errors.exceptions.APIError: http://%2Ftmp%2Fpodman.sock/v4.5.0/libpod/containers/create (POST operation failed)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/podman/api/client.py:415: APIError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ___________________________ test_stats_image_builds ____________________________\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | client = <FlaskClient <Flask 'asu.asu'>>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def test_stats_image_builds(client):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response = client.post(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"/api/v1/build\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             json=dict(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 version=\"1.2.3\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 target=\"testtarget/testsubtarget\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 profile=\"testprofile\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 packages=[\"test1\", \"test2\"],\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       assert response.status == \"200 OK\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E       AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         - 200 OK\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         + 500 INTERNAL SERVER ERROR\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_stats.py:14: AssertionError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ------------------------------ Captured log call -------------------------------\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:35 Store path: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpi9iamla_/store\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:41 Building {'packages': {'test1', 'test2'}, 'profile': 'testprofile', 'target': 'testtarget/testsubtarget', 'version': '1.2.3', 'distro': 'openwrt', 'branch': '1.2', 'arch': '', 'store_path': PosixPath('/tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpi9iamla_/store'), 'branch_data': {'name': '1.2', 'enabled': True, 'snapshot': True, 'versions': ['1.2.3'], 'git_branch': 'master', 'path': 'snapshots', 'path_packages': 'snapshots/packages', 'repos': ['base'], 'pubkey': 'RWRqylWEtrAZQ9hlSSEkqCJD4SAFswJQR1yoMfD3mzO3TEnY7LGthxPi', 'updates': 'dev', 'targets': {'testtarget/testsubtarget': 'testarch', 'x86/64': 'x86_64'}, 'package_changes': {'package_to_remove': None, 'package_to_replace': 'valid_new_package'}}, 'repository_allow_list': [], 'request_hash': '06fd5094f8bbe8cfa0c0c796776196ba'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | _______________________________ test_stats_cache _______________________________\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | client = <FlaskClient <Flask 'asu.asu'>>\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     def test_stats_cache(client):\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         response = client.post(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             \"/api/v1/build\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             json=dict(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 version=\"1.2.3\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 target=\"testtarget/testsubtarget\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 profile=\"testprofile\",\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |                 packages=[\"test1\", \"test2\"],\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |             ),\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |         )\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | >       assert response.status == \"200 OK\"\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E       AssertionError: assert '500 INTERNAL SERVER ERROR' == '200 OK'\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         - 200 OK\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | E         + 500 INTERNAL SERVER ERROR\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_stats.py:52: AssertionError\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ------------------------------ Captured log call -------------------------------\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:35 Store path: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpz1avd35r/store\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | DEBUG    rq.worker:build.py:41 Building {'packages': {'test1', 'test2'}, 'profile': 'testprofile', 'target': 'testtarget/testsubtarget', 'version': '1.2.3', 'distro': 'openwrt', 'branch': '1.2', 'arch': '', 'store_path': PosixPath('/tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/tests/tmpz1avd35r/store'), 'branch_data': {'name': '1.2', 'enabled': True, 'snapshot': True, 'versions': ['1.2.3'], 'git_branch': 'master', 'path': 'snapshots', 'path_packages': 'snapshots/packages', 'repos': ['base'], 'pubkey': 'RWRqylWEtrAZQ9hlSSEkqCJD4SAFswJQR1yoMfD3mzO3TEnY7LGthxPi', 'updates': 'dev', 'targets': {'testtarget/testsubtarget': 'testarch', 'x86/64': 'x86_64'}, 'package_changes': {'package_to_remove': None, 'package_to_replace': 'valid_new_package'}}, 'repository_allow_list': [], 'request_hash': '06fd5094f8bbe8cfa0c0c796776196ba'}\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | =============================== warnings summary ===============================\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ../../../home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/connexion/decorators/validation.py:16\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ../../../home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/connexion/decorators/validation.py:16\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/connexion/decorators/validation.py:16: DeprecationWarning: Accessing jsonschema.draft4_format_checker is deprecated and will be removed in a future release. Instead, use the FORMAT_CHECKER attribute on the corresponding Validator.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     from jsonschema import Draft4Validator, ValidationError, draft4_format_checker\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ../../../home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/pkg_resources/__init__.py:121\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/pkg_resources/__init__.py:121: DeprecationWarning: pkg_resources is deprecated as an API\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     warnings.warn(\"pkg_resources is deprecated as an API\", DeprecationWarning)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py: 31 warnings\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_factory.py: 5 warnings\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_janitor.py: 3 warnings\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_stats.py: 6 warnings\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/connexion/apps/flask_app.py:36: DeprecationWarning: 'app.json_encoder' is deprecated and will be removed in Flask 2.3. Customize 'app.json_provider_class' or 'app.json' instead.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     app.json_encoder = FlaskJSONEncoder\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py: 93 warnings\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_factory.py: 1 warning\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_stats.py: 18 warnings\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/flask/json/provider.py:188: DeprecationWarning: Setting 'json_encoder' on the app or a blueprint is deprecated and will be removed in Flask 2.3. Customize 'app.json' instead.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     warnings.warn(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py: 93 warnings\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_factory.py: 1 warning\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_stats.py: 18 warnings\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/flask/json/provider.py:230: DeprecationWarning: 'JSONEncoder' is deprecated and will be removed in Flask 2.3. Use 'Flask.json' to provide an alternate JSON implementation instead.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     return json.dumps(obj, **kwargs)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py: 34 warnings\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_stats.py: 6 warnings\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/connexion/apis/flask_api.py:236: DeprecationWarning: '_request_ctx_stack' is deprecated and will be removed in Flask 2.3.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     setattr(flask._request_ctx_stack.top, 'connexion_context', context_dict)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py: 34 warnings\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_stats.py: 6 warnings\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/connexion/apis/flask_api.py:236: DeprecationWarning: '_request_ctx_stack' is deprecated and will be removed in Flask 2.3. Use 'g' to store data, or 'request_ctx' to access the current context.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     setattr(flask._request_ctx_stack.top, 'connexion_context', context_dict)\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py: 29 warnings\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_stats.py: 6 warnings\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/rq/connections.py:35: DeprecationWarning: The Connection context manager is deprecated. Use the `connection` parameter instead.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     warnings.warn(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py: 29 warnings\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_stats.py: 6 warnings\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/rq/connections.py:58: DeprecationWarning: The `push_connection` function is deprecated. Pass the `connection` explicitly instead.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     warnings.warn(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_api.py: 29 warnings\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | tests/test_stats.py: 6 warnings\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |   /home/runneradmin/.cache/pypoetry/virtualenvs/asu-i6ndNwkt-py3.8/lib/python3.8/site-packages/rq/connections.py:72: DeprecationWarning: The `pop_connection` function is deprecated. Pass the `connection` explicitly instead.\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   |     warnings.warn(\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | \n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | -- Docs: https://docs.pytest.org/en/stable/warnings.html\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/report.xml -\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | =========================== short test summary info ============================\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | FAILED tests/test_api.py::test_api_build - AssertionError: assert '500 INTERN...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | FAILED tests/test_api.py::test_api_build_version_code - AssertionError: asser...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | FAILED tests/test_api.py::test_api_build_rootfs_size - AssertionError: assert...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | FAILED tests/test_api.py::test_api_build_diff_packages - AssertionError: asse...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | FAILED tests/test_api.py::test_api_build_mapping - AssertionError: assert '50...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | FAILED tests/test_api.py::test_api_build_mapping_abi - AssertionError: assert...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | FAILED tests/test_api.py::test_api_build_get - AssertionError: assert '500 IN...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | FAILED tests/test_api.py::test_api_build_packages_versions - AssertionError: ...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | FAILED tests/test_api.py::test_api_build_packages_versions_bad - AssertionErr...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | FAILED tests/test_api.py::test_api_build_packages_duplicate - AssertionError:...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | FAILED tests/test_api.py::test_api_build_empty_packages_list - AssertionError...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | FAILED tests/test_api.py::test_api_build_withouth_packages_list - AssertionEr...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | FAILED tests/test_api.py::test_api_build_real_x86 - AssertionError: assert '5...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | FAILED tests/test_api.py::test_api_build_real_ath79 - AssertionError: assert ...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | FAILED tests/test_api.py::test_api_build_defaults_empty - AssertionError: ass...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | FAILED tests/test_api.py::test_api_build_defaults_filled_allowed - AssertionE...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | FAILED tests/test_common.py::test_run_container - podman.errors.exceptions.AP...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | FAILED tests/test_stats.py::test_stats_image_builds - AssertionError: assert ...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | FAILED tests/test_stats.py::test_stats_cache - AssertionError: assert '500 IN...\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   | ================= 19 failed, 37 passed, 457 warnings in 15.86s =================\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8]   \u274c  Failure - Main Test with pytest\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8] exitcode '1': failure\n[03839653-52e1-4b06-9242-8e9871702c57/Python 3.8] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'Python ${{ matrix.python-version }}' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/openwrt-asu/.github/workflows/test-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "03839653-52e1-4b06-9242-8e9871702c57",
        "build_tool": "pytest",
        "elapsed_time": 331.651136636734
    }
}