{
    "repository": "moisutsu/classopt",
    "stars": 52,
    "language": "python",
    "size": 81,
    "clone_url": "https://github.com/moisutsu/classopt.git",
    "timestamp": "2023-07-01T16:37:32.461412Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_decorator.TestClassOpt",
                "name": "test_advanced_usage",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorator.TestClassOpt",
                "name": "test_args_from_scipt",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorator.TestClassOpt",
                "name": "test_classopt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorator.TestClassOpt",
                "name": "test_convert_default_value_type_to_specified_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorator.TestClassOpt",
                "name": "test_default_long",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorator.TestClassOpt",
                "name": "test_default_short",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorator.TestClassOpt",
                "name": "test_default_value",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorator.TestClassOpt",
                "name": "test_external_parser",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorator.TestClassOpt",
                "name": "test_from_dict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorator.TestClassOpt",
                "name": "test_from_dict_partial",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorator.TestClassOpt",
                "name": "test_generic_alias",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorator.TestClassOpt",
                "name": "test_generic_alias_for_python3_9_or_later",
                "time": 0.007,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "These version does not support `list` type with subscription.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorator.TestClassOpt",
                "name": "test_simple_default_value_passing",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_decorator.TestClassOpt",
                "name": "test_to_dict",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inheritance.TestClassOpt",
                "name": "test_advanced_usage",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inheritance.TestClassOpt",
                "name": "test_args_from_script",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inheritance.TestClassOpt",
                "name": "test_classopt",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inheritance.TestClassOpt",
                "name": "test_default_value",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inheritance.TestClassOpt",
                "name": "test_external_parser",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_inheritance.TestClassOpt",
                "name": "test_generic_alias",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[c168b3f7-3049-4310-be31-b849e1748c12/build] \ud83d\ude80  Start image=crawlergpt:latest\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/moisutsu-classopt] user=0 workdir=\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[c168b3f7-3049-4310-be31-b849e1748c12/build] \u2b50 Run Pre Install Poetry\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2705  Success - Pre Install Poetry\n[c168b3f7-3049-4310-be31-b849e1748c12/build] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.7]\n[c168b3f7-3049-4310-be31-b849e1748c12/build] \u2b50 Run Main actions/checkout@v3\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2705  Success - Main actions/checkout@v3\n[c168b3f7-3049-4310-be31-b849e1748c12/build] \u2b50 Run Main Set up Python\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/3d6b43cf-fea6-4eb5-a3f6-cdab6988f12d/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2753  ::group::Installed versions\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udcac  ::debug::isExplicit: \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udcac  ::debug::explicit? false\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udcac  ::debug::explicit? true\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udcac  ::debug::explicit? true\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udcac  ::debug::explicit? true\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udcac  ::debug::explicit? true\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udcac  ::debug::explicit? true\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udcac  ::debug::explicit? true\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udcac  ::debug::matched: 3.7.11\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | Successfully set up CPython (3.7.11)\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2753  ::endgroup::\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2705  Success - Main Set up Python\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2699  ::set-output:: python-version=3.7.11\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[c168b3f7-3049-4310-be31-b849e1748c12/build] \u2b50 Run Main Install Poetry\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/3d6b43cf-fea6-4eb5-a3f6-cdab6988f12d/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[c168b3f7-3049-4310-be31-b849e1748c12/build] \u2b50 Run Main Install and configure Poetry\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | Retrieving Poetry metadata\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | # Welcome to Poetry!\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | This will download and install the latest version of Poetry,\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | a dependency and package manager for Python.\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | /home/runneradmin/.local/bin\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | You can uninstall at any time by executing this script with the --uninstall option,\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | and these changes will be reverted.\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | Installing Poetry (1.5.1)\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | Installing Poetry (1.5.1): Creating environment\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | Installing Poetry (1.5.1): Installing Poetry\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | Installing Poetry (1.5.1): Creating script\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | Installing Poetry (1.5.1): Done\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | Poetry (1.5.1) is installed now. Great!\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | environment variable.\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | You can test that everything is set up by executing:\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | `poetry --version`\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \u001b[33mDone \u2705\u001b[0m\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2705  Success - Main Install and configure Poetry\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2705  Success - Main Install Poetry\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[c168b3f7-3049-4310-be31-b849e1748c12/build] \u2b50 Run Main Install library\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3.sh] user= workdir=\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | Creating virtualenv classopt in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/moisutsu-classopt/.venv\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | Installing dependencies from lock file\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | Package operations: 18 installs, 0 updates, 0 removals\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   |   \u2022 Installing typing-extensions (3.10.0.0)\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   |   \u2022 Installing zipp (3.5.0)\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   |   \u2022 Installing importlib-metadata (4.6.0)\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   |   \u2022 Installing pyparsing (2.4.7)\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   |   \u2022 Installing appdirs (1.4.4)\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   |   \u2022 Installing attrs (21.2.0)\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   |   \u2022 Installing click (8.0.1)\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   |   \u2022 Installing iniconfig (1.1.1)\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   |   \u2022 Installing mypy-extensions (0.4.3)\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   |   \u2022 Installing packaging (21.0)\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   |   \u2022 Installing pathspec (0.8.1)\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   |   \u2022 Installing pluggy (0.13.1)\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   |   \u2022 Installing py (1.10.0)\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   |   \u2022 Installing regex (2021.7.1)\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   |   \u2022 Installing toml (0.10.2)\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   |   \u2022 Installing typed-ast (1.4.3)\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   |   \u2022 Installing black (21.6b0)\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   |   \u2022 Installing pytest (6.2.4)\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | Installing the current project: classopt (0.2.1)\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2705  Success - Main Install library\n[c168b3f7-3049-4310-be31-b849e1748c12/build] \u2b50 Run Main Run test\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4.sh] user= workdir=\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | ============================= test session starts ==============================\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | platform linux -- Python 3.7.11, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/moisutsu-classopt\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | collected 20 items\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | tests/test_decorator.py ...........s..                                   [ 70%]\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | tests/test_inheritance.py ......                                         [100%]\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | \n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/moisutsu-classopt/report.xml -\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   | ======================== 19 passed, 1 skipped in 0.28s =========================\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2705  Success - Main Run test\n[c168b3f7-3049-4310-be31-b849e1748c12/build] \u2b50 Run Post Install Poetry\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/3d6b43cf-fea6-4eb5-a3f6-cdab6988f12d/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2705  Success - Post Install Poetry\n[c168b3f7-3049-4310-be31-b849e1748c12/build] \u2b50 Run Post Set up Python\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[c168b3f7-3049-4310-be31-b849e1748c12/build]   \u2705  Success - Post Set up Python\n[c168b3f7-3049-4310-be31-b849e1748c12/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/moisutsu-classopt/.github/workflows/unittest-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "c168b3f7-3049-4310-be31-b849e1748c12",
        "build_tool": "pytest",
        "elapsed_time": 212.21262526512146
    }
}