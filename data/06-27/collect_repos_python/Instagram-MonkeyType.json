{
    "repository": "Instagram/MonkeyType",
    "stars": 4276,
    "language": "python",
    "size": 671,
    "clone_url": "https://github.com/Instagram/MonkeyType.git",
    "timestamp": "2023-06-28T12:10:06.579192Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "demo.test_inbox",
                "name": "test_empty_inbox",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "demo.test_inbox",
                "name": "test_commented",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "demo.test_inbox",
                "name": "test_followed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "demo.test_inbox",
                "name": "test_one_like",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "demo.test_inbox",
                "name": "test_two_likes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "demo.test_inbox",
                "name": "test_three_likes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "demo.test_inbox",
                "name": "test_everything",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "demo.test_inbox",
                "name": "test_aggregator_interface",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_generate_stub",
                "time": 0.141,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_print_stub_ignore_existing_annotations",
                "time": 0.131,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_get_diff",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_get_diff2",
                "time": 0.175,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_no_traces[tests.test_cli-No traces found for module tests.test_cli\\n]",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_no_traces[tests.test_cli:foo-No traces found for specifier tests.test_cli:foo\\n]",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_display_list_of_modules",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_display_list_of_modules_no_modules",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_display_sample_count",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_display_sample_count_from_cli",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_quiet_failed_traces",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_verbose_failed_traces",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_cli_context_manager_activated",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_pathlike_parameter",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_toplevel_filename_parameter",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_apply_stub_init",
                "time": 0.414,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_apply_stub_file_with_spaces",
                "time": 0.363,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_apply_stub_using_libcst",
                "time": 0.286,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_apply_stub_using_libcst__exception",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_apply_stub_using_libcst__overwrite_existing_annotations",
                "time": 0.17,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_apply_stub_using_libcst__confine_new_imports_in_type_checking_block",
                "time": 0.297,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cli",
                "name": "test_get_newly_imported_items",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_compat",
                "name": "test_name_of_union",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config.TestDefaultCodeFilter",
                "name": "test_excludes_stdlib",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config.TestDefaultCodeFilter",
                "name": "test_excludes_site_packages",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config.TestDefaultCodeFilter",
                "name": "test_includes_otherwise",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config.TestDefaultCodeFilter",
                "name": "test_excludes_frozen_importlib",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config.TestDefaultCodeFilter",
                "name": "test_includes_stdlib_in_MONKEYTYPE_TRACE_MODULES",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[NoneType]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[NotImplementedType]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[mappingproxy]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[int]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[Outer]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[Inner]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[typ6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[typ7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[typ8]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[typ9]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[typ10]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[typ11]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[typ12]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[typ13]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[typ14]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[typ15]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[typ16]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[typ17]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[typ18]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[typ19]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[typ20]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip[typ21]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_to_dict[typ0-expected0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_to_dict[DUMMY_NAME-expected1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_to_dict[DUMMY_NAME-expected2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_from_dict[type_dict0-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_from_dict_nested[type_dict0-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_to_json[DUMMY_NAME-{\"elem_types\": {\"a\": {\"module\": \"builtins\", \"qualname\": \"int\"}, \"b\": {\"module\": \"builtins\", \"qualname\": \"str\"}}, \"is_typed_dict\": true, \"module\": \"tests.test_encoding\", \"qualname\": \"DUMMY_NAME\"}]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_from_json[{\"elem_types\": {\"a\": {\"module\": \"builtins\", \"qualname\": \"int\"}, \"b\": {\"module\": \"builtins\", \"qualname\": \"str\"}}, \"is_typed_dict\": true, \"module\": \"tests.test_encoding\", \"qualname\": \"DUMMY_NAME\"}-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_type_round_trip_typed_dict[DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_trace_round_trip",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_convert_non_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_maybe_encode_type[encoder0-None-None-False]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_maybe_encode_type[encoder1-str-foo-True]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_maybe_decode_type[encoder0-None-None-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_maybe_decode_type[encoder1-null-None-False]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestTypeConversion",
                "name": "test_maybe_decode_type[encoder2-str-foo-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoding.TestSerializeTraces",
                "name": "test_log_failure_and_continue",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestImportMap",
                "name": "test_merge",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestImportBlockStub",
                "name": "test_single_import",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestImportBlockStub",
                "name": "test_io_import_single",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestImportBlockStub",
                "name": "test_multiple_imports",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestImportBlockStub",
                "name": "test_multiple_io_imports",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestAttributeStub",
                "name": "test_simple_attribute[stub0-    foo: int]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestAttributeStub",
                "name": "test_simple_attribute[stub1-    foo: 'Foo']",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[annotation0-'Foo']",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[annotation1-List['Foo']]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[annotation2-List[List['Foo']]]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[annotation3-Optional[int]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[annotation4-List[Optional[int]]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[UserId-UserId]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[annotation6-List[UserId]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[annotation7-List[int]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[annotation8-List[List[int]]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[None-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[annotation10-List[None]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[int-int]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[Dummy-tests.util.Dummy]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[annotation13-List[tests.util.Dummy]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[some_string-some_string]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[annotation15-Iterable[None]]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[annotation16-List[Iterable[None]]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[annotation17-Generator['Foo', None, None]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[annotation18-List[Generator['Foo', None, None]]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[T-T]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[annotation20-Dict[str, T]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestRenderAnnotation",
                "name": "test_render_annotation[annotation21-Tuple[()]]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionStub",
                "name": "test_classmethod",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionStub",
                "name": "test_staticmethod",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionStub",
                "name": "test_property",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionStub",
                "name": "test_cached_property",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "install Django to run this test",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionStub",
                "name": "test_simple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionStub",
                "name": "test_with_prefix",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionStub",
                "name": "test_strip_modules",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionStub",
                "name": "test_async_function",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionStub",
                "name": "test_optional_parameter_annotation",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionStub",
                "name": "test_optional_union_parameter_annotation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionStub",
                "name": "test_optional_return_annotation",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionStub",
                "name": "test_split_parameters_across_multiple_lines",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionStub",
                "name": "test_default_none_parameter_annotation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionStub",
                "name": "test_newtype_parameter_annotation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionStub",
                "name": "test_nonetype_annotation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionStub",
                "name": "test_forward_ref_annotation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionStub",
                "name": "test_forward_ref_annotation_within_generator",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestClassStub",
                "name": "test_render",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestReplaceTypedDictsWithStubs",
                "name": "test_replace_typed_dict_with_stubs[int-expected0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestReplaceTypedDictsWithStubs",
                "name": "test_replace_typed_dict_with_stubs[typ1-expected1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestReplaceTypedDictsWithStubs",
                "name": "test_replace_typed_dict_with_stubs[typ2-expected2]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestReplaceTypedDictsWithStubs",
                "name": "test_replace_typed_dict_with_stubs[typ3-expected3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestReplaceTypedDictsWithStubs",
                "name": "test_replace_typed_dict_with_stubs[typ4-expected4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestReplaceTypedDictsWithStubs",
                "name": "test_replace_typed_dict_with_stubs[typ5-expected5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestReplaceTypedDictsWithStubs",
                "name": "test_replace_typed_dict_with_stubs[typ6-expected6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestReplaceTypedDictsWithStubs",
                "name": "test_replace_typed_dict_with_stubs[typ7-expected7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestReplaceTypedDictsWithStubs",
                "name": "test_replace_typed_dict_with_stubs[typ8-expected8]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestReplaceTypedDictsWithStubs",
                "name": "test_replace_typed_dict_with_stubs[typ9-expected9]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestReplaceTypedDictsWithStubs",
                "name": "test_replace_typed_dict_with_stubs[typ10-expected10]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestReplaceTypedDictsWithStubs",
                "name": "test_replace_typed_dict_with_stubs[DUMMY_NAME-expected11]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestReplaceTypedDictsWithStubs",
                "name": "test_replace_typed_dict_with_stubs[DUMMY_NAME-expected12]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestReplaceTypedDictsWithStubs",
                "name": "test_replace_typed_dict_with_stubs[DUMMY_NAME-expected13]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestReplaceTypedDictsWithStubs",
                "name": "test_replace_typed_dict_with_stubs[GenuineTypedDict-expected14]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestReplaceTypedDictsWithStubs",
                "name": "test_replace_typed_dict_with_stubs[DUMMY_NAME-expected15]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestReplaceTypedDictsWithStubs",
                "name": "test_replace_typed_dict_with_stubs[typ16-expected16]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestModuleStub",
                "name": "test_render",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestModuleStub",
                "name": "test_render_nested_typed_dict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestModuleStub",
                "name": "test_render_return_typed_dict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestModuleStub",
                "name": "test_render_yield_typed_dict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestModuleStub",
                "name": "test_render_typed_dict_in_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestModuleStub",
                "name": "test_render_typed_dict_base_and_subclass",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestModuleStub",
                "name": "test_render_return_empty_tuple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestBuildModuleStubs",
                "name": "test_build_module_stubs",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestBuildModuleStubs",
                "name": "test_build_module_stubs_typed_dict_parameter",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestStubIndexBuilder",
                "name": "test_ignore_non_matching_functions",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestStubIndexBuilder",
                "name": "test_build_index",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestUpdateSignatureArgs",
                "name": "test_update_arg",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestUpdateSignatureArgs",
                "name": "test_update_arg_with_anno",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestUpdateSignatureArgs",
                "name": "test_update_self",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestUpdateSignatureArgs",
                "name": "test_update_class",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestUpdateSignatureArgs",
                "name": "test_update_arg_ignore_existing_anno",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestUpdateSignatureArgs",
                "name": "test_update_self_ignore_existing_anno",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestUpdateSignatureArgs",
                "name": "test_update_arg_ignore_existing_anno_None",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestUpdateSignatureArgs",
                "name": "test_update_arg_avoid_incompatible_anno",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestUpdateSignatureReturn",
                "name": "test_update_return",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestUpdateSignatureReturn",
                "name": "test_update_return_with_anno",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestUpdateSignatureReturn",
                "name": "test_avoid_incompatible_return",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestUpdateSignatureReturn",
                "name": "test_update_return_with_anno_ignored",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestUpdateSignatureReturn",
                "name": "test_update_yield",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestUpdateSignatureReturn",
                "name": "test_update_yield_and_return",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestUpdateSignatureReturn",
                "name": "test_update_yield_none_and_return",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestUpdateSignatureReturn",
                "name": "test_update_yield_and_return_none",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionKind",
                "name": "test_from_callable[a_static_method-FunctionKind.STATIC]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionKind",
                "name": "test_from_callable[a_class_method-FunctionKind.CLASS]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionKind",
                "name": "test_from_callable[an_instance_method-FunctionKind.INSTANCE]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionKind",
                "name": "test_from_callable[a_property-FunctionKind.PROPERTY]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionKind",
                "name": "test_from_callable[a_module_func-FunctionKind.MODULE]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionDefinition",
                "name": "test_has_self[a_static_method-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionDefinition",
                "name": "test_has_self[a_class_method-True]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionDefinition",
                "name": "test_has_self[an_instance_method-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionDefinition",
                "name": "test_has_self[a_property-True]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionDefinition",
                "name": "test_has_self[a_module_func-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionDefinition",
                "name": "test_from_callable[a_static_method-expected0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionDefinition",
                "name": "test_from_callable[a_class_method-expected1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionDefinition",
                "name": "test_from_callable[an_instance_method-expected2]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionDefinition",
                "name": "test_from_callable[a_property-expected3]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionDefinition",
                "name": "test_from_callable[a_module_func-expected4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionDefinition",
                "name": "test_from_callable[an_async_func-expected5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionDefinition",
                "name": "test_from_callable_and_traced_types[an_instance_method-arg_types0-int-None-expected0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestFunctionDefinition",
                "name": "test_from_callable_and_traced_types[an_instance_method-arg_types1-int-None-expected1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestShrinkTracedTypes",
                "name": "test_shrink_args",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestShrinkTracedTypes",
                "name": "test_shrink_return",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestShrinkTracedTypes",
                "name": "test_shrink_yield",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestGetImportsForAnnotation",
                "name": "test_no_imports[_empty0]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestGetImportsForAnnotation",
                "name": "test_no_imports[_empty1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestGetImportsForAnnotation",
                "name": "test_no_imports[not a type]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestGetImportsForAnnotation",
                "name": "test_no_imports[int]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestGetImportsForAnnotation",
                "name": "test_special_case_types[anno0-expected0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestGetImportsForAnnotation",
                "name": "test_special_case_types[anno1-expected1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestGetImportsForAnnotation",
                "name": "test_callable",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestGetImportsForAnnotation",
                "name": "test_user_defined_class",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestGetImportsForAnnotation",
                "name": "test_container_types[anno0-expected0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestGetImportsForAnnotation",
                "name": "test_container_types[anno1-expected1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestGetImportsForAnnotation",
                "name": "test_container_types[anno2-expected2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestGetImportsForAnnotation",
                "name": "test_container_types[anno3-expected3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestGetImportsForAnnotation",
                "name": "test_container_types[anno4-expected4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestGetImportsForAnnotation",
                "name": "test_container_types[anno5-expected5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestGetImportsForAnnotation",
                "name": "test_nested_class",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_stubs.TestGetImportsForSignature",
                "name": "test_default_none_parameter_imports",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tracing.TestGetFunc",
                "name": "test_get_func[frame0-a_static_method]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tracing.TestGetFunc",
                "name": "test_get_func[frame1-a_class_method]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tracing.TestGetFunc",
                "name": "test_get_func[frame2-an_instance_method]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tracing.TestGetFunc",
                "name": "test_get_func[frame3-a_module_function]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tracing.TestGetFunc",
                "name": "test_get_func[frame4-a_property]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tracing.TestTraceCalls",
                "name": "test_simple_call",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tracing.TestTraceCalls",
                "name": "test_flushes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tracing.TestTraceCalls",
                "name": "test_callee_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tracing.TestTraceCalls",
                "name": "test_nested_callee_throws_caller_doesnt_recover",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tracing.TestTraceCalls",
                "name": "test_callee_throws_recovers",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tracing.TestTraceCalls",
                "name": "test_nested_callee_throws_recovers",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tracing.TestTraceCalls",
                "name": "test_caller_handles_callee_exception",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tracing.TestTraceCalls",
                "name": "test_generator_trace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tracing.TestTraceCalls",
                "name": "test_return_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tracing.TestTraceCalls",
                "name": "test_access_property",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tracing.TestTraceCalls",
                "name": "test_filtering",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_tracing.TestTraceCalls",
                "name": "test_lazy_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_type_checking_imports_transformer.TestMoveImportsToTypeCheckingBlockVisitor",
                "name": "test_move_imports__mix",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_type_checking_imports_transformer.TestMoveImportsToTypeCheckingBlockVisitor",
                "name": "test_simple_add_type_checking",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_type_checking_imports_transformer.TestMoveImportsToTypeCheckingBlockVisitor",
                "name": "test_type_checking_block_already_exists",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_type_checking_imports_transformer.TestMoveImportsToTypeCheckingBlockVisitor",
                "name": "test_typing_imports",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_types_equal[typ0-other_type0-True]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_types_equal[typ1-int-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_types_equal[typ2-other_type2-True]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_types_equal[typ3-int-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_types_equal[typ4-int-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_types_equal[DUMMY_NAME-DUMMY_NAME-True]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_types_equal[DUMMY_NAME-DUMMY_NAME-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_types_equal[DUMMY_NAME-int-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_types_equal[typ8-other_type8-True]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_types_equal[typ9-other_type9-True]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_types_equal[typ10-other_type10-True]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_types_equal[typ11-other_type11-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_types_equal[typ12-other_type12-True]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_types_equal[typ13-other_type13-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_types_equal[typ14-other_type14-False]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_types_equal[typ15-other_type15-True]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_types_equal[typ16-other_type16-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_types_equal[typ17-other_type17-True]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_types_equal[typ18-other_type18-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_is_list[typ0-True]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_is_list[typ1-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypesEqual",
                "name": "test_is_list[int-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestMakeTypedDict",
                "name": "test_make_typed_dict[required_fields0-optional_fields0-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestMakeTypedDict",
                "name": "test_field_annotations[required_fields0-optional_fields0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_non_uniform_typed_dict_types[types0-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_non_uniform_typed_dict_types[types1-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_non_uniform_typed_dict_types[types2-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_non_uniform_typed_dict_types[types3-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_non_uniform_typed_dict_types[types4-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_non_uniform_typed_dict_types[types5-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_non_uniform_typed_dict_types[types6-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_non_uniform_typed_dict_types[types7-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_non_uniform_typed_dict_types[types8-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_non_uniform_typed_dict_types[types9-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_non_uniform_typed_dict_types[types10-expected_type10]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_non_uniform_typed_dict_types[types11-expected_type11]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_non_uniform_typed_dict_types[types12-DUMMY_NAME]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_non_uniform_typed_dict_types[types13-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_types_non_typed_dict[types0-expected_type0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_types_non_typed_dict[types1-expected_type1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_types_non_typed_dict[types2-expected_type2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_types_non_typed_dict[types3-expected_type3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_types_non_typed_dict[types4-expected_type4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_types_non_typed_dict[types5-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_types_non_typed_dict[types6-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_types_non_typed_dict[types7-expected_type7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_types_non_typed_dict[types8-expected_type8]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_types_non_typed_dict[types9-expected_type9]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_types[types0-expected_type0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_types[types1-int]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_types[types2-int]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_types[types3-expected_type3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_types[types4-expected_type4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_types[types5-expected_type5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_types_mixed_dicts[types0-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_types_mixed_dicts[types1-expected_type1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestShrinkType",
                "name": "test_shrink_types_mixed_dicts[types2-expected_type2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypedDictHelpers",
                "name": "test_is_typed_dict[DUMMY_NAME-True]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypedDictHelpers",
                "name": "test_is_typed_dict[typ1-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypedDictHelpers",
                "name": "test_is_typed_dict[<lambda>-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypedDictHelpers",
                "name": "test_are_dict_types_equal[DUMMY_NAME-DUMMY_NAME-True0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypedDictHelpers",
                "name": "test_are_dict_types_equal[DUMMY_NAME-DUMMY_NAME-False0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypedDictHelpers",
                "name": "test_are_dict_types_equal[DUMMY_NAME-type22-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypedDictHelpers",
                "name": "test_are_dict_types_equal[type13-DUMMY_NAME-False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypedDictHelpers",
                "name": "test_are_dict_types_equal[type14-type24-True]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypedDictHelpers",
                "name": "test_are_dict_types_equal[DUMMY_NAME-DUMMY_NAME-True1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypedDictHelpers",
                "name": "test_are_dict_types_equal[DUMMY_NAME-DUMMY_NAME-False1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_builtin_types[1-int]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_builtin_types[foo-str]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_builtin_types[Dummy-expected_type2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_builtin_types[1.1-float]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_builtin_types[value4-expected_type4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_builtin_types[value5-expected_type5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_builtin_types[value6-expected_type6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_builtin_types[value7-expected_type7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_builtin_types[value8-expected_type8]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_builtin_types[value9-expected_type9]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_builtin_types[value10-expected_type10]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_builtin_types[value11-expected_type11]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_builtin_types[value12-expected_type12]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_builtin_types[helper-expected_type13]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_builtin_types[<lambda>-expected_type14]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_builtin_types[an_instance_method-expected_type15]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_builtin_types[len-expected_type16]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_builtin_types[generator-expected_type17]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_dict_type[value0-expected_when_max_size_is_zero0-expected_when_max_size_is_none0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_dict_type[value1-expected_when_max_size_is_zero1-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_dict_type[value2-expected_when_max_size_is_zero2-expected_when_max_size_is_none2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_dict_type[value3-expected_when_max_size_is_zero3-expected_when_max_size_is_none3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_dict_type[value4-expected_when_max_size_is_zero4-expected_when_max_size_is_none4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_dict_type[value5-expected_when_max_size_is_zero5-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_dict_nested_within_generic[value0-expected_when_max_size_is_zero0-expected_when_max_size_is_none0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_dict_nested_within_generic[value1-expected_when_max_size_is_zero1-expected_when_max_size_is_none1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_dict_nested_within_generic[value2-expected_when_max_size_is_zero2-expected_when_max_size_is_none2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_dict_nested_within_generic[value3-expected_when_max_size_is_zero3-expected_when_max_size_is_none3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_dict_type_with_other_max_sizes[value0-1-expected0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_dict_type_with_other_max_sizes[value1-1-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_instance_type",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestGetType",
                "name": "test_class_type",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypeRewriter",
                "name": "test_rewrite_TypedDict[typ0-int]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypeRewriter",
                "name": "test_rewrite_TypedDict[Foo-Foo0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypeRewriter",
                "name": "test_rewrite_TypedDict[Foo-Foo1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypeRewriter",
                "name": "test_rewrite_TypedDict[Foo-Foo2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypeRewriter",
                "name": "test_rewrite_TypedDict[DUMMY_NAME-DUMMY_NAME]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypeRewriter",
                "name": "test_rewrite_TypedDict[T-expected5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestTypeRewriter",
                "name": "test_rewrite_TypedDict[typ6-expected6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRemoveEmptyContainers",
                "name": "test_rewrite[typ0-expected0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRemoveEmptyContainers",
                "name": "test_rewrite[typ1-expected1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRemoveEmptyContainers",
                "name": "test_rewrite[typ2-expected2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRemoveEmptyContainers",
                "name": "test_rewrite[typ3-expected3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRemoveEmptyContainers",
                "name": "test_rewrite[typ4-expected4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRemoveEmptyContainers",
                "name": "test_rewrite[typ5-expected5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRemoveEmptyContainers",
                "name": "test_rewrite[Tuple-Tuple]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRemoveEmptyContainers",
                "name": "test_rewrite[typ7-expected7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRewriteConfigDict",
                "name": "test_rewrite[typ0-expected0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRewriteConfigDict",
                "name": "test_rewrite[typ1-expected1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRewriteConfigDict",
                "name": "test_rewrite[typ2-expected2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRewriteLargeUnion",
                "name": "test_rewrite[typ0-expected0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRewriteLargeUnion",
                "name": "test_rewrite[typ1-expected1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRewriteLargeUnion",
                "name": "test_rewrite[typ2-expected2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRewriteLargeUnion",
                "name": "test_rewrite[typ3-expected3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRewriteLargeUnion",
                "name": "test_rewrite[typ4-expected4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRewriteLargeUnion",
                "name": "test_rewrite[typ5-B]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRewriteLargeUnion",
                "name": "test_rewrite[typ6-A]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRewriteLargeUnion",
                "name": "test_rewrite[typ7-expected7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRewriteGenerator",
                "name": "test_rewrite[typ0-expected0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRewriteGenerator",
                "name": "test_rewrite[typ1-expected1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRewriteGenerator",
                "name": "test_rewrite[typ2-expected2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRewriteAnonymousTypedDictToDict",
                "name": "test_rewrite[DUMMY_NAME-expected0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRewriteAnonymousTypedDictToDict",
                "name": "test_rewrite[DUMMY_NAME-expected1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRewriteAnonymousTypedDictToDict",
                "name": "test_rewrite[Foo-Foo]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_typing.TestRewriteAnonymousTypedDictToDict",
                "name": "test_rewrite[typ3-expected3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_util.TestGetNameInModule",
                "name": "test_get_existing_name",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_util.TestGetNameInModule",
                "name": "test_get_nonexistent_module",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_util.TestGetNameInModule",
                "name": "test_get_nonexistent_qualname",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_util.TestGetFuncInModule",
                "name": "test_get_method",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_util.TestGetFuncInModule",
                "name": "test_get_property",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_util.TestGetFuncInModule",
                "name": "test_get_settable_property",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_util.TestGetFuncInModule",
                "name": "test_get_cached_property",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "install Django to run this test",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_util.TestGetFuncInModule",
                "name": "test_get_non_function",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_util.TestPascalCase",
                "name": "test_pascal_case[foo-Foo]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_util.TestPascalCase",
                "name": "test_pascal_case[foo_bar-FooBar]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_util.TestPascalCase",
                "name": "test_pascal_case[fooBar-FooBar]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_util.TestPascalCase",
                "name": "test_pascal_case[FooBar-FooBar]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_util.TestPascalCase",
                "name": "test_pascal_case[_foo___bar_baz__-FooBarBaz]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.db.test_base",
                "name": "test_round_trip",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.db.test_sqlite",
                "name": "test_round_trip",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.db.test_sqlite",
                "name": "test_dedup",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.db.test_sqlite",
                "name": "test_qualname_filtering",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.db.test_sqlite",
                "name": "test_limit_resultset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test] \ud83d\ude80  Start image=crawlergpt:latest\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType] user=0 workdir=\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v3\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v3\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test] \ud83e\uddea  Matrix: map[python-version:3.8]\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test] \u2b50 Run Main actions/checkout@v3\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2705  Success - Main actions/checkout@v3\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test] \u2b50 Run Main Set up Python 3.8\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/48fa037b-f503-4d4d-8d7b-32ddd9eaa4dc/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2753  ::group::Installed versions\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::isExplicit: \n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::explicit? false\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::explicit? true\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::explicit? true\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::explicit? true\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::explicit? true\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::explicit? true\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::explicit? true\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::evaluating 6 versions\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::matched: 3.8.11\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Successfully set up CPython (3.8.11)\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2753  ::endgroup::\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2705  Success - Main Set up Python 3.8\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib/pkgconfig\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.8.11/x64\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2699  ::set-output:: python-version=3.8.11\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.8.11/x64/bin/python\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test] \u2b50 Run Main Restore pip cache\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/48fa037b-f503-4d4d-8d7b-32ddd9eaa4dc/act/actions-cache@v3/ dst=/var/run/act/actions/actions-cache@v3/\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v3/] user=0 workdir=\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/restore/index.js] user= workdir=\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::Resolved Keys:\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::[\"Linux-3.8-pip-67088924380ee05d54cbaccfda4686c89c40425ff9da0b8d8606ce54bdd35952\",\"Linux-3.8-pip-\"]\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::1.5.0\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:35451/_apis/artifactcache/cache?keys=Linux-3.8-pip-67088924380ee05d54cbaccfda4686c89c40425ff9da0b8d8606ce54bdd35952%252CLinux-3.8-pip-&version=2a50607a47f0c27aad98b33e03fa13615fdc9c33dc4fff3945d2d5078a8f7664\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Cache not found for input keys: Linux-3.8-pip-67088924380ee05d54cbaccfda4686c89c40425ff9da0b8d8606ce54bdd35952, Linux-3.8-pip-\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2705  Success - Main Restore pip cache\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test] \u2b50 Run Main Restore pipenv cache\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/48fa037b-f503-4d4d-8d7b-32ddd9eaa4dc/act/actions-cache@v3/ dst=/var/run/act/actions/actions-cache@v3/\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v3/] user=0 workdir=\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/restore/index.js] user= workdir=\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::Resolved Keys:\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::[\"Linux-3.8-pipenv-67088924380ee05d54cbaccfda4686c89c40425ff9da0b8d8606ce54bdd35952\",\"Linux-3.8-pipenv-\"]\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::1.5.0\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:35451/_apis/artifactcache/cache?keys=Linux-3.8-pipenv-67088924380ee05d54cbaccfda4686c89c40425ff9da0b8d8606ce54bdd35952%252CLinux-3.8-pipenv-&version=14b35bb138a6ff330d70a2b1088efaad28ca5c0de063c9b2d8d0420977a03e27\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Cache not found for input keys: Linux-3.8-pipenv-67088924380ee05d54cbaccfda4686c89c40425ff9da0b8d8606ce54bdd35952, Linux-3.8-pipenv-\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2705  Success - Main Restore pipenv cache\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test] \u2b50 Run Main Install dependencies\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Collecting pipenv\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   |   Downloading pipenv-2023.6.26-py3-none-any.whl (2.8 MB)\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Collecting certifi\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Collecting virtualenv>=20.17.1\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   |   Downloading virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Collecting virtualenv-clone>=0.2.5\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   |   Downloading virtualenv_clone-0.5.7-py3-none-any.whl (6.6 kB)\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Collecting setuptools>=67.0.0\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   |   Downloading setuptools-68.0.0-py3-none-any.whl (804 kB)\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Collecting filelock<4,>=3.12\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Collecting platformdirs<4,>=3.5.1\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Collecting distlib<1,>=0.3.6\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Installing collected packages: platformdirs, filelock, distlib, virtualenv-clone, virtualenv, setuptools, certifi, pipenv\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   |   Attempting uninstall: setuptools\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   |     Found existing installation: setuptools 56.0.0\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   |     Uninstalling setuptools-56.0.0:\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   |       Successfully uninstalled setuptools-56.0.0\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Successfully installed certifi-2023.5.7 distlib-0.3.6 filelock-3.12.2 pipenv-2023.6.26 platformdirs-3.8.0 setuptools-68.0.0 virtualenv-20.23.1 virtualenv-clone-0.5.7\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.8.11/x64/bin/python -m pip install --upgrade pip' command.\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Creating a virtualenv for this project...\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Pipfile: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/Pipfile\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Using default python from /opt/hostedtoolcache/Python/3.8.11/x64/bin/python (3.8.11) to create virtualenv...\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | created virtual environment CPython3.8.11.final.0-64 in 724ms\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   |   creator CPython3Posix(dest=/home/runneradmin/.venvs/Instagram-MonkeyType-yDza3dmQ, clear=False, no_vcs_ignore=False, global=False)\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   |   seeder FromAppData(download=False, pip=bundle, setuptools=bundle, wheel=bundle, via=copy, app_data_dir=/home/runneradmin/.local/share/virtualenv)\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   |     added seed packages: pip==23.1.2, setuptools==67.8.0, wheel==0.40.0\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   |   activators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | \n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Successfully created virtual environment!\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Virtualenv location: /home/runneradmin/.venvs/Instagram-MonkeyType-yDza3dmQ\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Installing dependencies from Pipfile.lock (6888a0)...\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Installing dependencies from Pipfile.lock (6888a0)...\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | INFO:root:running egg_info\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | INFO:root:creating /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/reqlib-metadata/MonkeyType.egg-info\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | INFO:root:writing /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/reqlib-metadata/MonkeyType.egg-info/PKG-INFO\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | INFO:root:writing dependency_links to /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/reqlib-metadata/MonkeyType.egg-info/dependency_links.txt\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | INFO:root:writing entry points to /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/reqlib-metadata/MonkeyType.egg-info/entry_points.txt\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | INFO:root:writing requirements to /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/reqlib-metadata/MonkeyType.egg-info/requires.txt\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | INFO:root:writing top-level names to /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/reqlib-metadata/MonkeyType.egg-info/top_level.txt\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | INFO:root:writing manifest file '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/reqlib-metadata/MonkeyType.egg-info/SOURCES.txt'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | INFO:root:reading manifest file '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/reqlib-metadata/MonkeyType.egg-info/SOURCES.txt'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | INFO:root:adding license file 'LICENSE'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | INFO:root:writing manifest file '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/reqlib-metadata/MonkeyType.egg-info/SOURCES.txt'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | INFO:root:running egg_info\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | INFO:root:writing /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/reqlib-metadata/MonkeyType.egg-info/PKG-INFO\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | INFO:root:writing dependency_links to /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/reqlib-metadata/MonkeyType.egg-info/dependency_links.txt\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | INFO:root:writing entry points to /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/reqlib-metadata/MonkeyType.egg-info/entry_points.txt\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | INFO:root:writing requirements to /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/reqlib-metadata/MonkeyType.egg-info/requires.txt\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | INFO:root:writing top-level names to /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/reqlib-metadata/MonkeyType.egg-info/top_level.txt\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | INFO:root:reading manifest file '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/reqlib-metadata/MonkeyType.egg-info/SOURCES.txt'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | INFO:root:adding license file 'LICENSE'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | INFO:root:writing manifest file '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/reqlib-metadata/MonkeyType.egg-info/SOURCES.txt'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | To activate this project's virtualenv, run pipenv shell.\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Alternatively, run a command inside the virtualenv with pipenv run.\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2705  Success - Main Install dependencies\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test] \u2b50 Run Main Lint with flake8\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2705  Success - Main Lint with flake8\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test] \u2b50 Run Main Format with black\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | All done! \u2728 \ud83c\udf70 \u2728\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | 16 files would be left unchanged.\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2705  Success - Main Format with black\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test] \u2b50 Run Main Format with isort\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/7] user= workdir=\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2705  Success - Main Format with isort\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test] \u2b50 Run Main Typecheck\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/8] user= workdir=\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Success: no issues found in 15 source files\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2705  Success - Main Typecheck\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test] \u2b50 Run Main Run tests\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/9] user= workdir=\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | ============================= test session starts ==============================\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | platform linux -- Python 3.8.11, pytest-7.3.1, pluggy-1.0.0\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | configfile: setup.cfg\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | collected 373 items\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | \n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | demo/test_inbox.py ........                                              [  2%]\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | tests/test_cli.py ......................                                 [  8%]\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | tests/test_compat.py .                                                   [  8%]\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | tests/test_config.py .....                                               [  9%]\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | tests/test_encoding.py ......................................            [ 19%]\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | tests/test_stubs.py ................................s............X...... [ 33%]\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | ........................................................................ [ 53%]\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | ....                                                                     [ 54%]\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | tests/test_tracing.py .................                                  [ 58%]\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | tests/test_type_checking_imports_transformer.py ....                     [ 59%]\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | tests/test_typing.py ................................................... [ 73%]\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | ........................................................................ [ 92%]\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | .........                                                                [ 95%]\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | tests/test_util.py ......s......                                         [ 98%]\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | tests/db/test_base.py .                                                  [ 98%]\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | tests/db/test_sqlite.py ....                                             [100%]\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | \n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/report.xml -\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | ================== 370 passed, 2 skipped, 1 xpassed in 5.06s ===================\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2705  Success - Main Run tests\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test] \u2b50 Run Main Upload htmldoc\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/48fa037b-f503-4d4d-8d7b-32ddd9eaa4dc/act/actions-upload-artifact@v3/ dst=/var/run/act/actions/actions-upload-artifact@v3/\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-upload-artifact@v3/] user=0 workdir=\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-upload-artifact@v3/dist/index.js] user= workdir=\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::Search path '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/htmlcov'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udea7  ::warning::No files were found with the provided path: htmlcov. No artifacts will be uploaded.\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2705  Success - Main Upload htmldoc\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test] \u2b50 Run Main Build docs\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/11] user= workdir=\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Running Sphinx v7.0.1\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | WARNING: Invalid configuration value found: 'language = None'. Update your configuration to a valid language code. Falling back to 'en' (English).\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | making output directory... done\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | WARNING: html_static_path entry '_static' does not exist\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | building [mo]: targets for 0 po files that are out of date\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | writing output... \n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | building [html]: targets for 6 source files that are out of date\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | updating environment: [new config] 6 added, 0 changed, 0 removed\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | reading sources... [ 16%] configuration\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | reading sources... [ 33%] faq\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | reading sources... [ 50%] generation\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | reading sources... [ 66%] index\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | reading sources... [ 83%] stores\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | reading sources... [100%] tracing\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | \n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | looking for now-outdated files... none found\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | pickling environment... done\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | checking consistency... done\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | preparing documents... done\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | writing output... [ 16%] configuration\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | writing output... [ 33%] faq\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | writing output... [ 50%] generation\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | writing output... [ 66%] index\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | writing output... [ 83%] stores\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | writing output... [100%] tracing\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | \n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | generating indices... genindex py-modindex done\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | writing additional pages... search done\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | copying static files... done\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | copying extra files... done\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | dumping search index in English (code: en)... done\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | dumping object inventory... done\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | build succeeded, 2 warnings.\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | \n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | The HTML pages are in _build/html.\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2705  Success - Main Build docs\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test] \u2b50 Run Main Upload doc\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/48fa037b-f503-4d4d-8d7b-32ddd9eaa4dc/act/actions-upload-artifact@v3/ dst=/var/run/act/actions/actions-upload-artifact@v3/\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-upload-artifact@v3/] user=0 workdir=\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-upload-artifact@v3/dist/index.js] user= workdir=\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::Search path '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html'\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::Removing /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html from rawSearchResults because it is a directory\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/.buildinfo was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::Removing /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/_sources from rawSearchResults because it is a directory\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/_sources/configuration.rst.txt was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/_sources/faq.rst.txt was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/_sources/generation.rst.txt was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/_sources/index.rst.txt was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/_sources/stores.rst.txt was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/_sources/tracing.rst.txt was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::Removing /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/_static from rawSearchResults because it is a directory\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/_static/alabaster.css was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/_static/basic.css was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/_static/custom.css was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/_static/doctools.js was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/_static/documentation_options.js was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/_static/file.png was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/_static/language_data.js was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/_static/minus.png was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/_static/plus.png was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/_static/pygments.css was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/_static/searchtools.js was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/_static/sphinx_highlight.js was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/configuration.html was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/faq.html was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/generation.html was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/genindex.html was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/index.html was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/objects.inv was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/py-modindex.html was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/search.html was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/searchindex.js was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/stores.html was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::File:/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html/tracing.html was found using the provided searchPath\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | With the provided path, there will be 30 files uploaded\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \ud83d\udcac  ::debug::Root artifact directory is /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/doc/_build/html\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Starting artifact upload\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   | Artifact name is valid!\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u2757  ::error::Unable to get ACTIONS_RUNTIME_TOKEN env variable\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test]   \u274c  Failure - Main Upload doc\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test] exitcode '1': failure\n[611e1bdd-9859-4106-b5a7-ad4ff3c88aa8/test] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'test' failed\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/Instagram-MonkeyType/.github/workflows/test-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 350.62492060661316
    }
}