{
    "repository": "redhat-performance/badfish",
    "stars": 72,
    "language": "python",
    "size": 741,
    "clone_url": "https://github.com/redhat-performance/badfish.git",
    "timestamp": "2023-07-01T12:46:54.843692Z",
    "clone_success": true,
    "number_of_actions": 5,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "unknown",
        "unknown",
        "pytest",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.test_bios_attributes.TestSetBiosAttribute",
                "name": "test_set_bios_attribute_bad_attr",
                "time": 0.093,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bios_attributes.TestSetBiosAttribute",
                "name": "test_set_bios_attribute_bad_value",
                "time": 0.106,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bios_attributes.TestSetBiosAttribute",
                "name": "test_set_bios_attribute_ok",
                "time": 0.136,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bios_attributes.TestGetBiosAttribute",
                "name": "test_get_all_attributes",
                "time": 0.104,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bios_attributes.TestGetBiosAttribute",
                "name": "test_get_one_attribute_ok",
                "time": 0.092,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bios_attributes.TestGetBiosAttribute",
                "name": "test_get_one_bad_attribute",
                "time": 0.082,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bios_password.TestSetBiosPass",
                "name": "test_set_bios_pass_missing_arg",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bios_password.TestSetBiosPass",
                "name": "test_set_bios_pass_ok",
                "time": 0.095,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bios_password.TestRemoveBiosPass",
                "name": "test_rm_bios_pass_missing_arg",
                "time": 0.094,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bios_password.TestRemoveBiosPass",
                "name": "test_rm_bios_pass_ok",
                "time": 0.108,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bios_password.TestChangeBiosPass",
                "name": "test_set_bios_pass_cmd_failed",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bios_password.TestChangeBiosPass",
                "name": "test_set_bios_pass_not_supported",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bios_password.TestSetBiosPassCheckJobStatus",
                "name": "test_sbp_check_job_bad_code",
                "time": 0.121,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bios_password.TestSetBiosPassCheckJobStatus",
                "name": "test_sbp_check_job_fail_msg",
                "time": 0.103,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_bios_password.TestSetBiosPassCheckJobStatus",
                "name": "test_sbp_check_job_unexpected_msg",
                "time": 0.116,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_boot_to.TestBootTo",
                "name": "test_boot_to",
                "time": 0.153,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_boot_to.TestBootTo",
                "name": "test_boot_to_bad_request",
                "time": 0.116,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_boot_to.TestBootTo",
                "name": "test_boot_to_no_match",
                "time": 0.097,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_boot_to.TestBootTo",
                "name": "test_boot_to_service_err_handler",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_boot_to.TestBootTo",
                "name": "test_boot_to_service_unavailable",
                "time": 0.089,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_boot_to_mac.TestBootToMac",
                "name": "test_boot_to_bad_mac",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_boot_to_mac.TestBootToMac",
                "name": "test_boot_to_good_mac",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_boot_to_type.TestBootTo",
                "name": "test_boot_to_bad_file",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_boot_to_type.TestBootTo",
                "name": "test_boot_to_bad_type",
                "time": 0.138,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_boot_to_type.TestBootTo",
                "name": "test_boot_to_no_file",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_boot_to_type.TestBootTo",
                "name": "test_boot_to_type_foreman",
                "time": 0.209,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_change_boot.TestChangeBoot",
                "name": "test_change_bad_type",
                "time": 0.153,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_change_boot.TestChangeBoot",
                "name": "test_change_boot_incorrect_path",
                "time": 0.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_change_boot.TestChangeBoot",
                "name": "test_change_boot_less_valid_devices",
                "time": 0.292,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_change_boot.TestChangeBoot",
                "name": "test_change_boot_patch_error",
                "time": 0.315,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_change_boot.TestChangeBoot",
                "name": "test_change_boot_pxe",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_change_boot.TestChangeBoot",
                "name": "test_change_no_interfaces",
                "time": 0.115,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_change_boot.TestChangeBoot",
                "name": "test_change_to_director",
                "time": 0.327,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_change_boot.TestChangeBoot",
                "name": "test_change_to_director_no_boot",
                "time": 0.247,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_change_boot.TestChangeBoot",
                "name": "test_change_to_foreman",
                "time": 0.181,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_change_boot.TestChangeBoot",
                "name": "test_change_to_same",
                "time": 0.129,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_change_boot.TestChangeBoot",
                "name": "test_change_to_uefi",
                "time": 0.124,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_change_boot.TestToggleDevice",
                "name": "test_toggle_bad_device",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_change_boot.TestToggleDevice",
                "name": "test_toggle_ok",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_check_boot.TestCheckBoot",
                "name": "test_check_boot_no_match",
                "time": 0.15,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_check_boot.TestCheckBoot",
                "name": "test_check_boot_with_interfaces_director",
                "time": 0.117,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_check_boot.TestCheckBoot",
                "name": "test_check_boot_with_interfaces_foreman",
                "time": 0.122,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_check_boot.TestCheckBoot",
                "name": "test_check_boot_without_interfaces",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestSingleHostExecution",
                "name": "test_no_host_error",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestSingleHostExecution",
                "name": "test_single_host_badfish_exception",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestSingleHostExecution",
                "name": "test_single_host_keyb_interrupt",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHostListExecution",
                "name": "test_host_list_badfish_exception",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHostListExecution",
                "name": "test_host_list_extras",
                "time": 0.132,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHostListExecution",
                "name": "test_host_list_keyb_interrupt",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestHostListExecution",
                "name": "test_host_list_successful",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestInitialization",
                "name": "test_find_systems_resource_not_found",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestInitialization",
                "name": "test_find_systems_resource_unauthorized",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestInitialization",
                "name": "test_validate_credentials_failed_coms",
                "time": 0.12,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_execution.TestInitialization",
                "name": "test_validate_credentials_unauthorized",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_firmware_inventory.TestFirmwareInventory",
                "name": "test_firmware_inventory",
                "time": 0.168,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_firmware_inventory.TestFirmwareInventory",
                "name": "test_firmware_inventory_json_contains_error",
                "time": 0.13,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_firmware_inventory.TestFirmwareInventory",
                "name": "test_firmware_inventory_json_invalid",
                "time": 0.093,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_firmware_inventory.TestFirmwareInventory",
                "name": "test_firmware_inventory_none_response",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts_file.TestHostsFile",
                "name": "test_hosts_bad",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts_file.TestHostsFile",
                "name": "test_hosts_empty",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts_file.TestHostsFile",
                "name": "test_hosts_good",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hosts_file.TestHostsFile",
                "name": "test_hosts_non_existent",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_job_queue.TestJobQueue",
                "name": "test_ls_jobs",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_job_queue.TestJobQueue",
                "name": "test_ls_jobs_empty",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_job_queue.TestClearJobs",
                "name": "test_clear_jobs",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_job_queue.TestClearJobs",
                "name": "test_clear_jobs_force",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_job_queue.TestClearJobs",
                "name": "test_clear_jobs_list",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_job_queue.TestClearJobs",
                "name": "test_clear_jobs_list_exception",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_job_queue.TestClearJobs",
                "name": "test_clear_jobs_unsupported",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_job_queue.TestDeleteJob",
                "name": "test_delete_supported_exception",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_job_queue.TestDeleteJob",
                "name": "test_delete_unsupported_exception",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_job_queue.TestCheckJob",
                "name": "test_check_job_bad",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_job_queue.TestCheckJob",
                "name": "test_check_job_error",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_job_queue.TestCheckJob",
                "name": "test_check_job_ok",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_interfaces.TestLsInterfaces",
                "name": "test_ls_interfaces_adapters",
                "time": 0.145,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_interfaces.TestLsInterfaces",
                "name": "test_ls_interfaces_ethernet",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_interfaces.TestLsInterfaces",
                "name": "test_ls_interfaces_ethernet_not_supported",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_interfaces.TestLsInterfaces",
                "name": "test_ls_interfaces_ethernet_value_error",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_interfaces.TestLsInterfaces",
                "name": "test_ls_interfaces_network_value_error",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_interfaces.TestLsInterfaces",
                "name": "test_ls_interfaces_none_supported",
                "time": 0.095,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_memory.TestLsMemory",
                "name": "test_ls_memory",
                "time": 0.147,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_memory.TestLsMemory",
                "name": "test_ls_memory_details_not_found",
                "time": 0.099,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_memory.TestLsMemory",
                "name": "test_ls_memory_details_value_error",
                "time": 0.097,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_memory.TestLsMemory",
                "name": "test_ls_memory_summary_proc_data_error",
                "time": 0.114,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_memory.TestLsMemory",
                "name": "test_ls_memory_summary_value_error",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_processors.TestLsProcessors",
                "name": "test_ls_processors",
                "time": 0.153,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_processors.TestLsProcessors",
                "name": "test_ls_processors_details_not_found",
                "time": 0.089,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_processors.TestLsProcessors",
                "name": "test_ls_processors_details_value_error",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_processors.TestLsProcessors",
                "name": "test_ls_processors_summary_proc_data_error",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_processors.TestLsProcessors",
                "name": "test_ls_processors_summary_value_error",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_serial.TestLsSerial",
                "name": "test_ls_serial_no_number",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_serial.TestLsSerial",
                "name": "test_ls_serial_serial_number",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_serial.TestLsSerial",
                "name": "test_ls_serial_service_tag",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_serial.TestLsSerial",
                "name": "test_ls_serial_something_wrong",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_serial.TestLsSerial",
                "name": "test_ls_serial_unsupported_root",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ls_serial.TestLsSerial",
                "name": "test_ls_serial_unsupported_systems",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_next_boot_pxe.TestNextBootPxe",
                "name": "test_next_boot_pxe_bad",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_next_boot_pxe.TestNextBootPxe",
                "name": "test_next_boot_pxe_ok",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_power.TestPowerOn",
                "name": "test_power_on_not_ok",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_power.TestPowerOn",
                "name": "test_power_on_ok",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_power.TestPowerOff",
                "name": "test_power_miss_state",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_power.TestPowerOff",
                "name": "test_power_off_already",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_power.TestPowerOff",
                "name": "test_power_off_no_state",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_power.TestPowerOff",
                "name": "test_power_off_none",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_power.TestPowerState",
                "name": "test_power_state",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_power.TestPowerState",
                "name": "test_power_state_bad_request",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_power.TestPowerState",
                "name": "test_power_state_empty_data",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_power.TestPowerState",
                "name": "test_power_state_none",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_power_consumed_watts.TestPowerConsumed",
                "name": "test_power_consumed",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_power_consumed_watts.TestPowerConsumed",
                "name": "test_power_consumed_404",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_power_consumed_watts.TestPowerConsumed",
                "name": "test_power_consumed_value_error",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reboot_only.TestRebootOnly",
                "name": "test_reboot_only_failed_grace_and_force",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reboot_only.TestRebootOnly",
                "name": "test_reboot_only_failed_send_reset",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reboot_only.TestRebootOnly",
                "name": "test_reboot_only_success",
                "time": 0.127,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reboot_only.TestRebootOnly",
                "name": "test_reboot_only_success_with_ng_rt",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reboot_only.TestRebootOnly",
                "name": "test_reboot_only_success_with_polling_down",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reset_bios.TestResetBios",
                "name": "test_reset_bios",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reset_bios.TestResetBios",
                "name": "test_reset_bios_fail",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reset_bmc.TestResetBMC",
                "name": "test_reset_bmc",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reset_bmc.TestResetBMC",
                "name": "test_reset_bmc_fail",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reset_bmc.TestResetBMC",
                "name": "test_reset_bmc_no_allowable_values",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reset_bmc.TestResetBMC",
                "name": "test_reset_bmc_wrong_vendor",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reset_idrac.TestResetIdrac",
                "name": "test_reset_idrac",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reset_idrac.TestResetIdrac",
                "name": "test_reset_idrac_fail",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_reset_idrac.TestResetIdrac",
                "name": "test_reset_idrac_wrong_vendor",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scp.TestGetSCPTargets",
                "name": "test_idrac_scp_unsupported_err",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scp.TestGetSCPTargets",
                "name": "test_something_wrong",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scp.TestGetSCPTargets",
                "name": "test_with_allowables_pass",
                "time": 0.109,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scp.TestGetSCPTargets",
                "name": "test_without_allowables_err",
                "time": 0.097,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scp.TestExportSCP",
                "name": "test_no_location",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scp.TestExportSCP",
                "name": "test_pass",
                "time": 0.142,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scp.TestExportSCP",
                "name": "test_status_fail",
                "time": 0.17,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scp.TestExportSCP",
                "name": "test_time_out",
                "time": 0.106,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scp.TestImportSCP",
                "name": "test_fail_state",
                "time": 0.115,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scp.TestImportSCP",
                "name": "test_invalid_filepath",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scp.TestImportSCP",
                "name": "test_no_location",
                "time": 0.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scp.TestImportSCP",
                "name": "test_pass",
                "time": 0.133,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scp.TestImportSCP",
                "name": "test_status_fail",
                "time": 0.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scp.TestImportSCP",
                "name": "test_time_out",
                "time": 0.139,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_screenshot.TestScreenshot",
                "name": "test_screenshot_ok",
                "time": 0.149,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_screenshot.TestScreenshotErrors",
                "name": "test_screenshot_bad_request",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_screenshot.TestScreenshotErrors",
                "name": "test_screenshot_false_ok",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_screenshot.TestScreenshotErrors",
                "name": "test_screenshot_not_supported",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sriov_mode.TestSriovModeEnable",
                "name": "test_enable_sriov_already",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sriov_mode.TestSriovModeEnable",
                "name": "test_enable_sriov_ok",
                "time": 0.152,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sriov_mode.TestSriovModeDisable",
                "name": "test_disable_sriov_already",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sriov_mode.TestSriovModeDisable",
                "name": "test_disable_sriov_ok",
                "time": 0.124,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sriov_mode.TestSriovModeGet",
                "name": "test_get_sriov_ok",
                "time": 0.099,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestCheckVirtualMedia",
                "name": "test_check_good_dell",
                "time": 0.183,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestCheckVirtualMedia",
                "name": "test_check_good_sm",
                "time": 0.109,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestCheckVirtualMedia",
                "name": "test_check_no_members_sm",
                "time": 0.092,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestCheckVirtualMedia",
                "name": "test_check_value_error_dell",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestCheckVirtualMedia",
                "name": "test_config_empty_dell",
                "time": 0.13,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestCheckVirtualMedia",
                "name": "test_config_empty_sm",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestCheckVirtualMedia",
                "name": "test_config_no_resource",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestMountVirtualMedia",
                "name": "test_mount_already_filled_dell",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestMountVirtualMedia",
                "name": "test_mount_good_dell",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestMountVirtualMedia",
                "name": "test_mount_good_sm",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestMountVirtualMedia",
                "name": "test_mount_not_allowed_dell",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestMountVirtualMedia",
                "name": "test_mount_something_wrong_dell",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestMountVirtualMedia",
                "name": "test_mount_something_wrong_sm",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestUnmountVirtualMedia",
                "name": "test_mount_something_wrong_dell",
                "time": 0.101,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestUnmountVirtualMedia",
                "name": "test_unmount_empty_dell",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestUnmountVirtualMedia",
                "name": "test_unmount_good_dell",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestUnmountVirtualMedia",
                "name": "test_unmount_good_sm",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestUnmountVirtualMedia",
                "name": "test_unmount_not_allowed_dell",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestUnmountVirtualMedia",
                "name": "test_unmount_something_wrong_sm",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestBootToVirtualMedia",
                "name": "test_fail_sm",
                "time": 0.21,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestBootToVirtualMedia",
                "name": "test_good_dell",
                "time": 0.122,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestBootToVirtualMedia",
                "name": "test_good_sm",
                "time": 0.11,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestBootToVirtualMedia",
                "name": "test_no_media",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestBootToVirtualMedia",
                "name": "test_optical_missing_dell",
                "time": 0.114,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestCheckRemoteImage",
                "name": "test_check_error",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestCheckRemoteImage",
                "name": "test_check_fail",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestCheckRemoteImage",
                "name": "test_check_good",
                "time": 0.1,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestCheckRemoteImage",
                "name": "test_os_deployment_not_supported",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestBootRemoteImage",
                "name": "test_boot_command_fail",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestBootRemoteImage",
                "name": "test_boot_good",
                "time": 0.098,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestBootRemoteImage",
                "name": "test_boot_os_deployment_not_supported",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestBootRemoteImage",
                "name": "test_boot_something_wrong",
                "time": 0.091,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestBootRemoteImage",
                "name": "test_boot_task_fail",
                "time": 0.095,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestBootRemoteImage",
                "name": "test_boot_wrong_path",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestDetachRemoteImage",
                "name": "test_detach_fail",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestDetachRemoteImage",
                "name": "test_detach_good",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_virtual_media.TestDetachRemoteImage",
                "name": "test_detach_os_deployment_not_supported",
                "time": 0.082,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[58e7a6a9-1732-4823-acb2-9219ac66c45c/run] \ud83d\ude80  Start image=crawlergpt:latest\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/redhat-performance-badfish] user=0 workdir=\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=master\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v2\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run] \u2b50 Run Main actions/checkout@master\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \u2705  Success - Main actions/checkout@master\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run] \u2b50 Run Main Setup Python\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udc33  docker cp src=/tmp/act-cache/d247d034-bd38-4905-906f-240d6fbc9076/act/actions-setup-python@master/ dst=/var/run/act/actions/actions-setup-python@master/\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@master/] user=0 workdir=\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@master/dist/index.js] user= workdir=\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udcac  ::debug::Semantic version spec of 3.9 is 3.9\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udcac  ::debug::isExplicit: \n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udcac  ::debug::explicit? false\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udcac  ::debug::explicit? true\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udcac  ::debug::explicit? true\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udcac  ::debug::explicit? true\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udcac  ::debug::explicit? true\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udcac  ::debug::explicit? true\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udcac  ::debug::explicit? true\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udcac  ::debug::evaluating 6 versions\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udcac  ::debug::matched: 3.9.6\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \u2699  ::set-output:: python-version=3.9.6\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Successfully setup CPython (3.9.6)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \u2753 add-matcher /run/act/actions/actions-setup-python@master/.github/python.json\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \u2705  Success - Main Setup Python\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run] \u2b50 Run Main Generate coverage report\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting pytest==6.2.5\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading pytest-6.2.5-py3-none-any.whl (280 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting pytest-cov==3.0.0\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading pytest_cov-3.0.0-py3-none-any.whl (20 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting codecov==2.1.13\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading codecov-2.1.13-py2.py3-none-any.whl (16 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting asynctest==0.13.0\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading asynctest-0.13.0-py3-none-any.whl (26 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting pyyaml>=3.10\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading PyYAML-6.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (661 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting aiohttp>=3.7.4\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading aiohttp-3.8.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.0 MB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting toml\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading toml-0.10.2-py2.py3-none-any.whl (16 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting packaging\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting py>=1.8.2\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting iniconfig\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting pluggy<2.0,>=0.12\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting attrs>=19.2.0\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting coverage[toml]>=5.2.1\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading coverage-7.2.7-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (228 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting requests>=2.7.9\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting async-timeout<5.0,>=4.0.0a3\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading async_timeout-4.0.2-py3-none-any.whl (5.8 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting frozenlist>=1.1.1\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading frozenlist-1.3.3-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (158 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting charset-normalizer<4.0,>=2.0\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading charset_normalizer-3.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (199 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting multidict<7.0,>=4.5\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading multidict-6.0.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (114 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting aiosignal>=1.1.2\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading aiosignal-1.3.1-py3-none-any.whl (7.6 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting yarl<2.0,>=1.0\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading yarl-1.9.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (269 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting tomli\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting certifi>=2017.4.17\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting idna<4,>=2.5\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Collecting urllib3<3,>=1.21.1\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Installing collected packages: urllib3, tomli, toml, py, pluggy, packaging, multidict, iniconfig, idna, frozenlist, coverage, charset-normalizer, certifi, attrs, yarl, requests, pytest, async-timeout, aiosignal, pyyaml, pytest-cov, codecov, asynctest, aiohttp\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Successfully installed aiohttp-3.8.4 aiosignal-1.3.1 async-timeout-4.0.2 asynctest-0.13.0 attrs-23.1.0 certifi-2023.5.7 charset-normalizer-3.1.0 codecov-2.1.13 coverage-7.2.7 frozenlist-1.3.3 idna-3.4 iniconfig-2.0.0 multidict-6.0.4 packaging-23.1 pluggy-1.2.0 py-1.11.0 pytest-6.2.5 pytest-cov-3.0.0 pyyaml-6.0 requests-2.31.0 toml-0.10.2 tomli-2.0.1 urllib3-2.0.3 yarl-1.9.2\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.9.6/x64/bin/python -m pip install --upgrade pip' command.\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | ============================= test session starts ==============================\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | platform linux -- Python 3.9.6, pytest-6.2.5, py-1.11.0, pluggy-1.2.0\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/redhat-performance-badfish, configfile: pytest.ini\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | plugins: cov-3.0.0\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | collected 185 items\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | \n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_bios_attributes.py ......                                     [  3%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_bios_password.py .........                                    [  8%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_boot_to.py .....                                              [ 10%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_boot_to_mac.py ..                                             [ 11%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_boot_to_type.py ....                                          [ 14%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_change_boot.py .............                                  [ 21%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_check_boot.py ....                                            [ 23%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_execution.py ...........                                      [ 29%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_firmware_inventory.py ....                                    [ 31%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_hosts_file.py ....                                            [ 33%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_job_queue.py ............                                     [ 40%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_ls_interfaces.py ......                                       [ 43%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_ls_memory.py .....                                            [ 45%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_ls_processors.py .....                                        [ 48%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_ls_serial.py ......                                           [ 51%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_next_boot_pxe.py ..                                           [ 52%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_power.py ..........                                           [ 58%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_power_consumed_watts.py ...                                   [ 60%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_reboot_only.py .....                                          [ 62%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_reset_bios.py ..                                              [ 63%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_reset_bmc.py ....                                             [ 65%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_reset_idrac.py ...                                            [ 67%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_scp.py ..............                                         [ 75%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_screenshot.py ....                                            [ 77%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_sriov_mode.py .....                                           [ 80%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | tests/test_virtual_media.py .....................................        [100%]\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | \n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/redhat-performance-badfish/report.xml -\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | \n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | ----------- coverage: platform linux, python 3.9.6-final-0 -----------\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | Coverage XML written to file coverage.xml\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | \n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | ============================= 185 passed in 19.68s =============================\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \u2705  Success - Main Generate coverage report\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run] \u2b50 Run Main Upload coverage to Codecov\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udc33  docker cp src=/tmp/act-cache/d247d034-bd38-4905-906f-240d6fbc9076/act/codecov-codecov-action@v2/ dst=/var/run/act/actions/codecov-codecov-action@v2/\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/codecov-codecov-action@v2/] user=0 workdir=\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v2/dist/index.js] user= workdir=\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | ==> linux OS detected\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | https://uploader.codecov.io/latest/linux/codecov.SHA256SUM\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | ==> SHASUM file signed by key id 806bb28aed779869\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | ==> Uploader SHASUM verified (0c9b79119b0d8dbe7aaf460dc3bd7c3094ceda06e5ae32b0d11a8ff56e2cc5c5  codecov)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | ==> Running version latest\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | ==> Running version v0.6.1\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [command]/run/act/actions/codecov-codecov-action@v2/dist/codecov -n codecov-umbrella -Q github-action-2.1.0 -e PYTHON -Z -f ./coverage.xml -F unittests -v\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.548Z] ['verbose'] Start of uploader: 1688215813548...\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.549Z] ['info'] \n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |      _____          _\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |     / ____|        | |\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |    | |     ___   __| | ___  ___ _____   __\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |    | |    / _ \\ / _` |/ _ \\/ __/ _ \\ \\ / /\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |    | |___| (_) | (_| |  __/ (_| (_) \\ V /\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |     \\_____\\___/ \\__,_|\\___|\\___\\___/ \\_/\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | \n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   Codecov report uploader 0.6.1\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.584Z] ['info'] => Project root located at: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/redhat-performance-badfish\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.586Z] ['info'] -> No token specified or token is empty\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.587Z] ['verbose'] Start of network processing...\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.587Z] ['verbose'] Searching for files in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/redhat-performance-badfish\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.798Z] ['verbose'] Skipping coveragepy, files already specified\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.798Z] ['info'] Searching for coverage files...\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.857Z] ['verbose'] Preparing to clean the following coverage paths: ./coverage.xml\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.857Z] ['info'] => Found 1 possible coverage files:\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |   ./coverage.xml\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.857Z] ['verbose'] End of network processing\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.857Z] ['info'] Processing ./coverage.xml...\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.868Z] ['info'] Detected GitHub Actions as the CI provider.\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.868Z] ['verbose'] -> Using the following env variables:\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.869Z] ['verbose']      GITHUB_ACTION: 3\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.869Z] ['verbose']      GITHUB_HEAD_REF: \n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.869Z] ['verbose']      GITHUB_REF: refs/heads/master\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.869Z] ['verbose']      GITHUB_REPOSITORY: redhat-performance/badfish\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.869Z] ['verbose']      GITHUB_RUN_ID: 1\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.869Z] ['verbose']      GITHUB_SERVER_URL: https://github.com\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.869Z] ['verbose']      GITHUB_SHA: 50092fa3b0b222cbc2b1511bb27c88843150b71d\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:13.869Z] ['verbose']      GITHUB_WORKFLOW: 58e7a6a9-1732-4823-acb2-9219ac66c45c\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:14.222Z] ['verbose'] Using the following upload parameters:\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:14.222Z] ['verbose'] branch\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:14.222Z] ['verbose'] build\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:14.222Z] ['verbose'] buildURL\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:14.223Z] ['verbose'] commit\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:14.223Z] ['verbose'] job\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:14.223Z] ['verbose'] pr\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:14.223Z] ['verbose'] service\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:14.223Z] ['verbose'] slug\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:14.223Z] ['verbose'] name\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:14.223Z] ['verbose'] tag\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:14.223Z] ['verbose'] flags\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:14.223Z] ['verbose'] parent\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:14.224Z] ['info'] Pinging Codecov: https://codecov.io/upload/v4?package=github-action-2.1.0-uploader-0.6.1&token=*******&branch=master&build=1&build_url=https%3A%2F%2Fgithub.com%2Fredhat-performance%2Fbadfish%2Factions%2Fruns%2F1&commit=50092fa3b0b222cbc2b1511bb27c88843150b71d&job=58e7a6a9-1732-4823-acb2-9219ac66c45c&pr=&service=github-actions&slug=redhat-performance%2Fbadfish&name=codecov-umbrella&tag=&flags=unittests&parent=\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:14.224Z] ['verbose'] Passed token was 0 characters long\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:14.224Z] ['verbose'] https://codecov.io/upload/v4?package=github-action-2.1.0-uploader-0.6.1&branch=master&build=1&build_url=https%3A%2F%2Fgithub.com%2Fredhat-performance%2Fbadfish%2Factions%2Fruns%2F1&commit=50092fa3b0b222cbc2b1511bb27c88843150b71d&job=58e7a6a9-1732-4823-acb2-9219ac66c45c&pr=&service=github-actions&slug=redhat-performance%2Fbadfish&name=codecov-umbrella&tag=&flags=unittests&parent=\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |         Content-Type: 'text/plain'\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |         Content-Encoding: 'gzip'\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |         X-Reduced-Redundancy: 'false'\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:14.667Z] ['error'] There was an error running the uploader: Error uploading to https://codecov.io: Error: There was an error fetching the storage URL during POST: 404 - {'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:14.668Z] ['verbose'] The error stack is: Error: Error uploading to https://codecov.io: Error: There was an error fetching the storage URL during POST: 404 - {'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |     at main (/snapshot/repo/dist/src/index.js)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   |     at processTicksAndRejections (node:internal/process/task_queues:96:5)\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   | [2023-07-01T12:50:14.668Z] ['verbose'] End of uploader: 1120 milliseconds\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \u2757  ::error::Codecov: Failed to properly upload: The process '/run/act/actions/codecov-codecov-action@v2/dist/codecov' failed with exit code 255\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run]   \u274c  Failure - Main Upload coverage to Codecov\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run] exitcode '1': failure\n[58e7a6a9-1732-4823-acb2-9219ac66c45c/run] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'run' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/redhat-performance-badfish/.github/workflows/codecov-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "58e7a6a9-1732-4823-acb2-9219ac66c45c",
        "build_tool": "pytest",
        "elapsed_time": 228.04694890975952
    }
}