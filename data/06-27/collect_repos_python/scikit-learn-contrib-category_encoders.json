{
    "repository": "scikit-learn-contrib/category_encoders",
    "stars": 2245,
    "language": "python",
    "size": 43773,
    "clone_url": "https://github.com/scikit-learn-contrib/category_encoders.git",
    "timestamp": "2023-07-01T10:38:41.586452Z",
    "clone_success": true,
    "number_of_actions": 4,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "unknown",
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.test_backward_difference.TestBackwardsEncoder",
                "name": "test_HandleMissingIndicator_HaveNoNan_ExpectSecondColumn",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_backward_difference.TestBackwardsEncoder",
                "name": "test_HandleMissingIndicator_NanInTrain_ExpectAsColumn",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_backward_difference.TestBackwardsEncoder",
                "name": "test_HandleMissingIndicator_NanNoNanInTrain_ExpectAsNanColumn",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_backward_difference.TestBackwardsEncoder",
                "name": "test_HandleUnknown_HaveNoUnknownInTrain_ExpectIndicatorInTest",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_backward_difference.TestBackwardsEncoder",
                "name": "test_HandleUnknown_HaveOnlyKnown_ExpectSecondColumn",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_backward_difference.TestBackwardsEncoder",
                "name": "test_backwards_difference_encoder_2StringCols_ExpectCorrectOrder",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_backward_difference.TestBackwardsEncoder",
                "name": "test_backwards_difference_encoder_2cols",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_backward_difference.TestBackwardsEncoder",
                "name": "test_backwards_difference_encoder_preserve_dimension_1",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_backward_difference.TestBackwardsEncoder",
                "name": "test_backwards_difference_encoder_preserve_dimension_2",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_backward_difference.TestBackwardsEncoder",
                "name": "test_backwards_difference_encoder_preserve_dimension_3",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_backward_difference.TestBackwardsEncoder",
                "name": "test_backwards_difference_encoder_preserve_dimension_4",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_basen.TestBaseNEncoder",
                "name": "test_HandleMissingIndicator_HaveNoNan_ExpectThirdColumn",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_basen.TestBaseNEncoder",
                "name": "test_HandleMissingIndicator_NanNoNanInTrain_ExpectAsNanColumn",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_basen.TestBaseNEncoder",
                "name": "test_HandleUnknown_HaveOnlyKnown_ExpectSecondColumn",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_basen.TestBaseNEncoder",
                "name": "test_HandleUnknown_HaveUnknown_ExpectIndicatorInTest",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_basen.TestBaseNEncoder",
                "name": "test_HaveIndicatorAndNanValue_ExpectNewColumn",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_basen.TestBaseNEncoder",
                "name": "test_fit_transform_have_base_2_expect_Correct_Encoding",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_basen.TestBaseNEncoder",
                "name": "test_inverse_transform_BothFieldsAreReturnNanWithNan_ExpectValueError",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_basen.TestBaseNEncoder",
                "name": "test_inverse_transform_HaveData_ExpectResultReturned",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_basen.TestBaseNEncoder",
                "name": "test_inverse_transform_HaveHandleMissingValueAndHandleUnknownReturnNan_ExpectBestInverse",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_basen.TestBaseNEncoder",
                "name": "test_inverse_transform_HaveMissingAndNoUnknown_ExpectInversed",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_basen.TestBaseNEncoder",
                "name": "test_inverse_transform_HaveNanInTrainAndHandleMissingReturnNan_ExpectReturnedWithNan",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_basen.TestBaseNEncoder",
                "name": "test_inverse_transform_HaveNanInTrainAndHandleMissingValue_ExpectReturnedWithNan",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_basen.TestBaseNEncoder",
                "name": "test_inverse_transform_HaveRegexMetacharactersInColumnName_ExpectInversed",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_basen.TestBaseNEncoder",
                "name": "test_num_cols",
                "time": 0.111,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_binary.TestBinaryEncoder",
                "name": "test_binary_bin",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_binary.TestBinaryEncoder",
                "name": "test_binary_dist",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cat_boost.TestCatBoostEncoder",
                "name": "test_catBoost",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cat_boost.TestCatBoostEncoder",
                "name": "test_catBoost_missing",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cat_boost.TestCatBoostEncoder",
                "name": "test_catBoost_reference",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_cat_boost.TestCatBoostEncoder",
                "name": "test_catBoost_reference2",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_count.TestCountEncoder",
                "name": "test_count_combine_min_nan_groups_bool",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_count.TestCountEncoder",
                "name": "test_count_combine_min_nan_groups_dict",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_count.TestCountEncoder",
                "name": "test_count_defaults",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_count.TestCountEncoder",
                "name": "test_count_handle_missing_dict",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_count.TestCountEncoder",
                "name": "test_count_handle_missing_string",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_count.TestCountEncoder",
                "name": "test_count_handle_unknown_dict",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_count.TestCountEncoder",
                "name": "test_count_handle_unknown_string",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_count.TestCountEncoder",
                "name": "test_count_min_group_name_dict",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_count.TestCountEncoder",
                "name": "test_count_min_group_name_string",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_count.TestCountEncoder",
                "name": "test_count_min_group_size_dict",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_count.TestCountEncoder",
                "name": "test_count_min_group_size_int",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_count.TestCountEncoder",
                "name": "test_count_normalize_bool",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_count.TestCountEncoder",
                "name": "test_count_normalize_dict",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_classification",
                "time": 22.101,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_cols",
                "time": 17.318,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_column_transformer",
                "time": 4.24,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_columns",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_deepcopy",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_drop_invariant",
                "time": 3.933,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_duplicate_index_value",
                "time": 1.707,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_error_handling",
                "time": 2.922,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_error_messages",
                "time": 1.178,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_get_feature_names_out",
                "time": 4.676,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_get_feature_names_out_after_transform",
                "time": 4.12,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_get_feature_names_out_drop_invariant",
                "time": 5.118,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_get_feature_names_out_not_set",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_handle_missing_error",
                "time": 0.266,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_handle_missing_error_2cols",
                "time": 0.399,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_handle_missing_return_nan_test",
                "time": 0.233,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_handle_missing_return_nan_train",
                "time": 0.224,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_handle_unknown_error",
                "time": 2.635,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_handle_unknown_return_nan",
                "time": 0.295,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_handle_unknown_value",
                "time": 0.26,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_ignored_columns_are_untouched",
                "time": 1.811,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_impact_encoders",
                "time": 4.876,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_inverse_numeric",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_inverse_numpy",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_inverse_transform",
                "time": 0.155,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_inverse_uninitialized",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_inverse_wrong_feature_count",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_inverse_wrong_feature_count_drop_invariant",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_metamorphic",
                "time": 2.256,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_mismatched_indexes",
                "time": 1.821,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_missing_values",
                "time": 1.374,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_noncontiguous_index",
                "time": 1.821,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_np",
                "time": 3.608,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_numbers_as_strings_with_numpy_output",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_pandas_index",
                "time": 0.247,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_preserve_column_order",
                "time": 1.765,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_preserve_names",
                "time": 1.748,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_sklearn_compliance",
                "time": 1.17,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_string_index",
                "time": 1.486,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_target_encoders",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_tmp_column_name",
                "time": 0.527,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_truncated_index",
                "time": 0.752,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_types",
                "time": 2.675,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoders.TestEncoders",
                "name": "test_unique_column_is_not_predictive",
                "time": 0.467,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_feature_names.TestEncodersFeaturesOut",
                "name": "test_feature_names_out",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_glmm.TestGLMMEncoder",
                "name": "test_binary",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_glmm.TestGLMMEncoder",
                "name": "test_continuous",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_gray.TestGrayEncoder",
                "name": "test_gray_code",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_gray.TestGrayEncoder",
                "name": "test_gray_mapping",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_gray.TestGrayEncoder",
                "name": "test_gray_sorting",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hashing.TestHashingEncoder",
                "name": "test_must_not_reset_index",
                "time": 1.509,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_hashing.TestHashingEncoder",
                "name": "test_transform_works_with_single_row_df",
                "time": 1.232,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helmert.TestHelmertEncoder",
                "name": "test_HandleMissingIndicator_HaveNoNan_ExpectSecondColumn",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helmert.TestHelmertEncoder",
                "name": "test_HandleMissingIndicator_NanInTrain_ExpectAsColumn",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helmert.TestHelmertEncoder",
                "name": "test_HandleMissingIndicator_NanNoNanInTrain_ExpectAsNanColumn",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helmert.TestHelmertEncoder",
                "name": "test_HandleUnknown_HaveNoUnknownInTrain_ExpectIndicatorInTest",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helmert.TestHelmertEncoder",
                "name": "test_HandleUnknown_HaveOnlyKnown_ExpectExtraColumn",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helmert.TestHelmertEncoder",
                "name": "test_helmert_2StringCols_ExpectCorrectOrder",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helmert.TestHelmertEncoder",
                "name": "test_helmert_2cols",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helmert.TestHelmertEncoder",
                "name": "test_helmert_preserve_dimension_1",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helmert.TestHelmertEncoder",
                "name": "test_helmert_preserve_dimension_2",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helmert.TestHelmertEncoder",
                "name": "test_helmert_preserve_dimension_3",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helmert.TestHelmertEncoder",
                "name": "test_helmert_preserve_dimension_4",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestHelpers",
                "name": "test_is_numeric_numpy",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestHelpers",
                "name": "test_is_numeric_pandas",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_helpers.TestHelpers",
                "name": "test_verify_raises_AssertionError_on_categories",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_james_stein.TestJamesSteinEncoder",
                "name": "test_continuous_target",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_james_stein.TestJamesSteinEncoder",
                "name": "test_continuous_target_beta",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_james_stein.TestJamesSteinEncoder",
                "name": "test_continuous_target_pooled",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_james_stein.TestJamesSteinEncoder",
                "name": "test_identifiers_large_binary",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_james_stein.TestJamesSteinEncoder",
                "name": "test_identifiers_small_binary",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_james_stein.TestJamesSteinEncoder",
                "name": "test_ids_large_beta",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_james_stein.TestJamesSteinEncoder",
                "name": "test_ids_large_pooled",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_james_stein.TestJamesSteinEncoder",
                "name": "test_ids_small_beta",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_james_stein.TestJamesSteinEncoder",
                "name": "test_ids_small_pooled",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_james_stein.TestJamesSteinEncoder",
                "name": "test_large_samples",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_james_stein.TestJamesSteinEncoder",
                "name": "test_large_samples_beta",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_james_stein.TestJamesSteinEncoder",
                "name": "test_large_samples_binary",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_james_stein.TestJamesSteinEncoder",
                "name": "test_large_samples_pooled",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_james_stein.TestJamesSteinEncoder",
                "name": "test_small_samples_binary",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_james_stein.TestJamesSteinEncoder",
                "name": "test_small_samples_independent",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_james_stein.TestJamesSteinEncoder",
                "name": "test_zero_variance",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_leave_one_out.TestLeaveOneOutEncoder",
                "name": "test_HandleMissingIsValueAndNanInTestAndNoTestTarget_ExpectMean",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_leave_one_out.TestLeaveOneOutEncoder",
                "name": "test_HandleMissingIsValueAndNanInTest_ExpectMean",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_leave_one_out.TestLeaveOneOutEncoder",
                "name": "test_HandleMissingIsValueAndNanInTrain_ExpectAtValueSet",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_leave_one_out.TestLeaveOneOutEncoder",
                "name": "test_HandleUnknownValue_HaveUnknownInTest_ExpectMean",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_leave_one_out.TestLeaveOneOutEncoder",
                "name": "test_leave_one_out",
                "time": 0.152,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_leave_one_out.TestLeaveOneOutEncoder",
                "name": "test_leave_one_out_categorical",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_leave_one_out.TestLeaveOneOutEncoder",
                "name": "test_leave_one_out_fit_callTwiceOnDifferentData_ExpectRefit",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_leave_one_out.TestLeaveOneOutEncoder",
                "name": "test_leave_one_out_unique",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_leave_one_out.TestLeaveOneOutEncoder",
                "name": "test_leave_one_out_values",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_m_estimate.TestMEstimateEncoder",
                "name": "test_reference_m0",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_m_estimate.TestMEstimateEncoder",
                "name": "test_reference_m1",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_HandleMissingError",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_HandleMissingIgnore",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_HandleMissingIgnore_ExpectMappingUsed",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_HandleMissingIndicator_HaveNoNan_ExpectSecondColumn",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_HandleMissingIndicator_NanInTrain_ExpectAsColumn",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_HandleMissingIndicator_NanNoNanInTrain_ExpectAsNanColumn",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_HandleMissingReturnNan",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_HandleUnknown_HaveNoUnknownInTrain_ExpectIndicatorInTest",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_HandleUnknown_HaveOnlyKnown_ExpectSecondColumn",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_fit_transform_HaveColumnAppearTwice_ExpectColumnsDeduped",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_fit_transform_HaveHandleUnknownIndicatorAndMissingValue_ExpectValueSet",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_fit_transform_HaveHandleUnknownIndicatorAndNoMissingValue_ExpectExtraColumn",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_fit_transform_HaveHandleUnknownValueAndSeenValues_ExpectMappingUsed",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_fit_transform_HaveHandleUnknownValueAndUnseenValues_ExpectAllZeroes",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_fit_transform_HaveMissingValuesAndUseCatNames_ExpectCorrectValue",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_inverse_transform_BothFieldsAreReturnNanWithNan_ExpectValueError",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_inverse_transform_HaveDedupedColumns_ExpectCorrectInverseTransform",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_inverse_transform_HaveHandleMissingValueAndHandleUnknownReturnNan_ExpectBestInverse",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_inverse_transform_HaveMissingAndNoUnknown_ExpectInversed",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_inverse_transform_HaveNanInTrainAndHandleMissingReturnNan_ExpectReturnedWithNan",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_inverse_transform_HaveNanInTrainAndHandleMissingValue_ExpectReturnedWithNan",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_inverse_transform_HaveNoCatNames_ExpectCorrectInverseTransform",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_one_hot.TestOneHotEncoderTestCase",
                "name": "test_one_hot",
                "time": 0.691,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ordinal.TestOrdinalEncoder",
                "name": "test_HaveNaNInTrain_ExpectCodedAsOne",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ordinal.TestOrdinalEncoder",
                "name": "test_HaveNegativeOneInTrain_ExpectCodedAsOne",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ordinal.TestOrdinalEncoder",
                "name": "test_HaveNoneAndNan_ExpectCodesAsOne",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ordinal.TestOrdinalEncoder",
                "name": "test_NoGaps",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ordinal.TestOrdinalEncoder",
                "name": "test_custom_mapping",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ordinal.TestOrdinalEncoder",
                "name": "test_handle_missing_have_nan_fit_time_expect_as_category",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ordinal.TestOrdinalEncoder",
                "name": "test_handle_missing_have_nan_transform_time_expect_negative_2",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ordinal.TestOrdinalEncoder",
                "name": "test_handle_unknown_have_new_value_expect_negative_1",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ordinal.TestOrdinalEncoder",
                "name": "test_handle_unknown_have_new_value_expect_negative_1_categorical",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ordinal.TestOrdinalEncoder",
                "name": "test_inverse_transform_BothFieldsAreReturnNanWithNan_ExpectValueError",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ordinal.TestOrdinalEncoder",
                "name": "test_inverse_transform_HaveHandleMissingValueAndHandleUnknownReturnNan_ExpectBestInverse",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ordinal.TestOrdinalEncoder",
                "name": "test_inverse_transform_HaveMissingAndNoUnknown_ExpectInversed",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ordinal.TestOrdinalEncoder",
                "name": "test_inverse_transform_HaveNanInTrainAndHandleMissingReturnNan_ExpectReturnedWithNan",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ordinal.TestOrdinalEncoder",
                "name": "test_inverse_transform_HaveNanInTrainAndHandleMissingValue_ExpectReturnedWithNan",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ordinal.TestOrdinalEncoder",
                "name": "test_inverse_transform_HaveUnknown_ExpectWarning",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ordinal.TestOrdinalEncoder",
                "name": "test_inverse_with_mapping",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ordinal.TestOrdinalEncoder",
                "name": "test_ordinal",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ordinal.TestOrdinalEncoder",
                "name": "test_ordinal_dist",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ordinal.TestOrdinalEncoder",
                "name": "test_pandas_categorical",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_ordinal.TestOrdinalEncoder",
                "name": "test_validate_mapping",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_polynomial.TestPolynomialEncoder",
                "name": "test_HandleMissingIndicator_HaveNoNan_ExpectSecondColumn",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_polynomial.TestPolynomialEncoder",
                "name": "test_HandleMissingIndicator_NanInTrain_ExpectAsColumn",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_polynomial.TestPolynomialEncoder",
                "name": "test_HandleMissingIndicator_NanNoNanInTrain_ExpectAsNanColumn",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_polynomial.TestPolynomialEncoder",
                "name": "test_HandleUnknown_HaveNoUnknownInTrain_ExpectIndicatorInTest",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_polynomial.TestPolynomialEncoder",
                "name": "test_HandleUnknown_HaveOnlyKnown_ExpectSecondColumn",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_polynomial.TestPolynomialEncoder",
                "name": "test_polynomial_encoder_2StringCols_ExpectCorrectOrder",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_polynomial.TestPolynomialEncoder",
                "name": "test_polynomial_encoder_2cols",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_polynomial.TestPolynomialEncoder",
                "name": "test_polynomial_encoder_preserve_dimension_1",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_polynomial.TestPolynomialEncoder",
                "name": "test_polynomial_encoder_preserve_dimension_2",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_polynomial.TestPolynomialEncoder",
                "name": "test_polynomial_encoder_preserve_dimension_3",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_polynomial.TestPolynomialEncoder",
                "name": "test_polynomial_encoder_preserve_dimension_4",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_quantile_encoder.TestQuantileEncoder",
                "name": "test_max_works",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_quantile_encoder.TestQuantileEncoder",
                "name": "test_median_works",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_quantile_encoder.TestQuantileEncoder",
                "name": "test_new_category",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_quantile_encoder.TestSummaryEncoder",
                "name": "test_several_quantiles",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_quantile_encoder.TestSummaryEncoder",
                "name": "test_several_quantiles_reverse",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rankhot.TestRankHotEncoder",
                "name": "test_categoricalNaming",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rankhot.TestRankHotEncoder",
                "name": "test_extraValue",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rankhot.TestRankHotEncoder",
                "name": "test_handleCategoricalValue",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rankhot.TestRankHotEncoder",
                "name": "test_handleNaNvalue",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rankhot.TestRankHotEncoder",
                "name": "test_invariant",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rankhot.TestRankHotEncoder",
                "name": "test_naCatagoricalValue",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rankhot.TestRankHotEncoder",
                "name": "test_order",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_rankhot.TestRankHotEncoder",
                "name": "test_rankhot",
                "time": 0.196,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sum_coding.TestSumEncoder",
                "name": "test_HandleMissingIndicator_HaveNoNan_ExpectSecondColumn",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sum_coding.TestSumEncoder",
                "name": "test_HandleMissingIndicator_NanInTrain_ExpectAsColumn",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sum_coding.TestSumEncoder",
                "name": "test_HandleMissingIndicator_NanNoNanInTrain_ExpectAsNanColumn",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sum_coding.TestSumEncoder",
                "name": "test_HandleUnknown_HaveNoUnknownInTrain_ExpectIndicatorInTest",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sum_coding.TestSumEncoder",
                "name": "test_HandleUnknown_HaveOnlyKnown_ExpectSecondColumn",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sum_coding.TestSumEncoder",
                "name": "test_sum_encoder_2StringCols_ExpectCorrectOrder",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sum_coding.TestSumEncoder",
                "name": "test_sum_encoder_2cols",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sum_coding.TestSumEncoder",
                "name": "test_sum_encoder_preserve_dimension_1",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sum_coding.TestSumEncoder",
                "name": "test_sum_encoder_preserve_dimension_2",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sum_coding.TestSumEncoder",
                "name": "test_sum_encoder_preserve_dimension_3",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_sum_coding.TestSumEncoder",
                "name": "test_sum_encoder_preserve_dimension_4",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_target_encoder.TestTargetEncoder",
                "name": "test_HandleMissingIsValueAndNanInTest_ExpectMean",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_target_encoder.TestTargetEncoder",
                "name": "test_HandleUnknownValue_HaveUnknownInTest_ExpectMean",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_target_encoder.TestTargetEncoder",
                "name": "test_hierarchical_part_named_cols",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_target_encoder.TestTargetEncoder",
                "name": "test_hierarchical_smoothing",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_target_encoder.TestTargetEncoder",
                "name": "test_hierarchical_smoothing_multi",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_target_encoder.TestTargetEncoder",
                "name": "test_hierarchy_columnwise_compass",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_target_encoder.TestTargetEncoder",
                "name": "test_hierarchy_columnwise_missing_level",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_target_encoder.TestTargetEncoder",
                "name": "test_hierarchy_columnwise_postcodes",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_target_encoder.TestTargetEncoder",
                "name": "test_hierarchy_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_target_encoder.TestTargetEncoder",
                "name": "test_hierarchy_mapping_cols_missing",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_target_encoder.TestTargetEncoder",
                "name": "test_hierarchy_mapping_no_cols",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_target_encoder.TestTargetEncoder",
                "name": "test_hierarchy_multi_level",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_target_encoder.TestTargetEncoder",
                "name": "test_hierarchy_no_mapping",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_target_encoder.TestTargetEncoder",
                "name": "test_hierarchy_pandas_index",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_target_encoder.TestTargetEncoder",
                "name": "test_hierarchy_single_mapping",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_target_encoder.TestTargetEncoder",
                "name": "test_target_encoder",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_target_encoder.TestTargetEncoder",
                "name": "test_target_encoder_fit_HaveConstructorSetSmoothingAndMinSamplesLeaf_ExpectUsedInFit",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_target_encoder.TestTargetEncoder",
                "name": "test_target_encoder_fit_transform_HaveCategoricalColumn_ExpectCorrectValueInResult",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_target_encoder.TestTargetEncoder",
                "name": "test_target_encoder_fit_transform_HaveConstructorSetSmoothingAndMinSamplesLeaf_ExpectCorrectValueInResult",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_target_encoder.TestTargetEncoder",
                "name": "test_target_encoder_fit_transform_HaveNanValue_ExpectCorrectValueInResult",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_target_encoder.TestTargetEncoder",
                "name": "test_trivial_hierarchy",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils.TestUtils",
                "name": "test_convert_input_vector",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils.TestUtils",
                "name": "test_convert_inputs",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_woe.TestWeightOfEvidenceEncoder",
                "name": "test_HandleMissingValue_HaveMissingInTest_ExpectEncodedWithZero",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_woe.TestWeightOfEvidenceEncoder",
                "name": "test_HandleMissingValue_HaveMissingInTrain_ExpectEncoded",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_woe.TestWeightOfEvidenceEncoder",
                "name": "test_HandleUnknownValue_HaveUnknown_ExpectEncodedWithZero",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_woe.TestWeightOfEvidenceEncoder",
                "name": "test_HaveArrays_ExpectCalculatedProperly",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_woe.TestWeightOfEvidenceEncoder",
                "name": "test_woe",
                "time": 0.412,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wrapper.TestMultiClassWrapper",
                "name": "test_invariance_to_data_types",
                "time": 0.138,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wrapper.TestMultiClassWrapper",
                "name": "test_refit_stateless",
                "time": 0.134,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wrapper.TestMultiClassWrapper",
                "name": "test_transform_only_selected",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wrapper.TestNestedCVWrapper",
                "name": "test_custom_cv",
                "time": 0.096,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wrapper.TestNestedCVWrapper",
                "name": "test_train_not_equal_to_valid",
                "time": 0.095,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[b4832906-6683-48e9-8ff8-958d4679c8cf/build] \ud83d\ude80  Start image=crawlergpt:latest\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/scikit-learn-contrib-category_encoders] user=0 workdir=\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build] \ud83e\uddea  Matrix: map[python-version:3.7]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build] \u2b50 Run Main actions/checkout@v2\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \u2705  Success - Main actions/checkout@v2\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build] \u2b50 Run Main Set up Python 3.7\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/05d575d4-61d3-42f8-876c-6cb20009e3a1/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udcac  ::debug::isExplicit: \n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udcac  ::debug::explicit? false\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udcac  ::debug::explicit? true\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udcac  ::debug::explicit? true\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udcac  ::debug::explicit? true\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udcac  ::debug::explicit? true\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udcac  ::debug::explicit? true\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udcac  ::debug::explicit? true\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udcac  ::debug::matched: 3.7.11\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Successfully setup CPython (3.7.11)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \u2705  Success - Main Set up Python 3.7\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \u2699  ::set-output:: python-version=3.7.11\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build] \u2b50 Run Main Install dependencies\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (21.2.4)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting pip\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting wheel\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading wheel-0.40.0-py3-none-any.whl (64 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Installing collected packages: wheel, pip\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Attempting uninstall: pip\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |     Found existing installation: pip 21.2.4\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |     Uninstalling pip-21.2.4:\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |       Successfully uninstalled pip-21.2.4\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Successfully installed pip-23.1.2 wheel-0.40.0\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting numpy>=1.14.0 (from -r requirements.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading numpy-1.21.6-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (15.7 MB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 15.7/15.7 MB 35.0 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting scikit-learn>=1.0.0 (from -r requirements.txt (line 2))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading scikit_learn-1.0.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (24.8 MB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 24.8/24.8 MB 23.1 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting scipy>=1.0.0 (from -r requirements.txt (line 3))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading scipy-1.7.3-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (38.1 MB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 38.1/38.1 MB 27.1 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting statsmodels>=0.9.0 (from -r requirements.txt (line 4))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading statsmodels-0.13.5-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (9.9 MB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 9.9/9.9 MB 49.8 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting pandas>=1.0.5 (from -r requirements.txt (line 5))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading pandas-1.3.5-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.3 MB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 11.3/11.3 MB 21.6 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting patsy>=0.5.1 (from -r requirements.txt (line 6))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading patsy-0.5.3-py2.py3-none-any.whl (233 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 233.8/233.8 kB 13.2 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting unittest2 (from -r requirements.txt (line 7))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading unittest2-1.1.0-py2.py3-none-any.whl (96 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 96.4/96.4 kB 11.0 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting importlib_resources (from -r requirements.txt (line 8))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading importlib_resources-5.12.0-py3-none-any.whl (36 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting joblib>=0.11 (from scikit-learn>=1.0.0->-r requirements.txt (line 2))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading joblib-1.3.1-py3-none-any.whl (301 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 302.0/302.0 kB 18.5 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting threadpoolctl>=2.0.0 (from scikit-learn>=1.0.0->-r requirements.txt (line 2))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading threadpoolctl-3.1.0-py3-none-any.whl (14 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting packaging>=21.3 (from statsmodels>=0.9.0->-r requirements.txt (line 4))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 5.6 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting python-dateutil>=2.7.3 (from pandas>=1.0.5->-r requirements.txt (line 5))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 247.7/247.7 kB 14.9 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting pytz>=2017.3 (from pandas>=1.0.5->-r requirements.txt (line 5))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 502.3/502.3 kB 17.9 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting six (from patsy>=0.5.1->-r requirements.txt (line 6))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting argparse (from unittest2->-r requirements.txt (line 7))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading argparse-1.4.0-py2.py3-none-any.whl (23 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting traceback2 (from unittest2->-r requirements.txt (line 7))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading traceback2-1.4.0-py2.py3-none-any.whl (16 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting zipp>=3.1.0 (from importlib_resources->-r requirements.txt (line 8))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting linecache2 (from traceback2->unittest2->-r requirements.txt (line 7))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading linecache2-1.0.0-py2.py3-none-any.whl (12 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Installing collected packages: pytz, linecache2, argparse, zipp, traceback2, threadpoolctl, six, packaging, numpy, joblib, unittest2, scipy, python-dateutil, patsy, importlib_resources, scikit-learn, pandas, statsmodels\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Successfully installed argparse-1.4.0 importlib_resources-5.12.0 joblib-1.3.1 linecache2-1.0.0 numpy-1.21.6 packaging-23.1 pandas-1.3.5 patsy-0.5.3 python-dateutil-2.8.2 pytz-2023.3 scikit-learn-1.0.2 scipy-1.7.3 six-1.16.0 statsmodels-0.13.5 threadpoolctl-3.1.0 traceback2-1.4.0 unittest2-1.1.0 zipp-3.15.0\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | \n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | [notice] To update, run: pip install --upgrade pip\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting sphinx (from -r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading sphinx-5.3.0-py3-none-any.whl (3.2 MB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.2/3.2 MB 12.7 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting sphinx_rtd_theme (from -r requirements-dev.txt (line 2))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading sphinx_rtd_theme-1.2.2-py2.py3-none-any.whl (2.8 MB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.8/2.8 MB 27.4 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting pytest (from -r requirements-dev.txt (line 3))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 323.6/323.6 kB 3.1 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting numpydoc (from -r requirements-dev.txt (line 4))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading numpydoc-1.5.0-py3-none-any.whl (52 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 52.4/52.4 kB 1.0 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting sphinxcontrib-applehelp (from sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading sphinxcontrib_applehelp-1.0.2-py2.py3-none-any.whl (121 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 121.2/121.2 kB 890.3 kB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting sphinxcontrib-devhelp (from sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading sphinxcontrib_devhelp-1.0.2-py2.py3-none-any.whl (84 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 84.7/84.7 kB 6.9 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting sphinxcontrib-jsmath (from sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading sphinxcontrib_jsmath-1.0.1-py2.py3-none-any.whl (5.1 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting sphinxcontrib-htmlhelp>=2.0.0 (from sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading sphinxcontrib_htmlhelp-2.0.0-py2.py3-none-any.whl (100 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 100.5/100.5 kB 3.8 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting sphinxcontrib-serializinghtml>=1.1.5 (from sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading sphinxcontrib_serializinghtml-1.1.5-py2.py3-none-any.whl (94 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 94.0/94.0 kB 11.0 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting sphinxcontrib-qthelp (from sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading sphinxcontrib_qthelp-1.0.3-py2.py3-none-any.whl (90 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 90.6/90.6 kB 2.0 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting Jinja2>=3.0 (from sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 133.1/133.1 kB 3.5 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting Pygments>=2.12 (from sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.1/1.1 MB 24.8 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting docutils<0.20,>=0.14 (from sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading docutils-0.19-py3-none-any.whl (570 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 570.5/570.5 kB 4.0 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting snowballstemmer>=2.0 (from sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading snowballstemmer-2.2.0-py2.py3-none-any.whl (93 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 93.0/93.0 kB 1.7 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting babel>=2.9 (from sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading Babel-2.12.1-py3-none-any.whl (10.1 MB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 10.1/10.1 MB 48.6 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting alabaster<0.8,>=0.7 (from sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading alabaster-0.7.13-py3-none-any.whl (13 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting imagesize>=1.3 (from sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading imagesize-1.4.1-py2.py3-none-any.whl (8.8 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting requests>=2.5.0 (from sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.6/62.6 kB 1.7 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Requirement already satisfied: packaging>=21.0 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from sphinx->-r requirements-dev.txt (line 1)) (23.1)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting importlib-metadata>=4.8 (from sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting docutils<0.20,>=0.14 (from sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading docutils-0.18.1-py2.py3-none-any.whl (570 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 570.0/570.0 kB 30.2 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting sphinxcontrib-jquery<5,>=4 (from sphinx_rtd_theme->-r requirements-dev.txt (line 2))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading sphinxcontrib_jquery-4.1-py2.py3-none-any.whl (121 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 121.1/121.1 kB 10.4 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting iniconfig (from pytest->-r requirements-dev.txt (line 3))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting pluggy<2.0,>=0.12 (from pytest->-r requirements-dev.txt (line 3))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting exceptiongroup>=1.0.0rc8 (from pytest->-r requirements-dev.txt (line 3))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting tomli>=1.0.0 (from pytest->-r requirements-dev.txt (line 3))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Requirement already satisfied: pytz>=2015.7 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from babel>=2.9->sphinx->-r requirements-dev.txt (line 1)) (2023.3)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Requirement already satisfied: zipp>=0.5 in /opt/hostedtoolcache/Python/3.7.11/x64/lib/python3.7/site-packages (from importlib-metadata>=4.8->sphinx->-r requirements-dev.txt (line 1)) (3.15.0)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting typing-extensions>=3.6.4 (from importlib-metadata>=4.8->sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading typing_extensions-4.7.0-py3-none-any.whl (33 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting MarkupSafe>=2.0 (from Jinja2>=3.0->sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading MarkupSafe-2.1.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting charset-normalizer<4,>=2 (from requests>=2.5.0->sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 171.0/171.0 kB 4.6 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting idna<4,>=2.5 (from requests>=2.5.0->sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 614.5 kB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting urllib3<3,>=1.21.1 (from requests>=2.5.0->sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 123.6/123.6 kB 1.5 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Collecting certifi>=2017.4.17 (from requests>=2.5.0->sphinx->-r requirements-dev.txt (line 1))\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 3.0 MB/s eta 0:00:00\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Installing collected packages: snowballstemmer, urllib3, typing-extensions, tomli, sphinxcontrib-serializinghtml, sphinxcontrib-qthelp, sphinxcontrib-jsmath, sphinxcontrib-htmlhelp, sphinxcontrib-devhelp, sphinxcontrib-applehelp, Pygments, MarkupSafe, iniconfig, imagesize, idna, exceptiongroup, docutils, charset-normalizer, certifi, babel, alabaster, requests, Jinja2, importlib-metadata, sphinx, pluggy, sphinxcontrib-jquery, pytest, numpydoc, sphinx_rtd_theme\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | Successfully installed Jinja2-3.1.2 MarkupSafe-2.1.3 Pygments-2.15.1 alabaster-0.7.13 babel-2.12.1 certifi-2023.5.7 charset-normalizer-3.1.0 docutils-0.18.1 exceptiongroup-1.1.1 idna-3.4 imagesize-1.4.1 importlib-metadata-6.7.0 iniconfig-2.0.0 numpydoc-1.5.0 pluggy-1.2.0 pytest-7.4.0 requests-2.31.0 snowballstemmer-2.2.0 sphinx-5.3.0 sphinx_rtd_theme-1.2.2 sphinxcontrib-applehelp-1.0.2 sphinxcontrib-devhelp-1.0.2 sphinxcontrib-htmlhelp-2.0.0 sphinxcontrib-jquery-4.1 sphinxcontrib-jsmath-1.0.1 sphinxcontrib-qthelp-1.0.3 sphinxcontrib-serializinghtml-1.1.5 tomli-2.0.1 typing-extensions-4.7.0 urllib3-2.0.3\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | \n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | [notice] A new release of pip is available: 20.1.1 -> 23.1.2\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | [notice] To update, run: pip install --upgrade pip\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \u2705  Success - Main Install dependencies\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build] \u2b50 Run Main Test with pytest\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | ============================= test session starts ==============================\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | platform linux -- Python 3.7.11, pytest-7.4.0, pluggy-1.2.0\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/scikit-learn-contrib-category_encoders\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | collected 248 items\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | \n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_backward_difference.py ...........                            [  4%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_basen.py ..............                                       [ 10%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_binary.py ..                                                  [ 10%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_cat_boost.py ....                                             [ 12%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_count.py .............                                        [ 17%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_encoders.py ............................................      [ 35%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_feature_names.py .                                            [ 35%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_glmm.py ..                                                    [ 36%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_gray.py ...                                                   [ 37%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_hashing.py ..                                                 [ 38%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_helmert.py ...........                                        [ 43%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_helpers.py ...                                                [ 44%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_james_stein.py ................                               [ 50%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_leave_one_out.py .........                                    [ 54%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_m_estimate.py ..                                              [ 55%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_one_hot.py .......................                            [ 64%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_ordinal.py ....................                               [ 72%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_polynomial.py ...........                                     [ 77%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_quantile_encoder.py .....                                     [ 79%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_rankhot.py ........                                           [ 82%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_sum_coding.py ...........                                     [ 86%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_target_encoder.py .....................                       [ 95%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_utils.py ..                                                   [ 95%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_woe.py .....                                                  [ 97%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_wrapper.py .....                                              [100%]\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | \n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | =============================== warnings summary ===============================\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_backward_difference.py: 11 warnings\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_encoders.py: 47 warnings\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_helmert.py: 11 warnings\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_polynomial.py: 11 warnings\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | tests/test_sum_coding.py: 11 warnings\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/scikit-learn-contrib-category_encoders/category_encoders/base_contrast_encoder.py:127: FutureWarning: Intercept column might not be added anymore in future releases (c.f. issue #370)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   |     category=FutureWarning)\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | \n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/scikit-learn-contrib-category_encoders/report.xml -\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   | ================= 248 passed, 91 warnings in 111.89s (0:01:51) =================\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \u2705  Success - Main Test with pytest\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build] \u2b50 Run Post Set up Python 3.7\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build]   \u2705  Success - Post Set up Python 3.7\n[b4832906-6683-48e9-8ff8-958d4679c8cf/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/scikit-learn-contrib-category_encoders/.github/workflows/test-suite-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "b4832906-6683-48e9-8ff8-958d4679c8cf",
        "build_tool": "pytest",
        "elapsed_time": 272.54816460609436
    }
}