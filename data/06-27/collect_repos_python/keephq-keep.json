{
    "repository": "keephq/keep",
    "stars": 1182,
    "language": "python",
    "size": 4194,
    "clone_url": "https://github.com/keephq/keep.git",
    "timestamp": "2023-06-28T18:45:02.907196Z",
    "clone_success": true,
    "number_of_actions": 3,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest",
        "unknown",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.test_conditions",
                "name": "test_condition_factory",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_conditions",
                "name": "test_assert_condition",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_conditions",
                "name": "test_threshold_condition_single_threshold_gt",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_conditions",
                "name": "test_threshold_condition_single_threshold_lt",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_conditions",
                "name": "test_threshold_condition_invalid_threshold_type",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_conditions",
                "name": "test_threshold_condition_invalid_threshold_value",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_conditions",
                "name": "test_threshold_condition_different_threshold_types",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_conditions",
                "name": "test_threshold_condition_one_value_is_precentage",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_conditions",
                "name": "test_threshold_condition_multithreshold",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_conditions",
                "name": "test_threshold_condition_multithreshold_not_equals",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_conditions",
                "name": "test_stddev_condition",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contextmanager",
                "name": "test_get_context_manager_id_no_starlette_context",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contextmanager",
                "name": "test_get_contexst_manager_id_with_starlette_context",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contextmanager",
                "name": "test_context_manager_set_alert_context",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contextmanager",
                "name": "test_context_manager_get_alert_id",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contextmanager",
                "name": "test_context_manager_get_full_context",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contextmanager",
                "name": "test_context_manager_set_for_each_context",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contextmanager",
                "name": "test_context_manager_set_condition_results",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contextmanager",
                "name": "test_context_manager_set_step_provider_parameters",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contextmanager",
                "name": "test_context_manager_set_step_context",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contextmanager",
                "name": "test_context_manager_delete_instance",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contextmanager",
                "name": "test_context_manager_set_last_alert_run",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contextmanager",
                "name": "test_context_manager_get_last_alert_run",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_contextmanager",
                "name": "test_context_manager_singleton",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_functions_diff[list with different items-given0-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_functions_diff[list with sequential duplicates-given1-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_functions_diff[list of case insensitive duplicates-given2-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_functions_diff[list of sequential int duplicates-given3-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_functions_diff[tulple of different items-given4-True]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_functions_diff[sets should always be False if there are no differences-given5-False]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_functions_diff[sets should be True if there are differences-given6-True]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_functions_diff[a string is an iterator in Python-string-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_functions_diff[a string with repeating letters-gg-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_functions_diff[list with same False boolean-given9-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_functions_diff[list with same True boolean-given10-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_functions_diff[list with mixed booleans-given11-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_functions_diff[lists with strings and boolean True-given12-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_functions_diff[empty list-given13-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_keep_len_function",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_keep_all_function",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_keep_diff_function",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_keep_split_function",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_keep_strip_function",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_keep_first_function",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_keep_utcnow_function",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_keep_to_utc_function",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_keep_datetime_compare_function",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_functions",
                "name": "test_keep_encode_function",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser",
                "name": "test_parse_with_nonexistent_file",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser",
                "name": "test_parse_with_nonexistent_url",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser",
                "name": "test_parse_sanity_check",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_parser",
                "name": "test_parse_with_alert_source_with_no_providers_file",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests] \ud83d\ude80  Start image=crawlergpt:latest\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/keephq-keep] user=0 workdir=\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests] \u2b50 Run Pre Install Poetry\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2705  Success - Pre Install Poetry\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests] \u2b50 Run Main actions/checkout@v2\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2705  Success - Main actions/checkout@v2\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests] \u2b50 Run Main actions/setup-python@v4\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/6f0322d5-a392-40ae-9105-258e95469483/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2753  ::group::Installed versions\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::Semantic version spec of 3.11 is 3.11\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::isExplicit: \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::explicit? false\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::explicit? true\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::explicit? true\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::explicit? true\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::explicit? true\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::explicit? true\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::explicit? true\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::evaluating 6 versions\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::match not found\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Version 3.11 was not found in the local cache\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::Getting manifest from actions/python-versions@main\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::set auth\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::check 3.12.0-beta.3 satisfies 3.11\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::check 3.12.0-beta.2 satisfies 3.11\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::check 3.12.0-beta.1 satisfies 3.11\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.7 satisfies 3.11\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.6 satisfies 3.11\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.5 satisfies 3.11\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.4 satisfies 3.11\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.3 satisfies 3.11\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.2 satisfies 3.11\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::check 3.12.0-alpha.1 satisfies 3.11\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::check 3.11.4 satisfies 3.11\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::arm64===x64 && darwin===linux\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::matched 3.11.4\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Version 3.11 is available for downloading\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Download from \"https://github.com/actions/python-versions/releases/download/3.11.4-5199054971/python-3.11.4-linux-20.04-x64.tar.gz\"\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/python-versions/releases/download/3.11.4-5199054971/python-3.11.4-linux-20.04-x64.tar.gz\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::Destination /tmp/10f9109e-4f3e-4d3e-95bd-99d69482301b\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::set auth\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::download complete\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Extract downloaded archive\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::Checking tar --version\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/faaa3b59-8b53-418b-b379-59db69a9cf06 -f /tmp/10f9109e-4f3e-4d3e-95bd-99d69482301b\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Execute installation script\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Check if Python hostedtoolcache folder exist...\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Create Python 3.11.4 folder\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Copy Python binaries to hostedtoolcache folder\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Create additional symlinks (Required for the UsePythonVersion Azure Pipelines task and the setup-python GitHub Action)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Upgrading pip...\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Looking in links: /tmp/tmpjqp5v66n\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (65.5.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (23.1.2)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Collecting pip\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 17.0 MB/s eta 0:00:00\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Installing collected packages: pip\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Successfully installed pip-23.1.2\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Create complete file\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::isExplicit: \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::explicit? false\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::explicit? true\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::isExplicit: 3.11.4\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::explicit? true\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::explicit? true\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::explicit? true\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::explicit? true\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::explicit? true\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::explicit? true\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::evaluating 7 versions\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::matched: 3.11.4\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.11.4/x64\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udcac  ::debug::Found tool in cache Python 3.11.4 x64\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Successfully set up CPython (3.11.4)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2753  ::endgroup::\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2705  Success - Main actions/setup-python@v4\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.11.4/x64/lib\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.11.4/x64\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.11.4/x64/lib/pkgconfig\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.11.4/x64\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.11.4/x64\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.11.4/x64\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2699  ::set-output:: python-version=3.11.4\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.11.4/x64/bin/python\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.11.4/x64\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.11.4/x64/bin\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests] \u2b50 Run Main Install Poetry\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/6f0322d5-a392-40ae-9105-258e95469483/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests] \u2b50 Run Main Install and configure Poetry\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Retrieving Poetry metadata\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | # Welcome to Poetry!\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | This will download and install the latest version of Poetry,\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | a dependency and package manager for Python.\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | /home/runneradmin/.local/bin\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | You can uninstall at any time by executing this script with the --uninstall option,\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | and these changes will be reverted.\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Installing Poetry (1.5.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Installing Poetry (1.5.1): Creating environment\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Installing Poetry (1.5.1): Installing Poetry\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Installing Poetry (1.5.1): Creating script\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Installing Poetry (1.5.1): Done\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Poetry (1.5.1) is installed now. Great!\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | environment variable.\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | You can test that everything is set up by executing:\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | `poetry --version`\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \u001b[33mDone \u2705\u001b[0m\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2705  Success - Main Install and configure Poetry\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2705  Success - Main Install Poetry\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests] \u2b50 Run Main Install dependencies using poetry\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Creating virtualenv keep-uSFoyB3N-py3.11 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Updating dependencies\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Resolving dependencies...\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Package operations: 146 installs, 1 update, 0 removals\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing pyasn1 (0.5.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing wrapt (1.15.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing zipp (3.15.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing cachetools (5.3.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing certifi (2023.5.7)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing deprecated (1.2.14)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing charset-normalizer (2.1.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing idna (3.4)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing importlib-metadata (6.0.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing packaging (23.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing protobuf (3.20.3)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing pyasn1-modules (0.3.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing pycparser (2.21)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing rsa (4.9)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Updating setuptools (67.8.0 -> 68.0.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing six (1.16.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing sniffio (1.3.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing urllib3 (1.26.16)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing anyio (3.7.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing cffi (1.15.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing frozenlist (1.3.3)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing googleapis-common-protos (1.59.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing grpcio (1.56.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing h11 (0.14.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing google-auth (2.21.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing multidict (6.0.4)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing marshmallow (3.19.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing opentelemetry-api (1.18.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing jmespath (1.0.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing requests (2.31.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing python-dateutil (2.8.2)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing mypy-extensions (1.0.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing typing-extensions (4.6.3)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing aiosignal (1.3.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing asgiref (3.7.2)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing async-timeout (4.0.2)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing attrs (23.1.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing botocore (1.29.162)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing asn1crypto (1.5.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing cryptography (40.0.2)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing filelock (3.12.2)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing distlib (0.3.6)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing grpcio-status (1.48.2)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing httpcore (0.17.2)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing marshmallow-enum (1.5.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing opentelemetry-instrumentation (0.39b0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing greenlet (2.0.2)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing opentelemetry-util-http (0.39b0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing google-api-core (2.11.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing ruamel-yaml-clib (0.2.7)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing typing-inspect (0.9.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing opentelemetry-semantic-conventions (0.39b0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing platformdirs (3.8.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing pydantic (1.10.9)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing numpy (1.25.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing yarl (1.9.2)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing google-crc32c (1.5.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing aiohttp (3.8.4)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing backoff (2.2.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing cfgv (3.3.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing bcrypt (4.0.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing dataclasses-json (0.5.8)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing decorator (5.1.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing click (8.1.3)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing google-cloud-core (2.3.2)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing grpc-google-iam-v1 (0.12.6)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing elastic-transport (8.4.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing identify (2.5.24)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing iniconfig (2.0.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing httpx (0.24.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing google-resumable-media (2.5.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing nodeenv (1.8.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing ecdsa (0.18.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing mccabe (0.7.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing numexpr (2.8.4)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing openapi-schema-pydantic (1.2.4)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing oscrypto (1.3.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing pluggy (1.2.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing pycodestyle (2.10.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing pyflakes (3.0.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing pyjwt (2.7.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing pyopenssl (23.2.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing pyyaml (6.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing ruamel-yaml (0.17.32)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing s3transfer (0.6.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing proto-plus (1.22.3)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing sqlalchemy2-stubs (0.0.2a34)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing opentelemetry-instrumentation-asgi (0.39b0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing pynacl (1.5.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing pytz (2023.3)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing tqdm (4.65.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing monotonic (1.6)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing sqlalchemy (1.4.41)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing starlette (0.25.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing regex (2023.6.3)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing pathspec (0.11.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing tenacity (8.2.2)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing pycryptodomex (3.18.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing virtualenv (20.23.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing astunparse (1.6.3)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing autopep8 (2.0.2)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing boto3 (1.26.162)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing black (23.3.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing cloud-sql-python-connector (1.2.4)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing chevron (0.14.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing coverage (7.2.7)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing datefinder (0.7.3)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing datadog-api-client (2.14.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing flake8 (6.0.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing google-cloud-bigquery (3.11.3)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing google-cloud-secret-manager (2.16.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing isort (5.12.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing jwcrypto (1.5.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing logmine (0.4.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing mysql-connector-python (8.0.33)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing grafana-api-sdk (0.1.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing elasticsearch (8.8.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing langchain (0.0.178)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing opentelemetry-instrumentation-logging (0.39b0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing fastapi (0.92.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing nest-asyncio (1.5.6)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing openai (0.27.8)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing pre-commit (3.3.3)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing opentelemetry-instrumentation-fastapi (0.39b0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing pygithub (1.59.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing pyngrok (6.0.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing python-dotenv (0.21.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing python-jose (3.3.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing python-json-logger (2.0.7)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing sentry-sdk (1.26.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing opsgenie-sdk (2.1.5)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing paramiko (3.2.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing uvicorn (0.20.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing websocket-client (1.6.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing yamllint (1.32.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing psycopg2-binary (2.9.6)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing pytest (7.4.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing opentelemetry-sdk (1.18.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing snowflake-connector-python (3.0.3)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing starlette-context (0.3.6)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing posthog (3.0.1)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing pymysql (1.1.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing python-telegram-bot (20.3)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing validators (0.20.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing opentelemetry-propagator-gcp (1.5.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing pre-commit-hooks (4.4.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   |   \u2022 Installing sqlmodel (0.0.8)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Writing lock file\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Installing the current project: keep (0.1.0)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2705  Success - Main Install dependencies using poetry\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests] \u2b50 Run Main Run unit tests and report coverage\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | ============================= test session starts ==============================\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/keephq-keep\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | plugins: anyio-3.7.0\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | collected 52 items\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | tests/test_conditions.py ...........                                     [ 21%]\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | tests/test_contextmanager.py .............                               [ 46%]\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | tests/test_functions.py ........................                         [ 92%]\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | tests/test_parser.py ...X                                                [100%]\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | \n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/keephq-keep/report.xml -\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | ======================== 51 passed, 1 xpassed in 4.17s =========================\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2705  Success - Main Run unit tests and report coverage\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests] \u2b50 Run Main Convert coverage results to JSON (for CodeCov support)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   | Wrote JSON report to coverage.json\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \u2705  Success - Main Convert coverage results to JSON (for CodeCov support)\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests] \u2b50 Run Main Upload coverage reports to Codecov\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/6f0322d5-a392-40ae-9105-258e95469483/act/codecov-codecov-action@v3/ dst=/var/run/act/actions/codecov-codecov-action@v3/\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/codecov-codecov-action@v3/] user=0 workdir=\n[6a0cbc17-db90-468d-9ef9-9e528d6638dc/tests] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/images/crawlergpt:latest/json\": context canceled\n",
        "stderr": "panic: runtime error: invalid memory address or nil pointer dereference\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x48 pc=0xaae2e2]\n\ngoroutine 143 [running]:\ngithub.com/nektos/act/pkg/container.(*containerReference).extractFromImageEnv.func1({0xe09450, 0xc006ab8840})\n\t/home/runner/work/act/act/pkg/container/docker_run.go:471 +0x1e2\ngithub.com/nektos/act/pkg/common.Executor.IfNot.func1({0xe09450, 0xc006ab8840})\n\t/home/runner/work/act/act/pkg/common/executor.go:159 +0x56\ngithub.com/nektos/act/pkg/runner.(*RunContext).ApplyExtraPath(0xc000250100, {0xe09450, 0xc006ab8840}, 0xc0003983f8)\n\t/home/runner/work/act/act/pkg/runner/run_context.go:333 +0x209\ngithub.com/nektos/act/pkg/runner.runActionImpl.func1({0xe09450, 0xc006ab8840})\n\t/home/runner/work/act/act/pkg/runner/action.go:159 +0x71d\ngithub.com/nektos/act/pkg/runner.(*stepActionRemote).main.func1({0xe09450, 0xc006ab8840})\n\t/home/runner/work/act/act/pkg/runner/step_action_remote.go:126 +0x3cf\ngithub.com/nektos/act/pkg/runner.runStepExecutor.func1({0xe09450, 0xc006ab8840})\n\t/home/runner/work/act/act/pkg/runner/step.go:141 +0xd89\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xe09450, 0xc006ab8840})\n\t/home/runner/work/act/act/pkg/common/executor.go:141 +0x15b\ngithub.com/nektos/act/pkg/runner.newJobExecutor.func4({0xe09450, 0xc006ab8840})\n\t/home/runner/work/act/act/pkg/runner/job_executor.go:77 +0x5a\ngithub.com/nektos/act/pkg/runner.useStepLogger.func1({0xe09450, 0xc0002fa3c0})\n\t/home/runner/work/act/act/pkg/runner/job_executor.go:191 +0x39e\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xe09450, 0xc0002fa3c0})\n\t/home/runner/work/act/act/pkg/common/executor.go:141 +0x15b\ngithub.com/nektos/act/pkg/common.Executor.Finally.func1({0xe09450, 0xc0002fa3c0})\n\t/home/runner/work/act/act/pkg/common/executor.go:175 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Finally.func1({0xe09450, 0xc0002fa3c0})\n\t/home/runner/work/act/act/pkg/common/executor.go:175 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Finally.func1({0xe09450, 0xc0002fa3c0})\n\t/home/runner/work/act/act/pkg/common/executor.go:175 +0x34\ngithub.com/nektos/act/pkg/common.Executor.Then.func1({0xe09450, 0xc0002fa3c0})\n\t/home/runner/work/act/act/pkg/common/executor.go:141 +0x15b\ngithub.com/nektos/act/pkg/runner.(*RunContext).Executor.func1({0xe09450, 0xc0002fa3c0})\n\t/home/runner/work/act/act/pkg/runner/run_context.go:472 +0x58\ngithub.com/nektos/act/pkg/runner.(*runnerImpl).NewPlanExecutor.func1.1({0xe09450, 0xc000248c60})\n\t/home/runner/work/act/act/pkg/runner/runner.go:150 +0x193\ngithub.com/nektos/act/pkg/common.NewParallelExecutor.func1.1(0xc000446690?, 0x0?)\n\t/home/runner/work/act/act/pkg/common/executor.go:100 +0x5c\ncreated by github.com/nektos/act/pkg/common.NewParallelExecutor.func1\n\t/home/runner/work/act/act/pkg/common/executor.go:98 +0x89\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/keephq-keep/.github/workflows/test-pr-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 600.0129370689392
    }
}