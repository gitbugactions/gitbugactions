{
    "repository": "suminb/finance",
    "stars": 129,
    "language": "python",
    "size": 3383,
    "clone_url": "https://github.com/suminb/finance.git",
    "timestamp": "2023-06-28T10:43:28.387095Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.test___main__",
                "name": "test_drop_all",
                "time": 0.003,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test___main__",
                "name": "test_create_all",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test___main__",
                "name": "test_insert_test_data_all",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "unconditional skip",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test___main__",
                "name": "test_import_sp500_records",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "unconditional skip",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test___main__",
                "name": "test_import_fund",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "It appears Kofia API has been changed.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test___main__",
                "name": "test_import_non_existing_fund",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test___main__",
                "name": "test_fetch_stock_values",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Yahoo Finance provider is scheduled to be deprecated.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test___main__",
                "name": "test_import_stock_values",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test___main__",
                "name": "test_import_stock_records",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    },
                    {
                        "result": "Error",
                        "message": "failed on teardown with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_alembic",
                "name": "test_upgrade",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "unconditional skip",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fetchers",
                "name": "test_fetch_stock_values",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "unconditional skip",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_fetchers",
                "name": "test_assetvalue_fetcher",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "unconditional skip",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_create_model",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_stock_asset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_get_asset_by_fund_code",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_get_asset_by_fund_code_non_existing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_get_asset_by_symbol",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_get_asset_by_symbol_non_existing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_get_asset_by_isin",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_get_asset_by_isin_non_existing",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_balance",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_portfolio",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "unconditional skip",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_portfolio_balance",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "unconditional skip",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_transaction",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_records",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_record_created_at",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_net_worth_without_asset_value",
                "time": 0.003,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_account_net_worth_1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_account_net_worth_2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_account_net_worth_3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_account_net_worth_4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_granularity_enum",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_valid_granularity",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_invalid_granularity",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_transaction_state_enum",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_models",
                "name": "test_record_type_enum",
                "time": 0.004,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    },
                    {
                        "result": "Error",
                        "message": "failed on teardown with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_providers",
                "name": "test_decimal_records",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_providers",
                "name": "test_kofia_request_url",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_providers",
                "name": "test_kofia_request_headers",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_providers",
                "name": "test_kofia_get_request_body",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_providers",
                "name": "test_kofia_fetch_data",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Kofia API needs to be investigated.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_providers",
                "name": "test_dart_fetch_data",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "unconditional skip",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_providers",
                "name": "test_dart_fetch_data_with_invalid_code",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "unconditional skip",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_providers",
                "name": "test_yahoo_provider[1min]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "unconditional skip",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_providers",
                "name": "test_yahoo_provider[1day]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "unconditional skip",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_providers",
                "name": "test_yahoo_provider_with_invalid_symbol",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "unconditional skip",
                        "type": "pytest.skip"
                    },
                    {
                        "result": "Error",
                        "message": "failed on teardown with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_readers",
                "name": "test_load_schema",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_readers",
                "name": "test_read_asset_values[False]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "unconditional skip",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_readers",
                "name": "test_read_asset_values[True]",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "unconditional skip",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_readers",
                "name": "test_read_records",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_readers",
                "name": "test_read_records_as_dataframe",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    },
                    {
                        "result": "Error",
                        "message": "failed on teardown with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_date_range",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_date_range_relative[0-0-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_date_range_relative[-1-0-1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_date_range_relative[-10-0-10]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_date_range_relative[-1--1-0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_date_range_relative[-10--5-5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_date_range_exceptions[2016-01-01-2015-01-01]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_date_range_exceptions[0--1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_date_to_datetime",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_dict_reader",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_extract_numbers",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_insert_stock_record",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_parse_date",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_parse_datetime",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_parse_decimal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_parse_int",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_parse_stock_code[A145210-145210]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_parse_stock_code[051500-051500]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_parse_stock_code[-None]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_parse_stock_records",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_utils",
                "name": "test_serialize_datetime",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    },
                    {
                        "result": "Error",
                        "message": "failed on teardown with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_dart",
                "name": "test_search_corporations",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_dart",
                "name": "test_get_listed_corporations",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_dart",
                "name": "test_financial_statement_request",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "unconditional skip",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_dart",
                "name": "test_financial_statement_parser",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_dart",
                "name": "test_official_filing_request",
                "time": 0.037,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "unconditional skip",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_dart",
                "name": "test_official_filing_parser",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    },
                    {
                        "result": "Error",
                        "message": "failed on teardown with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_profile_providers",
                "name": "test_invalid_provider",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_profile_providers",
                "name": "test_naver_profile",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_profile_providers",
                "name": "test_fetch_naver_profile",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    },
                    {
                        "result": "Error",
                        "message": "failed on teardown with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_rapidapi_yahoo",
                "name": "test_cache",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_rapidapi_yahoo",
                "name": "test_financials",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_rapidapi_yahoo",
                "name": "test_profile",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_rapidapi_yahoo",
                "name": "test_historical_data",
                "time": 0.001,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.ext.test_rapidapi_yahoo",
                "name": "test_malformed_historical_data",
                "time": 0.002,
                "results": [
                    {
                        "result": "Error",
                        "message": "failed on setup with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    },
                    {
                        "result": "Error",
                        "message": "failed on teardown with \"sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n\tIs the server running on that host and accepting TCP/IP connections?\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)\"",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build] \ud83d\ude80  Start image=crawlergpt:latest\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/suminb-finance] user=0 workdir=\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build] \ud83e\uddea  Matrix: map[python-version:3.11]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build] \u2b50 Run Main actions/checkout@v2\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \u2705  Success - Main actions/checkout@v2\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build] \u2b50 Run Main Set up Python 3.11\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/2d839193-deb1-493f-8529-201963cd12e5/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.11 is 3.11\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::isExplicit: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::explicit? false\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::explicit? true\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::explicit? true\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::explicit? true\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::explicit? true\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::explicit? true\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::explicit? true\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::match not found\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Version 3.11 was not found in the local cache\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::set auth\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::check 3.12.0-beta.3 satisfies 3.11\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::check 3.12.0-beta.2 satisfies 3.11\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::check 3.12.0-beta.1 satisfies 3.11\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::check 3.12.0-alpha.7 satisfies 3.11\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::check 3.12.0-alpha.6 satisfies 3.11\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::check 3.12.0-alpha.5 satisfies 3.11\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::check 3.12.0-alpha.4 satisfies 3.11\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::check 3.12.0-alpha.3 satisfies 3.11\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::check 3.12.0-alpha.2 satisfies 3.11\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::check 3.12.0-alpha.1 satisfies 3.11\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::check 3.11.4 satisfies 3.11\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::arm64===x64 && darwin===linux\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::matched 3.11.4\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Version 3.11 is available for downloading\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Download from \"https://github.com/actions/python-versions/releases/download/3.11.4-5199054971/python-3.11.4-linux-20.04-x64.tar.gz\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/python-versions/releases/download/3.11.4-5199054971/python-3.11.4-linux-20.04-x64.tar.gz\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::Destination /tmp/bbdff1f4-d03e-42c5-91d5-7f68676341a0\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::set auth\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::download complete\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Extract downloaded archive\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::Checking tar --version\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/873c7425-fa0c-42f8-9165-f7b64264ce70 -f /tmp/bbdff1f4-d03e-42c5-91d5-7f68676341a0\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Execute installation script\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Check if Python hostedtoolcache folder exist...\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Create Python 3.11.4 folder\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Copy Python binaries to hostedtoolcache folder\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Create additional symlinks (Required for the UsePythonVersion Azure Pipelines task and the setup-python GitHub Action)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Upgrading pip...\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Looking in links: /tmp/tmp_s_pbvmu\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (65.5.0)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (23.1.2)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting pip\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 36.0 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Installing collected packages: pip\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Successfully installed pip-23.1.2\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Create complete file\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::isExplicit: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::explicit? false\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::explicit? true\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::isExplicit: 3.11.4\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::explicit? true\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::explicit? true\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::explicit? true\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::explicit? true\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::explicit? true\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::explicit? true\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::evaluating 7 versions\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::matched: 3.11.4\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.11.4/x64\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.11.4 x64\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Successfully setup CPython (3.11.4)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \u2705  Success - Main Set up Python 3.11\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.11.4/x64\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.11.4/x64/lib\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \u2699  ::set-output:: python-version=3.11.4\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.11.4/x64\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.11.4/x64/bin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build] \u2b50 Run Main Install dependencies\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (23.1.2)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting black\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading black-23.3.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.6 MB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.6/1.6 MB 18.3 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting mypy\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading mypy-1.4.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.9 MB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 11.9/11.9 MB 35.5 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting click>=8.0.0 (from black)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 96.6/96.6 kB 683.3 kB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting mypy-extensions>=0.4.3 (from black)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting packaging>=22.0 (from black)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 314.4 kB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting pathspec>=0.9.0 (from black)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading pathspec-0.11.1-py3-none-any.whl (29 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting platformdirs>=2 (from black)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting typing-extensions>=4.1.0 (from mypy)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading typing_extensions-4.6.3-py3-none-any.whl (31 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Installing collected packages: typing-extensions, platformdirs, pathspec, packaging, mypy-extensions, click, mypy, black\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Successfully installed black-23.3.0 click-8.1.3 mypy-1.4.1 mypy-extensions-1.0.0 packaging-23.1 pathspec-0.11.1 platformdirs-3.8.0 typing-extensions-4.6.3\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Ignoring backports-datetime-fromisoformat: markers 'python_version < \"3.7\"' don't match your environment\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting Logbook>=0.12.5 (from -r requirements.txt (line 1))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading Logbook-1.5.3.tar.gz (85 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 85.8/85.8 kB 7.6 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Installing build dependencies: started\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Installing build dependencies: finished with status 'done'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Getting requirements to build wheel: started\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Getting requirements to build wheel: finished with status 'done'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Preparing metadata (pyproject.toml): started\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting SQLAlchemy>=1.0.12 (from -r requirements.txt (line 2))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading SQLAlchemy-2.0.17-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.8 MB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.8/2.8 MB 7.3 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Requirement already satisfied: click<9.0,>=8.0 in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (from -r requirements.txt (line 3)) (8.1.3)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting psycopg2-binary>=2.7.5 (from -r requirements.txt (line 4))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading psycopg2_binary-2.9.6-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.0/3.0 MB 8.7 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting temporaluuid64>=0.1.1 (from -r requirements.txt (line 5))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading temporaluuid64-0.2.0-py3-none-any.whl (2.3 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting requests>=2.9.1 (from -r requirements.txt (line 6))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.6/62.6 kB 5.1 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting xmltodict>=0.10.1 (from -r requirements.txt (line 7))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading xmltodict-0.13.0-py2.py3-none-any.whl (10.0 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting beautifulsoup4>=4.4.1 (from -r requirements.txt (line 8))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading beautifulsoup4-4.12.2-py3-none-any.whl (142 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 143.0/143.0 kB 1.4 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting alembic>=0.9.7 (from -r requirements.txt (line 9))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading alembic-1.11.1-py3-none-any.whl (224 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 224.5/224.5 kB 10.0 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting boto3>=1.5.26 (from -r requirements.txt (line 10))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading boto3-1.26.162-py3-none-any.whl (135 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 135.9/135.9 kB 6.7 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting avro-python3<2.0.0,>=1.9.1 (from -r requirements.txt (line 11))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading avro-python3-1.10.2.tar.gz (38 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Installing build dependencies: started\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Installing build dependencies: finished with status 'done'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Getting requirements to build wheel: started\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Getting requirements to build wheel: finished with status 'done'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Installing backend dependencies: started\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Installing backend dependencies: finished with status 'done'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Preparing metadata (pyproject.toml): started\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting pandas<2.0,>=1.0 (from -r requirements.txt (line 12))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading pandas-1.5.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.0 MB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 12.0/12.0 MB 14.7 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting pandas-datareader<1.0,>=0.7.4 (from -r requirements.txt (line 13))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading pandas_datareader-0.10.0-py3-none-any.whl (109 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 109.5/109.5 kB 2.5 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Requirement already satisfied: typing-extensions>=4.2.0 in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (from SQLAlchemy>=1.0.12->-r requirements.txt (line 2)) (4.6.3)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting greenlet!=0.4.17 (from SQLAlchemy>=1.0.12->-r requirements.txt (line 2))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading greenlet-2.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (618 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 618.8/618.8 kB 14.6 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting charset-normalizer<4,>=2 (from requests>=2.9.1->-r requirements.txt (line 6))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading charset_normalizer-3.1.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (197 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 197.3/197.3 kB 2.6 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting idna<4,>=2.5 (from requests>=2.9.1->-r requirements.txt (line 6))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 3.0 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting urllib3<3,>=1.21.1 (from requests>=2.9.1->-r requirements.txt (line 6))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 123.6/123.6 kB 2.3 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting certifi>=2017.4.17 (from requests>=2.9.1->-r requirements.txt (line 6))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 11.7 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting soupsieve>1.2 (from beautifulsoup4>=4.4.1->-r requirements.txt (line 8))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading soupsieve-2.4.1-py3-none-any.whl (36 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting Mako (from alembic>=0.9.7->-r requirements.txt (line 9))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading Mako-1.2.4-py3-none-any.whl (78 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 78.7/78.7 kB 880.6 kB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting botocore<1.30.0,>=1.29.162 (from boto3>=1.5.26->-r requirements.txt (line 10))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading botocore-1.29.162-py3-none-any.whl (11.0 MB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 11.0/11.0 MB 9.5 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting jmespath<2.0.0,>=0.7.1 (from boto3>=1.5.26->-r requirements.txt (line 10))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading jmespath-1.0.1-py3-none-any.whl (20 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting s3transfer<0.7.0,>=0.6.0 (from boto3>=1.5.26->-r requirements.txt (line 10))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading s3transfer-0.6.1-py3-none-any.whl (79 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 79.8/79.8 kB 2.6 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting python-dateutil>=2.8.1 (from pandas<2.0,>=1.0->-r requirements.txt (line 12))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 247.7/247.7 kB 2.6 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting pytz>=2020.1 (from pandas<2.0,>=1.0->-r requirements.txt (line 12))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 502.3/502.3 kB 4.1 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting numpy>=1.21.0 (from pandas<2.0,>=1.0->-r requirements.txt (line 12))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading numpy-1.25.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.6 MB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 17.6/17.6 MB 19.8 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting lxml (from pandas-datareader<1.0,>=0.7.4->-r requirements.txt (line 13))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading lxml-4.9.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (7.2 MB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 7.2/7.2 MB 32.8 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting urllib3<3,>=1.21.1 (from requests>=2.9.1->-r requirements.txt (line 6))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 143.1/143.1 kB 6.8 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting six>=1.5 (from python-dateutil>=2.8.1->pandas<2.0,>=1.0->-r requirements.txt (line 12))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting MarkupSafe>=0.9.2 (from Mako->alembic>=0.9.7->-r requirements.txt (line 9))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading MarkupSafe-2.1.3-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (28 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Building wheels for collected packages: Logbook, avro-python3\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Building wheel for Logbook (pyproject.toml): started\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Building wheel for Logbook (pyproject.toml): finished with status 'done'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Created wheel for Logbook: filename=Logbook-1.5.3-cp311-cp311-linux_x86_64.whl size=65609 sha256=ea83c791579683c345bc55ac69280ebc0713f9a0c0521640f620d6694a9d6d61\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/41/be/29/54b3065e766f93fd507f7e625311a8deba2842a5f1b060ede4\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Building wheel for avro-python3 (pyproject.toml): started\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Building wheel for avro-python3 (pyproject.toml): finished with status 'done'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Created wheel for avro-python3: filename=avro_python3-1.10.2-py3-none-any.whl size=43994 sha256=b6e2335ab08f9e4dea9c712fa95292a24ec3f54a9dd5119ad888a10c015e56d9\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/31/be/50/1145d9510eb4440893fc0ec676ef9464a05e0f7492a76fbb2c\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Successfully built Logbook avro-python3\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Installing collected packages: temporaluuid64, pytz, Logbook, xmltodict, urllib3, soupsieve, six, psycopg2-binary, numpy, MarkupSafe, lxml, jmespath, idna, greenlet, charset-normalizer, certifi, avro-python3, SQLAlchemy, requests, python-dateutil, Mako, beautifulsoup4, pandas, botocore, alembic, s3transfer, pandas-datareader, boto3\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Successfully installed Logbook-1.5.3 Mako-1.2.4 MarkupSafe-2.1.3 SQLAlchemy-2.0.17 alembic-1.11.1 avro-python3-1.10.2 beautifulsoup4-4.12.2 boto3-1.26.162 botocore-1.29.162 certifi-2023.5.7 charset-normalizer-3.1.0 greenlet-2.0.2 idna-3.4 jmespath-1.0.1 lxml-4.9.2 numpy-1.25.0 pandas-1.5.3 pandas-datareader-0.10.0 psycopg2-binary-2.9.6 python-dateutil-2.8.2 pytz-2023.3 requests-2.31.0 s3transfer-0.6.1 six-1.16.0 soupsieve-2.4.1 temporaluuid64-0.2.0 urllib3-1.26.16 xmltodict-0.13.0\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting pytest<8.0,>=7.3 (from -r tests/requirements.txt (line 1))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 323.6/323.6 kB 3.8 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting pytest-cov<5.0,>=4.0 (from -r tests/requirements.txt (line 2))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading pytest_cov-4.1.0-py3-none-any.whl (21 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting coveralls (from -r tests/requirements.txt (line 3))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading coveralls-3.3.1-py2.py3-none-any.whl (14 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting iniconfig (from pytest<8.0,>=7.3->-r tests/requirements.txt (line 1))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Requirement already satisfied: packaging in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (from pytest<8.0,>=7.3->-r tests/requirements.txt (line 1)) (23.1)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting pluggy<2.0,>=0.12 (from pytest<8.0,>=7.3->-r tests/requirements.txt (line 1))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting coverage[toml]>=5.2.1 (from pytest-cov<5.0,>=4.0->-r tests/requirements.txt (line 2))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading coverage-7.2.7-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (232 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 232.6/232.6 kB 8.9 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting coverage!=6.0.*,!=6.1,!=6.1.1,<7.0,>=4.1 (from coveralls->-r tests/requirements.txt (line 3))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading coverage-6.5.0-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (217 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 217.1/217.1 kB 8.2 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting docopt>=0.6.1 (from coveralls->-r tests/requirements.txt (line 3))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading docopt-0.6.2.tar.gz (25 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Installing build dependencies: started\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Installing build dependencies: finished with status 'done'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Getting requirements to build wheel: started\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Getting requirements to build wheel: finished with status 'done'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Preparing metadata (pyproject.toml): started\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Requirement already satisfied: requests>=1.0.0 in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (from coveralls->-r tests/requirements.txt (line 3)) (2.31.0)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | INFO: pip is looking at multiple versions of coverage[toml] to determine which version is compatible with other requirements. This could take a while.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting coverage[toml]>=5.2.1 (from pytest-cov<5.0,>=4.0->-r tests/requirements.txt (line 2))\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading coverage-7.2.6-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (232 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 232.5/232.5 kB 12.0 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading coverage-7.2.5-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (232 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 232.0/232.0 kB 3.4 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading coverage-7.2.4-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (232 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 232.0/232.0 kB 2.8 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading coverage-7.2.3-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (231 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 231.8/231.8 kB 11.6 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading coverage-7.2.2-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (231 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 231.3/231.3 kB 8.4 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading coverage-7.2.1-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (231 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 231.2/231.2 kB 10.9 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading coverage-7.2.0-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (231 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 231.2/231.2 kB 760.7 kB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | INFO: pip is looking at multiple versions of coverage[toml] to determine which version is compatible with other requirements. This could take a while.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading coverage-7.1.0-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (230 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 230.5/230.5 kB 2.5 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading coverage-7.0.5-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (229 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 229.7/229.7 kB 4.8 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading coverage-7.0.4-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (229 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 229.2/229.2 kB 12.2 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading coverage-7.0.3-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (228 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 228.6/228.6 kB 4.5 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading coverage-7.0.2-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (228 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 228.2/228.2 kB 11.4 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | INFO: This is taking longer than usual. You might need to provide the dependency resolver with stricter constraints to reduce runtime. See https://pip.pypa.io/warnings/backtracking for guidance. If you want to abort this run, press Ctrl + C.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading coverage-7.0.1-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (219 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 219.8/219.8 kB 13.4 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading coverage-7.0.0-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (219 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 219.8/219.8 kB 4.4 MB/s eta 0:00:00\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Requirement already satisfied: charset-normalizer<4,>=2 in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (from requests>=1.0.0->coveralls->-r tests/requirements.txt (line 3)) (3.1.0)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Requirement already satisfied: idna<4,>=2.5 in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (from requests>=1.0.0->coveralls->-r tests/requirements.txt (line 3)) (3.4)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Requirement already satisfied: urllib3<3,>=1.21.1 in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (from requests>=1.0.0->coveralls->-r tests/requirements.txt (line 3)) (1.26.16)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Requirement already satisfied: certifi>=2017.4.17 in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (from requests>=1.0.0->coveralls->-r tests/requirements.txt (line 3)) (2023.5.7)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Building wheels for collected packages: docopt\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Building wheel for docopt (pyproject.toml): started\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Building wheel for docopt (pyproject.toml): finished with status 'done'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Created wheel for docopt: filename=docopt-0.6.2-py2.py3-none-any.whl size=13707 sha256=1a19bac1893f03e4b21ee3990beb18a98ebb9f8f440abfc346e86590b7b4ef34\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/1a/b0/8c/4b75c4116c31f83c8f9f047231251e13cc74481cca4a78a9ce\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Successfully built docopt\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Installing collected packages: docopt, pluggy, iniconfig, coverage, pytest, coveralls, pytest-cov\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Successfully installed coverage-6.5.0 coveralls-3.3.1 docopt-0.6.2 iniconfig-2.0.0 pluggy-1.2.0 pytest-7.4.0 pytest-cov-4.1.0\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \u2705  Success - Main Install dependencies\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build] \u2b50 Run Main Lint with black and mypy\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting types-requests\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading types_requests-2.31.0.1-py3-none-any.whl (14 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Collecting types-urllib3 (from types-requests)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   Downloading types_urllib3-1.26.25.13-py3-none-any.whl (15 kB)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Installing collected packages: types-urllib3, types-requests\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Successfully installed types-requests-2.31.0.1 types-urllib3-1.26.25.13\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Installing missing stub packages:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/bin/python -m pip install types-requests\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Success: no issues found in 29 source files\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \u2705  Success - Main Lint with black and mypy\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build] \u2b50 Run Main Test with pytest\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ============================= test session starts ==============================\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | platform linux -- Python 3.11.4, pytest-7.4.0, pluggy-1.2.0 -- /opt/hostedtoolcache/Python/3.11.4/x64/bin/python\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | cachedir: .pytest_cache\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/suminb-finance\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | plugins: cov-4.1.0\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | collecting ... collected 86 items\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test___main__.py::test_drop_all ERROR                              [  1%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test___main__.py::test_create_all ERROR                            [  2%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test___main__.py::test_insert_test_data_all SKIPPED (unconditi...) [  3%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test___main__.py::test_import_sp500_records SKIPPED (unconditi...) [  4%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test___main__.py::test_import_fund SKIPPED (It appears Kofia A...) [  5%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test___main__.py::test_import_non_existing_fund ERROR              [  6%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test___main__.py::test_fetch_stock_values SKIPPED (Yahoo Finan...) [  8%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test___main__.py::test_import_stock_values ERROR                   [  9%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test___main__.py::test_import_stock_records ERROR                  [ 10%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test___main__.py::test_import_stock_records ERROR                  [ 10%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_alembic.py::test_upgrade SKIPPED (unconditional skip)         [ 11%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_fetchers.py::test_fetch_stock_values SKIPPED (uncondition...) [ 12%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_fetchers.py::test_assetvalue_fetcher SKIPPED (uncondition...) [ 13%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_create_model ERROR                            [ 15%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_stock_asset ERROR                             [ 16%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_get_asset_by_fund_code ERROR                  [ 17%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_get_asset_by_fund_code_non_existing ERROR     [ 18%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_get_asset_by_symbol ERROR                     [ 19%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_get_asset_by_symbol_non_existing ERROR        [ 20%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_get_asset_by_isin ERROR                       [ 22%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_get_asset_by_isin_non_existing ERROR          [ 23%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_balance ERROR                                 [ 24%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_portfolio SKIPPED (unconditional skip)        [ 25%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_portfolio_balance SKIPPED (unconditional ...) [ 26%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_transaction ERROR                             [ 27%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_records ERROR                                 [ 29%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_record_created_at ERROR                       [ 30%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_net_worth_without_asset_value ERROR           [ 31%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_account_net_worth_1 ERROR                     [ 32%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_account_net_worth_2 ERROR                     [ 33%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_account_net_worth_3 ERROR                     [ 34%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_account_net_worth_4 ERROR                     [ 36%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_granularity_enum ERROR                        [ 37%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_valid_granularity ERROR                       [ 38%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_invalid_granularity ERROR                     [ 39%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_transaction_state_enum ERROR                  [ 40%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_record_type_enum ERROR                        [ 41%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_models.py::test_record_type_enum ERROR                        [ 41%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_providers.py::test_decimal_records ERROR                      [ 43%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_providers.py::test_kofia_request_url ERROR                    [ 44%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_providers.py::test_kofia_request_headers ERROR                [ 45%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_providers.py::test_kofia_get_request_body ERROR               [ 46%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_providers.py::test_kofia_fetch_data SKIPPED (Kofia API ne...) [ 47%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_providers.py::test_dart_fetch_data SKIPPED (unconditional...) [ 48%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_providers.py::test_dart_fetch_data_with_invalid_code SKIPPED  [ 50%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_providers.py::test_yahoo_provider[1min] SKIPPED (uncondit...) [ 51%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_providers.py::test_yahoo_provider[1day] SKIPPED (uncondit...) [ 52%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_providers.py::test_yahoo_provider_with_invalid_symbol SKIPPED [ 53%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_providers.py::test_yahoo_provider_with_invalid_symbol ERROR   [ 53%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_readers.py::test_load_schema ERROR                            [ 54%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_readers.py::test_read_asset_values[False] SKIPPED (uncond...) [ 55%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_readers.py::test_read_asset_values[True] SKIPPED (uncondi...) [ 56%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_readers.py::test_read_records ERROR                           [ 58%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_readers.py::test_read_records_as_dataframe ERROR              [ 59%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_readers.py::test_read_records_as_dataframe ERROR              [ 59%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_date_range ERROR                               [ 60%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_date_range_relative[0-0-0] ERROR               [ 61%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_date_range_relative[-1-0-1] ERROR              [ 62%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_date_range_relative[-10-0-10] ERROR            [ 63%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_date_range_relative[-1--1-0] ERROR             [ 65%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_date_range_relative[-10--5-5] ERROR            [ 66%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_date_range_exceptions[2016-01-01-2015-01-01] ERROR [ 67%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_date_range_exceptions[0--1] ERROR              [ 68%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_date_to_datetime ERROR                         [ 69%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_dict_reader ERROR                              [ 70%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_extract_numbers ERROR                          [ 72%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_insert_stock_record ERROR                      [ 73%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_parse_date ERROR                               [ 74%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_parse_datetime ERROR                           [ 75%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_parse_decimal ERROR                            [ 76%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_parse_int ERROR                                [ 77%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_parse_stock_code[A145210-145210] ERROR         [ 79%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_parse_stock_code[051500-051500] ERROR          [ 80%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_parse_stock_code[-None] ERROR                  [ 81%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_parse_stock_records ERROR                      [ 82%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_serialize_datetime ERROR                       [ 83%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/test_utils.py::test_serialize_datetime ERROR                       [ 83%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/ext/test_dart.py::test_search_corporations ERROR                   [ 84%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/ext/test_dart.py::test_get_listed_corporations ERROR               [ 86%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/ext/test_dart.py::test_financial_statement_request SKIPPED (un...) [ 87%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/ext/test_dart.py::test_financial_statement_parser ERROR            [ 88%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/ext/test_dart.py::test_official_filing_request SKIPPED (uncond...) [ 89%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/ext/test_dart.py::test_official_filing_parser ERROR                [ 90%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/ext/test_dart.py::test_official_filing_parser ERROR                [ 90%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/ext/test_profile_providers.py::test_invalid_provider ERROR         [ 91%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/ext/test_profile_providers.py::test_naver_profile ERROR            [ 93%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/ext/test_profile_providers.py::test_fetch_naver_profile ERROR      [ 94%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/ext/test_profile_providers.py::test_fetch_naver_profile ERROR      [ 94%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/ext/test_rapidapi_yahoo.py::test_cache ERROR                       [ 95%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/ext/test_rapidapi_yahoo.py::test_financials ERROR                  [ 96%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/ext/test_rapidapi_yahoo.py::test_profile ERROR                     [ 97%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/ext/test_rapidapi_yahoo.py::test_historical_data ERROR             [ 98%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/ext/test_rapidapi_yahoo.py::test_malformed_historical_data ERROR   [100%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/ext/test_rapidapi_yahoo.py::test_malformed_historical_data ERROR   [100%]\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ==================================== ERRORS ====================================\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _______________________ ERROR at setup of test_drop_all ________________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3fd47e50>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_drop_all>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ______________________ ERROR at setup of test_create_all _______________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3fd47e50>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_drop_all>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _______________ ERROR at setup of test_import_non_existing_fund ________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3fd47e50>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_drop_all>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | __________________ ERROR at setup of test_import_stock_values __________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3fd47e50>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_drop_all>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _________________ ERROR at setup of test_import_stock_records __________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3fd47e50>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_drop_all>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ________________ ERROR at teardown of test_import_stock_records ________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e407010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:31: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5820: in drop_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _____________________ ERROR at setup of test_create_model ______________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ______________________ ERROR at setup of test_stock_asset ______________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ________________ ERROR at setup of test_get_asset_by_fund_code _________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | __________ ERROR at setup of test_get_asset_by_fund_code_non_existing __________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | __________________ ERROR at setup of test_get_asset_by_symbol __________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ___________ ERROR at setup of test_get_asset_by_symbol_non_existing ____________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ___________________ ERROR at setup of test_get_asset_by_isin ___________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ____________ ERROR at setup of test_get_asset_by_isin_non_existing _____________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ________________________ ERROR at setup of test_balance ________________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ______________________ ERROR at setup of test_transaction ______________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ________________________ ERROR at setup of test_records ________________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ___________________ ERROR at setup of test_record_created_at ___________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _____________ ERROR at setup of test_net_worth_without_asset_value _____________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | __________________ ERROR at setup of test_account_net_worth_1 __________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | __________________ ERROR at setup of test_account_net_worth_2 __________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | __________________ ERROR at setup of test_account_net_worth_3 __________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | __________________ ERROR at setup of test_account_net_worth_4 __________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ___________________ ERROR at setup of test_granularity_enum ____________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ___________________ ERROR at setup of test_valid_granularity ___________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | __________________ ERROR at setup of test_invalid_granularity __________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ________________ ERROR at setup of test_transaction_state_enum _________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ___________________ ERROR at setup of test_record_type_enum ____________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e923590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_create_model>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | __________________ ERROR at teardown of test_record_type_enum __________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3f166010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:31: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5820: in drop_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ____________________ ERROR at setup of test_decimal_records ____________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e3b1a10>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_decimal_records>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ___________________ ERROR at setup of test_kofia_request_url ___________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e3b1a10>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_decimal_records>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _________________ ERROR at setup of test_kofia_request_headers _________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e3b1a10>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_decimal_records>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ________________ ERROR at setup of test_kofia_get_request_body _________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e3b1a10>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_decimal_records>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _________ ERROR at teardown of test_yahoo_provider_with_invalid_symbol _________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eb2c310>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:31: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5820: in drop_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ______________________ ERROR at setup of test_load_schema ______________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3ee60ad0>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_load_schema>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _____________________ ERROR at setup of test_read_records ______________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3ee60ad0>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_load_schema>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _______________ ERROR at setup of test_read_records_as_dataframe _______________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3ee60ad0>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_load_schema>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _____________ ERROR at teardown of test_read_records_as_dataframe ______________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e756290>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:31: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5820: in drop_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ______________________ ERROR at setup of test_date_range _______________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eefe010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_date_range>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ______________ ERROR at setup of test_date_range_relative[0-0-0] _______________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eefe010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_date_range>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ______________ ERROR at setup of test_date_range_relative[-1-0-1] ______________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eefe010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_date_range>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _____________ ERROR at setup of test_date_range_relative[-10-0-10] _____________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eefe010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_date_range>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _____________ ERROR at setup of test_date_range_relative[-1--1-0] ______________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eefe010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_date_range>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _____________ ERROR at setup of test_date_range_relative[-10--5-5] _____________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eefe010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_date_range>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _____ ERROR at setup of test_date_range_exceptions[2016-01-01-2015-01-01] ______\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eefe010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_date_range>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ______________ ERROR at setup of test_date_range_exceptions[0--1] ______________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eefe010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_date_range>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ___________________ ERROR at setup of test_date_to_datetime ____________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eefe010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_date_range>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ______________________ ERROR at setup of test_dict_reader ______________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eefe010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_date_range>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ____________________ ERROR at setup of test_extract_numbers ____________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eefe010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_date_range>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | __________________ ERROR at setup of test_insert_stock_record __________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eefe010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_date_range>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ______________________ ERROR at setup of test_parse_date _______________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eefe010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_date_range>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ____________________ ERROR at setup of test_parse_datetime _____________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eefe010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_date_range>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _____________________ ERROR at setup of test_parse_decimal _____________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eefe010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_date_range>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _______________________ ERROR at setup of test_parse_int _______________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eefe010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_date_range>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ___________ ERROR at setup of test_parse_stock_code[A145210-145210] ____________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eefe010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_date_range>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ____________ ERROR at setup of test_parse_stock_code[051500-051500] ____________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eefe010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_date_range>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ________________ ERROR at setup of test_parse_stock_code[-None] ________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eefe010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_date_range>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | __________________ ERROR at setup of test_parse_stock_records __________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eefe010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_date_range>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | __________________ ERROR at setup of test_serialize_datetime ___________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3eefe010>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_date_range>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _________________ ERROR at teardown of test_serialize_datetime _________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3f13d590>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:31: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5820: in drop_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | __________________ ERROR at setup of test_search_corporations __________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e36cf90>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_search_corporations>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ________________ ERROR at setup of test_get_listed_corporations ________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e36cf90>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_search_corporations>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ______________ ERROR at setup of test_financial_statement_parser _______________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e36cf90>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_search_corporations>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ________________ ERROR at setup of test_official_filing_parser _________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e36cf90>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_search_corporations>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _______________ ERROR at teardown of test_official_filing_parser _______________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e887150>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:31: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5820: in drop_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ___________________ ERROR at setup of test_invalid_provider ____________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3efe22d0>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_invalid_provider>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _____________________ ERROR at setup of test_naver_profile _____________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3efe22d0>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_invalid_provider>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | __________________ ERROR at setup of test_fetch_naver_profile __________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3efe22d0>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_invalid_provider>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ________________ ERROR at teardown of test_fetch_naver_profile _________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e87f250>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:31: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5820: in drop_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _________________________ ERROR at setup of test_cache _________________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3ebb29d0>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_cache>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ______________________ ERROR at setup of test_financials _______________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3ebb29d0>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_cache>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ________________________ ERROR at setup of test_profile ________________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3ebb29d0>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_cache>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ____________________ ERROR at setup of test_historical_data ____________________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3ebb29d0>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_cache>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _______________ ERROR at setup of test_malformed_historical_data _______________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3ebb29d0>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | request = <SubRequest 'session' for <Function test_cache>>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     @pytest.fixture(scope=\"module\", autouse=True)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def session(request):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"A database session. Shall not be confused with test sessions.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         request.addfinalizer(teardown)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.create_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:35: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5792: in create_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _____________ ERROR at teardown of test_malformed_historical_data ______________\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | self = <sqlalchemy.engine.base.Connection object at 0x7f5f3e430550>\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | engine = Engine(postgresql://postgres:***@localhost/finance_test)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection = None, _has_events = None, _allow_revalidate = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _allow_autobegin = True\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def __init__(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         engine: Engine,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         connection: Optional[PoolProxiedConnection] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _has_events: Optional[bool] = None,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_revalidate: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _allow_autobegin: bool = True,\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     ):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"Construct a new Connection.\"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.engine = engine\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         self.dialect = dialect = engine.dialect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if connection is None:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             try:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >               self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       psycopg2.OperationalError: connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | The above exception was the direct cause of the following exception:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def teardown():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         _session.close()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       Base.metadata.drop_all(_engine)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | tests/conftest.py:31: \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/sql/schema.py:5820: in drop_all\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     bind._run_ddl_visitor(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3238: in _run_ddl_visitor\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.begin() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/contextlib.py:137: in __enter__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return next(self.gen)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3228: in begin\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with self.connect() as conn:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3264: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._connection_cls(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:147: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Connection._handle_dbapi_exception_noconnection(\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:2426: in _handle_dbapi_exception_noconnection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:145: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self._dbapi_connection = engine.raw_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/base.py:3288: in raw_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.pool.connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:452: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionFairy._checkout(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:1267: in _checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     fairy = _ConnectionRecord.checkout(pool)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:716: in checkout\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     rec = pool._do_get()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:169: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/impl.py:167: in _do_get\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self._create_connection()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:393: in _create_connection\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return _ConnectionRecord(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:678: in __init__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.__connect()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:902: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     with util.safe_reraise():\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py:147: in __exit__\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     raise exc_value.with_traceback(exc_tb)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/pool/base.py:898: in __connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     self.dbapi_connection = connection = pool._invoke_creator(self)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/create.py:637: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return dialect.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/sqlalchemy/engine/default.py:615: in connect\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     return self.loaded_dbapi.connect(*cargs, **cparams)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | dsn = 'host=localhost dbname=finance_test user=postgres password=postgres'\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | connection_factory = None, cursor_factory = None\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwargs = {'dbname': 'finance_test', 'host': 'localhost', 'password': 'postgres', 'user': 'postgres'}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     def connect(dsn=None, connection_factory=None, cursor_factory=None, **kwargs):\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Create a new database connection.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         The connection parameters can be specified as a string:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(\"dbname=test user=postgres password=secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         or using a set of keyword arguments:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             conn = psycopg2.connect(database=\"test\", user=\"postgres\", password=\"secret\")\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Or as a mix of both. The basic connection parameters are:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *dbname*: the database name\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *database*: the database name (only as keyword argument)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *user*: user name used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *password*: password used to authenticate\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *host*: database host address (defaults to UNIX socket if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         - *port*: connection port number (defaults to 5432 if not provided)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *connection_factory* parameter a different class or connections\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         factory can be specified. It should be a callable object taking a dsn\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         argument.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using the *cursor_factory* parameter, a new default cursor factory will be\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         used by cursor().\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Using *async*=True an asynchronous connection will be created. *async_* is\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         a valid alias (for Python versions where ``async`` is a keyword).\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         Any other keyword parameter will be passed to the underlying client\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         library: the list of supported parameters depends on the library version.\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         \"\"\"\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         kwasync = {}\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async'] = kwargs.pop('async')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         if 'async_' in kwargs:\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |             kwasync['async_'] = kwargs.pop('async_')\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |         dsn = _ext.make_dsn(dsn, **kwargs)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | >       conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | E       (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/psycopg2/__init__.py:122: OperationalError\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | =============================== warnings summary ===============================\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/models.py:42\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/suminb-finance/finance/models.py:42: MovedIn20Warning: The ``declarative_base()`` function is now available as sqlalchemy.orm.declarative_base(). (deprecated since: 2.0) (Background on SQLAlchemy 2.0 at: https://sqlalche.me/e/b8d9)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   |     Base = declarative_base()\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/suminb-finance/report.xml -\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ---------- coverage: platform linux, python 3.11.4-final-0 -----------\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | Name                                     Stmts   Miss  Cover   Missing\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ----------------------------------------------------------------------\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/__init__.py                         11      3    73%   6-9\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/__main__.py                        129     85    34%   47-61, 68, 74, 80, 84, 95, 103-124, 129-130, 138-184, 194-214, 230-251, 262-264, 272-276, 280\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/avro.py                              4      2    50%   8, 12\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/exceptions.py                       13      3    77%   3, 8, 13\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/ext/dart.py                         71     42    41%   23-25, 32, 37, 42-45, 48, 64-72, 75, 81-84, 104-116, 136-145, 148, 164-182, 207-225\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/ext/profile/__init__.py              7      4    43%   24-27, 31\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/ext/profile/base.py                 22     12    45%   6-11, 14, 18, 22-25, 29\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/ext/profile/naver_finance.py        34     24    29%   13-14, 18, 21-22, 28-53, 57-60\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/ext/rapidapi/yahoo/__init__.py      66     42    36%   17, 28, 32-33, 37-39, 43-48, 54-59, 64-69, 80-82, 87-92, 102-104, 109-114, 124-126\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/ext/rapidapi/yahoo/models.py        80     45    44%   12, 16-18, 21, 29-33, 40, 47-57, 61-72, 76-84, 91, 95, 100, 104-107, 110-112, 119, 135, 140, 144-146\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/fetchers.py                         30     20    33%   9-18, 23, 28-32, 36-52\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/importers.py                        19     12    37%   14-32, 39-42\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/models.py                          408    153    62%   53, 64, 82-92, 101-103, 106-109, 112-115, 137, 141-155, 159, 165, 169, 173-174, 177-179, 182-185, 188-189, 192-193, 210, 215, 238, 295, 368-369, 373, 377, 386-390, 398-402, 459, 462, 465, 468, 471-472, 543, 547-556, 560, 564-583, 596-631, 637-652, 698-700, 704-708, 712-718, 722-725, 732-733, 736-741, 771-776, 779, 784-785, 793-800, 835-840\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/providers/__init__.py                8      1    88%   26\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/providers/dart.py                   67     43    36%   28-39, 51-84, 89-93, 96-100, 114-120, 123, 128-138\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/providers/kofia.py                  30     15    50%   19, 23, 27, 50, 83-99\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/providers/miraeasset.py             85     51    40%   60-62, 65-77, 81, 85-126, 176-187, 190, 205-206, 210-218, 222, 233\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/providers/provider.py               13      4    69%   10, 17, 22, 29\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/providers/record.py                 33     11    67%   11-14, 17, 26, 31, 36, 41, 46, 51-52\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/providers/yahoo.py                  48     33    31%   16, 23, 26, 29-41, 46-60, 63-77, 96-110, 113-115\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/readers.py                          69     45    35%   17, 21-26, 47-62, 67, 72-73, 76-81, 87, 90-91, 96-100, 104-125\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/utils.py                           131     96    27%   23-39, 48, 58-62, 73-78, 82-85, 89-92, 97, 111-114, 124-127, 131-134, 140-143, 148-153, 161-224, 243-249, 254-275, 280-295, 305-308, 313-315, 318, 321\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | finance/writers.py                          19      7    63%   18, 23, 28-32, 50-54\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ----------------------------------------------------------------------\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | TOTAL                                     1397    753    46%\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | =========================== short test summary info ============================\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test___main__.py::test_drop_all - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test___main__.py::test_create_all - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test___main__.py::test_import_non_existing_fund - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test___main__.py::test_import_stock_values - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test___main__.py::test_import_stock_records - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test___main__.py::test_import_stock_records - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_create_model - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_stock_asset - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_get_asset_by_fund_code - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_get_asset_by_fund_code_non_existing - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_get_asset_by_symbol - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_get_asset_by_symbol_non_existing - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_get_asset_by_isin - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_get_asset_by_isin_non_existing - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_balance - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_transaction - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_records - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_record_created_at - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_net_worth_without_asset_value - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_account_net_worth_1 - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_account_net_worth_2 - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_account_net_worth_3 - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_account_net_worth_4 - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_granularity_enum - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_valid_granularity - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_invalid_granularity - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_transaction_state_enum - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_record_type_enum - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_models.py::test_record_type_enum - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_providers.py::test_decimal_records - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_providers.py::test_kofia_request_url - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_providers.py::test_kofia_request_headers - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_providers.py::test_kofia_get_request_body - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_providers.py::test_yahoo_provider_with_invalid_symbol - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_readers.py::test_load_schema - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_readers.py::test_read_records - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_readers.py::test_read_records_as_dataframe - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_readers.py::test_read_records_as_dataframe - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_date_range - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_date_range_relative[0-0-0] - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_date_range_relative[-1-0-1] - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_date_range_relative[-10-0-10] - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_date_range_relative[-1--1-0] - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_date_range_relative[-10--5-5] - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_date_range_exceptions[2016-01-01-2015-01-01] - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_date_range_exceptions[0--1] - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_date_to_datetime - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_dict_reader - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_extract_numbers - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_insert_stock_record - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_parse_date - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_parse_datetime - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_parse_decimal - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_parse_int - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_parse_stock_code[A145210-145210] - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_parse_stock_code[051500-051500] - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_parse_stock_code[-None] - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_parse_stock_records - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_serialize_datetime - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/test_utils.py::test_serialize_datetime - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/ext/test_dart.py::test_search_corporations - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/ext/test_dart.py::test_get_listed_corporations - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/ext/test_dart.py::test_financial_statement_parser - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/ext/test_dart.py::test_official_filing_parser - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/ext/test_dart.py::test_official_filing_parser - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/ext/test_profile_providers.py::test_invalid_provider - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/ext/test_profile_providers.py::test_naver_profile - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/ext/test_profile_providers.py::test_fetch_naver_profile - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/ext/test_profile_providers.py::test_fetch_naver_profile - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/ext/test_rapidapi_yahoo.py::test_cache - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/ext/test_rapidapi_yahoo.py::test_financials - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/ext/test_rapidapi_yahoo.py::test_profile - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/ext/test_rapidapi_yahoo.py::test_historical_data - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/ext/test_rapidapi_yahoo.py::test_malformed_historical_data - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ERROR tests/ext/test_rapidapi_yahoo.py::test_malformed_historical_data - sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"localhost\" (127.0.0.1), port 5432 failed: Connection refused\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \tIs the server running on that host and accepting TCP/IP connections?\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | \n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | (Background on this error at: https://sqlalche.me/e/20/e3q8)\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   | ============= 19 skipped, 1 warning, 75 errors in 96.75s (0:01:36) =============\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build]   \u274c  Failure - Main Test with pytest\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build] exitcode '1': failure\n[f3e1b01a-dc1f-454d-b398-ecd212b05e7a/build] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'build' failed\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/suminb-finance/.github/workflows/ci-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 337.3081705570221
    }
}