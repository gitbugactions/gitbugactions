{
    "repository": "dapper91/pydantic-xml",
    "stars": 61,
    "language": "python",
    "size": 169,
    "clone_url": "https://github.com/dapper91/pydantic-xml.git",
    "timestamp": "2023-07-01T17:32:12.309114Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.test_encoder",
                "name": "test_primitive_types_encoding",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoder",
                "name": "test_ipaddress_types_encoding",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoder",
                "name": "test_model_level_xml_encoder",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoder",
                "name": "test_model_xml_encoder_inheritance",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoder",
                "name": "test_model_xml_encoder_inheritance_with_plain_model",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoder",
                "name": "test_xml_encoder_recursion_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_encoder",
                "name": "test_encoder_type_not_xml_serializable",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_element_tag_declaration_order[field2-field2]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_element_tag_declaration_order[field1-None]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_attribute_tag_declaration_order[attr2-attr2]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_attribute_tag_declaration_order[attr1-None]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_submodel_tag_declaration_order[model1-model1-None]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_submodel_tag_declaration_order[model1-None-model1]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_submodel_tag_declaration_order[model1-model2-model1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_submodel_tag_declaration_order[model2-None-None]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_mapping_element_tag_declaration_order[model2-model2]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_mapping_element_tag_declaration_order[model1-None]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_homogeneous_collection_element_tag_declaration_order[data-data]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_homogeneous_collection_element_tag_declaration_order[elements-None]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_submodel_homogeneous_collection_tag_declaration_order[model1-model1-None]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_submodel_homogeneous_collection_tag_declaration_order[model1-None-model1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_submodel_homogeneous_collection_tag_declaration_order[model1-model2-model1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_submodel_homogeneous_collection_tag_declaration_order[model2-None-None]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_heterogeneous_collection_element_tag_declaration_order[data-data]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_heterogeneous_collection_element_tag_declaration_order[elements-None]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_submodel_heterogeneous_collection_tag_declaration_order[model1-model1-None]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_submodel_heterogeneous_collection_tag_declaration_order[model1-None-model1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_submodel_heterogeneous_collection_tag_declaration_order[model1-model2-model1]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_submodel_heterogeneous_collection_tag_declaration_order[model2-None-None]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_wrapped_element_tag_declaration_order[data-data]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_wrapped_element_tag_declaration_order[elements-None]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_wrapped_model_element_tag_declaration_order[model1-model1-None]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_wrapped_model_element_tag_declaration_order[model1-None-model1]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_wrapped_model_element_tag_declaration_order[model1-model2-model1]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_entity_naming",
                "name": "test_wrapped_model_element_tag_declaration_order[model2-None-None]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[model_root_collection.py]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[union_primitives.py]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[default_namespace.py]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[wrapper.py]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[model_mode_strict.py]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[element_namespace_global.py]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[aliases.py]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[attribute.py]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[union_models.py]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[mapping_element.py]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[element_model.py]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[homogeneous_primitives.py]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[model_self_ref.py]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[model_mode_ordered.py]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[model_namespace.py]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[model_root.py]",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[model_template.py]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[element_primitive.py]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[mapping.py]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[wrapper_nested.py]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[homogeneous_models.py]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[text_primitive.py]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[element_namespace.py]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[element_namespace_model.py]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[model_mode_unordered.py]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[attribute_namespace_inheritance.py]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[homogeneous_dicts.py]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[attribute_namespace.py]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[model_root_primitive.py]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[model_generic.py]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_snippets[model_root_type.py]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_example[custom-encoder]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_example[generic-model]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_example[quickstart]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_examples",
                "name": "test_example[self-ref-model]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_forward_ref",
                "name": "test_primitive_forward_ref",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_forward_ref",
                "name": "test_submodel_forward_ref",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_forward_ref",
                "name": "test_recursive_forward_ref",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_forward_ref",
                "name": "test_primitive_list_forward_ref",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_forward_ref",
                "name": "test_submodel_list_forward_ref",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_forward_ref",
                "name": "test_primitive_tuple_forward_ref",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_forward_ref",
                "name": "test_submodel_tuple_forward_ref",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_forward_ref",
                "name": "test_primitive_union_forward_ref",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_forward_ref",
                "name": "test_submodel_union_forward_ref",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_forward_ref",
                "name": "test_root_model_forward_ref",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_forward_ref",
                "name": "test_wrapped_primitive_forward_ref",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_forward_ref",
                "name": "test_wrapped_model_forward_ref",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_forward_ref",
                "name": "test_generic_model_forward_ref",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_generics",
                "name": "test_root_generic_model",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_generics",
                "name": "test_generic_submodel",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_generics",
                "name": "test_generic_model_errors",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_heterogeneous_collections",
                "name": "test_set_of_primitives_extraction",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_heterogeneous_collections",
                "name": "test_tuple_of_submodel_extraction",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_heterogeneous_collections",
                "name": "test_list_of_root_submodel_extraction",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_heterogeneous_collections",
                "name": "test_list_of_dict_extraction",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_heterogeneous_collections",
                "name": "test_root_tuple_of_submodels_extraction",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_heterogeneous_collections",
                "name": "test_heterogeneous_definition_errors",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_homogeneous_collections",
                "name": "test_set_of_primitives_extraction",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_homogeneous_collections",
                "name": "test_tuple_of_submodels_extraction",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_homogeneous_collections",
                "name": "test_list_of_root_submodels_extraction",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_homogeneous_collections",
                "name": "test_list_of_dicts_extraction",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_homogeneous_collections",
                "name": "test_root_list_of_submodels_extraction",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_homogeneous_collections",
                "name": "test_homogeneous_definition_errors",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mappings",
                "name": "test_attrs_mapping_extraction",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mappings",
                "name": "test_element_mapping_extraction",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mappings",
                "name": "test_root_model_attrs_mapping_extraction",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mappings",
                "name": "test_root_model_element_mapping_extraction",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_mappings",
                "name": "test_mapping_definition_errors",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_misc",
                "name": "test_xml_declaration",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_misc",
                "name": "test_root_not_found_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_misc",
                "name": "test_skip_empty",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_misc",
                "name": "test_self_ref_models",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_misc",
                "name": "test_defaults",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_misc",
                "name": "test_default_factory",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_misc",
                "name": "test_model_params_inheritance",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_namespaces",
                "name": "test_default_namespaces",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_namespaces",
                "name": "test_lxml_default_namespace_serialisation",
                "time": 0.002,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "not lxml used",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_namespaces",
                "name": "test_elements_namespaces[tst1-tst2-tst1-tst2]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_namespaces",
                "name": "test_elements_namespaces[None-tst2-None-tst2]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_namespaces",
                "name": "test_elements_namespaces[tst1-None-tst1-tst1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_namespaces",
                "name": "test_elements_namespaces[None-None-None-None]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_namespaces",
                "name": "test_attrs_namespaces[True-tst1-tst2-tst1-tst2]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_namespaces",
                "name": "test_attrs_namespaces[True-tst1-None-tst1-tst1]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_namespaces",
                "name": "test_attrs_namespaces[True-None-tst2-None-tst2]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_namespaces",
                "name": "test_attrs_namespaces[False-tst1-tst2-tst1-tst2]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_namespaces",
                "name": "test_attrs_namespaces[False-tst1-None-tst1-None]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_namespaces",
                "name": "test_attrs_namespaces[False-None-tst2-None-tst2]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_namespaces",
                "name": "test_attrs_namespaces[False-None-None-None-None]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_namespaces",
                "name": "test_submodel_namespaces",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_namespaces",
                "name": "test_wrapper_namespaces",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_namespaces",
                "name": "test_wrapper_namespace_inheritance",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_namespaces",
                "name": "test_homogeneous_collection_wrapper_namespace_inheritance",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_namespaces",
                "name": "test_heterogeneous_collection_wrapper_namespace_inheritance",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_namespaces",
                "name": "test_mapping_wrapper_namespace_inheritance",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_namespaces",
                "name": "test_model_inheritance",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_namespaces",
                "name": "test_model_inheritance_params_redefinition",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_primitives",
                "name": "test_text_extraction",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_primitives",
                "name": "test_attrs_and_elements_extraction",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_primitives",
                "name": "test_model_inheritance",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_primitives",
                "name": "test_root_model_text_extraction",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_primitives",
                "name": "test_root_model_attr_extraction",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_primitives",
                "name": "test_root_model_element_extraction",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_search_modes",
                "name": "test_optional_field",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_search_modes",
                "name": "test_strict_mode_error",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_search_modes",
                "name": "test_ordered_mode",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_search_modes",
                "name": "test_ordered_mode_error",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_search_modes",
                "name": "test_unordered_mode",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_search_modes",
                "name": "test_unordered_mode_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_search_modes",
                "name": "test_submodel_mode",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_search_modes",
                "name": "test_optional_lookahead",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_search_modes",
                "name": "test_optional_elements_sequential_extraction",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_search_modes",
                "name": "test_multiple_text_error",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_search_modes",
                "name": "test_multiple_attr_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_search_modes",
                "name": "test_mapping_and_attr_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_search_modes",
                "name": "test_doc_with_comments",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_search_modes",
                "name": "test_wrapper_strict_mode",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_search_modes",
                "name": "test_wrapper_strict_mode_error",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_search_modes",
                "name": "test_wrapper_ordered_mode",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_search_modes",
                "name": "test_wrapper_ordered_mode_error",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_search_modes",
                "name": "test_wrapper_unordered_mode",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_search_modes",
                "name": "test_wrapper_unordered_mode_error",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_submodels",
                "name": "test_submodel_element_extraction",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_submodels",
                "name": "test_optional_submodel_element_extraction",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_submodels",
                "name": "test_root_submodel_element_extraction",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_submodels",
                "name": "test_root_submodel_root_extraction",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_submodels",
                "name": "test_nested_root_submodel_element_extraction",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_submodels",
                "name": "test_submodel_definition_errors",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_unions",
                "name": "test_primitive_union",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_unions",
                "name": "test_model_union",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_unions",
                "name": "test_primitive_union_list",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_unions",
                "name": "test_model_union_list",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_unions",
                "name": "test_primitive_union_tuple",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_unions",
                "name": "test_root_union",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_unions",
                "name": "test_submodel_definition_errors",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_unions",
                "name": "test_union_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "requires python 3.10 and above",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_unions",
                "name": "test_model_union_type",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "requires python 3.10 and above",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wrapped",
                "name": "test_wrapped_primitive_extraction",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wrapped",
                "name": "test_wrapped_path_merge",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wrapped",
                "name": "test_mult_wrapped_primitive_extraction",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wrapped",
                "name": "test_wrapper_collection",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wrapped",
                "name": "test_wrapped_submodel_extraction",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wrapped",
                "name": "test_wrapped_mapping_extraction",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wrapped",
                "name": "test_wrapped_collection_extraction",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wrapped",
                "name": "test_wrapper_sequence",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wrapped",
                "name": "test_wrapper_element_interleaving",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_wrapped",
                "name": "test_wrapped_root",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test] \ud83d\ude80  Start image=crawlergpt:latest\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dapper91-pydantic-xml] user=0 workdir=\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v1\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test] \ud83e\uddea  Matrix: map[python-version:3.8]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test] \u2b50 Run Main actions/checkout@v2\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \u2705  Success - Main actions/checkout@v2\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test] \u2b50 Run Main Set up Python 3.8\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/5a4cb33a-3740-4cc9-91ec-6eb48535e116/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udcac  ::debug::isExplicit: \n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udcac  ::debug::explicit? false\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udcac  ::debug::explicit? true\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udcac  ::debug::explicit? true\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udcac  ::debug::explicit? true\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udcac  ::debug::explicit? true\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udcac  ::debug::explicit? true\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udcac  ::debug::explicit? true\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udcac  ::debug::evaluating 6 versions\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udcac  ::debug::matched: 3.8.11\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Successfully setup CPython (3.8.11)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \u2705  Success - Main Set up Python 3.8\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \u2699  ::set-output:: python-version=3.8.11\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test] \u2b50 Run Main Install dependencies\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (21.2.4)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting pip\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Installing collected packages: pip\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Attempting uninstall: pip\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |     Found existing installation: pip 21.2.4\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |     Uninstalling pip-21.2.4:\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |       Successfully uninstalled pip-21.2.4\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Successfully installed pip-23.1.2\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting poetry\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading poetry-1.5.1-py3-none-any.whl (225 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 225.2/225.2 kB 8.9 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting build<0.11.0,>=0.10.0 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading build-0.10.0-py3-none-any.whl (17 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting cachecontrol[filecache]<0.13.0,>=0.12.9 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading CacheControl-0.12.14-py2.py3-none-any.whl (21 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting cleo<3.0.0,>=2.0.0 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading cleo-2.0.1-py3-none-any.whl (77 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 77.3/77.3 kB 669.9 kB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting crashtest<0.5.0,>=0.4.1 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading crashtest-0.4.1-py3-none-any.whl (7.6 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting dulwich<0.22.0,>=0.21.2 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading dulwich-0.21.5-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (512 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 512.4/512.4 kB 12.6 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting filelock<4.0.0,>=3.8.0 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting html5lib<2.0,>=1.0 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading html5lib-1.1-py2.py3-none-any.whl (112 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 112.2/112.2 kB 4.9 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting importlib-metadata>=4.4 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting installer<0.8.0,>=0.7.0 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading installer-0.7.0-py3-none-any.whl (453 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 453.8/453.8 kB 11.4 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting jsonschema<5.0.0,>=4.10.0 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading jsonschema-4.17.3-py3-none-any.whl (90 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 90.4/90.4 kB 2.0 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting keyring<24.0.0,>=23.9.0 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading keyring-23.13.1-py3-none-any.whl (37 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting lockfile<0.13.0,>=0.12.2 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading lockfile-0.12.2-py2.py3-none-any.whl (13 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting packaging>=20.4 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.9/48.9 kB 4.2 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting pexpect<5.0.0,>=4.7.0 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 59.0/59.0 kB 1.4 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting pkginfo<2.0.0,>=1.9.4 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading pkginfo-1.9.6-py3-none-any.whl (30 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting platformdirs<4.0.0,>=3.0.0 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting poetry-core==1.6.1 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading poetry_core-1.6.1-py3-none-any.whl (450 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 450.5/450.5 kB 8.0 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting poetry-plugin-export<2.0.0,>=1.4.0 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading poetry_plugin_export-1.4.0-py3-none-any.whl (10 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting pyproject-hooks<2.0.0,>=1.0.0 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading pyproject_hooks-1.0.0-py3-none-any.whl (9.3 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting requests<3.0,>=2.18 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.6/62.6 kB 991.2 kB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting requests-toolbelt<2,>=0.9.1 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading requests_toolbelt-1.0.0-py2.py3-none-any.whl (54 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 54.5/54.5 kB 1.8 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting shellingham<2.0,>=1.5 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading shellingham-1.5.0.post1-py2.py3-none-any.whl (9.4 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting tomli<3.0.0,>=2.0.1 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting tomlkit<1.0.0,>=0.11.4 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading tomlkit-0.11.8-py3-none-any.whl (35 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting trove-classifiers>=2022.5.19 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading trove_classifiers-2023.5.24-py3-none-any.whl (13 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting urllib3<2.0.0,>=1.26.0 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 143.1/143.1 kB 8.7 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting virtualenv<21.0.0,>=20.22.0 (from poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.3/3.3 MB 14.6 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting msgpack>=0.5.2 (from cachecontrol[filecache]<0.13.0,>=0.12.9->poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading msgpack-1.0.5-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (322 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 322.4/322.4 kB 9.1 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting rapidfuzz<3.0.0,>=2.2.0 (from cleo<3.0.0,>=2.0.0->poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading rapidfuzz-2.15.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.0/3.0 MB 9.5 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting six>=1.9 (from html5lib<2.0,>=1.0->poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting webencodings (from html5lib<2.0,>=1.0->poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting zipp>=0.5 (from importlib-metadata>=4.4->poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting attrs>=17.4.0 (from jsonschema<5.0.0,>=4.10.0->poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.2/61.2 kB 1.3 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting importlib-resources>=1.4.0 (from jsonschema<5.0.0,>=4.10.0->poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading importlib_resources-5.12.0-py3-none-any.whl (36 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting pkgutil-resolve-name>=1.3.10 (from jsonschema<5.0.0,>=4.10.0->poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading pkgutil_resolve_name-1.3.10-py3-none-any.whl (4.7 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 (from jsonschema<5.0.0,>=4.10.0->poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading pyrsistent-0.19.3-py3-none-any.whl (57 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 57.5/57.5 kB 899.9 kB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting jaraco.classes (from keyring<24.0.0,>=23.9.0->poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading jaraco.classes-3.2.3-py3-none-any.whl (6.0 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting SecretStorage>=3.2 (from keyring<24.0.0,>=23.9.0->poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading SecretStorage-3.3.3-py3-none-any.whl (15 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting jeepney>=0.4.2 (from keyring<24.0.0,>=23.9.0->poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading jeepney-0.8.0-py3-none-any.whl (48 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 48.4/48.4 kB 1.6 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting ptyprocess>=0.5 (from pexpect<5.0.0,>=4.7.0->poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting charset-normalizer<4,>=2 (from requests<3.0,>=2.18->poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading charset_normalizer-3.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (195 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 195.9/195.9 kB 3.2 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting idna<4,>=2.5 (from requests<3.0,>=2.18->poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 61.5/61.5 kB 2.6 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting certifi>=2017.4.17 (from requests<3.0,>=2.18->poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 157.0/157.0 kB 3.5 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting distlib<1,>=0.3.6 (from virtualenv<21.0.0,>=20.22.0->poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 468.5/468.5 kB 9.3 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting cryptography>=2.0 (from SecretStorage>=3.2->keyring<24.0.0,>=23.9.0->poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading cryptography-41.0.1-cp37-abi3-manylinux_2_28_x86_64.whl (4.3 MB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 4.3/4.3 MB 10.3 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting more-itertools (from jaraco.classes->keyring<24.0.0,>=23.9.0->poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading more_itertools-9.1.0-py3-none-any.whl (54 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 54.2/54.2 kB 1.2 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting cffi>=1.12 (from cryptography>=2.0->SecretStorage>=3.2->keyring<24.0.0,>=23.9.0->poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading cffi-1.15.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (442 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 442.7/442.7 kB 8.9 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Collecting pycparser (from cffi>=1.12->cryptography>=2.0->SecretStorage>=3.2->keyring<24.0.0,>=23.9.0->poetry)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 118.7/118.7 kB 8.1 MB/s eta 0:00:00\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Installing collected packages: webencodings, trove-classifiers, ptyprocess, msgpack, lockfile, distlib, zipp, urllib3, tomlkit, tomli, six, shellingham, rapidfuzz, pyrsistent, pycparser, poetry-core, platformdirs, pkgutil-resolve-name, pkginfo, pexpect, packaging, more-itertools, jeepney, installer, idna, filelock, crashtest, charset-normalizer, certifi, attrs, virtualenv, requests, pyproject-hooks, jaraco.classes, importlib-resources, importlib-metadata, html5lib, dulwich, cleo, cffi, requests-toolbelt, jsonschema, cryptography, cachecontrol, build, SecretStorage, keyring, poetry-plugin-export, poetry\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Successfully installed SecretStorage-3.3.3 attrs-23.1.0 build-0.10.0 cachecontrol-0.12.14 certifi-2023.5.7 cffi-1.15.1 charset-normalizer-3.1.0 cleo-2.0.1 crashtest-0.4.1 cryptography-41.0.1 distlib-0.3.6 dulwich-0.21.5 filelock-3.12.2 html5lib-1.1 idna-3.4 importlib-metadata-6.7.0 importlib-resources-5.12.0 installer-0.7.0 jaraco.classes-3.2.3 jeepney-0.8.0 jsonschema-4.17.3 keyring-23.13.1 lockfile-0.12.2 more-itertools-9.1.0 msgpack-1.0.5 packaging-23.1 pexpect-4.8.0 pkginfo-1.9.6 pkgutil-resolve-name-1.3.10 platformdirs-3.8.0 poetry-1.5.1 poetry-core-1.6.1 poetry-plugin-export-1.4.0 ptyprocess-0.7.0 pycparser-2.21 pyproject-hooks-1.0.0 pyrsistent-0.19.3 rapidfuzz-2.15.1 requests-2.31.0 requests-toolbelt-1.0.0 shellingham-1.5.0.post1 six-1.16.0 tomli-2.0.1 tomlkit-0.11.8 trove-classifiers-2023.5.24 urllib3-1.26.16 virtualenv-20.23.1 webencodings-0.5.1 zipp-3.15.0\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | [notice] A new release of pip is available: 21.1.1 -> 23.1.2\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | [notice] To update, run: pip install --upgrade pip\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Creating virtualenv pydantic-xml-cs42HuFY-py3.8 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Updating dependencies\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Resolving dependencies...\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Package operations: 24 installs, 1 update, 0 removals\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing packaging (23.1)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing distlib (0.3.6)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing exceptiongroup (1.1.1)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing iniconfig (2.0.0)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing filelock (3.12.2)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing platformdirs (3.8.0)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Updating setuptools (67.8.0 -> 68.0.0)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing pluggy (1.2.0)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing tomli (2.0.1)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing cfgv (3.3.1)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing coverage (7.2.7)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing identify (2.5.24)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing lxml (4.9.2)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing mypy-extensions (1.0.0)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing nodeenv (1.8.0)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing pytest (7.4.0)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing pyyaml (6.0)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing typing-extensions (4.7.0)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing virtualenv (20.23.1)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing lxml-stubs (0.4.0)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing mypy (0.971)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing pre-commit (2.21.0)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing pydantic (1.10.10)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing pytest-cov (3.0.0)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   \u2022 Installing xmldiff (2.5)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Writing lock file\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \u2705  Success - Main Install dependencies\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test] \u2b50 Run Main Run pre-commit hooks\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | [INFO] Initializing environment for https://github.com/pre-commit/pre-commit-hooks.\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | [INFO] Initializing environment for https://github.com/asottile/add-trailing-comma.\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | [INFO] Initializing environment for https://github.com/pre-commit/mirrors-autopep8.\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | [INFO] Initializing environment for https://github.com/pycqa/flake8.\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | [INFO] Initializing environment for https://github.com/pycqa/isort.\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | [INFO] Initializing environment for https://github.com/pre-commit/mirrors-mypy.\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | [INFO] Initializing environment for https://github.com/pre-commit/mirrors-mypy:lxml-stubs,pydantic.\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | [INFO] Installing environment for https://github.com/pre-commit/pre-commit-hooks.\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | [INFO] Once installed this environment will be reused.\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | [INFO] This may take a few minutes...\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | [INFO] Installing environment for https://github.com/pycqa/flake8.\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | [INFO] Once installed this environment will be reused.\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | [INFO] This may take a few minutes...\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | [INFO] Installing environment for https://github.com/pycqa/isort.\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | [INFO] Once installed this environment will be reused.\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | [INFO] This may take a few minutes...\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | check yaml...............................................................Passed\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | check toml...............................................................Passed\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | check line ending........................................................Passed\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | flake8...................................................................Passed\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | check import order.......................................................Passed\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \u2705  Success - Main Run pre-commit hooks\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test] \u2b50 Run Main Run tests (lxml)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | ============================= test session starts ==============================\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | platform linux -- Python 3.8.11, pytest-7.4.0, pluggy-1.2.0\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dapper91-pydantic-xml\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | plugins: cov-3.0.0\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | collected 181 items\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_encoder.py .......                                            [  3%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_entity_naming.py ............................                 [ 19%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_examples.py ...................................               [ 38%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_forward_ref.py .............                                  [ 45%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_generics.py ...                                               [ 47%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_heterogeneous_collections.py ......                           [ 50%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_homogeneous_collections.py ......                             [ 54%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_mappings.py .....                                             [ 56%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_misc.py .......                                               [ 60%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_namespaces.py .....................                           [ 72%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_primitives.py ......                                          [ 75%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_search_modes.py ...................                           [ 86%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_submodels.py ......                                           [ 89%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_unions.py .......ss                                           [ 94%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_wrapped.py ..........                                         [100%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | =============================== warnings summary ===============================\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | ../../../home/runneradmin/.cache/pypoetry/virtualenvs/pydantic-xml-cs42HuFY-py3.8/lib/python3.8/site-packages/xmldiff/main.py:2\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   /home/runneradmin/.cache/pypoetry/virtualenvs/pydantic-xml-cs42HuFY-py3.8/lib/python3.8/site-packages/xmldiff/main.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |     import pkg_resources\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dapper91-pydantic-xml/report.xml -\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | ================== 179 passed, 2 skipped, 1 warning in 1.80s ===================\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \u2705  Success - Main Run tests (lxml)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test] \u2b50 Run Main Run tests (std)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | ============================= test session starts ==============================\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | platform linux -- Python 3.8.11, pytest-7.4.0, pluggy-1.2.0\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dapper91-pydantic-xml\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | plugins: cov-3.0.0\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | collected 181 items\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_encoder.py .......                                            [  3%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_entity_naming.py ............................                 [ 19%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_examples.py ...................................               [ 38%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_forward_ref.py .............                                  [ 45%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_generics.py ...                                               [ 47%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_heterogeneous_collections.py ......                           [ 50%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_homogeneous_collections.py ......                             [ 54%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_mappings.py .....                                             [ 56%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_misc.py .......                                               [ 60%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_namespaces.py .s...................                           [ 72%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_primitives.py ......                                          [ 75%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_search_modes.py ...................                           [ 86%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_submodels.py ......                                           [ 89%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_unions.py .......ss                                           [ 94%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | tests/test_wrapped.py ..........                                         [100%]\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | =============================== warnings summary ===============================\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | ../../../home/runneradmin/.cache/pypoetry/virtualenvs/pydantic-xml-cs42HuFY-py3.8/lib/python3.8/site-packages/pytest_cov/plugin.py:256\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   /home/runneradmin/.cache/pypoetry/virtualenvs/pydantic-xml-cs42HuFY-py3.8/lib/python3.8/site-packages/pytest_cov/plugin.py:256: PytestDeprecationWarning: The hookimpl CovPlugin.pytest_configure_node uses old-style configuration options (marks or attributes).\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Please use the pytest.hookimpl(optionalhook=True) decorator instead\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |    to configure the hooks.\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |    See https://docs.pytest.org/en/latest/deprecations.html#configuring-hook-specs-impls-using-markers\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |     def pytest_configure_node(self, node):\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | ../../../home/runneradmin/.cache/pypoetry/virtualenvs/pydantic-xml-cs42HuFY-py3.8/lib/python3.8/site-packages/pytest_cov/plugin.py:265\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   /home/runneradmin/.cache/pypoetry/virtualenvs/pydantic-xml-cs42HuFY-py3.8/lib/python3.8/site-packages/pytest_cov/plugin.py:265: PytestDeprecationWarning: The hookimpl CovPlugin.pytest_testnodedown uses old-style configuration options (marks or attributes).\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   Please use the pytest.hookimpl(optionalhook=True) decorator instead\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |    to configure the hooks.\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |    See https://docs.pytest.org/en/latest/deprecations.html#configuring-hook-specs-impls-using-markers\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |     def pytest_testnodedown(self, node, error):\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | ../../../home/runneradmin/.cache/pypoetry/virtualenvs/pydantic-xml-cs42HuFY-py3.8/lib/python3.8/site-packages/xmldiff/main.py:2\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   /home/runneradmin/.cache/pypoetry/virtualenvs/pydantic-xml-cs42HuFY-py3.8/lib/python3.8/site-packages/xmldiff/main.py:2: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |     import pkg_resources\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/dapper91-pydantic-xml/report.xml -\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | ---------- coverage: platform linux, python 3.8.11-final-0 -----------\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Coverage XML written to file coverage.xml\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | ================== 178 passed, 3 skipped, 3 warnings in 2.54s ==================\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \u2705  Success - Main Run tests (std)\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test] \u2b50 Run Main Upload coverage to Codecov\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/5a4cb33a-3740-4cc9-91ec-6eb48535e116/act/codecov-codecov-action@v1/ dst=/var/run/act/actions/codecov-codecov-action@v1/\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/codecov-codecov-action@v1/] user=0 workdir=\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v1/dist/index.js] user= workdir=\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | [command]/usr/bin/bash codecov.sh -n  -F unittests -Q github-action-v1.5.2 -Z -f ./coverage.xml\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   _____          _\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |  / ____|        | |\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | | |     ___   __| | ___  ___ _____   __\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | | |    / _ \\ / _` |/ _ \\/ __/ _ \\ \\ / /\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | | |___| (_) | (_| |  __/ (_| (_) \\ V /\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |  \\_____\\___/ \\__,_|\\___|\\___\\___/ \\_/\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |                               Bash-1.0.3\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \u001b[0;36m==>\u001b[0m git version 2.33.0 found\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \u001b[0;36m==>\u001b[0m curl 7.68.0 (x86_64-pc-linux-gnu) libcurl/7.68.0 OpenSSL/1.1.1f zlib/1.2.11 brotli/1.0.7 libidn2/2.2.0 libpsl/0.21.0 (+libidn2/2.2.0) libssh/0.9.3/openssl/zlib nghttp2/1.40.0 librtmp/2.3\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Release-Date: 2020-01-08\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtmp rtsp scp sftp smb smbs smtp smtps telnet tftp \n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | Features: AsynchDNS brotli GSS-API HTTP2 HTTPS-proxy IDN IPv6 Kerberos Largefile libz NTLM NTLM_WB PSL SPNEGO SSL TLS-SRP UnixSockets\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \u001b[0;90m==>\u001b[0m GitHub Actions detected.\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |     Env vars used:\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |       -> GITHUB_ACTIONS:    true\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |       -> GITHUB_HEAD_REF:   \n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |       -> GITHUB_REF:        refs/tags/v0.7.0\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |       -> GITHUB_REPOSITORY: dapper91/pydantic-xml\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |       -> GITHUB_RUN_ID:     1\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |       -> GITHUB_SHA:        8d83744681f52c7863e6bfbae7c21b983e79efa4\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |       -> GITHUB_WORKFLOW:   9f9684a8-dbd5-4481-a7a3-e8bdcd799194\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |     \u001b[0;90mproject root:\u001b[0m .\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |     \u001b[0;32mYaml not found, that's ok! Learn more at\u001b[0m \u001b[0;36mhttp://docs.codecov.io/docs/codecov-yaml\u001b[0m\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |     \u001b[0;90m->\u001b[0m Found 1 reports\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \u001b[0;90m==>\u001b[0m Detecting git/mercurial file structure\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \u001b[0;90m==>\u001b[0m Reading reports\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |     \u001b[0;32m+\u001b[0m ./coverage.xml \u001b[0;90mbytes=43577\u001b[0m\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \u001b[0;90m==>\u001b[0m Appending adjustments\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |     \u001b[0;36mhttps://docs.codecov.io/docs/fixing-reports\u001b[0m\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |     \u001b[0;90m->\u001b[0m No adjustments found\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \u001b[0;90m==>\u001b[0m Gzipping contents\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |         4.0K\t/tmp/codecov.J83OSN.gz\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \u001b[0;90m==>\u001b[0m Uploading reports\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |     \u001b[0;90murl:\u001b[0m https://codecov.io\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |     \u001b[0;90mquery:\u001b[0m branch=refs%2Ftags%2Fv0.7.0&commit=8d83744681f52c7863e6bfbae7c21b983e79efa4&build=1&build_url=http%3A%2F%2Fgithub.com%2Fdapper91%2Fpydantic-xml%2Factions%2Fruns%2F1&name=&tag=&slug=dapper91%2Fpydantic-xml&service=github-actions&flags=unittests&pr=&job=9f9684a8-dbd5-4481-a7a3-e8bdcd799194&cmd_args=n,F,Q,Z,f\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \u001b[0;90m->\u001b[0m  Pinging Codecov\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | https://codecov.io/upload/v4?package=github-action-v1.5.2-1.0.3&token=secret&branch=refs%2Ftags%2Fv0.7.0&commit=8d83744681f52c7863e6bfbae7c21b983e79efa4&build=1&build_url=http%3A%2F%2Fgithub.com%2Fdapper91%2Fpydantic-xml%2Factions%2Fruns%2F1&name=&tag=&slug=dapper91%2Fpydantic-xml&service=github-actions&flags=unittests&pr=&job=9f9684a8-dbd5-4481-a7a3-e8bdcd799194&cmd_args=n,F,Q,Z,f\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \u001b[0;31m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | 404\u001b[0m\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \u001b[0;90m==>\u001b[0m Uploading to Codecov\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |                                  Dload  Upload   Total   Spent    Left  Speed\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   | \r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100  3812  100   171  100  3641    386   8237 --:--:-- --:--:-- --:--:--  8624\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   |     \u001b[0;32m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\u001b[0m\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \u2757  ::error::Codecov failed with the following error: The process '/usr/bin/bash' failed with exit code 1\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test]   \u274c  Failure - Main Upload coverage to Codecov\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test] exitcode '1': failure\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test] failed to remove container: Delete \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/7fe3363f49476761a3f5ab724546256c54c522c79e5d1816ba13ebb0a53d5578?force=1&v=1\": context deadline exceeded\n[9f9684a8-dbd5-4481-a7a3-e8bdcd799194/test] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Error occurred running finally: Error occurred running finally: context deadline exceeded (original error: <nil>) (original error: <nil>)\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/dapper91-pydantic-xml/.github/workflows/test-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "9f9684a8-dbd5-4481-a7a3-e8bdcd799194",
        "build_tool": "pytest",
        "elapsed_time": 401.9248011112213
    }
}