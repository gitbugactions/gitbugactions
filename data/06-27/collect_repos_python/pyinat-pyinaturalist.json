{
    "repository": "pyinat/pyinaturalist",
    "stars": 90,
    "language": "python",
    "size": 14882,
    "clone_url": "https://github.com/pyinat/pyinaturalist.git",
    "timestamp": "2023-07-01T12:48:39.957032Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "test.test_client",
                "name": "test_client_settings[client_settings0-request_params0-expected_params0]",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observation__converters",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__emoji[47158]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_pprint[response9]",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_controlled_term__empty",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_ensure_list__csv[a,b-,-expected_output0]",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_pprint[response15]",
                "time": 0.1,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__icon_url[Mollusca]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__emoji[47686]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_ensure_list[1-expected_output2]",
                "time": 0.082,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__icon_url[Insecta]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__icon_url[Mammalia]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_format_table[response15]",
                "time": 0.11,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__derived_status_name[PR-None-Norma-sujeta a protecci\\xf3n especial]",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_auth",
                "name": "test_get_access_token__missing_creds",
                "time": 0.101,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observation__missing_default_photo_and_taxon",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__emoji[40151]",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_annotation__converters",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_controlled_term__get_value_by_id",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observation_field_value__empty",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_format_histogram__int_keys",
                "time": 0.095,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_convert_observation_timestamps[None-2020-12-10T00:00+02:00-None-expected_created3]",
                "time": 0.108,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_comment__str",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_search__place",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__no_default_photo[47115]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_copy",
                "time": 0.095,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_format_file_size[5242880000-4.88 GB]",
                "time": 0.103,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_photo__str",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observation__default_photo",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_message__empty",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_format_table[response1]",
                "time": 0.116,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_annotation__label_setters",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__no_default_photo[47158]",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_ensure_file_obj__path",
                "time": 0.14,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_life_list__get_count",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_pprint[response3]",
                "time": 0.122,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__converters",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_format_response",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_pprint[response7]",
                "time": 0.115,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_client",
                "name": "test_client_settings[client_settings2-request_params2-expected_params2]",
                "time": 0.114,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_photo__license",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_format_table[response3]",
                "time": 0.109,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observation__ofvs",
                "time": 0.093,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_comment__converters",
                "time": 0.082,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__establishment_means",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_listed_taxon__id_wrapper_properties",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_photo__converters",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_pprint[response1]",
                "time": 0.118,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_from_json_file",
                "time": 0.106,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__ancestor_ids",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_format_table[response5]",
                "time": 0.158,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__no_default_photo[20978]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__emoji[47115]",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_client",
                "name": "test_client_settings[client_settings6-request_params6-expected_params6]",
                "time": 0.117,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_format_dimensions[input1-expected_output1]",
                "time": 0.119,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_pprint[response13]",
                "time": 0.104,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_auth",
                "name": "test_get_access_token__cached_jwt",
                "time": 0.206,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observation_field_value__taxon",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__autocomplete",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observation_field__converters",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_convert_lat_long[input4-expected_output4]",
                "time": 0.103,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__emoji[1]",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__str",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_convert_lat_long[1234.5, 6789.0-expected_output0]",
                "time": 0.098,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__icon_url[Amphibia]",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_convert_observation_timestamps[2020-09-27T9:20:02-08:00-2020-10-01T00:00-08:00-expected_observed1-expected_created1]",
                "time": 0.101,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_ensure_list[input4-expected_output4]",
                "time": 0.099,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observation_field__str",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_pretty_print",
                "time": 0.14,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_auth",
                "name": "test_get_access_token__mixed_args_and_envars",
                "time": 0.147,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_ensure_list[None-expected_output0]",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__derived_status_name[S3S4B-None-Vermont Fish & Wildlife-vulnerable]",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__emoji[47170]",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_format_table__unknown_type",
                "time": 0.099,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_convert_lat_long[input2-expected_output2]",
                "time": 0.097,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_format_license",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_format_table[response7]",
                "time": 0.114,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__derived_status_name[S2S3-None-NatureServe-imperiled]",
                "time": 0.079,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observation__ident_taxon_ids__current_only",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_compat",
                "name": "test_v0_imports",
                "time": 0.106,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__icon_url[Protozoa]",
                "time": 0.053,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_ensure_list__csv[a|b-|-expected_output2]",
                "time": 0.096,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_auth",
                "name": "test_get_keyring_credentials",
                "time": 0.109,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__conservation_status_aliases",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_annotation__init_from_ids",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_format_table[response13]",
                "time": 0.107,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__derived_status_name[ASDF-None-None-placeholder status]",
                "time": 0.116,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__no_default_photo[40151]",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__derived_status_name[G2-None-NatureServe-imperiled]",
                "time": 0.092,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__icon_url[Fungi]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_sound__converters",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__icon_url[Animalia]",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_photo__guess_url",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__derived_status_name[S2S9-None-NatureServe-placeholder status]",
                "time": 0.107,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_controlled_term__value",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observation_field_value__datetime",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_auth",
                "name": "test_get_access_token__oauth",
                "time": 0.163,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_photo__urls[large]",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__no_default_photo[1]",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_format_file_size[3072-3.00 KB]",
                "time": 0.115,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_project__empty",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__emoji[20978]",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_format_table[response11]",
                "time": 0.125,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_pprint[response5]",
                "time": 0.149,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__derived_status_name[X-None-NatureServe-extinct]",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__display_name_duplication",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon_properties__partial",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_place__empty",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_copy_collection",
                "time": 0.118,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_search__taxon",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_life_list__converters",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_client",
                "name": "test_client_settings[client_settings4-request_params4-expected_params4]",
                "time": 0.1,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__id_wrapper_properties",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_identification__empty",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_safe_split[a | b-expected_output1]",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__derived_status_name[LC-None-None-least concern]",
                "time": 0.095,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_convert_lat_long[input8-None]",
                "time": 0.109,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_annotation__str_without_labels",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observation__cumulative_ids__most_agree",
                "time": 0.093,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__derived_status_name[vu-None-iucn-vulnerable]",
                "time": 0.094,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_photo__urls[small]",
                "time": 0.057,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_pprint[response11]",
                "time": 0.099,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_format_table[response9]",
                "time": 0.122,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_to_dict",
                "time": 0.103,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_convert_lat_long[1234.5, 6789.0, 000-None]",
                "time": 0.115,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_auth",
                "name": "test_get_keyring_credentials__no_backend",
                "time": 0.125,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_default_rich_repr",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_format_file_size[None-0 bytes]",
                "time": 0.109,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_annotation__empty",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_controlled_term__str",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observation_field_value__str",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_convert_observation_timestamps[Sat Sep 26 2020 12:09:51 -07:00-None-expected_observed0-None]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_identification__converters",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_search__project",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_deepcopy",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_place__converters",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_format_file_size[5242880000000-4882.81 GB]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_message__str",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__no_default_photo[47126]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_format_table[response2]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__no_default_photo[47119]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_message__converters",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observation__missing_default_photo",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_format_table[response4]",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__empty",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_format_table[response16]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_photo__urls[square]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__properties",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__listed_taxa",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observation__project_observations",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_auth",
                "name": "test_get_access_token__invalid_creds",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_from_json_list",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__no_default_photo[26036]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_format_dimensions[input2-expected_output2]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__emoji[47178]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__all_names",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__derived_status_name[E-None-None-endangered]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__emoji[47119]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_pprint[response14]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_client",
                "name": "test_client_auth",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__conservation_status",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observation_field_value__date",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_auth",
                "name": "test_get_access_token__keyring",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_format_request",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_client",
                "name": "test_client_settings[client_settings1-request_params1-expected_params1]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__ancestors_children",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__emoji[3]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observation_field_value__numeric",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observation_field__empty",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_client",
                "name": "test_client_settings[client_settings3-request_params3-expected_params3]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_from_json",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__icon_url[Reptilia]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_pprint[response2]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_convert_lat_long[input3-expected_output3]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_format_table[response6]",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_convert_observation_timestamps[2020-12-04T21:00+02:00-2020-12-10T00:00+02:00-expected_observed2-expected_created2]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__no_default_photo[0]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_pprint[response0]",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_format_histogram__datetime_keys",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__emoji[48222]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_compat",
                "name": "test_v1_imports",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__icon_url[Unknown]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_annotation__init_from_labels",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_ensure_list[input1-expected_output1]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__no_default_photo[47178]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_format_table[response14]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__conservation_statuses",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__derived_status_name[ASDF-None-NatureServe-placeholder status]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__derived_status_name[S2-None-NatureServe-imperiled]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__derived_status_name[N2N4-None-NatureServe-vulnerable]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_auth",
                "name": "test_get_access_token__envars",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__icon_url[Plantae]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_sound__aliases",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_ensure_list[a,b-expected_output3]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__emoji[47126]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_convert_lat_long[input1-expected_output1]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_pprint[response10]",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_ensure_list__csv[a , b-,-expected_output1]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_photo__properties",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_format_table[response8]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_auth",
                "name": "test_get_keyring_credentials__not_installed",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__display_name",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__icon_url[Chromista]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__icon_url[Aves]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_safe_split[None-expected_output0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_photo__urls[original]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_format_table[response12]",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_format_file_size[3072000-2.93 MB]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__no_default_photo[3]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observation__ccumulative_ids__all_agree",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_pprint[response16]",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__original_status_name",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observation_field_value__converter_error",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_pprint[response6]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_controlled_term__properties",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_auth",
                "name": "test_get_access_token__jwt",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_search__empty",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_search__user",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__derived_status_name[2-None-NatureServe-imperiled]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_photo__empty",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__emoji[26036]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_ensure_file_obj__url",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_pprint[response8]",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_life_list__empty",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_annotation__str_with_labels",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_client",
                "name": "test_client_settings[client_settings5-request_params5-expected_params5]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observation__ident_taxon_ids",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_identification__str",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__icon_url[Actinopterygii]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_format_dimensions[None-expected_output0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_deduplicate",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__derived_status_name[sc-None-None-special concern]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_controlled_term__converters",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_ensure_file_obj__obj",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__derived_status_name[A-None-norma_oficial_059-amenazada]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__str",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_controlled_term_counts",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_places__nearby",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__emoji[0]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observations",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_ensure_list[input5-expected_output5]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_pprint[response4]",
                "time": 0.046,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_observation__empty",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_pprint[response12]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_photo__urls[medium]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_format_table[response10]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__derived_status_name[None-0-None-not evaluated]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__icon_url[Arachnida]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_to_dict__specific_keys",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_convert_lat_long[None-None]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_formatters",
                "name": "test_format_table[response0]",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_auth",
                "name": "test_set_keyring_credentials",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__no_default_photo[47170]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_comment__empty",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_conservation_status__derived_status_name[LC-None-IUCN-least concern]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_format_file_size[5-5 bytes]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_converters",
                "name": "test_convert_lat_long[input7-None]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__no_default_photo[48222]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__no_default_photo[47686]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon_count__copy",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon_counts__empty",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__load_full_record",
                "time": 0.062,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon__taxonomy",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon_summary",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_user__converters",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_user__partial",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_user__empty",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_user__str",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_user_count__str",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_taxon_counts__converters",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_user_counts__identifiers",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_paginator",
                "name": "test_iter",
                "time": 0.169,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_user__properties",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_paginator",
                "name": "test_iter__with_limit",
                "time": 0.09,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_user_counts__empty",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_paginator",
                "name": "test_async_iter__custom_loop",
                "time": 0.133,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_paginator",
                "name": "test_async_iter",
                "time": 0.125,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_paginator",
                "name": "test_wrapper_paginator",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_paginator",
                "name": "test_next_page__exhausted",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_convert_bool_params",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_models",
                "name": "test_user_counts__observers",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_convert_datetime_params[created_on-2010-10-10 10:10:10-05:00-2010-10-10T10:10:10-05:00]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_convert_observation_fields",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_convert_datetime_params[q-value5-1954-02-05]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_paginator",
                "name": "test_str",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_convert_datetime_params[created_d1-19951231T235959-1995-12-31T23:59:59-08:00]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_convert_datetime_params[q-not a datetime-not a datetime]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_convert_datetime_params[created_on-Jan 1 2000-2000-01-01T00:00:00-08:00]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_paginator",
                "name": "test_count",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_convert_list_params",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_convert_datetime_params[d1-19970716-1997-07-16T00:00:00-07:00]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_convert_datetime_params[q-value6-1954-02-05T00:00:00-08:00]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_convert_datetime_params[created_d2-2008-08-08 08:08:08Z-2008-08-08T08:08:08+00:00]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_get_interval_ranges__day[2020-01-01-2020-01-05-day]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_get_interval_ranges__day[2020-01-01-2020-01-05-interval2]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_validate_ids[1-11]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_preprocess_request_body",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_get_interval_ranges__month",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_validate_ids__invalid",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_strip_empty_params",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_validate_ids[1,2,3-1,2,3]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_normalize_rank",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_validate_multiple_choice_param",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_get_interval_ranges__day[start0-end0-day]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_paginator",
                "name": "test_async_all",
                "time": 0.107,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_validate_multiple_choice_params[params7]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_preprocess_request_params",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_get_interval_ranges__year",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_validate_multiple_choice_params[params2]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_validate_ids[1-10]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_convert_pagination_params",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_validate_multiple_choice_params[params4]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_validate_multiple_choice_params__normalization[params1-month_of_year]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_validate_multiple_choice_params[params5]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_validate_ids[value3-1,2,3]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_validate_ids[value4-100000,200000]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_validate_multiple_choice_params[params10]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_dry_run[False-True-GET-True]",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_validate_multiple_choice_params[params3]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_validate_multiple_choice_params[params1]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_validate_multiple_choice_params[params8]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_dry_run[False-False-GET-True]",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_http_methods[put-PUT]",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_headers",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_normalize_rank_params",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_http_methods[delete-DELETE]",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_validate_multiple_choice_params[params0]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_validate_multiple_choice_params[params9]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_http_methods[get-GET]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_http_methods[post-POST]",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_validate_multiple_choice_params[params6]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_request_params",
                "name": "test_validate_multiple_choice_params__normalization[params0-most_agree]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_dry_run[False-False-HEAD-True]",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_dry_run[True-False-GET-False]",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_dry_run[True-False-POST-False]",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_dry_run[False-True-DELETE-False1]",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_dry_run[true-False-GET-False]",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_dry_run[True-False-PUT-False]",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_validate_json__retry_failure",
                "time": 5.62,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_dry_run[False-False-PUT-True]",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_dry_run_disabled",
                "time": 0.092,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_dry_run[False-False-DELETE-True]",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_dry_run[False-None-DELETE-True]",
                "time": 5.523,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_session__custom_expiration",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_dry_run[none-False-POST-True]",
                "time": 5.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_session__custom_retry",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_session__cache_file",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_dry_run[False-True-POST-False]",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_dry_run[false-False-GET-True]",
                "time": 5.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_dry_run[False-True-DELETE-False0]",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_dry_run[False-True-PUT-False]",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_validate_json__retry_success",
                "time": 0.126,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_controlled_terms_controller",
                "name": "test_all",
                "time": 0.061,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_observation_controller",
                "name": "test_search",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_get_local_session",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_observation_controller",
                "name": "test_from_ids__limit",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_session__send__cache_settings",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_clear_cache",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_get_refresh_params",
                "time": 2.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_session__send",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_observation_controller",
                "name": "test_from_id__not_found",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_observation_controller",
                "name": "test_from_ids",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_dry_run_kwarg",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_observation_controller",
                "name": "test_from_id",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_controlled_terms_controller",
                "name": "test_lookup",
                "time": 0.112,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.test_session",
                "name": "test_request_dry_run[False-False-POST-True]",
                "time": 5.169,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_observation_controller",
                "name": "test_search__with_annotations",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_controlled_terms_controller",
                "name": "test_for_taxon",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_observation_controller",
                "name": "test_identifiers",
                "time": 0.096,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_observation_controller",
                "name": "test_search__with_ofvs",
                "time": 0.117,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_observation_controller",
                "name": "test_observers",
                "time": 0.1,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_observation_controller",
                "name": "test_species_counts",
                "time": 0.092,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_observation_controller",
                "name": "test_taxon_summary__with_listed_taxon",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_place_controller",
                "name": "test_autocomplete",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_project_controller",
                "name": "test_from_id",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_observation_controller",
                "name": "test_taxon_summary__with_conservation_status",
                "time": 0.082,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_place_controller",
                "name": "test_nearby",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_observation_controller",
                "name": "test_life_list",
                "time": 0.091,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_project_controller",
                "name": "test_from_ids",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_place_controller",
                "name": "test_from_id",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_place_controller",
                "name": "test_get_places_autocomplete__all_pages",
                "time": 0.118,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_place_controller",
                "name": "test_from_ids",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_observation_controller",
                "name": "test_histogram",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_project_controller",
                "name": "test_search",
                "time": 0.096,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_taxon_controller",
                "name": "test_search",
                "time": 0.092,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_user_controller",
                "name": "test_from_id",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_observation_controller",
                "name": "test_popular_fields",
                "time": 0.122,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_project_controller",
                "name": "test_add_observation",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_project_controller",
                "name": "test_search__with_obs_fields",
                "time": 0.109,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_taxon_controller",
                "name": "test_autocomplete",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.docs.test_docstrings",
                "name": "test_copy_docstrings__without_returns",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_user_controller",
                "name": "test_me",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_taxon_controller",
                "name": "test_taxon__populate",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_user_controller",
                "name": "test_autocomplete",
                "time": 0.085,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_taxon_controller",
                "name": "test_from_id",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.docs.test_docstrings",
                "name": "test_copy_docstrings",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.docs.test_docstrings",
                "name": "test_copy_docstrings__extend_args",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_user_controller",
                "name": "test_from_ids",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.docs.test_signatures",
                "name": "test_copy_signatures",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_create_observation",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_create_observation__with_photos",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_get_observations__invalid_format[geojson]",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_update_observation",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_get_observations[json]",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_update_observation__with_photos",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_get_observations[dwc]",
                "time": 0.082,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_get_observations[csv]",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_get_observations__invalid_format[yaml]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_update_nonexistent_observation",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_get_observations[atom]",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_create_observation__with_datetime",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_update_observation__with_sounds",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_create_observation_fail",
                "time": 0.078,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.controllers.test_taxon_controller",
                "name": "test_from_ids",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_identifications",
                "name": "test_get_identifications",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_create_observation__with_sounds",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_identifications",
                "name": "test_get_identifications_by_id",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_update_observation_not_mine",
                "time": 0.093,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_get_observations__all_pages",
                "time": 0.125,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_delete_observation",
                "time": 0.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_messages",
                "name": "test_get_unread_meassage_count",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_delete_unexisting_observation",
                "time": 0.16,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_controlled_terms",
                "name": "test_get_controlled_terms_for_taxon",
                "time": 0.072,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observation_fields",
                "name": "test_delete_observation_field",
                "time": 0.063,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observation_fields",
                "name": "test_set_observation_field",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_node_api",
                "name": "test_get_user_by_id",
                "time": 0.082,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_node_api",
                "name": "test_get_users_autocomplete",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_controlled_terms",
                "name": "test_get_controlled_terms",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_get_observations__by_obs_field",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_upload_photos",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observation_fields_v0",
                "name": "test_get_observation_fields",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_messages",
                "name": "test_get_unread_meassage_count__invalid",
                "time": 0.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_get_observation_histogram",
                "time": 0.105,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_get_observations",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_get_observations[kml]",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_get_observations[widget]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_messages",
                "name": "test_get_message_by_id",
                "time": 0.083,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_get_observations_by_id__multiple",
                "time": 0.069,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_messages",
                "name": "test_get_messages__threads",
                "time": 0.092,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_get_observation",
                "time": 0.089,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_messages",
                "name": "test_get_messages",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_get_observation_identifiers",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_get_observation__non_existent",
                "time": 0.066,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observation_fields_v0",
                "name": "test_put_observation_field_values",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observation_fields_v0",
                "name": "test_get_observation_fields__all_pages",
                "time": 0.082,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_get_observation_taxon_summary__with_conservation_status",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_get_observation_species_counts__all_pages",
                "time": 0.109,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_get_observation_taxonomy",
                "time": 0.076,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_get_observations__by_obs_field_values",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_create_observation__with_files",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_update_observation",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v0.test_observations_v0",
                "name": "test_upload_sounds",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.docs.test_signatures",
                "name": "test_document_request_params",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_get_observation_taxon_summary__with_listed_taxon",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_get_observation_popular_field_values",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_places",
                "name": "test_get_places_autocomplete",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_get_observations_by_id",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_get_observation_observers",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_get_observation_species_counts",
                "time": 0.041,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_create_observation",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_get_observation_species_counts__invalid_multiple_choice_params",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_upload",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_places",
                "name": "test_get_places_autocomplete__single_page",
                "time": 0.091,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_posts",
                "name": "test_get_posts_from_project",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_delete_observation",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_update_observation__with_photo_ids",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_upload__with_photo_ids",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_search",
                "name": "test_search",
                "time": 0.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_projects",
                "name": "test_delete_project_observation",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_projects",
                "name": "test_get_projects",
                "time": 0.045,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_taxa",
                "name": "test_get_taxa_by_id",
                "time": 0.073,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_update_observation__with_photos",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_projects",
                "name": "test_add_project_users",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_places",
                "name": "test_get_places_by_id__invalid_inputs[place_id2]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_observations",
                "name": "test_update_observation__remove_existing_photos",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_projects",
                "name": "test_delete_project_users__no_updates",
                "time": 0.068,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_places",
                "name": "test_get_places_nearby",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_taxa",
                "name": "test_get_taxa_by_rank_range[params3-expected_ranks3]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_projects",
                "name": "test_get_projects_by_id",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_projects",
                "name": "test_update_project",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_projects",
                "name": "test_delete_project_users",
                "time": 0.075,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_projects",
                "name": "test_add_project_users__no_updates",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_places",
                "name": "test_get_places_by_id",
                "time": 0.047,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_taxa",
                "name": "test_get_taxa_by_rank_range[params0-genus]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_taxa",
                "name": "test_get_taxa_by_rank_range[params2-expected_ranks2]",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_taxa",
                "name": "test_get_taxa_by_rank_range[params1-expected_ranks1]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_taxa",
                "name": "test_get_taxa_by_id__invalid_inputs[taxon_id2]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_taxa",
                "name": "test_get_taxa_by_id__invalid_inputs[taxon_id1]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_users",
                "name": "test_get_users_autocomplete",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_users",
                "name": "test_get_current_user",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_projects",
                "name": "test_add_project_observation",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v2.test_observations_v2",
                "name": "test_get_observations__except_fields",
                "time": 0.129,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v2.test_observations_v2",
                "name": "test_get_observations__all_fields",
                "time": 0.052,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v2.test_observations_v2",
                "name": "test_get_observations__minimal",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v2.test_observations_v2",
                "name": "test_get_observations__some_fields",
                "time": 0.036,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_taxa",
                "name": "test_get_taxa_autocomplete",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_taxa",
                "name": "test_get_taxa_by_rank_range[params4-expected_ranks4]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_taxa",
                "name": "test_get_taxa_map_layers",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v2.test_observations_v2",
                "name": "test_get_observations__all_pages",
                "time": 0.091,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_users",
                "name": "test_get_user_by_id",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v2.test_observations_v2",
                "name": "test_get_observations__by_obs_field",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v2.test_observations_v2",
                "name": "test_get_observations__all_pages__post",
                "time": 0.088,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v2.test_observations_v2",
                "name": "test_get_observations__by_obs_field_values",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v2.test_observations_v2",
                "name": "test_get_observations__invalid_fields",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_taxa",
                "name": "test_get_taxa",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_places",
                "name": "test_get_places_autocomplete__all_pages",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_posts",
                "name": "test_get_posts_from_login",
                "time": 0.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_taxa",
                "name": "test_get_taxa_by_id__invalid_inputs[asdf]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_places",
                "name": "test_get_places_by_id__invalid_inputs[place_id1]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "test.v1.test_places",
                "name": "test_get_places_by_id__invalid_inputs[asdf]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ] \ud83d\ude80  Start image=crawlergpt:latest\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze] \ud83d\ude80  Start image=crawlergpt:latest\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/pyinat-pyinaturalist] user=0 workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/pyinat-pyinaturalist] user=0 workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1.3\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2601  git clone 'https://github.com/pre-commit/action' # ref=v3.0.0\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ] \u2b50 Run Pre snok/install-poetry@v1.3\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2705  Success - Pre snok/install-poetry@v1.3\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze] \u2b50 Run Pre Run style checks & linting\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v3\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2705  Success - Pre Run style checks & linting\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze] \u2b50 Run Main actions/checkout@v3\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2705  Success - Main actions/checkout@v3\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze] \u2b50 Run Main actions/setup-python@v4\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udc33  docker cp src=/tmp/act-cache/9ff5aaa8-e12f-4a60-942b-15edfe0616cc/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2753  ::group::Installed versions\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Semantic version spec of 3.11 is 3.11\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::isExplicit: \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::explicit? false\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::explicit? true\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::explicit? true\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::explicit? true\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::explicit? true\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::explicit? true\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::explicit? true\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::evaluating 6 versions\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::match not found\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Version 3.11 was not found in the local cache\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Getting manifest from actions/python-versions@main\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::set auth\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::check 3.12.0-beta.3 satisfies 3.11\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::check 3.12.0-beta.2 satisfies 3.11\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::check 3.12.0-beta.1 satisfies 3.11\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::check 3.12.0-alpha.7 satisfies 3.11\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::check 3.12.0-alpha.6 satisfies 3.11\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::check 3.12.0-alpha.5 satisfies 3.11\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::check 3.12.0-alpha.4 satisfies 3.11\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::check 3.12.0-alpha.3 satisfies 3.11\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::check 3.12.0-alpha.2 satisfies 3.11\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::check 3.12.0-alpha.1 satisfies 3.11\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::check 3.11.4 satisfies 3.11\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::arm64===x64 && darwin===linux\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::x64===x64 && darwin===linux\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::x64===x64 && linux===linux\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::matched 3.11.4\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Version 3.11 is available for downloading\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Download from \"https://github.com/actions/python-versions/releases/download/3.11.4-5199054971/python-3.11.4-linux-20.04-x64.tar.gz\"\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Downloading https://github.com/actions/python-versions/releases/download/3.11.4-5199054971/python-3.11.4-linux-20.04-x64.tar.gz\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Destination /tmp/08633b43-7e0d-43fc-b1a4-d3824fbf19f5\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::set auth\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::download complete\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Extract downloaded archive\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Checking tar --version\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::tar (GNU tar) 1.30%0ACopyright (C) 2017 Free Software Foundation, Inc.%0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.%0AThis is free software: you are free to change and redistribute it.%0AThere is NO WARRANTY, to the extent permitted by law.%0A%0AWritten by John Gilmore and Jay Fenlason.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [command]/usr/bin/tar xz --warning=no-unknown-keyword -C /tmp/20d55fe1-9173-4c2f-8fde-d61141b29f24 -f /tmp/08633b43-7e0d-43fc-b1a4-d3824fbf19f5\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Execute installation script\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Check if Python hostedtoolcache folder exist...\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Create Python 3.11.4 folder\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Copy Python binaries to hostedtoolcache folder\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Create additional symlinks (Required for the UsePythonVersion Azure Pipelines task and the setup-python GitHub Action)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Upgrading pip...\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Looking in links: /tmp/tmp6h0z2dze\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (65.5.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (23.1.2)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ] \ud83e\uddea  Matrix: map[python-version:3.7]\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ] \u2b50 Run Main actions/checkout@v3\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2705  Success - Main actions/checkout@v3\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ] \u2b50 Run Main actions/setup-python@v4\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udc33  docker cp src=/tmp/act-cache/9ff5aaa8-e12f-4a60-942b-15edfe0616cc/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Collecting pip\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 2.1/2.1 MB 14.5 MB/s eta 0:00:00\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Installing collected packages: pip\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2753  ::group::Installed versions\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::isExplicit: \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::explicit? false\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::explicit? true\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::explicit? true\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::explicit? true\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::explicit? true\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::explicit? true\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::explicit? true\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::matched: 3.7.11\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Successfully set up CPython (3.7.11)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2753  ::endgroup::\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2705  Success - Main actions/setup-python@v4\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib/pkgconfig\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.7.11/x64\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.7.11/x64/bin/python\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2699  ::set-output:: python-version=3.7.11\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ] \u2b50 Run Main snok/install-poetry@v1.3\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udc33  docker cp src=/tmp/act-cache/9ff5aaa8-e12f-4a60-942b-15edfe0616cc/act/snok-install-poetry@v1.3/ dst=/var/run/act/actions/snok-install-poetry@v1.3/\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1.3/] user=0 workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ] \u2b50 Run Main Install and configure Poetry\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Successfully installed pip-23.1.2\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Create complete file\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::isExplicit: \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::explicit? false\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::explicit? true\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::isExplicit: 3.11.4\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::explicit? true\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::explicit? true\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::explicit? true\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::explicit? true\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::explicit? true\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::explicit? true\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::evaluating 7 versions\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::matched: 3.11.4\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.11.4/x64\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Found tool in cache Python 3.11.4 x64\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Successfully set up CPython (3.11.4)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2753  ::endgroup::\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2705  Success - Main actions/setup-python@v4\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.11.4/x64\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.11.4/x64/lib/pkgconfig\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.11.4/x64\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.11.4/x64\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.11.4/x64\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.11.4/x64/lib\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2699  ::set-output:: python-version=3.11.4\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.11.4/x64/bin/python\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.11.4/x64\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.11.4/x64/bin\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze] \u2b50 Run Main Run style checks & linting\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udc33  docker cp src=/tmp/act-cache/9ff5aaa8-e12f-4a60-942b-15edfe0616cc/act/pre-commit-action@v3.0.0/ dst=/var/run/act/actions/pre-commit-action@v3.0.0/\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/pre-commit-action@v3.0.0/] user=0 workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze] \u2b50 Run Main python -m pip install pre-commit\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Collecting pre-commit\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   |   Downloading pre_commit-3.3.3-py2.py3-none-any.whl (202 kB)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 202.8/202.8 kB 1.5 MB/s eta 0:00:00\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Collecting cfgv>=2.0.0 (from pre-commit)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   |   Downloading cfgv-3.3.1-py2.py3-none-any.whl (7.3 kB)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Collecting identify>=1.0.0 (from pre-commit)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   |   Downloading identify-2.5.24-py2.py3-none-any.whl (98 kB)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 98.8/98.8 kB 2.4 MB/s eta 0:00:00\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Collecting nodeenv>=0.11.1 (from pre-commit)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   |   Downloading nodeenv-1.8.0-py2.py3-none-any.whl (22 kB)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Collecting pyyaml>=5.1 (from pre-commit)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   |   Downloading PyYAML-6.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (757 kB)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 757.9/757.9 kB 7.6 MB/s eta 0:00:00\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Collecting virtualenv>=20.10.0 (from pre-commit)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   |   Downloading virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 3.3/3.3 MB 46.3 MB/s eta 0:00:00\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages (from nodeenv>=0.11.1->pre-commit) (65.5.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Collecting distlib<1,>=0.3.6 (from virtualenv>=20.10.0->pre-commit)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 468.5/468.5 kB 12.1 MB/s eta 0:00:00\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Collecting filelock<4,>=3.12 (from virtualenv>=20.10.0->pre-commit)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Collecting platformdirs<4,>=3.5.1 (from virtualenv>=20.10.0->pre-commit)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Installing collected packages: distlib, pyyaml, platformdirs, nodeenv, identify, filelock, cfgv, virtualenv, pre-commit\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Successfully installed cfgv-3.3.1 distlib-0.3.6 filelock-3.12.2 identify-2.5.24 nodeenv-1.8.0 platformdirs-3.8.0 pre-commit-3.3.3 pyyaml-6.0 virtualenv-20.23.1\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2705  Success - Main python -m pip install pre-commit\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze] \u2b50 Run Main python -m pip freeze --local\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-1.sh] user= workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | cfgv==3.3.1\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | distlib==0.3.6\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | filelock==3.12.2\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | identify==2.5.24\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | nodeenv==1.8.0\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | platformdirs==3.8.0\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | pre-commit==3.3.3\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | PyYAML==6.0\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | virtualenv==20.23.1\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2705  Success - Main python -m pip freeze --local\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze] \u2b50 Run Main actions/cache@v3\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udc33  docker cp src=/tmp/act-cache/9ff5aaa8-e12f-4a60-942b-15edfe0616cc/act/actions-cache@v3/ dst=/var/run/act/actions/actions-cache@v3/\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v3/] user=0 workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/restore/index.js] user= workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Resolved Keys:\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::[\"pre-commit-3|/opt/hostedtoolcache/Python/3.11.4/x64|3d2387daf34cb8b85d5546b8f5d21722c6cb90ceb8b8504b35ced47ee0a63458\"]\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::1.5.0\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:38989/_apis/artifactcache/cache?keys=pre-commit-3%257C%252Fopt%252Fhostedtoolcache%252FPython%252F3.11.4%252Fx64%257C3d2387daf34cb8b85d5546b8f5d21722c6cb90ceb8b8504b35ced47ee0a63458&version=356db49e6bae2290b5c998bce2b5407d52ba33e30aa3d911773d957b563a16ad\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Cache not found for input keys: pre-commit-3|/opt/hostedtoolcache/Python/3.11.4/x64|3d2387daf34cb8b85d5546b8f5d21722c6cb90ceb8b8504b35ced47ee0a63458\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2705  Success - Main actions/cache@v3\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze] \u2b50 Run Main pre-commit run --show-diff-on-failure --color=always --all-files\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-3.sh] user= workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Initializing environment for https://github.com/pre-commit/pre-commit-hooks.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Retrieving Poetry metadata\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | # Welcome to Poetry!\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | This will download and install the latest version of Poetry,\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | a dependency and package manager for Python.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | /home/runneradmin/.local/bin\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | You can uninstall at any time by executing this script with the --uninstall option,\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | and these changes will be reverted.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Installing Poetry (1.5.1)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Installing Poetry (1.5.1): Creating environment\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Installing Poetry (1.5.1): Installing Poetry\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Installing Poetry (1.5.1): Creating script\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Installing Poetry (1.5.1): Done\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Poetry (1.5.1) is installed now. Great!\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | environment variable.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | You can test that everything is set up by executing:\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | `poetry --version`\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Initializing environment for https://github.com/psf/black.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Initializing environment for https://github.com/asottile/blacken-docs.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Initializing environment for https://github.com/timothycrosley/isort.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \u001b[33mDone \u2705\u001b[0m\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2705  Success - Main Install and configure Poetry\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2705  Success - Main snok/install-poetry@v1.3\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Initializing environment for https://github.com/pycqa/flake8.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ] \u2b50 Run Main Cache python packages\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udc33  docker cp src=/tmp/act-cache/9ff5aaa8-e12f-4a60-942b-15edfe0616cc/act/actions-cache@v3/ dst=/var/run/act/actions/actions-cache@v3/\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v3/] user=0 workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Initializing environment for https://github.com/pycqa/flake8:flake8-comprehensions.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Initializing environment for https://github.com/yunojuno/pre-commit-xenon.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Initializing environment for https://github.com/pre-commit/mirrors-mypy.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/restore/index.js] user= workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Initializing environment for https://github.com/pre-commit/mirrors-mypy:attrs,types-python-dateutil,types-requests,types-ujson.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Installing environment for https://github.com/pre-commit/pre-commit-hooks.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Once installed this environment will be reused.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m This may take a few minutes...\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Resolved Keys:\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::[\"venv-3.7-bec00116e3756df04946bc75814d842bdf93e012dd36d61ff1752ab2892e0cf1\"]\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::1.5.0\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:38989/_apis/artifactcache/cache?keys=venv-3.7-bec00116e3756df04946bc75814d842bdf93e012dd36d61ff1752ab2892e0cf1&version=25e65b70d167147605b4332eb57b6d34df8e0303b88c4de252efb18cf3ed148a\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Cache not found for input keys: venv-3.7-bec00116e3756df04946bc75814d842bdf93e012dd36d61ff1752ab2892e0cf1\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2705  Success - Main Cache python packages\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ] \u2b50 Run Main Install dependencies\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Creating virtualenv pyinaturalist in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/pyinat-pyinaturalist/.venv\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Using virtualenv: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/pyinat-pyinaturalist/.venv\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Installing dependencies from lock file\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Installing environment for https://github.com/psf/black.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Once installed this environment will be reused.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m This may take a few minutes...\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Finding the necessary packages for the current system\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Package operations: 77 installs, 0 updates, 0 removals, 47 skipped\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing typing-extensions (4.6.2)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing zipp (3.15.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing importlib-metadata (6.6.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing attrs (23.1.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing importlib-resources (5.12.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing pkgutil-resolve-name (1.3.10): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing pyrsistent (0.19.3): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing six (1.16.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing traitlets (5.9.0): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing certifi (2023.5.7)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing charset-normalizer (3.1.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing entrypoints (0.4): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing fastjsonschema (2.17.1): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing idna (3.4)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing jsonschema (4.17.3): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing jupyter-core (4.12.0): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing markupsafe (2.1.2)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing nest-asyncio (1.5.6): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing pycparser (2.21)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing python-dateutil (2.8.2)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing pytz (2023.3)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing pyzmq (25.1.0): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing tornado (6.2)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing urllib3 (2.0.2)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing alabaster (0.7.13)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing babel (2.12.1)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing cffi (1.15.1)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing distlib (0.3.6)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing docutils (0.19)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing filelock (3.12.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing imagesize (1.4.1)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing jinja2 (3.1.2)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing jupyter-client (7.4.9): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing mdurl (0.1.2)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing nbformat (5.8.0): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing packaging (23.1)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing platformdirs (3.5.1)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing pygments (2.15.1)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing requests (2.31.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing snowballstemmer (2.2.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing soupsieve (2.4.1): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing sphinxcontrib-applehelp (1.0.2)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing sphinxcontrib-devhelp (1.0.2)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing sphinxcontrib-htmlhelp (2.0.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing sphinxcontrib-jsmath (1.0.1)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing sphinxcontrib-qthelp (1.0.3)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing sphinxcontrib-serializinghtml (1.1.5)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing webencodings (0.5.1): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing argcomplete (3.0.8)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing beautifulsoup4 (4.12.2): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing bleach (6.0.0): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing colorlog (6.7.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing cryptography (40.0.2)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing defusedxml (0.7.1): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing exceptiongroup (1.1.1)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing iniconfig (2.0.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing jeepney (0.8.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing jupyterlab-pygments (0.2.2): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing markdown-it-py (2.2.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing mistune (2.0.5): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing more-itertools (9.1.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing nbclient (0.7.4): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing pandocfilters (1.5.0): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing parso (0.8.3): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing pluggy (1.0.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing ptyprocess (0.7.0): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing sphinx (5.3.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing tinycss2 (1.2.1): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing tomli (2.0.1)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing virtualenv (20.23.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing wcwidth (0.2.6): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing backcall (0.2.0): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing cattrs (22.2.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing cfgv (3.3.1)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing colorama (0.4.6)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing coverage (7.2.6)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing decorator (5.1.1): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing execnet (1.9.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing identify (2.5.24)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing jaraco-classes (3.2.3)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing jedi (0.18.2): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing livereload (2.6.3)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing matplotlib-inline (0.1.6): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing mdit-py-plugins (0.3.5): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing nbconvert (7.4.0): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing nodeenv (1.8.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing nox (2023.4.22)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing pbr (5.11.1): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing pexpect (4.8.0): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing pickleshare (0.7.5): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing prompt-toolkit (3.0.38): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing pyrate-limiter (2.10.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing pytest (7.3.1)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing pyyaml (6.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing secretstorage (3.3.3)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing sphinx-basic-ng (1.0.0b1): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing tomlkit (0.11.8)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing uc-micro-py (1.0.2): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing url-normalize (1.4.3)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Installing environment for https://github.com/asottile/blacken-docs.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Once installed this environment will be reused.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m This may take a few minutes...\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing furo (2023.3.27): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing ipython (7.34.0): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing keyring (23.13.1)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing linkify-it-py (1.0.3): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing myst-parser (1.0.0): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing nbsphinx (0.9.2): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing nox-poetry (1.0.2)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing pre-commit (2.21.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing pretty-errors (1.2.25)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing pytest-asyncio (0.21.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing pytest-cov (4.1.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing pytest-xdist (3.3.1)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing python-forge (18.6.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing requests-cache (1.0.1)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing requests-mock (1.10.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing requests-ratelimiter (0.4.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing rich (13.3.5)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing setuptools (67.8.0): Skipped for the following reason: Already installed\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing sphinx-autobuild (2021.3.14)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing sphinx-autodoc-typehints (1.23.0): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing sphinx-automodapi (0.14.1): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing sphinx-copybutton (0.5.2): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing sphinx-design (0.4.1): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing sphinxcontrib-apidoc (0.3.0): Skipped for the following reason: Not required\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   \u2022 Installing ujson (5.7.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Installing the current project: pyinaturalist (0.19.0)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2705  Success - Main Install dependencies\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ] \u2b50 Run Main Run tests\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Installing environment for https://github.com/timothycrosley/isort.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Once installed this environment will be reused.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m This may take a few minutes...\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Installing environment for https://github.com/pycqa/flake8.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Once installed this environment will be reused.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m This may take a few minutes...\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Installing environment for https://github.com/yunojuno/pre-commit-xenon.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Once installed this environment will be reused.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m This may take a few minutes...\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Installing environment for https://github.com/pre-commit/mirrors-mypy.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m Once installed this environment will be reused.\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [INFO]\u001b[m This may take a few minutes...\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | ============================= test session starts ==============================\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | platform linux -- Python 3.7.11, pytest-7.3.1, pluggy-1.0.0 -- /tmp/558156d8-17ed-11ee-8a50-bb14de238602/pyinat-pyinaturalist/.venv/bin/python\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | cachedir: .pytest_cache\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/pyinat-pyinaturalist\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | configfile: pyproject.toml\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | plugins: xdist-3.3.1, cov-4.1.0, requests-mock-1.10.0, asyncio-0.21.0\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | asyncio: mode=strict\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | created: 128/128 workers\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | 128 workers [510 items]\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | scheduling tests via LoadScheduling\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_auth.py::test_get_access_token__cached_jwt \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_auth.py::test_get_access_token__mixed_args_and_envars \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_auth.py::test_get_access_token__oauth \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_auth.py::test_get_access_token__missing_creds \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_auth.py::test_get_keyring_credentials__no_backend \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_client.py::test_client_settings[client_settings0-request_params0-expected_params0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_auth.py::test_get_keyring_credentials \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_convert_lat_long[input2-expected_output2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_client.py::test_client_settings[client_settings6-request_params6-expected_params6] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_compat.py::test_v0_imports \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_client.py::test_client_settings[client_settings4-request_params4-expected_params4] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_convert_lat_long[1234.5, 6789.0-expected_output0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_convert_lat_long[input4-expected_output4] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_client.py::test_client_settings[client_settings2-request_params2-expected_params2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_convert_lat_long[1234.5, 6789.0, 000-None] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_convert_lat_long[input8-None] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_ensure_file_obj__path \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_ensure_list[None-expected_output0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_ensure_list[1-expected_output2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_ensure_list__csv[a|b-|-expected_output2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_ensure_list[input4-expected_output4] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_ensure_list__csv[a,b-,-expected_output0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_format_histogram__int_keys \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_convert_observation_timestamps[None-2020-12-10T00:00+02:00-None-expected_created3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_convert_observation_timestamps[2020-09-27T9:20:02-08:00-2020-10-01T00:00-08:00-expected_observed1-expected_created1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_format_dimensions[input1-expected_output1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_format_file_size[None-0 bytes] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_format_file_size[5242880000-4.88 GB] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_format_license \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_format_file_size[3072-3.00 KB] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_safe_split[a | b-expected_output1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_format_table[response3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_format_table[response7] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_format_table[response1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_format_table[response5] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_format_table[response9] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_format_table[response11] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_format_table__unknown_type \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_pprint[response1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_format_table[response15] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_format_table[response13] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_pprint[response3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_pprint[response5] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_pprint[response7] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_pprint[response9] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_pprint[response11] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_pprint[response15] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_pprint[response13] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_from_json_file \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_format_response \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_copy \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_to_dict \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_copy_collection \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_default_rich_repr \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__derived_status_name[vu-None-iucn-vulnerable] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__derived_status_name[X-None-NatureServe-extinct] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__derived_status_name[G2-None-NatureServe-imperiled] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__derived_status_name[S3S4B-None-Vermont Fish & Wildlife-vulnerable] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__derived_status_name[PR-None-Norma-sujeta a protecci\\xf3n especial] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_pretty_print \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__derived_status_name[LC-None-None-least concern] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__derived_status_name[ASDF-None-None-placeholder status] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__derived_status_name[S2S3-None-NatureServe-imperiled] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__derived_status_name[S2S9-None-NatureServe-placeholder status] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__display_name_duplication \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__id_wrapper_properties \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_annotation__init_from_ids \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_annotation__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_controlled_term__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_controlled_term__get_value_by_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_annotation__label_setters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_annotation__str_without_labels \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_controlled_term__value \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_comment__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_identification__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_life_list__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_life_list__get_count \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_message__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observation__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observation__ofvs \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observation__default_photo \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_comment__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observation__missing_default_photo_and_taxon \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observation__ident_taxon_ids__current_only \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observation_field__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observation__cumulative_ids__most_agree \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observation_field_value__taxon \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observation_field_value__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observation_field__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observation_field_value__datetime \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_place__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_photo__urls[large] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_photo__urls[small] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_photo__guess_url \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_photo__license \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_project__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_photo__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_search__taxon \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_sound__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_search__place \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_photo__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__ancestor_ids \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__autocomplete \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_listed_taxon__id_wrapper_properties \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__establishment_means \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__conservation_status_aliases \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__emoji[1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__emoji[20978] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__emoji[47115] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__emoji[40151] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon_properties__partial \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__emoji[47170] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__emoji[47158] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__icon_url[Animalia] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__icon_url[Mammalia] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__emoji[47686] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__icon_url[Amphibia] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__icon_url[Mollusca] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__icon_url[Insecta] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__icon_url[Fungi] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__icon_url[Protozoa] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__no_default_photo[1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__no_default_photo[20978] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__no_default_photo[47158] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__no_default_photo[47115] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__no_default_photo[40151] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw8] [  0%] PASSED test/test_client.py::test_client_settings[client_settings0-request_params0-expected_params0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw118] [  0%] PASSED test/test_models.py::test_taxon__emoji[47686] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw5] [  0%] PASSED test/test_auth.py::test_get_access_token__missing_creds \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw108] [  0%] PASSED test/test_models.py::test_taxon__emoji[40151] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw67] [  0%] PASSED test/test_models.py::test_annotation__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw71] [  1%] PASSED test/test_models.py::test_controlled_term__get_value_by_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw92] [  1%] PASSED test/test_models.py::test_observation_field_value__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw25] [  1%] PASSED test/test_converters.py::test_format_histogram__int_keys \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw72] [  1%] PASSED test/test_models.py::test_comment__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw95] [  1%] PASSED test/test_models.py::test_search__place \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw53] [  2%] PASSED test/test_models.py::test_copy \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw117] [  2%] PASSED test/test_models.py::test_taxon__icon_url[Mollusca] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw28] [  2%] PASSED test/test_converters.py::test_format_file_size[5242880000-4.88 GB] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw91] [  2%] PASSED test/test_models.py::test_photo__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw126] [  2%] PASSED test/test_models.py::test_taxon__no_default_photo[47115] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw79] [  3%] PASSED test/test_models.py::test_observation__default_photo \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw77] [  3%] PASSED test/test_models.py::test_message__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw33] [  3%] PASSED test/test_formatters.py::test_format_table[response1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw125] [  3%] PASSED test/test_models.py::test_taxon__no_default_photo[47158] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw78] [  3%] PASSED test/test_models.py::test_life_list__get_count \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw96] [  4%] PASSED test/test_models.py::test_photo__license \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw32] [  4%] PASSED test/test_formatters.py::test_format_table[response3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw36] [  4%] PASSED test/test_formatters.py::test_format_table[response15] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw104] [  4%] PASSED test/test_models.py::test_taxon__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw83] [  4%] PASSED test/test_models.py::test_observation__ofvs \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw113] [  5%] PASSED test/test_models.py::test_taxon__establishment_means \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw105] [  5%] PASSED test/test_models.py::test_listed_taxon__id_wrapper_properties \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw121] [  5%] PASSED test/test_models.py::test_taxon__icon_url[Insecta] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw52] [  5%] PASSED test/test_models.py::test_from_json_file \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw103] [  5%] PASSED test/test_models.py::test_taxon__ancestor_ids \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw124] [  6%] PASSED test/test_models.py::test_taxon__no_default_photo[20978] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw24] [  6%] PASSED test/test_converters.py::test_format_dimensions[input1-expected_output1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw58] [  6%] PASSED test/test_models.py::test_conservation_status__derived_status_name[PR-None-Norma-sujeta a protecci\\xf3n especial] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw47] [  6%] PASSED test/test_formatters.py::test_pprint[response13] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw107] [  6%] PASSED test/test_models.py::test_taxon__emoji[47115] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw9] [  7%] PASSED test/test_client.py::test_client_settings[client_settings6-request_params6-expected_params6] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw84] [  7%] PASSED test/test_models.py::test_observation_field_value__taxon \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw102] [  7%] PASSED test/test_models.py::test_taxon__autocomplete \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw110] [  7%] PASSED test/test_models.py::test_taxon__emoji[1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw86] [  7%] PASSED test/test_models.py::test_observation_field__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw49] [  8%] PASSED test/test_formatters.py::test_pretty_print \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw2] [  8%] PASSED test/test_auth.py::test_get_access_token__mixed_args_and_envars \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw7] [  8%] PASSED test/test_client.py::test_client_settings[client_settings2-request_params2-expected_params2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw87] [  8%] PASSED test/test_models.py::test_observation_field__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw99] [  8%] PASSED test/test_models.py::test_taxon__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw115] [  9%] PASSED test/test_models.py::test_taxon__icon_url[Amphibia] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw116] [  9%] PASSED test/test_models.py::test_taxon__emoji[47170] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw39] [  9%] PASSED test/test_formatters.py::test_format_table__unknown_type \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw11] [  9%] PASSED test/test_converters.py::test_convert_lat_long[input2-expected_output2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw43] [  9%] PASSED test/test_formatters.py::test_pprint[response1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw30] [ 10%] PASSED test/test_formatters.py::test_format_table[response5] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw48] [ 10%] PASSED test/test_formatters.py::test_format_response \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw20] [ 10%] PASSED test/test_converters.py::test_convert_observation_timestamps[2020-09-27T9:20:02-08:00-2020-10-01T00:00-08:00-expected_observed1-expected_created1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw12] [ 10%] PASSED test/test_compat.py::test_v0_imports \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw127] [ 10%] PASSED test/test_models.py::test_taxon__icon_url[Protozoa] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw22] [ 10%] PASSED test/test_converters.py::test_ensure_list__csv[a|b-|-expected_output2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw3] [ 11%] PASSED test/test_auth.py::test_get_keyring_credentials \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw65] [ 11%] PASSED test/test_models.py::test_annotation__init_from_ids \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw35] [ 11%] PASSED test/test_formatters.py::test_format_table[response13] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw66] [ 11%] PASSED test/test_models.py::test_conservation_status__derived_status_name[ASDF-None-None-placeholder status] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw106] [ 11%] PASSED test/test_models.py::test_taxon__conservation_status_aliases \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw41] [ 12%] PASSED test/test_formatters.py::test_pprint[response9] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw123] [ 12%] PASSED test/test_models.py::test_taxon__no_default_photo[40151] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw60] [ 12%] PASSED test/test_models.py::test_conservation_status__derived_status_name[S2S3-None-NatureServe-imperiled] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw61] [ 12%] PASSED test/test_models.py::test_conservation_status__derived_status_name[G2-None-NatureServe-imperiled] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw0] [ 12%] PASSED test/test_auth.py::test_get_access_token__cached_jwt \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw120] [ 13%] PASSED test/test_models.py::test_taxon__icon_url[Fungi] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw21] [ 13%] PASSED test/test_converters.py::test_ensure_list[None-expected_output0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw112] [ 13%] PASSED test/test_models.py::test_taxon__emoji[47158] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw101] [ 13%] PASSED test/test_models.py::test_sound__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw114] [ 13%] PASSED test/test_models.py::test_taxon__icon_url[Animalia] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw89] [ 14%] PASSED test/test_models.py::test_photo__guess_url \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw64] [ 14%] PASSED test/test_models.py::test_conservation_status__derived_status_name[S2S9-None-NatureServe-placeholder status] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw19] [ 14%] PASSED test/test_converters.py::test_ensure_list__csv[a,b-,-expected_output0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw40] [ 14%] PASSED test/test_formatters.py::test_pprint[response3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw34] [ 14%] PASSED test/test_formatters.py::test_format_table[response7] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw6] [ 15%] PASSED test/test_converters.py::test_convert_lat_long[1234.5, 6789.0-expected_output0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw17] [ 15%] PASSED test/test_converters.py::test_ensure_list[1-expected_output2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw26] [ 15%] PASSED test/test_converters.py::test_format_license \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw44] [ 15%] PASSED test/test_formatters.py::test_pprint[response15] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw97] [ 15%] PASSED test/test_models.py::test_photo__urls[large] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw74] [ 16%] PASSED test/test_models.py::test_controlled_term__value \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw122] [ 16%] PASSED test/test_models.py::test_taxon__no_default_photo[1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw82] [ 16%] PASSED test/test_models.py::test_observation__ident_taxon_ids__current_only \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw27] [ 16%] PASSED test/test_converters.py::test_format_file_size[3072-3.00 KB] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw111] [ 16%] PASSED test/test_models.py::test_taxon__emoji[20978] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw37] [ 17%] PASSED test/test_formatters.py::test_format_table[response11] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw42] [ 17%] PASSED test/test_formatters.py::test_pprint[response5] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw88] [ 17%] PASSED test/test_models.py::test_observation_field_value__datetime \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw100] [ 17%] PASSED test/test_models.py::test_project__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw63] [ 17%] PASSED test/test_models.py::test_conservation_status__display_name_duplication \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw1] [ 18%] PASSED test/test_auth.py::test_get_access_token__oauth \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw59] [ 18%] PASSED test/test_models.py::test_conservation_status__derived_status_name[X-None-NatureServe-extinct] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw94] [ 18%] PASSED test/test_models.py::test_place__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw90] [ 18%] PASSED test/test_models.py::test_photo__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw98] [ 18%] PASSED test/test_models.py::test_search__taxon \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw45] [ 19%] PASSED test/test_formatters.py::test_pprint[response7] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw69] [ 19%] PASSED test/test_models.py::test_controlled_term__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw14] [ 19%] PASSED test/test_converters.py::test_ensure_file_obj__path \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw73] [ 19%] PASSED test/test_models.py::test_life_list__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw55] [ 19%] PASSED test/test_models.py::test_conservation_status__derived_status_name[S3S4B-None-Vermont Fish & Wildlife-vulnerable] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw10] [ 20%] PASSED test/test_client.py::test_client_settings[client_settings4-request_params4-expected_params4] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw70] [ 20%] PASSED test/test_models.py::test_annotation__label_setters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw80] [ 20%] PASSED test/test_models.py::test_observation__missing_default_photo_and_taxon \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw76] [ 20%] PASSED test/test_models.py::test_identification__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw23] [ 20%] PASSED test/test_converters.py::test_convert_observation_timestamps[None-2020-12-10T00:00+02:00-None-expected_created3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw56] [ 20%] PASSED test/test_models.py::test_copy_collection \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw109] [ 21%] PASSED test/test_models.py::test_taxon_properties__partial \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw62] [ 21%] PASSED test/test_models.py::test_conservation_status__id_wrapper_properties \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw57] [ 21%] PASSED test/test_models.py::test_conservation_status__derived_status_name[LC-None-None-least concern] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw119] [ 21%] PASSED test/test_models.py::test_taxon__icon_url[Mammalia] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw16] [ 21%] PASSED test/test_converters.py::test_convert_lat_long[input8-None] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw68] [ 22%] PASSED test/test_models.py::test_annotation__str_without_labels \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw85] [ 22%] PASSED test/test_models.py::test_observation__cumulative_ids__most_agree \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw18] [ 22%] PASSED test/test_converters.py::test_ensure_list[input4-expected_output4] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw81] [ 22%] PASSED test/test_models.py::test_observation__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw93] [ 22%] PASSED test/test_models.py::test_photo__urls[small] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw46] [ 23%] PASSED test/test_formatters.py::test_pprint[response11] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw38] [ 23%] PASSED test/test_formatters.py::test_format_table[response9] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw54] [ 23%] PASSED test/test_models.py::test_conservation_status__derived_status_name[vu-None-iucn-vulnerable] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw75] [ 23%] PASSED test/test_models.py::test_comment__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw50] [ 23%] PASSED test/test_models.py::test_to_dict \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_annotation__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw29] [ 24%] PASSED test/test_converters.py::test_safe_split[a | b-expected_output1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw13] [ 24%] PASSED test/test_converters.py::test_convert_lat_long[input4-expected_output4] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw15] [ 24%] PASSED test/test_converters.py::test_convert_lat_long[1234.5, 6789.0, 000-None] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw4] [ 24%] PASSED test/test_auth.py::test_get_keyring_credentials__no_backend \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw67] [ 24%] PASSED test/test_models.py::test_annotation__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw51] [ 25%] PASSED test/test_models.py::test_default_rich_repr \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observation_field_value__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_controlled_term__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_convert_observation_timestamps[Sat Sep 26 2020 12:09:51 -07:00-None-expected_observed0-None] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw31] [ 25%] PASSED test/test_converters.py::test_format_file_size[None-0 bytes] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw71] [ 25%] PASSED test/test_models.py::test_controlled_term__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_identification__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw92] [ 25%] PASSED test/test_models.py::test_observation_field_value__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_search__project \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_deepcopy \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_format_file_size[5242880000000-4882.81 GB] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_place__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw25] [ 25%] PASSED test/test_converters.py::test_convert_observation_timestamps[Sat Sep 26 2020 12:09:51 -07:00-None-expected_observed0-None] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__no_default_photo[47119] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observation__missing_default_photo \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_message__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw72] [ 26%] PASSED test/test_models.py::test_identification__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_format_table[response2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__no_default_photo[47126] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw91] [ 26%] PASSED test/test_models.py::test_place__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw95] [ 26%] PASSED test/test_models.py::test_search__project \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw28] [ 26%] PASSED test/test_converters.py::test_format_file_size[5242880000000-4882.81 GB] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_format_table[response16] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_message__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observation__project_observations \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_format_table[response4] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_photo__urls[square] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw126] [ 26%] PASSED test/test_models.py::test_taxon__no_default_photo[47119] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw77] [ 27%] PASSED test/test_models.py::test_message__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw79] [ 27%] PASSED test/test_models.py::test_observation__missing_default_photo \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__listed_taxa \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw125] [ 27%] PASSED test/test_models.py::test_taxon__no_default_photo[47126] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__properties \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw53] [ 27%] PASSED test/test_models.py::test_deepcopy \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw96] [ 27%] PASSED test/test_models.py::test_photo__urls[square] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw78] [ 28%] PASSED test/test_models.py::test_message__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw104] [ 28%] PASSED test/test_models.py::test_taxon__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw33] [ 28%] PASSED test/test_formatters.py::test_format_table[response2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_from_json_list \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw83] [ 28%] PASSED test/test_models.py::test_observation__project_observations \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_auth.py::test_get_access_token__invalid_creds \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw105] [ 28%] PASSED test/test_models.py::test_taxon__properties \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__no_default_photo[26036] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__emoji[47178] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__all_names \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw113] [ 29%] PASSED test/test_models.py::test_taxon__listed_taxa \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw36] [ 29%] PASSED test/test_formatters.py::test_format_table[response16] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_format_dimensions[input2-expected_output2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__derived_status_name[E-None-None-endangered] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw124] [ 29%] PASSED test/test_models.py::test_taxon__no_default_photo[26036] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw32] [ 29%] PASSED test/test_formatters.py::test_format_table[response4] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw24] [ 29%] PASSED test/test_converters.py::test_format_dimensions[input2-expected_output2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw108] [ 30%] PASSED test/test_models.py::test_taxon__emoji[47178] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_client.py::test_client_auth \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observation_field_value__date \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_pprint[response14] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__conservation_status \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw52] [ 30%] PASSED test/test_models.py::test_from_json_list \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__emoji[47119] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw107] [ 30%] PASSED test/test_models.py::test_taxon__emoji[47119] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw103] [ 30%] PASSED test/test_models.py::test_taxon__all_names \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw58] [ 30%] PASSED test/test_models.py::test_conservation_status__derived_status_name[E-None-None-endangered] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw84] [ 30%] PASSED test/test_models.py::test_observation_field_value__date \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__emoji[3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw102] [ 31%] PASSED test/test_models.py::test_taxon__conservation_status \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw47] [ 31%] PASSED test/test_formatters.py::test_pprint[response14] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw9] [ 31%] PASSED test/test_client.py::test_client_auth \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_client.py::test_client_settings[client_settings1-request_params1-expected_params1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observation_field_value__numeric \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_format_request \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__icon_url[Unknown] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_auth.py::test_get_access_token__keyring \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_client.py::test_client_settings[client_settings3-request_params3-expected_params3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observation_field__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__ancestors_children \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw49] [ 31%] PASSED test/test_formatters.py::test_format_request \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__emoji[48222] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw8] [ 31%] PASSED test/test_client.py::test_client_settings[client_settings1-request_params1-expected_params1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw110] [ 32%] PASSED test/test_models.py::test_taxon__emoji[3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw86] [ 32%] PASSED test/test_models.py::test_observation_field_value__numeric \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_convert_lat_long[input3-expected_output3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_pprint[response2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw87] [ 32%] PASSED test/test_models.py::test_observation_field__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw7] [ 32%] PASSED test/test_client.py::test_client_settings[client_settings3-request_params3-expected_params3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_from_json \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_format_table[response6] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw5] [ 32%] PASSED test/test_auth.py::test_get_access_token__invalid_creds \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__icon_url[Reptilia] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw115] [ 33%] PASSED test/test_models.py::test_taxon__icon_url[Reptilia] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_format_histogram__datetime_keys \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw11] [ 33%] PASSED test/test_converters.py::test_convert_lat_long[input3-expected_output3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_convert_observation_timestamps[2020-12-04T21:00+02:00-2020-12-10T00:00+02:00-expected_observed2-expected_created2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw20] [ 33%] PASSED test/test_converters.py::test_convert_observation_timestamps[2020-12-04T21:00+02:00-2020-12-10T00:00+02:00-expected_observed2-expected_created2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__no_default_photo[0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw127] [ 33%] PASSED test/test_models.py::test_taxon__no_default_photo[0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_pprint[response0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw22] [ 33%] PASSED test/test_converters.py::test_format_histogram__datetime_keys \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw99] [ 34%] PASSED test/test_models.py::test_taxon__ancestors_children \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw116] [ 34%] PASSED test/test_models.py::test_taxon__emoji[48222] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw48] [ 34%] PASSED test/test_models.py::test_from_json \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_compat.py::test_v1_imports \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw12] [ 34%] PASSED test/test_compat.py::test_v1_imports \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw118] [ 34%] PASSED test/test_models.py::test_taxon__icon_url[Unknown] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw2] [ 35%] PASSED test/test_auth.py::test_get_access_token__keyring \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw43] [ 35%] PASSED test/test_formatters.py::test_pprint[response2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw39] [ 35%] PASSED test/test_formatters.py::test_pprint[response0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_auth.py::test_get_keyring_credentials__not_installed \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_annotation__init_from_labels \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_format_table[response14] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__derived_status_name[ASDF-None-NatureServe-placeholder status] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__conservation_statuses \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__icon_url[Chromista] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__emoji[47126] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__derived_status_name[S2-None-NatureServe-imperiled] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_pprint[response10] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw65] [ 35%] PASSED test/test_models.py::test_annotation__init_from_labels \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_sound__aliases \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_format_table[response8] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_auth.py::test_get_access_token__envars \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_ensure_list[input1-expected_output1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw21] [ 35%] PASSED test/test_converters.py::test_ensure_list[input1-expected_output1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__no_default_photo[47178] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw123] [ 36%] PASSED test/test_models.py::test_taxon__no_default_photo[47178] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_ensure_list__csv[a , b-,-expected_output1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw61] [ 36%] PASSED test/test_models.py::test_conservation_status__derived_status_name[S2-None-NatureServe-imperiled] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__derived_status_name[N2N4-None-NatureServe-vulnerable] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw60] [ 36%] PASSED test/test_models.py::test_conservation_status__derived_status_name[N2N4-None-NatureServe-vulnerable] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw30] [ 36%] PASSED test/test_formatters.py::test_format_table[response6] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw106] [ 36%] PASSED test/test_models.py::test_taxon__conservation_statuses \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__icon_url[Plantae] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw121] [ 37%] PASSED test/test_models.py::test_taxon__icon_url[Plantae] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw101] [ 37%] PASSED test/test_models.py::test_sound__aliases \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_ensure_list[a,b-expected_output3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw17] [ 37%] PASSED test/test_converters.py::test_ensure_list[a,b-expected_output3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw66] [ 37%] PASSED test/test_models.py::test_conservation_status__derived_status_name[ASDF-None-NatureServe-placeholder status] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw112] [ 37%] PASSED test/test_models.py::test_taxon__emoji[47126] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_convert_lat_long[input1-expected_output1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw6] [ 38%] PASSED test/test_converters.py::test_convert_lat_long[input1-expected_output1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw19] [ 38%] PASSED test/test_converters.py::test_ensure_list__csv[a , b-,-expected_output1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_photo__properties \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw89] [ 38%] PASSED test/test_models.py::test_photo__properties \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw35] [ 38%] PASSED test/test_formatters.py::test_format_table[response14] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw34] [ 38%] PASSED test/test_formatters.py::test_format_table[response8] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw41] [ 39%] PASSED test/test_formatters.py::test_pprint[response10] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw3] [ 39%] PASSED test/test_auth.py::test_get_keyring_credentials__not_installed \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw0] [ 39%] PASSED test/test_auth.py::test_get_access_token__envars \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__display_name \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw64] [ 39%] PASSED test/test_models.py::test_conservation_status__display_name \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw120] [ 39%] PASSED test/test_models.py::test_taxon__icon_url[Chromista] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__icon_url[Aves] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw114] [ 40%] PASSED test/test_models.py::test_taxon__icon_url[Aves] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_safe_split[None-expected_output0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_photo__urls[original] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_controlled_term_counts \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observation__ccumulative_ids__all_agree \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__no_default_photo[3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_format_file_size[3072000-2.93 MB] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw26] [ 40%] PASSED test/test_converters.py::test_safe_split[None-expected_output0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observation_field_value__converter_error \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw97] [ 40%] PASSED test/test_models.py::test_photo__urls[original] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_search__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_pprint[response6] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__original_status_name \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__derived_status_name[2-None-NatureServe-imperiled] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_format_table[response12] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_auth.py::test_get_access_token__jwt \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw27] [ 40%] PASSED test/test_converters.py::test_format_file_size[3072000-2.93 MB] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_photo__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__emoji[26036] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw122] [ 40%] PASSED test/test_models.py::test_taxon__no_default_photo[3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_pprint[response8] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_ensure_file_obj__url \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_pprint[response16] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw63] [ 40%] PASSED test/test_models.py::test_conservation_status__original_status_name \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw88] [ 41%] PASSED test/test_models.py::test_observation_field_value__converter_error \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_controlled_term__properties \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw100] [ 41%] PASSED test/test_models.py::test_search__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_search__user \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw98] [ 41%] PASSED test/test_models.py::test_search__user \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw59] [ 41%] PASSED test/test_models.py::test_conservation_status__derived_status_name[2-None-NatureServe-imperiled] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw90] [ 41%] PASSED test/test_models.py::test_photo__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw111] [ 42%] PASSED test/test_models.py::test_taxon__emoji[26036] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw14] [ 42%] PASSED test/test_converters.py::test_ensure_file_obj__url \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw44] [ 42%] PASSED test/test_formatters.py::test_pprint[response16] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_life_list__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw73] [ 42%] PASSED test/test_models.py::test_life_list__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__derived_status_name[A-None-norma_oficial_059-amenazada] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw1] [ 42%] PASSED test/test_auth.py::test_get_access_token__jwt \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw69] [ 43%] PASSED test/test_models.py::test_controlled_term__properties \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_client.py::test_client_settings[client_settings5-request_params5-expected_params5] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw82] [ 43%] PASSED test/test_models.py::test_observation__ccumulative_ids__all_agree \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_annotation__str_with_labels \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__emoji[0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw37] [ 43%] PASSED test/test_formatters.py::test_format_table[response12] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw45] [ 43%] PASSED test/test_formatters.py::test_pprint[response8] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_controlled_term__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw10] [ 43%] PASSED test/test_client.py::test_client_settings[client_settings5-request_params5-expected_params5] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observation__ident_taxon_ids \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw42] [ 44%] PASSED test/test_formatters.py::test_pprint[response6] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_identification__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__icon_url[Actinopterygii] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw119] [ 44%] PASSED test/test_models.py::test_taxon__icon_url[Actinopterygii] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_format_dimensions[None-expected_output0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw23] [ 44%] PASSED test/test_converters.py::test_format_dimensions[None-expected_output0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_deduplicate \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw70] [ 44%] PASSED test/test_models.py::test_annotation__str_with_labels \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__derived_status_name[sc-None-None-special concern] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw68] [ 44%] PASSED test/test_models.py::test_controlled_term__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_ensure_file_obj__obj \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw16] [ 45%] PASSED test/test_converters.py::test_ensure_file_obj__obj \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw55] [ 45%] PASSED test/test_models.py::test_conservation_status__derived_status_name[A-None-norma_oficial_059-amenazada] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw76] [ 45%] PASSED test/test_models.py::test_identification__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw57] [ 45%] PASSED test/test_models.py::test_conservation_status__derived_status_name[sc-None-None-special concern] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw62] [ 45%] PASSED test/test_models.py::test_conservation_status__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_places__nearby \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw94] [ 46%] PASSED test/test_models.py::test_places__nearby \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw109] [ 46%] PASSED test/test_models.py::test_taxon__emoji[0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw80] [ 46%] PASSED test/test_models.py::test_observation__ident_taxon_ids \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_ensure_list[input5-expected_output5] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observations \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_observation__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw74] [ 46%] PASSED test/test_models.py::test_controlled_term_counts \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw56] [ 46%] PASSED test/test_models.py::test_deduplicate \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw18] [ 47%] PASSED test/test_converters.py::test_ensure_list[input5-expected_output5] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_photo__urls[medium] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_pprint[response12] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_pprint[response4] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_format_table[response10] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_comment__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__icon_url[Arachnida] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__derived_status_name[None-0-None-not evaluated] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_formatters.py::test_format_table[response0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw81] [ 47%] PASSED test/test_models.py::test_observation__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_convert_lat_long[None-None] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_to_dict__specific_keys \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_convert_lat_long[input7-None] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_auth.py::test_set_keyring_credentials \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw93] [ 47%] PASSED test/test_models.py::test_photo__urls[medium] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__no_default_photo[47170] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_conservation_status__derived_status_name[LC-None-IUCN-least concern] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw85] [ 47%] PASSED test/test_models.py::test_observations \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw117] [ 47%] PASSED test/test_models.py::test_taxon__icon_url[Arachnida] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_converters.py::test_format_file_size[5-5 bytes] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw13] [ 48%] PASSED test/test_converters.py::test_convert_lat_long[None-None] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw54] [ 48%] PASSED test/test_models.py::test_conservation_status__derived_status_name[None-0-None-not evaluated] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw67] [ 48%] PASSED test/test_models.py::test_taxon__no_default_photo[47170] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw75] [ 48%] PASSED test/test_models.py::test_comment__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__no_default_photo[48222] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw4] [ 48%] PASSED test/test_auth.py::test_set_keyring_credentials \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw46] [ 49%] PASSED test/test_formatters.py::test_pprint[response12] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw51] [ 49%] PASSED test/test_models.py::test_conservation_status__derived_status_name[LC-None-IUCN-least concern] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__no_default_photo[47686] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw50] [ 49%] PASSED test/test_models.py::test_to_dict__specific_keys \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw31] [ 49%] PASSED test/test_converters.py::test_format_file_size[5-5 bytes] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw15] [ 49%] PASSED test/test_converters.py::test_convert_lat_long[input7-None] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw71] [ 50%] PASSED test/test_models.py::test_taxon__no_default_photo[48222] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw92] [ 50%] PASSED test/test_models.py::test_taxon__no_default_photo[47686] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw40] [ 50%] PASSED test/test_formatters.py::test_pprint[response4] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw38] [ 50%] PASSED test/test_formatters.py::test_format_table[response10] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw29] [ 50%] PASSED test/test_formatters.py::test_format_table[response0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__load_full_record \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__taxonomy \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon_count__copy \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon_counts__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon_summary \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_user__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_user__partial \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_user__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_user__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw95] [ 50%] PASSED test/test_models.py::test_taxon_count__copy \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw28] [ 51%] PASSED test/test_models.py::test_taxon_counts__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon_counts__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_user_counts__identifiers \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_user_count__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw126] [ 51%] PASSED test/test_models.py::test_user__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw77] [ 51%] PASSED test/test_models.py::test_user__partial \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw91] [ 51%] PASSED test/test_models.py::test_taxon_summary \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw79] [ 51%] PASSED test/test_models.py::test_user__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_paginator.py::test_iter \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw25] [ 52%] PASSED test/test_models.py::test_taxon__taxonomy \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_user__properties \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw78] [ 52%] PASSED test/test_models.py::test_user_count__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw125] [ 52%] PASSED test/test_models.py::test_user__str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw53] [ 52%] PASSED test/test_models.py::test_taxon_counts__converters \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw96] [ 52%] PASSED test/test_models.py::test_user_counts__identifiers \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_paginator.py::test_iter__with_limit \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw33] [ 53%] PASSED test/test_models.py::test_user__properties \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_paginator.py::test_async_iter__custom_loop \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_paginator.py::test_async_iter \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_user_counts__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_paginator.py::test_str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_convert_bool_params \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_user_counts__observers \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_paginator.py::test_wrapper_paginator \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_paginator.py::test_count \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_convert_datetime_params[created_on-2010-10-10 10:10:10-05:00-2010-10-10T10:10:10-05:00] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_paginator.py::test_next_page__exhausted \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_convert_datetime_params[created_d1-19951231T235959-1995-12-31T23:59:59-08:00] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_convert_datetime_params[d1-19970716-1997-07-16T00:00:00-07:00] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_convert_datetime_params[created_d2-2008-08-08 08:08:08Z-2008-08-08T08:08:08+00:00] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw36] [ 53%] PASSED test/test_models.py::test_user_counts__empty \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_convert_datetime_params[created_on-Jan 1 2000-2000-01-01T00:00:00-08:00] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw24] [ 53%] PASSED test/test_request_params.py::test_convert_bool_params \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw32] [ 53%] PASSED test/test_models.py::test_user_counts__observers \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_convert_datetime_params[q-not a datetime-not a datetime] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_convert_datetime_params[q-value6-1954-02-05T00:00:00-08:00] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw107] [ 53%] PASSED test/test_request_params.py::test_convert_datetime_params[created_on-2010-10-10 10:10:10-05:00-2010-10-10T10:10:10-05:00] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw103] [ 54%] PASSED test/test_paginator.py::test_next_page__exhausted \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_convert_observation_fields \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw49] [ 54%] PASSED test/test_request_params.py::test_convert_observation_fields \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_convert_datetime_params[q-value5-1954-02-05] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw102] [ 54%] PASSED test/test_request_params.py::test_convert_datetime_params[q-value5-1954-02-05] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_convert_list_params \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw124] [ 54%] PASSED test/test_paginator.py::test_str \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw58] [ 54%] PASSED test/test_request_params.py::test_convert_datetime_params[created_d1-19951231T235959-1995-12-31T23:59:59-08:00] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw8] [ 55%] PASSED test/test_request_params.py::test_convert_datetime_params[q-not a datetime-not a datetime] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw9] [ 55%] PASSED test/test_request_params.py::test_convert_datetime_params[created_on-Jan 1 2000-2000-01-01T00:00:00-08:00] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw86] [ 55%] PASSED test/test_request_params.py::test_convert_list_params \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw84] [ 55%] PASSED test/test_request_params.py::test_convert_datetime_params[d1-19970716-1997-07-16T00:00:00-07:00] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw110] [ 55%] PASSED test/test_request_params.py::test_convert_datetime_params[q-value6-1954-02-05T00:00:00-08:00] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw72] [ 56%] PASSED test/test_models.py::test_taxon__load_full_record \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw47] [ 56%] PASSED test/test_request_params.py::test_convert_datetime_params[created_d2-2008-08-08 08:08:08Z-2008-08-08T08:08:08+00:00] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_get_interval_ranges__day[2020-01-01-2020-01-05-day] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_validate_ids__invalid \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_get_interval_ranges__year \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_get_interval_ranges__month \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_preprocess_request_body \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_paginator.py::test_async_all \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_strip_empty_params \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_validate_ids[1-11] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_get_interval_ranges__day[2020-01-01-2020-01-05-interval2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_validate_ids[value4-100000,200000] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw7] [ 56%] PASSED test/test_request_params.py::test_get_interval_ranges__day[2020-01-01-2020-01-05-day] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_get_interval_ranges__day[start0-end0-day] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw87] [ 56%] PASSED test/test_request_params.py::test_get_interval_ranges__day[2020-01-01-2020-01-05-interval2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_convert_pagination_params \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw99] [ 56%] PASSED test/test_request_params.py::test_get_interval_ranges__month \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw20] [ 57%] PASSED test/test_request_params.py::test_validate_ids__invalid \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw116] [ 57%] PASSED test/test_request_params.py::test_strip_empty_params \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_validate_ids[1,2,3-1,2,3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw43] [ 57%] PASSED test/test_request_params.py::test_validate_ids[1,2,3-1,2,3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_normalize_rank \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw22] [ 57%] PASSED test/test_request_params.py::test_normalize_rank \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_validate_multiple_choice_param \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw65] [ 57%] PASSED test/test_request_params.py::test_validate_multiple_choice_param \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw2] [ 58%] PASSED test/test_request_params.py::test_get_interval_ranges__day[start0-end0-day] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw11] [ 58%] PASSED test/test_request_params.py::test_validate_ids[1-11] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw108] [ 58%] PASSED test/test_paginator.py::test_wrapper_paginator \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_validate_multiple_choice_params[params7] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw21] [ 58%] PASSED test/test_request_params.py::test_validate_multiple_choice_params[params7] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_validate_multiple_choice_params__normalization[params1-month_of_year] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_preprocess_request_params \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw127] [ 58%] PASSED test/test_request_params.py::test_preprocess_request_body \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw115] [ 59%] PASSED test/test_request_params.py::test_get_interval_ranges__year \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_validate_multiple_choice_params[params2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw106] [ 59%] PASSED test/test_request_params.py::test_validate_multiple_choice_params[params2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_validate_ids[1-10] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw39] [ 59%] PASSED test/test_request_params.py::test_validate_ids[1-10] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_validate_multiple_choice_params[params5] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_validate_multiple_choice_params[params4] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw60] [ 59%] PASSED test/test_request_params.py::test_validate_multiple_choice_params[params4] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_validate_ids[value3-1,2,3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw83] [ 59%] PASSED test/test_paginator.py::test_iter__with_limit \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw121] [ 60%] PASSED test/test_request_params.py::test_validate_multiple_choice_params__normalization[params1-month_of_year] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw61] [ 60%] PASSED test/test_request_params.py::test_validate_multiple_choice_params[params5] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw30] [ 60%] PASSED test/test_request_params.py::test_validate_ids[value3-1,2,3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw48] [ 60%] PASSED test/test_request_params.py::test_validate_ids[value4-100000,200000] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw52] [ 60%] PASSED test/test_paginator.py::test_count \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_validate_multiple_choice_params[params10] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_dry_run[False-True-GET-True] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw118] [ 60%] PASSED test/test_request_params.py::test_convert_pagination_params \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_validate_multiple_choice_params[params1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_validate_multiple_choice_params[params8] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_validate_multiple_choice_params[params3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_dry_run[False-False-GET-True] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_validate_multiple_choice_params[params0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_http_methods[put-PUT] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw101] [ 61%] PASSED test/test_request_params.py::test_validate_multiple_choice_params[params10] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_http_methods[delete-DELETE] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw123] [ 61%] PASSED test/test_request_params.py::test_validate_multiple_choice_params[params3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_normalize_rank_params \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_headers \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw66] [ 61%] PASSED test/test_request_params.py::test_validate_multiple_choice_params[params1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw112] [ 61%] PASSED test/test_request_params.py::test_validate_multiple_choice_params[params8] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_http_methods[get-GET] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw3] [ 61%] PASSED test/test_request_params.py::test_normalize_rank_params \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_validate_multiple_choice_params[params6] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw35] [ 62%] PASSED test/test_request_params.py::test_validate_multiple_choice_params[params0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw113] [ 62%] PASSED test/test_paginator.py::test_async_iter \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_http_methods[post-POST] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_validate_multiple_choice_params[params9] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw41] [ 62%] PASSED test/test_request_params.py::test_validate_multiple_choice_params[params9] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw105] [ 62%] PASSED test/test_paginator.py::test_async_iter__custom_loop \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw12] [ 62%] PASSED test/test_request_params.py::test_preprocess_request_params \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw120] [ 63%] PASSED test/test_request_params.py::test_validate_multiple_choice_params[params6] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_request_params.py::test_validate_multiple_choice_params__normalization[params0-most_agree] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_dry_run[False-False-HEAD-True] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_dry_run[True-False-GET-False] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_dry_run[False-False-PUT-True] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw114] [ 63%] PASSED test/test_request_params.py::test_validate_multiple_choice_params__normalization[params0-most_agree] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_dry_run[True-False-POST-False] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_dry_run[False-True-DELETE-False1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_dry_run[true-False-GET-False] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_dry_run[True-False-PUT-False] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw104] [ 63%] PASSED test/test_paginator.py::test_iter \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_validate_json__retry_failure \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_dry_run[False-None-DELETE-True] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw0] [ 63%] PASSED test/test_session.py::test_http_methods[get-GET] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw5] [ 63%] PASSED test/test_paginator.py::test_async_all \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw64] [ 64%] PASSED test/test_session.py::test_http_methods[post-POST] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_dry_run_disabled \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_dry_run[False-False-DELETE-True] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_session__custom_expiration \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw34] [ 64%] PASSED test/test_session.py::test_request_headers \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw19] [ 64%] PASSED test/test_session.py::test_http_methods[put-PUT] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw89] [ 64%] PASSED test/test_session.py::test_http_methods[delete-DELETE] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw17] [ 64%] PASSED test/test_session.py::test_request_dry_run[False-True-GET-True] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_dry_run[none-False-POST-True] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw6] [ 65%] PASSED test/test_session.py::test_request_dry_run[False-False-GET-True] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_session__custom_retry \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw14] [ 65%] PASSED test/test_session.py::test_session__custom_expiration \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_dry_run[false-False-GET-True] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_session__cache_file \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_dry_run[False-True-POST-False] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_dry_run[False-True-PUT-False] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_dry_run[False-True-DELETE-False0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_validate_json__retry_success \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_controlled_terms_controller.py::test_all \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw73] [ 65%] PASSED test/test_session.py::test_session__custom_retry \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_observation_controller.py::test_search \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_get_local_session \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw122] [ 65%] PASSED test/test_session.py::test_request_dry_run[True-False-POST-False] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw69] [ 65%] PASSED test/test_session.py::test_session__cache_file \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw88] [ 66%] PASSED test/test_session.py::test_request_dry_run[true-False-GET-False] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw97] [ 66%] PASSED test/test_session.py::test_request_dry_run[True-False-GET-False] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_observation_controller.py::test_from_ids__limit \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw100] [ 66%] PASSED test/test_session.py::test_request_dry_run[True-False-PUT-False] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_session__send__cache_settings \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw63] [ 66%] PASSED test/test_session.py::test_request_dry_run[False-True-DELETE-False1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_session__send \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw70] [ 66%] PASSED test/test_session.py::test_get_local_session \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw26] [ 67%] PASSED test/test_session.py::test_request_dry_run[False-False-HEAD-True] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_observation_controller.py::test_from_ids \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_get_refresh_params \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_observation_controller.py::test_from_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_observation_controller.py::test_from_id__not_found \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_dry_run_kwarg \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_clear_cache \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_controlled_terms_controller.py::test_lookup \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw10] [ 67%] PASSED test/test_session.py::test_session__send__cache_settings \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw27] [ 67%] PASSED test/test_session.py::test_request_dry_run[False-False-PUT-True] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_session.py::test_request_dry_run[False-False-POST-True] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw82] [ 67%] PASSED test/test_session.py::test_request_dry_run[False-True-POST-False] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw42] [ 67%] PASSED test/test_session.py::test_request_dry_run[False-True-DELETE-False0] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_controlled_terms_controller.py::test_for_taxon \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_observation_controller.py::test_search__with_annotations \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw111] [ 68%] PASSED test/test_session.py::test_request_dry_run[False-False-DELETE-True] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_observation_controller.py::test_identifiers \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_observation_controller.py::test_observers \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw37] [ 68%] PASSED test/test_session.py::test_request_dry_run[False-True-PUT-False] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_observation_controller.py::test_search__with_ofvs \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_observation_controller.py::test_taxon_summary__with_listed_taxon \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw80] [ 68%] PASSED test/test_session.py::test_clear_cache \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_observation_controller.py::test_species_counts \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw90] [ 68%] PASSED test/test_session.py::test_request_dry_run_disabled \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_place_controller.py::test_autocomplete \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_project_controller.py::test_from_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw23] [ 68%] PASSED test/controllers/test_controlled_terms_controller.py::test_all \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw16] [ 69%] PASSED test/controllers/test_observation_controller.py::test_from_ids__limit \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_observation_controller.py::test_taxon_summary__with_conservation_status \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_place_controller.py::test_nearby \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_observation_controller.py::test_life_list \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_project_controller.py::test_from_ids \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_place_controller.py::test_from_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_place_controller.py::test_get_places_autocomplete__all_pages \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_project_controller.py::test_search \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_project_controller.py::test_add_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_observation_controller.py::test_histogram \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw94] [ 69%] PASSED test/test_session.py::test_request_dry_run_kwarg \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw68] [ 69%] PASSED test/controllers/test_observation_controller.py::test_search \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_place_controller.py::test_from_ids \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_observation_controller.py::test_popular_fields \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_project_controller.py::test_search__with_obs_fields \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_taxon_controller.py::test_search \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_user_controller.py::test_from_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_taxon_controller.py::test_autocomplete \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_taxon_controller.py::test_from_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_taxon_controller.py::test_taxon__populate \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_user_controller.py::test_autocomplete \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw55] [ 69%] PASSED test/test_session.py::test_session__send \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/docs/test_docstrings.py::test_copy_docstrings__without_returns \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw62] [ 69%] PASSED test/controllers/test_observation_controller.py::test_from_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/docs/test_docstrings.py::test_copy_docstrings \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw57] [ 70%] PASSED test/controllers/test_observation_controller.py::test_from_id__not_found \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw78] [ 70%] PASSED test/docs/test_docstrings.py::test_copy_docstrings__without_returns \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_user_controller.py::test_me \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/docs/test_docstrings.py::test_copy_docstrings__extend_args \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw119] [ 70%] PASSED test/controllers/test_observation_controller.py::test_from_ids \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/docs/test_signatures.py::test_copy_signatures \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw56] [ 70%] PASSED test/controllers/test_controlled_terms_controller.py::test_for_taxon \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_user_controller.py::test_from_ids \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw18] [ 70%] PASSED test/controllers/test_observation_controller.py::test_search__with_annotations \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw4] [ 70%] PASSED test/controllers/test_place_controller.py::test_nearby \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw45] [ 71%] PASSED test/test_session.py::test_request_validate_json__retry_success \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw53] [ 71%] PASSED test/docs/test_docstrings.py::test_copy_docstrings \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw96] [ 71%] PASSED test/docs/test_docstrings.py::test_copy_docstrings__extend_args \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw29] [ 71%] PASSED test/controllers/test_place_controller.py::test_from_ids \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw117] [ 71%] PASSED test/controllers/test_observation_controller.py::test_taxon_summary__with_listed_taxon \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw33] [ 72%] PASSED test/docs/test_signatures.py::test_copy_signatures \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw13] [ 72%] PASSED test/controllers/test_place_controller.py::test_autocomplete \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw67] [ 72%] PASSED test/controllers/test_project_controller.py::test_from_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw109] [ 72%] PASSED test/controllers/test_controlled_terms_controller.py::test_lookup \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw75] [ 72%] PASSED test/controllers/test_observation_controller.py::test_taxon_summary__with_conservation_status \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw81] [ 73%] PASSED test/controllers/test_observation_controller.py::test_identifiers \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw126] [ 73%] PASSED test/controllers/test_user_controller.py::test_from_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw54] [ 73%] PASSED test/controllers/test_observation_controller.py::test_species_counts \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw93] [ 73%] PASSED test/controllers/test_observation_controller.py::test_observers \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_get_observations[json] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_create_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_update_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw46] [ 73%] PASSED test/controllers/test_observation_controller.py::test_life_list \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_update_observation__with_photos \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_get_observations[csv] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_get_observations[dwc] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw92] [ 74%] PASSED test/controllers/test_project_controller.py::test_add_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw85] [ 74%] PASSED test/controllers/test_observation_controller.py::test_search__with_ofvs \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw40] [ 74%] PASSED test/controllers/test_observation_controller.py::test_histogram \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_create_observation__with_photos \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw95] [ 74%] PASSED test/controllers/test_taxon_controller.py::test_autocomplete \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_get_observations__invalid_format[geojson] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw50] [ 74%] PASSED test/controllers/test_place_controller.py::test_from_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw91] [ 75%] PASSED test/controllers/test_taxon_controller.py::test_taxon__populate \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw25] [ 75%] PASSED test/controllers/test_taxon_controller.py::test_from_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_get_observations__invalid_format[yaml] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw103] [ 75%] PASSED test/v0/test_observations_v0.py::test_get_observations__invalid_format[geojson] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw51] [ 75%] PASSED test/controllers/test_project_controller.py::test_from_ids \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw28] [ 75%] PASSED test/controllers/test_taxon_controller.py::test_search \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw31] [ 76%] PASSED test/controllers/test_project_controller.py::test_search \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw79] [ 76%] PASSED test/controllers/test_user_controller.py::test_autocomplete \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw102] [ 76%] PASSED test/v0/test_observations_v0.py::test_create_observation__with_photos \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw8] [ 76%] PASSED test/v0/test_observations_v0.py::test_update_observation__with_photos \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw58] [ 76%] PASSED test/v0/test_observations_v0.py::test_get_observations__invalid_format[yaml] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw77] [ 77%] PASSED test/controllers/test_user_controller.py::test_from_ids \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw15] [ 77%] PASSED test/controllers/test_place_controller.py::test_get_places_autocomplete__all_pages \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw125] [ 77%] PASSED test/controllers/test_user_controller.py::test_me \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw71] [ 77%] PASSED test/controllers/test_project_controller.py::test_search__with_obs_fields \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw38] [ 77%] PASSED test/controllers/test_observation_controller.py::test_popular_fields \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw49] [ 78%] PASSED test/v0/test_observations_v0.py::test_update_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_update_nonexistent_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_create_observation__with_datetime \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_update_observation__with_sounds \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_create_observation_fail \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_get_observations[atom] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_create_observation__with_sounds \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw107] [ 78%] PASSED test/v0/test_observations_v0.py::test_create_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_identifications.py::test_get_identifications \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_update_observation_not_mine \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_controlled_terms.py::test_get_controlled_terms \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/controllers/test_taxon_controller.py::test_from_ids \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_identifications.py::test_get_identifications_by_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_messages.py::test_get_unread_meassage_count__invalid \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw84] [ 78%] PASSED test/v0/test_observations_v0.py::test_create_observation__with_datetime \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_node_api.py::test_get_user_by_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_get_observations[kml] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_controlled_terms.py::test_get_controlled_terms_for_taxon \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_get_observations__by_obs_field \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_get_observations__all_pages \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observation_fields.py::test_set_observation_field \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_upload_photos \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_delete_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw24] [ 78%] PASSED test/v0/test_observations_v0.py::test_get_observations[json] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_messages.py::test_get_unread_meassage_count \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_delete_unexisting_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observation_fields.py::test_delete_observation_field \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw110] [ 78%] PASSED test/v0/test_observations_v0.py::test_update_observation__with_sounds \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_node_api.py::test_get_users_autocomplete \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw124] [ 79%] PASSED test/v0/test_observations_v0.py::test_get_observations[csv] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw72] [ 79%] PASSED test/controllers/test_taxon_controller.py::test_from_ids \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_get_observations \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw2] [ 79%] PASSED test/v1/test_messages.py::test_get_unread_meassage_count \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw47] [ 79%] PASSED test/v0/test_observations_v0.py::test_create_observation__with_sounds \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_get_observations_by_id__multiple \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observation_fields_v0.py::test_get_observation_fields \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw32] [ 79%] PASSED test/v0/test_observations_v0.py::test_get_observations[dwc] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_get_observation_histogram \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw121] [ 80%] PASSED test/v1/test_observations.py::test_get_observations__by_obs_field \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw36] [ 80%] PASSED test/v0/test_observations_v0.py::test_get_observations[atom] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_get_observations[widget] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_messages.py::test_get_message_by_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_messages.py::test_get_messages__threads \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw116] [ 80%] PASSED test/v1/test_identifications.py::test_get_identifications_by_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw86] [ 80%] PASSED test/v0/test_observations_v0.py::test_update_nonexistent_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observation_fields_v0.py::test_put_observation_field_values \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw83] [ 80%] PASSED test/v0/test_observation_fields_v0.py::test_get_observation_fields \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_messages.py::test_get_messages \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_get_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw99] [ 80%] PASSED test/v1/test_identifications.py::test_get_identifications \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw108] [ 81%] PASSED test/v0/test_observations_v0.py::test_get_observations[kml] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw7] [ 81%] PASSED test/v0/test_observations_v0.py::test_upload_photos \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_get_observation_identifiers \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_get_observation__non_existent \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw9] [ 81%] PASSED test/v0/test_observations_v0.py::test_create_observation_fail \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observation_fields_v0.py::test_get_observation_fields__all_pages \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw127] [ 81%] PASSED test/v1/test_controlled_terms.py::test_get_controlled_terms_for_taxon \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw39] [ 81%] PASSED test/v1/test_node_api.py::test_get_users_autocomplete \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw115] [ 82%] PASSED test/v0/test_observations_v0.py::test_delete_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw52] [ 82%] PASSED test/v0/test_observations_v0.py::test_get_observations[widget] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw20] [ 82%] PASSED test/v1/test_controlled_terms.py::test_get_controlled_terms \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw43] [ 82%] PASSED test/v1/test_node_api.py::test_get_user_by_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_get_observation_taxon_summary__with_conservation_status \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_get_observation_species_counts__all_pages \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_get_observations__by_obs_field_values \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_get_observation_taxonomy \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw87] [ 82%] PASSED test/v0/test_observations_v0.py::test_update_observation_not_mine \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw21] [ 83%] PASSED test/v1/test_observation_fields.py::test_delete_observation_field \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw101] [ 83%] PASSED test/v1/test_observations.py::test_get_observations__by_obs_field_values \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw65] [ 83%] PASSED test/v1/test_observation_fields.py::test_set_observation_field \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_create_observation__with_files \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw113] [ 83%] PASSED test/v0/test_observation_fields_v0.py::test_put_observation_field_values \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw30] [ 83%] PASSED test/v1/test_observations.py::test_get_observations \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_update_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw123] [ 84%] PASSED test/v1/test_observations.py::test_get_observations_by_id__multiple \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw48] [ 84%] PASSED test/v1/test_messages.py::test_get_message_by_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_get_observation_taxon_summary__with_listed_taxon \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw60] [ 84%] PASSED test/v1/test_observations.py::test_get_observation_histogram \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_get_observation_species_counts__invalid_multiple_choice_params \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_get_observation_popular_field_values \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_get_observation_species_counts \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_get_observations_by_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_create_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw61] [ 84%] PASSED test/v1/test_observations.py::test_get_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_get_observation_observers \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_places.py::test_get_places_autocomplete \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v0/test_observations_v0.py::test_upload_sounds \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/docs/test_signatures.py::test_document_request_params \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw104] [ 84%] PASSED test/docs/test_signatures.py::test_document_request_params \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw3] [ 85%] PASSED test/v1/test_observations.py::test_get_observation_taxon_summary__with_conservation_status \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_upload \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw118] [ 85%] PASSED test/v1/test_messages.py::test_get_messages__threads \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw66] [ 85%] PASSED test/v1/test_observations.py::test_get_observation__non_existent \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_places.py::test_get_places_autocomplete__single_page \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw106] [ 85%] PASSED test/v1/test_observations.py::test_get_observations__all_pages \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_posts.py::test_get_posts_from_project \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw12] [ 85%] PASSED test/v1/test_messages.py::test_get_messages \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw120] [ 86%] PASSED test/v1/test_observations.py::test_create_observation__with_files \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw41] [ 86%] PASSED test/v1/test_observations.py::test_get_observation_taxonomy \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_delete_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw112] [ 86%] PASSED test/v1/test_observations.py::test_get_observation_identifiers \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_update_observation__with_photo_ids \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw5] [ 86%] PASSED test/v0/test_observations_v0.py::test_upload_sounds \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw0] [ 86%] PASSED test/v1/test_observations.py::test_get_observation_taxon_summary__with_listed_taxon \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw89] [ 87%] PASSED test/v1/test_observations.py::test_get_observation_species_counts \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw19] [ 87%] PASSED test/v1/test_observations.py::test_get_observation_popular_field_values \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_upload__with_photo_ids \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw34] [ 87%] PASSED test/v1/test_observations.py::test_get_observation_species_counts__invalid_multiple_choice_params \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw17] [ 87%] PASSED test/v1/test_observations.py::test_get_observations_by_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_projects.py::test_get_projects \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_update_observation__with_photos \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_projects.py::test_delete_project_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_search.py::test_search \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw14] [ 87%] PASSED test/v1/test_places.py::test_get_places_autocomplete \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_places.py::test_get_places_by_id__invalid_inputs[place_id2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_projects.py::test_delete_project_users__no_updates \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_projects.py::test_add_project_users \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_projects.py::test_add_project_users__no_updates \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw35] [ 88%] PASSED test/v1/test_observations.py::test_get_observation_species_counts__all_pages \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw63] [ 88%] PASSED test/v1/test_observations.py::test_upload__with_photo_ids \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_observations.py::test_update_observation__remove_existing_photos \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_projects.py::test_get_projects_by_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw6] [ 88%] PASSED test/v1/test_observations.py::test_get_observation_observers \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw11] [ 88%] PASSED test/v0/test_observations_v0.py::test_delete_unexisting_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw64] [ 88%] PASSED test/v1/test_observations.py::test_create_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw88] [ 89%] PASSED test/v1/test_observations.py::test_delete_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_taxa.py::test_get_taxa_by_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw26] [ 89%] PASSED test/v1/test_observations.py::test_update_observation__with_photos \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw27] [ 89%] PASSED test/v1/test_observations.py::test_update_observation__remove_existing_photos \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw114] [ 89%] PASSED test/v1/test_observations.py::test_update_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_places.py::test_get_places_nearby \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw105] [ 89%] PASSED test/v0/test_observation_fields_v0.py::test_get_observation_fields__all_pages \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_taxa.py::test_get_taxa_by_rank_range[params3-expected_ranks3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_projects.py::test_delete_project_users \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw97] [ 90%] PASSED test/v1/test_observations.py::test_update_observation__with_photo_ids \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw122] [ 90%] PASSED test/v1/test_observations.py::test_upload \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_projects.py::test_update_project \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw94] [ 90%] PASSED test/v1/test_taxa.py::test_get_taxa_by_rank_range[params3-expected_ranks3] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw69] [ 90%] PASSED test/v1/test_posts.py::test_get_posts_from_project \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw90] [ 90%] PASSED test/v1/test_places.py::test_get_places_by_id__invalid_inputs[place_id2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw37] [ 90%] PASSED test/v1/test_projects.py::test_get_projects_by_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw55] [ 91%] PASSED test/v1/test_projects.py::test_update_project \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_taxa.py::test_get_taxa_by_rank_range[params2-expected_ranks2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw82] [ 91%] PASSED test/v1/test_projects.py::test_get_projects \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw70] [ 91%] PASSED test/v1/test_projects.py::test_delete_project_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw10] [ 91%] PASSED test/v1/test_search.py::test_search \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_places.py::test_get_places_by_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_taxa.py::test_get_taxa_by_rank_range[params0-genus] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw73] [ 91%] PASSED test/v1/test_places.py::test_get_places_autocomplete__single_page \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw100] [ 92%] PASSED test/v1/test_places.py::test_get_places_by_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw42] [ 92%] PASSED test/v1/test_projects.py::test_add_project_users \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_taxa.py::test_get_taxa_by_rank_range[params1-expected_ranks1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw111] [ 92%] PASSED test/v1/test_places.py::test_get_places_nearby \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw23] [ 92%] PASSED test/v1/test_projects.py::test_add_project_users__no_updates \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_taxa.py::test_get_taxa_by_id__invalid_inputs[taxon_id1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_taxa.py::test_get_taxa_by_id__invalid_inputs[taxon_id2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_projects.py::test_add_project_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw57] [ 92%] PASSED test/v1/test_taxa.py::test_get_taxa_by_rank_range[params0-genus] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v2/test_observations_v2.py::test_get_observations__except_fields \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_users.py::test_get_users_autocomplete \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw16] [ 93%] PASSED test/v1/test_projects.py::test_delete_project_users__no_updates \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw18] [ 93%] PASSED test/v1/test_taxa.py::test_get_taxa_by_id__invalid_inputs[taxon_id2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw56] [ 93%] PASSED test/v1/test_taxa.py::test_get_taxa_by_id__invalid_inputs[taxon_id1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw119] [ 93%] PASSED test/v1/test_taxa.py::test_get_taxa_by_rank_range[params1-expected_ranks1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw80] [ 93%] PASSED test/v1/test_taxa.py::test_get_taxa_by_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_taxa.py::test_get_taxa_by_rank_range[params4-expected_ranks4] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw62] [ 94%] PASSED test/v1/test_taxa.py::test_get_taxa_by_rank_range[params2-expected_ranks2] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v2/test_observations_v2.py::test_get_observations__all_fields \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v2/test_observations_v2.py::test_get_observations__some_fields \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_users.py::test_get_current_user \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v2/test_observations_v2.py::test_get_observations__minimal \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_taxa.py::test_get_taxa_autocomplete \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_taxa.py::test_get_taxa_map_layers \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw68] [ 94%] PASSED test/v1/test_projects.py::test_delete_project_users \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw109] [ 94%] PASSED test/v1/test_taxa.py::test_get_taxa_by_rank_range[params4-expected_ranks4] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw45] [ 94%] PASSED test/v1/test_projects.py::test_add_project_observation \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v2/test_observations_v2.py::test_get_observations__all_pages \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw117] [ 94%] PASSED test/v1/test_users.py::test_get_users_autocomplete \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw13] [ 95%] PASSED test/v1/test_users.py::test_get_current_user \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw81] [ 95%] PASSED test/v1/test_taxa.py::test_get_taxa_autocomplete \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_users.py::test_get_user_by_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw75] [ 95%] PASSED test/v2/test_observations_v2.py::test_get_observations__some_fields \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw93] [ 95%] PASSED test/v1/test_taxa.py::test_get_taxa_map_layers \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v2/test_observations_v2.py::test_get_observations__by_obs_field \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v2/test_observations_v2.py::test_get_observations__all_pages__post \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw54] [ 95%] PASSED test/v2/test_observations_v2.py::test_get_observations__minimal \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw67] [ 96%] PASSED test/v2/test_observations_v2.py::test_get_observations__all_fields \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v2/test_observations_v2.py::test_get_observations__invalid_fields \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v2/test_observations_v2.py::test_get_observations__by_obs_field_values \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw85] [ 96%] PASSED test/v1/test_users.py::test_get_user_by_id \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw22] [ 96%] PASSED test/v1/test_messages.py::test_get_unread_meassage_count__invalid \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw50] [ 96%] PASSED test/v2/test_observations_v2.py::test_get_observations__by_obs_field \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw15] [ 96%] PASSED test/v2/test_observations_v2.py::test_get_observations__by_obs_field_values \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw31] [ 97%] PASSED test/v2/test_observations_v2.py::test_get_observations__invalid_fields \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw46] [ 97%] PASSED test/v2/test_observations_v2.py::test_get_observations__all_pages \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw4] [ 97%] PASSED test/v2/test_observations_v2.py::test_get_observations__except_fields \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw51] [ 97%] PASSED test/v2/test_observations_v2.py::test_get_observations__all_pages__post \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw76] [ 97%] PASSED test/test_session.py::test_get_refresh_params \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_taxa.py::test_get_taxa \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw76] [ 98%] PASSED test/v1/test_taxa.py::test_get_taxa \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw44] [ 98%] PASSED test/test_session.py::test_request_dry_run[none-False-POST-True] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_places.py::test_get_places_autocomplete__all_pages \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw1] [ 98%] PASSED test/test_session.py::test_request_dry_run[false-False-GET-True] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_posts.py::test_get_posts_from_login \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw1] [ 98%] PASSED test/v1/test_posts.py::test_get_posts_from_login \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw44] [ 98%] PASSED test/v1/test_places.py::test_get_places_autocomplete__all_pages \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw74] [ 99%] PASSED test/test_session.py::test_request_dry_run[False-False-POST-True] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_taxa.py::test_get_taxa_by_id__invalid_inputs[asdf] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw74] [ 99%] PASSED test/v1/test_taxa.py::test_get_taxa_by_id__invalid_inputs[asdf] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw59] [ 99%] PASSED test/test_session.py::test_request_dry_run[False-None-DELETE-True] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_places.py::test_get_places_by_id__invalid_inputs[place_id1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw59] [ 99%] PASSED test/v1/test_places.py::test_get_places_by_id__invalid_inputs[place_id1] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw98] [ 99%] PASSED test/test_session.py::test_request_validate_json__retry_failure \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/v1/test_places.py::test_get_places_by_id__invalid_inputs[asdf] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | check toml...............................................................\u001b[42mPassed\u001b[m\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | check yaml...............................................................\u001b[42mPassed\u001b[m\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | fix end of files.........................................................\u001b[42mPassed\u001b[m\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [gw98] [100%] PASSED test/v1/test_places.py::test_get_places_by_id__invalid_inputs[asdf] \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | =============================== warnings summary ===============================\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__load_full_record\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/pyinat-pyinaturalist/pyinaturalist/models/taxon.py:239: DeprecationWarning: This method is deprecated; please use iNatClient.taxa.full_record() instead\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |     warn(DeprecationWarning(msg))\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | test/test_models.py::test_taxon__load_full_record\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/pyinat-pyinaturalist/pyinaturalist/models/taxon.py:232: DeprecationWarning: This method is deprecated; please use iNatClient.taxa() instead\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   |     warn(DeprecationWarning('This method is deprecated; please use iNatClient.taxa() instead'))\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/pyinat-pyinaturalist/report.xml -\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | ---------- coverage: platform linux, python 3.7.11-final-0 -----------\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Name                                                      Stmts   Miss Branch BrPart  Cover\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | -------------------------------------------------------------------------------------------\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinat/__init__.py                                            6      6      0      0     0%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/__init__.py                                    16      0      0      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/auth.py                                        43      0      8      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/client.py                                      45      1      6      1    96%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/constants.py                                  102      0      0      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/controllers/__init__.py                         7      0      0      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/controllers/base_controller.py                  7      1      0      0    86%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/controllers/controlled_term_controller.py      29      0      8      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/controllers/observation_controller.py          73      7      4      0    88%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/controllers/place_controller.py                19      0      0      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/controllers/project_controller.py              34      6      2      0    83%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/controllers/taxon_controller.py                29      1      4      1    94%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/controllers/user_controller.py                 22      0      0      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/converters.py                                 168      4     82      3    97%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/docs/__init__.py                                4      0      0      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/docs/docstrings.py                             64      0     36      1    99%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/docs/emoji.py                                   1      0      0      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/docs/signatures.py                             65      2     22      1    97%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/docs/templates.py                              30      0      0      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/exceptions.py                                   8      0      0      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/formatters.py                                  90      8     38      3    90%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/models/__init__.py                             46      0      2      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/models/base.py                                133      7     70      4    93%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/models/checklist.py                            84      1     16      0    99%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/models/conservation_status.py                 130      1     50      1    99%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/models/controlled_term.py                     105      4     14      0    97%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/models/identification.py                       45      0      6      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/models/lazy_property.py                        48      1     12      1    97%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/models/life_list.py                            54     21     20      1    54%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/models/media.py                               113      8     16      1    93%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/models/message.py                              29      5      4      0    79%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/models/observation.py                         133      5     33      1    96%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/models/observation_field.py                    52      2      6      0    97%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/models/place.py                                50      3     10      1    93%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/models/project.py                              82      5      8      0    94%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/models/search.py                               26      1      6      0    97%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/models/taxon.py                               146      5     40      3    95%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/models/user.py                                 57      3     12      2    93%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/node_api.py                                    12      3      0      0    75%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/paginator.py                                  173      3     52      4    97%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/request_params.py                             174      1    102      2    99%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/rest_api.py                                    13      4      0      0    69%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/session.py                                    116      0     18      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/v0/__init__.py                                  2      0      0      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/v0/observation_fields.py                       25      0      4      1    97%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/v0/observations.py                             67      0     26      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/v1/__init__.py                                 11      0      0      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/v1/controlled_terms.py                         14      1      4      1    89%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/v1/identifications.py                          20      1      2      1    91%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/v1/messages.py                                 29      0      2      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/v1/observation_fields.py                       13      0      0      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/v1/observations.py                            118      2     26      2    97%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/v1/places.py                                   30      0      2      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/v1/posts.py                                    12      0      0      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/v1/projects.py                                 73      2     24      2    96%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/v1/search.py                                   12      0      0      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/v1/taxa.py                                     30      1      2      1    94%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/v1/users.py                                    23      1      2      1    92%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/v2/__init__.py                                  1      0      0      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | pyinaturalist/v2/observations.py                             37      0     12      0   100%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | -------------------------------------------------------------------------------------------\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | TOTAL                                                      3200    127    813     40    95%\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Coverage XML written to file coverage.xml\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | \n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | ======================= 510 passed, 2 warnings in 24.74s =======================\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | mixed line ending........................................................\u001b[42mPassed\u001b[m\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2705  Success - Main Run tests\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | trim trailing whitespace.................................................\u001b[42mPassed\u001b[m\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ] \u2b50 Run Post Cache python packages\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/save/index.js] user= workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | black....................................................................\u001b[42mPassed\u001b[m\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | blacken-docs.............................................................\u001b[42mPassed\u001b[m\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | isort....................................................................\u001b[42mPassed\u001b[m\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | flake8...................................................................\u001b[42mPassed\u001b[m\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Xenon (Radon CI).........................................................\u001b[42mPassed\u001b[m\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | mypy.....................................................................\u001b[42mPassed\u001b[m\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2705  Success - Main pre-commit run --show-diff-on-failure --color=always --all-files\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2705  Success - Main Run style checks & linting\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze] \u2b50 Run Post Run style checks & linting\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udc33  docker cp src=/tmp/act-cache/9ff5aaa8-e12f-4a60-942b-15edfe0616cc/act/pre-commit-action@v3.0.0/ dst=/var/run/act/actions/pre-commit-action@v3.0.0/\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/pre-commit-action@v3.0.0/] user=0 workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::1.5.0\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Search path '/tmp/558156d8-17ed-11ee-8a50-bb14de238602/pyinat-pyinaturalist/.venv'\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Matched: .venv\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Cache Paths:\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::[\".venv\"]\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Archive Path: /tmp/47cd0c82-d72b-43aa-bde8-a78ffc1efe06/cache.tzst\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | [command]/usr/bin/tar --posix -cf cache.tzst --exclude cache.tzst -P -C /tmp/558156d8-17ed-11ee-8a50-bb14de238602/pyinat-pyinaturalist --files-from manifest.txt --use-compress-program zstdmt\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze] \u2b50 Run Post actions/cache@v3\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/save/index.js] user= workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::File Size: 28937715\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Reserving Cache\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:38989/_apis/artifactcache/caches\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Saving Cache (ID: 1)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Upload cache\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:38989/_apis/artifactcache/caches/1\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Upload concurrency: 4\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Upload chunk size: 33554432\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Awaiting all uploads\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Uploading chunk of size 28937715 bytes at offset 0 with content range: bytes 0-28937714/*\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Commiting cache\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Cache Size: ~28 MB (28937715 B)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:38989/_apis/artifactcache/caches/1\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Cache saved successfully\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   | Cache saved with key: venv-3.7-bec00116e3756df04946bc75814d842bdf93e012dd36d61ff1752ab2892e0cf1\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2705  Success - Post Cache python packages\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ] \u2b50 Run Post snok/install-poetry@v1.3\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udc33  docker cp src=/tmp/act-cache/9ff5aaa8-e12f-4a60-942b-15edfe0616cc/act/snok-install-poetry@v1.3/ dst=/var/run/act/actions/snok-install-poetry@v1.3/\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1.3/] user=0 workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2705  Success - Post snok/install-poetry@v1.3\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::1.5.0\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/.cache/pre-commit'\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/.cache/pre-commit\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Cache Paths:\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::[\"../../../home/runneradmin/.cache/pre-commit\"]\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Archive Path: /tmp/30200f80-d850-410f-84d3-53524136f25f/cache.tzst\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | [command]/usr/bin/tar --posix -cf cache.tzst --exclude cache.tzst -P -C /tmp/558156d8-17ed-11ee-8a50-bb14de238602/pyinat-pyinaturalist --files-from manifest.txt --use-compress-program zstdmt\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ] \u2b50 Run Post actions/setup-python@v4\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::File Size: 59107235\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Reserving Cache\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:38989/_apis/artifactcache/caches\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Saving Cache (ID: 2)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Upload cache\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:38989/_apis/artifactcache/caches/2\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Upload concurrency: 4\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Upload chunk size: 33554432\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Awaiting all uploads\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 0 with content range: bytes 0-33554431/*\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Uploading chunk of size 25552803 bytes at offset 33554432 with content range: bytes 33554432-59107234/*\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Commiting cache\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Cache Size: ~56 MB (59107235 B)\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:38989/_apis/artifactcache/caches/2\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Cache saved successfully\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   | Cache saved with key: pre-commit-3|/opt/hostedtoolcache/Python/3.11.4/x64|3d2387daf34cb8b85d5546b8f5d21722c6cb90ceb8b8504b35ced47ee0a63458\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2705  Success - Post actions/cache@v3\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2705  Success - Post Run style checks & linting\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze] \u2b50 Run Post actions/setup-python@v4\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/cache-save/index.js] user= workdir=\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze]   \u2705  Success - Post actions/setup-python@v4\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ]   \u2705  Success - Post actions/setup-python@v4\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/test   ] \ud83c\udfc1  Job succeeded\n[e51c05f5-da4e-4e5a-8f4d-858af3d906cf/analyze] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/pyinat-pyinaturalist/.github/workflows/build-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "e51c05f5-da4e-4e5a-8f4d-858af3d906cf",
        "build_tool": "pytest",
        "elapsed_time": 410.4413149356842
    }
}