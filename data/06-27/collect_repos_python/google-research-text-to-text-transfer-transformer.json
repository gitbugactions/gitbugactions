{
    "repository": "google-research/text-to-text-transfer-transformer",
    "stars": 5295,
    "language": "python",
    "size": 5600,
    "clone_url": "https://github.com/google-research/text-to-text-transfer-transformer.git",
    "timestamp": "2023-06-28T14:27:48.951541Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "t5.data.dataset_providers_test.TasksTest",
                "name": "test_cached_task",
                "time": 0.015,
                "results": [
                    {
                        "result": "Failure",
                        "message": "absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.dataset_providers_test.TasksTest",
                "name": "test_function_task",
                "time": 0.007,
                "results": [
                    {
                        "result": "Failure",
                        "message": "absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.dataset_providers_test.TasksTest",
                "name": "test_immutabledict_features",
                "time": 0.006,
                "results": [
                    {
                        "result": "Failure",
                        "message": "absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.dataset_providers_test.TasksTest",
                "name": "test_no_eos",
                "time": 0.006,
                "results": [
                    {
                        "result": "Failure",
                        "message": "absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.dataset_providers_test.TasksTest",
                "name": "test_optional_features",
                "time": 0.006,
                "results": [
                    {
                        "result": "Failure",
                        "message": "absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.dataset_providers_test.TasksTest",
                "name": "test_task_registry_reset",
                "time": 0.006,
                "results": [
                    {
                        "result": "Failure",
                        "message": "absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.dataset_providers_test.TasksTest",
                "name": "test_text_line_task",
                "time": 0.007,
                "results": [
                    {
                        "result": "Failure",
                        "message": "absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.dataset_providers_test.TasksTest",
                "name": "test_tf_example_task",
                "time": 0.017,
                "results": [
                    {
                        "result": "Failure",
                        "message": "absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.dataset_providers_test.TasksTest",
                "name": "test_tfds_task",
                "time": 0.013,
                "results": [
                    {
                        "result": "Failure",
                        "message": "absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.dataset_providers_test.TasksTest",
                "name": "test_token_preprocessor",
                "time": 0.014,
                "results": [
                    {
                        "result": "Failure",
                        "message": "absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.postprocessors_test.PostprocessorsTest",
                "name": "test_lower_text",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.postprocessors_test.PostprocessorsTest",
                "name": "test_multirc",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.postprocessors_test.PostprocessorsTest",
                "name": "test_qa",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.postprocessors_test.PostprocessorsTest",
                "name": "test_rank_classification",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.postprocessors_test.PostprocessorsTest",
                "name": "test_rank_classification_is_target",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.postprocessors_test.PostprocessorsTest",
                "name": "test_record",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.postprocessors_test.PostprocessorsTest",
                "name": "test_span_qa",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.postprocessors_test.PostprocessorsTest",
                "name": "test_string_label_to_class_id",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.postprocessors_test.PostprocessorsTest",
                "name": "test_string_to_float",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.postprocessors_test.PostprocessorsTest",
                "name": "test_wsc_simple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_definite_pronoun_resolution_simple",
                "time": 1.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_denoise",
                "time": 3.515,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_denoise_nested_decorators",
                "time": 0.19,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_denoise_no_corruption",
                "time": 0.189,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_drop_noise_tokens",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_drop_nonnoise_tokens",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_fill_in_the_blank",
                "time": 1.313,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_fill_in_the_blank_sized",
                "time": 1.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_glue",
                "time": 0.734,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_lm",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_multi_translate",
                "time": 0.727,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_multirc",
                "time": 0.12,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_nested_key_rank_classification_formatter",
                "time": 0.744,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_next_sentence_prediction",
                "time": 2.777,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_noise_span_to_sentinel",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_noise_span_to_unique_sentinel",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_noise_token_to_gathered_token",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_noise_token_to_random_token",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_noise_token_to_random_token_or_sentinel",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_noise_token_to_sentinel",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_nonnoise_span_to_sentinel",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_pack_prefix_lm_decoder_only",
                "time": 0.848,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_pack_prefix_lm_decoder_only_with_padding",
                "time": 0.211,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_pack_prefix_lm_decoder_only_with_padding_loss_on_targets_false",
                "time": 0.198,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_pack_prefix_lm_encoder_decoder",
                "time": 0.732,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_pack_prefix_lm_encoder_decoder_with_padding",
                "time": 0.72,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_pad_nonspaced_languages",
                "time": 0.202,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_pad_punctuation",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_pad_punctuation_i18n",
                "time": 0.029,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_parse_tsv",
                "time": 0.188,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_parse_tsv_select_cols",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_permute_noise_tokens",
                "time": 0.051,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_prefix_lm",
                "time": 3.189,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_preprocess_tsv_with_field_names",
                "time": 0.516,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_preprocess_tsv_with_positions",
                "time": 0.101,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_random_prefix_noise_mask",
                "time": 0.232,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_random_spans_helper",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_random_spans_noise_mask",
                "time": 0.065,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_random_spans_noise_mask_no_corruption",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_random_spans_noise_mask_with_roll",
                "time": 0.086,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_random_spans_noise_mask_with_roll_avg",
                "time": 0.474,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_random_split_text",
                "time": 0.543,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_rank_classification",
                "time": 1.576,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_rank_classification_errors",
                "time": 1.657,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_rank_classification_formatter",
                "time": 0.774,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_rank_classification_formatter_with_weight",
                "time": 0.654,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_rank_classification_multilabel",
                "time": 1.367,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_rank_classification_with_passthrough_feature_keys",
                "time": 1.848,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_rank_classification_with_weight",
                "time": 1.311,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_record",
                "time": 1.163,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_regular_noise_mask",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_select_random_chunk",
                "time": 0.13,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_select_random_chunk_additional_features",
                "time": 0.182,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_select_random_chunk_different_sizes",
                "time": 0.178,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_select_random_chunk_min_length",
                "time": 0.126,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_select_random_chunk_passthrough",
                "time": 0.139,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_select_random_chunk_rank2",
                "time": 0.134,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_select_random_chunk_uniform_start",
                "time": 0.136,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_session",
                "time": 0.003,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Not a test.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_span_answer",
                "time": 0.071,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_span_corruption",
                "time": 1.043,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_span_corruption_passthrough",
                "time": 0.893,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_span_corruption_passthrough_fail",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_split_padding_tokens",
                "time": 0.964,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_split_text_to_words",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_split_tokens",
                "time": 1.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_split_tokens_additional_features_passthrough",
                "time": 2.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_split_tokens_additional_features_passthrough_rank0",
                "time": 1.55,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_split_tokens_passthrough_shuffled",
                "time": 0.461,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_split_tokens_rank2",
                "time": 1.04,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_split_tokens_to_targets_length",
                "time": 0.541,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_squad",
                "time": 0.333,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_squad_span_space_tokenized",
                "time": 0.988,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_stsb",
                "time": 0.246,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_summarize",
                "time": 0.12,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_translate",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_trim_tokens_at_front",
                "time": 0.175,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_triviaqa",
                "time": 0.917,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_triviaqa_truncate",
                "time": 3.787,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_triviaqa_truncate_text",
                "time": 3.96,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_wnli_simple",
                "time": 2.07,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.data.preprocessors_test.PreprocessorsTest",
                "name": "test_wsc_simple",
                "time": 0.928,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.eval_utils_test.EvalUtilsTest",
                "name": "test_get_eval_metric_values",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.eval_utils_test.EvalUtilsTest",
                "name": "test_get_eval_metric_values_seqio",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.eval_utils_test.EvalUtilsTest",
                "name": "test_glue_average",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.eval_utils_test.EvalUtilsTest",
                "name": "test_log_csv",
                "time": 0.002,
                "results": [
                    {
                        "result": "Failure",
                        "message": "absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --test_tmpdir before flags were parsed.",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.eval_utils_test.EvalUtilsTest",
                "name": "test_metric_group_max",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.eval_utils_test.EvalUtilsTest",
                "name": "test_parse_events_files",
                "time": 0.001,
                "results": [
                    {
                        "result": "Failure",
                        "message": "absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --test_tmpdir before flags were parsed.",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.eval_utils_test.EvalUtilsTest",
                "name": "test_parse_events_files_seqio",
                "time": 0.001,
                "results": [
                    {
                        "result": "Failure",
                        "message": "absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --test_tmpdir before flags were parsed.",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_accuracy",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_all_match",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_auc",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_auc_non_binary",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_coqa_f1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_coqa_tokenize",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_deduplicate_metric",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_different_bleu",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_different_rouge",
                "time": 0.178,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_different_squad",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_edit_distance",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_f1_score_with_invalid",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_mean_group_metric",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_mean_group_metric_with_subgroups",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_multiclass_f1",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_multiple_references_bleu",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_multirc_f1_over_all_answers",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_pearson_corrcoef",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_rank_classification_custom_weights",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_rank_classification_default_weights",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_rank_classification_normalized",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_rank_classification_raise",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_rank_classification_shuffled",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_same_bleu",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_same_rouge",
                "time": 0.177,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_same_squad",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_score_auc",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_score_auc_non_binary",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_sequence_accuracy",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_sequence_f1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_sklearn_wrapper",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_span_squad",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_span_squad_non_numbers",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_span_squad_one_word",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_spearman_corrcoef",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_squad_big",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_squad_small",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.MetricsTest",
                "name": "test_trivia_qa",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.ShardedSquadTest",
                "name": "test_batch_update",
                "time": 0.178,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.ShardedSquadTest",
                "name": "test_big",
                "time": 0.067,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.ShardedSquadTest",
                "name": "test_different",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.ShardedSquadTest",
                "name": "test_same",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.metrics_test.ShardedSquadTest",
                "name": "test_small",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.qa_utils_test.QaUtilsTest",
                "name": "test_normalize_squad",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.qa_utils_test.QaUtilsTest",
                "name": "test_normalize_trivia_qa",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.qa_utils_test.QaUtilsTest",
                "name": "test_qa_metrics",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.evaluation.scoring_test.ScoringTest",
                "name": "test_rouge_variants",
                "time": 0.779,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.models.mesh_transformer_test.MeshDatasetFnsTest",
                "name": "test_mesh_eval_dataset_fn",
                "time": 0.014,
                "results": [
                    {
                        "result": "Failure",
                        "message": "absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.models.mesh_transformer_test.MeshDatasetFnsTest",
                "name": "test_mesh_train_dataset_fn",
                "time": 0.014,
                "results": [
                    {
                        "result": "Failure",
                        "message": "absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.scripts.dump_task_test.DumpTaskTest",
                "name": "test_main_detokenize_task",
                "time": 0.008,
                "results": [
                    {
                        "result": "Failure",
                        "message": "absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --module_import before flags were parsed.",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.scripts.dump_task_test.DumpTaskTest",
                "name": "test_main_mixture",
                "time": 0.007,
                "results": [
                    {
                        "result": "Failure",
                        "message": "absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --module_import before flags were parsed.",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.scripts.dump_task_test.DumpTaskTest",
                "name": "test_main_postprocess",
                "time": 0.007,
                "results": [
                    {
                        "result": "Failure",
                        "message": "absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --module_import before flags were parsed.",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.scripts.dump_task_test.DumpTaskTest",
                "name": "test_main_task",
                "time": 0.007,
                "results": [
                    {
                        "result": "Failure",
                        "message": "absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --module_import before flags were parsed.",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.scripts.dump_task_test.DumpTaskTest",
                "name": "test_pretty_Multiple delimiter",
                "time": 0.002,
                "results": [
                    {
                        "result": "Failure",
                        "message": "absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --pretty before flags were parsed.",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.scripts.dump_task_test.DumpTaskTest",
                "name": "test_pretty_Single delimiter",
                "time": 0.002,
                "results": [
                    {
                        "result": "Failure",
                        "message": "absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --pretty before flags were parsed.",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.scripts.dump_task_test.DumpTaskTest",
                "name": "test_sequence_length_256Tokens",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.scripts.dump_task_test.DumpTaskTest",
                "name": "test_sequence_length_512Tokens",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "t5.scripts.dump_task_test.DumpTaskTest",
                "name": "test_session",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Not a test.",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build] \ud83d\ude80  Start image=crawlergpt:latest\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/google-research-text-to-text-transfer-transformer] user=0 workdir=\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build] \u2b50 Run Main actions/checkout@v2\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \u2705  Success - Main actions/checkout@v2\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build] \u2b50 Run Main Set up Python\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udc33  docker cp src=/tmp/act-cache/99286682-921a-4682-98bd-c933a546bddd/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udcac  ::debug::Semantic version spec of 3.8.x is 3.8.x\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udcac  ::debug::isExplicit: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udcac  ::debug::explicit? false\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udcac  ::debug::explicit? true\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udcac  ::debug::explicit? true\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udcac  ::debug::explicit? true\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udcac  ::debug::explicit? true\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udcac  ::debug::explicit? true\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udcac  ::debug::explicit? true\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udcac  ::debug::evaluating 6 versions\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udcac  ::debug::matched: 3.8.11\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Successfully setup CPython (3.8.11)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \u2705  Success - Main Set up Python\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \u2699  ::set-output:: python-version=3.8.11\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build] \u2b50 Run Main Install dependencies\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Obtaining file:///tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/google-research-text-to-text-transfer-transformer\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting absl-py\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading absl_py-1.4.0-py3-none-any.whl (126 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting babel\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading Babel-2.12.1-py3-none-any.whl (10.1 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting editdistance\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading editdistance-0.6.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (283 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting immutabledict\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading immutabledict-2.2.4-py3-none-any.whl (4.1 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting gin-config\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading gin_config-0.5.0-py3-none-any.whl (61 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting mesh-tensorflow[transformer]>=0.1.13\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading mesh_tensorflow-0.1.21-py3-none-any.whl (385 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting nltk\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading nltk-3.8.1-py3-none-any.whl (1.5 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting numpy\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading numpy-1.24.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.3 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting pandas<2.0.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading pandas-1.5.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.2 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting rouge-score>=0.1.2\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading rouge_score-0.1.2.tar.gz (17 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting sacrebleu\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading sacrebleu-2.3.1-py3-none-any.whl (118 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting scikit-learn\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading scikit_learn-1.2.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (9.8 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting scipy\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading scipy-1.10.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (34.5 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting sentencepiece\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading sentencepiece-0.1.99-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.3 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting seqio-nightly\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading seqio_nightly-0.0.15.dev20230628-py3-none-any.whl (347 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting six>=1.14\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting tfds-nightly\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading tfds_nightly-4.9.2.dev202306280046-py3-none-any.whl (5.0 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting transformers>=2.7.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading transformers-4.30.2-py3-none-any.whl (7.2 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting pytest\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading pytest-7.4.0-py3-none-any.whl (323 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting torch\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading torch-2.0.1-cp38-cp38-manylinux1_x86_64.whl (619.9 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting apache-beam\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading apache_beam-2.48.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (14.8 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting future\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading future-0.18.3.tar.gz (840 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting tensorflow-datasets\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading tensorflow_datasets-4.9.2-py3-none-any.whl (5.4 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting pytz>=2020.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting python-dateutil>=2.8.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting filelock\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting tqdm>=4.27\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading tqdm-4.65.0-py3-none-any.whl (77 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting regex!=2019.12.17\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading regex-2023.6.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (772 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting tokenizers!=0.11.3,<0.14,>=0.11.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading tokenizers-0.13.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (7.8 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting requests\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting huggingface-hub<1.0,>=0.14.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading huggingface_hub-0.15.1-py3-none-any.whl (236 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting safetensors>=0.3.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading safetensors-0.3.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.3 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting packaging>=20.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting pyyaml>=5.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading PyYAML-6.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (701 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting fsspec\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading fsspec-2023.6.0-py3-none-any.whl (163 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting typing-extensions>=3.7.4.3\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading typing_extensions-4.6.3-py3-none-any.whl (31 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting pymongo<5.0.0,>=3.8.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading pymongo-4.4.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (664 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting fasteners<1.0,>=0.3\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading fasteners-0.18-py3-none-any.whl (18 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting pyarrow<12.0.0,>=3.0.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading pyarrow-11.0.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (35.0 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting orjson<4.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading orjson-3.9.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (136 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting objsize<0.7.0,>=0.6.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading objsize-0.6.1-py3-none-any.whl (9.3 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting pydot<2,>=1.2.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading pydot-1.4.2-py2.py3-none-any.whl (21 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting grpcio!=1.48.0,<2,>=1.33.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading grpcio-1.56.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (5.2 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting hdfs<3.0.0,>=2.1.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading hdfs-2.7.0-py3-none-any.whl (34 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting protobuf<4.24.0,>=3.20.3\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading protobuf-4.23.3-cp37-abi3-manylinux2014_x86_64.whl (304 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting httplib2<0.23.0,>=0.8\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading httplib2-0.22.0-py3-none-any.whl (96 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting cloudpickle~=2.2.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading cloudpickle-2.2.1-py3-none-any.whl (25 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting dill<0.3.2,>=0.3.1.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading dill-0.3.1.1.tar.gz (151 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting fastavro<2,>=0.23.6\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading fastavro-1.7.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.7 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting proto-plus<2,>=1.7.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading proto_plus-1.22.3-py3-none-any.whl (48 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting zstandard<1,>=0.18.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading zstandard-0.21.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.7 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting crcmod<2.0,>=1.7\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading crcmod-1.7.tar.gz (89 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting docopt\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading docopt-0.6.2.tar.gz (25 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting pyparsing!=3.0.0,!=3.0.1,!=3.0.2,!=3.0.3,<4,>=2.4.2\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading pyparsing-3.1.0-py3-none-any.whl (102 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting dnspython<3.0.0,>=1.16.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading dnspython-2.3.0-py3-none-any.whl (283 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting urllib3<3,>=1.21.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading urllib3-2.0.3-py3-none-any.whl (123 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting charset-normalizer<4,>=2\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading charset_normalizer-3.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (195 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting idna<4,>=2.5\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting certifi>=2017.4.17\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting click\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading click-8.1.3-py3-none-any.whl (96 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting joblib\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading joblib-1.3.0-py3-none-any.whl (301 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting iniconfig\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting exceptiongroup>=1.0.0rc8\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading exceptiongroup-1.1.1-py3-none-any.whl (14 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting tomli>=1.0.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting pluggy<2.0,>=0.12\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading pluggy-1.2.0-py3-none-any.whl (17 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting portalocker\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading portalocker-2.7.0-py2.py3-none-any.whl (15 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting colorama\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting tabulate>=0.8.9\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading tabulate-0.9.0-py3-none-any.whl (35 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting lxml\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading lxml-4.9.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (7.1 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting threadpoolctl>=2.0.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading threadpoolctl-3.1.0-py3-none-any.whl (14 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting clu\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading clu-0.0.9-py3-none-any.whl (98 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting jaxlib\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading jaxlib-0.4.13-cp38-cp38-manylinux2014_x86_64.whl (71.6 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting pyglove\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading pyglove-0.3.0-py3-none-any.whl (505 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting protobuf<4.24.0,>=3.20.3\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading protobuf-3.20.3-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.whl (1.0 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting tensorflow-text\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading tensorflow_text-2.12.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (6.0 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting jax\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading jax-0.4.13.tar.gz (1.3 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Installing build dependencies: started\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Installing build dependencies: finished with status 'done'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Getting requirements to build wheel: started\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Getting requirements to build wheel: finished with status 'done'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     Preparing wheel metadata: started\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     Preparing wheel metadata: finished with status 'done'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting etils[epath]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading etils-1.3.0-py3-none-any.whl (126 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting ml-collections\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading ml_collections-0.1.1.tar.gz (77 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting flax\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading flax-0.6.11-py3-none-any.whl (227 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting wrapt\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading wrapt-1.15.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (81 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting zipp\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting importlib_resources\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading importlib_resources-5.12.0-py3-none-any.whl (36 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting optax\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading optax-0.1.5-py3-none-any.whl (164 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting msgpack\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading msgpack-1.0.5-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (322 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting tensorstore\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading tensorstore-0.1.39-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.1 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting rich>=11.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading rich-13.4.2-py3-none-any.whl (239 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting orbax-checkpoint\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading orbax_checkpoint-0.2.3-py3-none-any.whl (81 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting importlib-metadata>=4.6\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting opt-einsum\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading opt_einsum-3.3.0-py3-none-any.whl (65 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting ml-dtypes>=0.1.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading ml_dtypes-0.2.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.0 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting pygments<3.0.0,>=2.13.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading Pygments-2.15.1-py3-none-any.whl (1.1 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting markdown-it-py>=2.2.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading markdown_it_py-3.0.0-py3-none-any.whl (87 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting mdurl~=0.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading mdurl-0.1.2-py3-none-any.whl (10.0 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting contextlib2\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading contextlib2-21.6.0-py2.py3-none-any.whl (13 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting chex>=0.1.5\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading chex-0.1.7-py3-none-any.whl (89 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting toolz>=0.9.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading toolz-0.12.0-py3-none-any.whl (55 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting dm-tree>=0.1.5\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading dm_tree-0.1.8-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (152 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting nest_asyncio\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading nest_asyncio-1.5.6-py3-none-any.whl (5.2 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting cached_property\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading cached_property-1.5.2-py2.py3-none-any.whl (7.6 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting tensorflow-metadata\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading tensorflow_metadata-1.13.1-py3-none-any.whl (28 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting promise\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading promise-2.3.tar.gz (19 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting termcolor\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading termcolor-2.3.0-py3-none-any.whl (6.9 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting toml\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading toml-0.10.2-py2.py3-none-any.whl (16 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting array-record\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading array_record-0.4.0-py38-none-any.whl (3.0 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting psutil\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading psutil-5.9.5-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (282 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting googleapis-common-protos<2,>=1.52.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading googleapis_common_protos-1.59.1-py2.py3-none-any.whl (224 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting tensorflow<2.13,>=2.12.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading tensorflow-2.12.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (585.9 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting tensorflow-hub>=0.8.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading tensorflow_hub-0.13.0-py2.py3-none-any.whl (100 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting tensorflow-estimator<2.13,>=2.12.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading tensorflow_estimator-2.12.0-py2.py3-none-any.whl (440 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting numpy\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading numpy-1.23.5-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.1 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting keras<2.13,>=2.12.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading keras-2.12.0-py2.py3-none-any.whl (1.7 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting wrapt\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading wrapt-1.14.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (81 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting tensorflow-io-gcs-filesystem>=0.23.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading tensorflow_io_gcs_filesystem-0.32.0-cp38-cp38-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (2.4 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting gast<=0.4.0,>=0.2.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading gast-0.4.0-py3-none-any.whl (9.8 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting tensorboard<2.13,>=2.12\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading tensorboard-2.12.3-py3-none-any.whl (5.6 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting h5py>=2.9.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading h5py-3.9.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (4.8 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting astunparse>=1.6.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading astunparse-1.6.3-py2.py3-none-any.whl (12 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting google-pasta>=0.1.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading google_pasta-0.2.0-py3-none-any.whl (57 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting flatbuffers>=2.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading flatbuffers-23.5.26-py2.py3-none-any.whl (26 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages (from tensorflow<2.13,>=2.12.0->tensorflow-text->seqio-nightly->t5==0.9.4) (56.0.0)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting libclang>=13.0.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading libclang-16.0.0-py2.py3-none-manylinux2010_x86_64.whl (22.9 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting wheel<1.0,>=0.23.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Using cached wheel-0.40.0-py3-none-any.whl (64 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting google-auth<3,>=1.6.3\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading google_auth-2.21.0-py2.py3-none-any.whl (182 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting google-auth-oauthlib<1.1,>=0.5\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading google_auth_oauthlib-1.0.0-py2.py3-none-any.whl (18 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting markdown>=2.6.8\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading Markdown-3.4.3-py3-none-any.whl (93 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting tensorboard-data-server<0.8.0,>=0.7.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading tensorboard_data_server-0.7.1-py3-none-manylinux2014_x86_64.whl (6.6 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting werkzeug>=1.0.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading Werkzeug-2.3.6-py3-none-any.whl (242 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting cachetools<6.0,>=2.0.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading cachetools-5.3.1-py3-none-any.whl (9.3 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting urllib3<3,>=1.21.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting rsa<5,>=3.1.4\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading rsa-4.9-py3-none-any.whl (34 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting pyasn1-modules>=0.2.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading pyasn1_modules-0.3.0-py2.py3-none-any.whl (181 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting requests-oauthlib>=0.7.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading requests_oauthlib-1.3.1-py2.py3-none-any.whl (23 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting pyasn1<0.6.0,>=0.4.6\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading pyasn1-0.5.0-py2.py3-none-any.whl (83 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting oauthlib>=3.0.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading oauthlib-3.2.2-py3-none-any.whl (151 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting MarkupSafe>=2.1.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading MarkupSafe-2.1.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting nvidia-cusparse-cu11==11.7.4.91\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading nvidia_cusparse_cu11-11.7.4.91-py3-none-manylinux1_x86_64.whl (173.2 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting nvidia-cuda-cupti-cu11==11.7.101\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading nvidia_cuda_cupti_cu11-11.7.101-py3-none-manylinux1_x86_64.whl (11.8 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting nvidia-nccl-cu11==2.14.3\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading nvidia_nccl_cu11-2.14.3-py3-none-manylinux1_x86_64.whl (177.1 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting nvidia-curand-cu11==10.2.10.91\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading nvidia_curand_cu11-10.2.10.91-py3-none-manylinux1_x86_64.whl (54.6 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting sympy\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading sympy-1.12-py3-none-any.whl (5.7 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting jinja2\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading Jinja2-3.1.2-py3-none-any.whl (133 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting nvidia-cudnn-cu11==8.5.0.96\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading nvidia_cudnn_cu11-8.5.0.96-2-py3-none-manylinux1_x86_64.whl (557.1 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting nvidia-cufft-cu11==10.9.0.58\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading nvidia_cufft_cu11-10.9.0.58-py3-none-manylinux1_x86_64.whl (168.4 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting triton==2.0.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading triton-2.0.0-1-cp38-cp38-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (63.2 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting nvidia-cuda-nvrtc-cu11==11.7.99\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading nvidia_cuda_nvrtc_cu11-11.7.99-2-py3-none-manylinux1_x86_64.whl (21.0 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting nvidia-nvtx-cu11==11.7.91\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading nvidia_nvtx_cu11-11.7.91-py3-none-manylinux1_x86_64.whl (98 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting networkx\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading networkx-3.1-py3-none-any.whl (2.1 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting nvidia-cusolver-cu11==11.4.0.1\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading nvidia_cusolver_cu11-11.4.0.1-2-py3-none-manylinux1_x86_64.whl (102.6 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting nvidia-cublas-cu11==11.10.3.66\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading nvidia_cublas_cu11-11.10.3.66-py3-none-manylinux1_x86_64.whl (317.1 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting nvidia-cuda-runtime-cu11==11.7.99\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading nvidia_cuda_runtime_cu11-11.7.99-py3-none-manylinux1_x86_64.whl (849 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting cmake\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading cmake-3.26.4-py2.py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl (24.0 MB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting lit\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading lit-16.0.6.tar.gz (153 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Installing build dependencies: started\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Installing build dependencies: finished with status 'done'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Getting requirements to build wheel: started\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Getting requirements to build wheel: finished with status 'done'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Installing backend dependencies: started\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Installing backend dependencies: finished with status 'done'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     Preparing wheel metadata: started\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     Preparing wheel metadata: finished with status 'done'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Collecting mpmath>=0.19\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Downloading mpmath-1.3.0-py3-none-any.whl (536 kB)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Using legacy 'setup.py install' for rouge-score, since package 'wheel' is not installed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Using legacy 'setup.py install' for crcmod, since package 'wheel' is not installed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Using legacy 'setup.py install' for dill, since package 'wheel' is not installed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Using legacy 'setup.py install' for docopt, since package 'wheel' is not installed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Using legacy 'setup.py install' for future, since package 'wheel' is not installed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Using legacy 'setup.py install' for ml-collections, since package 'wheel' is not installed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Using legacy 'setup.py install' for promise, since package 'wheel' is not installed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Building wheels for collected packages: jax, lit\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Building wheel for jax (PEP 517): started\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Building wheel for jax (PEP 517): finished with status 'done'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Created wheel for jax: filename=jax-0.4.13-py3-none-any.whl size=1518707 sha256=aff12ccbc3779afbc4224a05c198261f026508de1c18dd379320bc4b0d833bbd\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/46/d9/15/d2800d4089dc4c77299ac7513c6aa1036f5491edbd2bf6ba16\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Building wheel for lit (PEP 517): started\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Building wheel for lit (PEP 517): finished with status 'done'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Created wheel for lit: filename=lit-16.0.6-py3-none-any.whl size=93582 sha256=71eb311f0392543b00d05ee9eb9fda54b522e2269590499327c07c0e4613c6c7\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/05/ab/f1/0102fea49a41c753f0e79a1a4012417d5d7ef0f93224694472\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Successfully built jax lit\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Installing collected packages: zipp, urllib3, pyasn1, numpy, idna, charset-normalizer, certifi, typing-extensions, six, scipy, rsa, requests, pyasn1-modules, opt-einsum, oauthlib, ml-dtypes, importlib-metadata, etils, cachetools, toolz, requests-oauthlib, mdurl, MarkupSafe, jaxlib, jax, google-auth, dm-tree, absl-py, wheel, werkzeug, tqdm, tensorstore, tensorboard-data-server, pyyaml, pygments, protobuf, nest-asyncio, msgpack, markdown-it-py, markdown, importlib-resources, grpcio, google-auth-oauthlib, chex, cached-property, wrapt, termcolor, tensorflow-io-gcs-filesystem, tensorflow-estimator, tensorboard, rich, packaging, orbax-checkpoint, optax, libclang, keras, h5py, googleapis-common-protos, google-pasta, gast, flatbuffers, contextlib2, astunparse, toml, tensorflow-metadata, tensorflow-hub, tensorflow, regex, psutil, promise, ml-collections, joblib, gin-config, future, fsspec, flax, filelock, click, array-record, tokenizers, threadpoolctl, tfds-nightly, tensorflow-text, tensorflow-datasets, tabulate, sentencepiece, safetensors, pytz, python-dateutil, pyparsing, pyglove, portalocker, nvidia-cublas-cu11, nltk, mpmath, mesh-tensorflow, lxml, lit, huggingface-hub, editdistance, docopt, dnspython, colorama, cmake, clu, zstandard, triton, transformers, tomli, sympy, seqio-nightly, scikit-learn, sacrebleu, rouge-score, pymongo, pydot, pyarrow, proto-plus, pluggy, pandas, orjson, objsize, nvidia-nvtx-cu11, nvidia-nccl-cu11, nvidia-cusparse-cu11, nvidia-cusolver-cu11, nvidia-curand-cu11, nvidia-cufft-cu11, nvidia-cudnn-cu11, nvidia-cuda-runtime-cu11, nvidia-cuda-nvrtc-cu11, nvidia-cuda-cupti-cu11, networkx, jinja2, iniconfig, immutabledict, httplib2, hdfs, fasteners, fastavro, exceptiongroup, dill, crcmod, cloudpickle, babel, torch, t5, pytest, apache-beam\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     Running setup.py install for promise: started\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     Running setup.py install for promise: finished with status 'done'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     Running setup.py install for ml-collections: started\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     Running setup.py install for ml-collections: finished with status 'done'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     Running setup.py install for future: started\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     Running setup.py install for future: finished with status 'done'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     Running setup.py install for docopt: started\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     Running setup.py install for docopt: finished with status 'done'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     Running setup.py install for rouge-score: started\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     Running setup.py install for rouge-score: finished with status 'done'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     Running setup.py install for dill: started\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     Running setup.py install for dill: finished with status 'done'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     Running setup.py install for crcmod: started\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     Running setup.py install for crcmod: finished with status 'done'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   Running setup.py develop for t5\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | Successfully installed MarkupSafe-2.1.3 absl-py-1.4.0 apache-beam-2.48.0 array-record-0.4.0 astunparse-1.6.3 babel-2.12.1 cached-property-1.5.2 cachetools-5.3.1 certifi-2023.5.7 charset-normalizer-3.1.0 chex-0.1.7 click-8.1.3 cloudpickle-2.2.1 clu-0.0.9 cmake-3.26.4 colorama-0.4.6 contextlib2-21.6.0 crcmod-1.7 dill-0.3.1.1 dm-tree-0.1.8 dnspython-2.3.0 docopt-0.6.2 editdistance-0.6.2 etils-1.3.0 exceptiongroup-1.1.1 fastavro-1.7.4 fasteners-0.18 filelock-3.12.2 flatbuffers-23.5.26 flax-0.6.11 fsspec-2023.6.0 future-0.18.3 gast-0.4.0 gin-config-0.5.0 google-auth-2.21.0 google-auth-oauthlib-1.0.0 google-pasta-0.2.0 googleapis-common-protos-1.59.1 grpcio-1.56.0 h5py-3.9.0 hdfs-2.7.0 httplib2-0.22.0 huggingface-hub-0.15.1 idna-3.4 immutabledict-2.2.4 importlib-metadata-6.7.0 importlib-resources-5.12.0 iniconfig-2.0.0 jax-0.4.13 jaxlib-0.4.13 jinja2-3.1.2 joblib-1.3.0 keras-2.12.0 libclang-16.0.0 lit-16.0.6 lxml-4.9.2 markdown-3.4.3 markdown-it-py-3.0.0 mdurl-0.1.2 mesh-tensorflow-0.1.21 ml-collections-0.1.1 ml-dtypes-0.2.0 mpmath-1.3.0 msgpack-1.0.5 nest-asyncio-1.5.6 networkx-3.1 nltk-3.8.1 numpy-1.23.5 nvidia-cublas-cu11-11.10.3.66 nvidia-cuda-cupti-cu11-11.7.101 nvidia-cuda-nvrtc-cu11-11.7.99 nvidia-cuda-runtime-cu11-11.7.99 nvidia-cudnn-cu11-8.5.0.96 nvidia-cufft-cu11-10.9.0.58 nvidia-curand-cu11-10.2.10.91 nvidia-cusolver-cu11-11.4.0.1 nvidia-cusparse-cu11-11.7.4.91 nvidia-nccl-cu11-2.14.3 nvidia-nvtx-cu11-11.7.91 oauthlib-3.2.2 objsize-0.6.1 opt-einsum-3.3.0 optax-0.1.5 orbax-checkpoint-0.2.3 orjson-3.9.1 packaging-23.1 pandas-1.5.3 pluggy-1.2.0 portalocker-2.7.0 promise-2.3 proto-plus-1.22.3 protobuf-3.20.3 psutil-5.9.5 pyarrow-11.0.0 pyasn1-0.5.0 pyasn1-modules-0.3.0 pydot-1.4.2 pyglove-0.3.0 pygments-2.15.1 pymongo-4.4.0 pyparsing-3.1.0 pytest-7.4.0 python-dateutil-2.8.2 pytz-2023.3 pyyaml-6.0 regex-2023.6.3 requests-2.31.0 requests-oauthlib-1.3.1 rich-13.4.2 rouge-score-0.1.2 rsa-4.9 sacrebleu-2.3.1 safetensors-0.3.1 scikit-learn-1.2.2 scipy-1.10.1 sentencepiece-0.1.99 seqio-nightly-0.0.15.dev20230628 six-1.16.0 sympy-1.12 t5 tabulate-0.9.0 tensorboard-2.12.3 tensorboard-data-server-0.7.1 tensorflow-2.12.0 tensorflow-datasets-4.9.2 tensorflow-estimator-2.12.0 tensorflow-hub-0.13.0 tensorflow-io-gcs-filesystem-0.32.0 tensorflow-metadata-1.13.1 tensorflow-text-2.12.1 tensorstore-0.1.39 termcolor-2.3.0 tfds-nightly-4.9.2.dev202306280046 threadpoolctl-3.1.0 tokenizers-0.13.3 toml-0.10.2 tomli-2.0.1 toolz-0.12.0 torch-2.0.1 tqdm-4.65.0 transformers-4.30.2 triton-2.0.0 typing-extensions-4.6.3 urllib3-1.26.16 werkzeug-2.3.6 wheel-0.40.0 wrapt-1.14.1 zipp-3.15.0 zstandard-0.21.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.8.11/x64/bin/python -m pip install --upgrade pip' command.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \u2705  Success - Main Install dependencies\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build] \u2b50 Run Main Test with pytest\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | ============================= test session starts ==============================\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | platform linux -- Python 3.8.11, pytest-7.4.0, pluggy-1.2.0\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/google-research-text-to-text-transfer-transformer\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | configfile: pytest.ini\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | collected 167 items\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/data/dataset_providers_test.py FFFFFFFFFF                             [  5%]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/data/postprocessors_test.py ..........                                [ 11%]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/data/preprocessors_test.py .......................................... [ 37%]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | ................s.......................                                 [ 61%]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/evaluation/eval_utils_test.py ...F.FF                                 [ 65%]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/evaluation/metrics_test.py .......................................... [ 90%]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | .                                                                        [ 91%]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/evaluation/qa_utils_test.py ...                                       [ 92%]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/evaluation/scoring_test.py .                                          [ 93%]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/models/mesh_transformer_test.py FF                                    [ 94%]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/scripts/dump_task_test.py FFFFFF..s                                   [100%]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | =================================== FAILURES ===================================\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | __________________________ TasksTest.test_cached_task __________________________\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <t5.data.dataset_providers_test.TasksTest testMethod=test_cached_task>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def get_tempdir(self):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       try:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       flags.FLAGS.test_tmpdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1139: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | name = 'test_tmpdir'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __getattr__(self, name):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Retrieves the 'value' attribute of the flag --name.\"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       fl = self._flags()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name not in fl:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name in self.__dict__['__hiddenflags']:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if self.__dict__['__flags_parsed'] or fl[name].present:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         return fl[name].value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       else:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnparsedFlagAccessError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'Trying to access flag --%s before flags were parsed.' % name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --test_tmpdir before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:481: UnparsedFlagAccessError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | During handling of the above exception, another exception occurred:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1150: in setUp\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     self.test_tmpdir = self.get_tempdir()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1142: in get_tempdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     flags.FLAGS(sys.argv)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | argv = ['/opt/hostedtoolcache/Python/3.8.11/x64/bin/pytest', '--junitxml=report.xml']\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | known_only = False\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __call__(self, argv, known_only=False):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Parses flags from argv; stores parsed flags into this FlagValues object.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       All unparsed arguments are returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Args:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          argv: a tuple/list of strings.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          known_only: bool, if True, parse and remove known flags; return the rest\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |            untouched. Unknown flags specified by --undefok are not returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Returns:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          The list of arguments not parsed as options, including argv[0].\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Raises:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          Error: Raised on any parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          TypeError: Raised on passing wrong type of arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          ValueError: Raised on flag value parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if isinstance(argv, (str, bytes)):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise TypeError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv should be a tuple/list of strings, not bytes or string.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if not argv:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise ValueError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv cannot be an empty list, and must contain the program name as '\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'the first element.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # This pre parses the argv list for --flagfile=<> options.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       program_name = argv[0]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       args = self.read_flags_from_files(argv[1:], force_gnu=False)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Parse the arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       unknown_flags, unparsed_args = self._parse_args(args, known_only)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Handle unknown flags by raising UnrecognizedFlagError.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Note some users depend on us raising this particular error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       for name, value in unknown_flags:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         suggestions = _helpers.get_flag_suggestions(name, list(self))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnrecognizedFlagError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             name, value, suggestions=suggestions)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:652: UnrecognizedFlagError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _________________________ TasksTest.test_function_task _________________________\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <t5.data.dataset_providers_test.TasksTest testMethod=test_function_task>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def get_tempdir(self):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       try:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       flags.FLAGS.test_tmpdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1139: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | name = 'test_tmpdir'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __getattr__(self, name):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Retrieves the 'value' attribute of the flag --name.\"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       fl = self._flags()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name not in fl:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name in self.__dict__['__hiddenflags']:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if self.__dict__['__flags_parsed'] or fl[name].present:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         return fl[name].value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       else:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnparsedFlagAccessError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'Trying to access flag --%s before flags were parsed.' % name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --test_tmpdir before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:481: UnparsedFlagAccessError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | During handling of the above exception, another exception occurred:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1150: in setUp\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     self.test_tmpdir = self.get_tempdir()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1142: in get_tempdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     flags.FLAGS(sys.argv)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | argv = ['/opt/hostedtoolcache/Python/3.8.11/x64/bin/pytest', '--junitxml=report.xml']\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | known_only = False\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __call__(self, argv, known_only=False):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Parses flags from argv; stores parsed flags into this FlagValues object.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       All unparsed arguments are returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Args:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          argv: a tuple/list of strings.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          known_only: bool, if True, parse and remove known flags; return the rest\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |            untouched. Unknown flags specified by --undefok are not returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Returns:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          The list of arguments not parsed as options, including argv[0].\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Raises:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          Error: Raised on any parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          TypeError: Raised on passing wrong type of arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          ValueError: Raised on flag value parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if isinstance(argv, (str, bytes)):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise TypeError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv should be a tuple/list of strings, not bytes or string.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if not argv:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise ValueError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv cannot be an empty list, and must contain the program name as '\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'the first element.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # This pre parses the argv list for --flagfile=<> options.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       program_name = argv[0]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       args = self.read_flags_from_files(argv[1:], force_gnu=False)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Parse the arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       unknown_flags, unparsed_args = self._parse_args(args, known_only)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Handle unknown flags by raising UnrecognizedFlagError.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Note some users depend on us raising this particular error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       for name, value in unknown_flags:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         suggestions = _helpers.get_flag_suggestions(name, list(self))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnrecognizedFlagError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             name, value, suggestions=suggestions)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:652: UnrecognizedFlagError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | ____________________ TasksTest.test_immutabledict_features _____________________\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <t5.data.dataset_providers_test.TasksTest testMethod=test_immutabledict_features>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def get_tempdir(self):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       try:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       flags.FLAGS.test_tmpdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1139: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | name = 'test_tmpdir'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __getattr__(self, name):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Retrieves the 'value' attribute of the flag --name.\"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       fl = self._flags()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name not in fl:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name in self.__dict__['__hiddenflags']:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if self.__dict__['__flags_parsed'] or fl[name].present:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         return fl[name].value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       else:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnparsedFlagAccessError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'Trying to access flag --%s before flags were parsed.' % name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --test_tmpdir before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:481: UnparsedFlagAccessError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | During handling of the above exception, another exception occurred:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1150: in setUp\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     self.test_tmpdir = self.get_tempdir()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1142: in get_tempdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     flags.FLAGS(sys.argv)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | argv = ['/opt/hostedtoolcache/Python/3.8.11/x64/bin/pytest', '--junitxml=report.xml']\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | known_only = False\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __call__(self, argv, known_only=False):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Parses flags from argv; stores parsed flags into this FlagValues object.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       All unparsed arguments are returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Args:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          argv: a tuple/list of strings.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          known_only: bool, if True, parse and remove known flags; return the rest\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |            untouched. Unknown flags specified by --undefok are not returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Returns:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          The list of arguments not parsed as options, including argv[0].\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Raises:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          Error: Raised on any parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          TypeError: Raised on passing wrong type of arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          ValueError: Raised on flag value parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if isinstance(argv, (str, bytes)):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise TypeError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv should be a tuple/list of strings, not bytes or string.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if not argv:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise ValueError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv cannot be an empty list, and must contain the program name as '\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'the first element.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # This pre parses the argv list for --flagfile=<> options.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       program_name = argv[0]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       args = self.read_flags_from_files(argv[1:], force_gnu=False)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Parse the arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       unknown_flags, unparsed_args = self._parse_args(args, known_only)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Handle unknown flags by raising UnrecognizedFlagError.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Note some users depend on us raising this particular error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       for name, value in unknown_flags:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         suggestions = _helpers.get_flag_suggestions(name, list(self))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnrecognizedFlagError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             name, value, suggestions=suggestions)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:652: UnrecognizedFlagError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | ____________________________ TasksTest.test_no_eos _____________________________\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <t5.data.dataset_providers_test.TasksTest testMethod=test_no_eos>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def get_tempdir(self):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       try:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       flags.FLAGS.test_tmpdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1139: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | name = 'test_tmpdir'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __getattr__(self, name):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Retrieves the 'value' attribute of the flag --name.\"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       fl = self._flags()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name not in fl:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name in self.__dict__['__hiddenflags']:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if self.__dict__['__flags_parsed'] or fl[name].present:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         return fl[name].value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       else:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnparsedFlagAccessError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'Trying to access flag --%s before flags were parsed.' % name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --test_tmpdir before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:481: UnparsedFlagAccessError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | During handling of the above exception, another exception occurred:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1150: in setUp\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     self.test_tmpdir = self.get_tempdir()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1142: in get_tempdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     flags.FLAGS(sys.argv)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | argv = ['/opt/hostedtoolcache/Python/3.8.11/x64/bin/pytest', '--junitxml=report.xml']\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | known_only = False\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __call__(self, argv, known_only=False):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Parses flags from argv; stores parsed flags into this FlagValues object.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       All unparsed arguments are returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Args:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          argv: a tuple/list of strings.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          known_only: bool, if True, parse and remove known flags; return the rest\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |            untouched. Unknown flags specified by --undefok are not returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Returns:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          The list of arguments not parsed as options, including argv[0].\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Raises:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          Error: Raised on any parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          TypeError: Raised on passing wrong type of arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          ValueError: Raised on flag value parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if isinstance(argv, (str, bytes)):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise TypeError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv should be a tuple/list of strings, not bytes or string.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if not argv:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise ValueError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv cannot be an empty list, and must contain the program name as '\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'the first element.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # This pre parses the argv list for --flagfile=<> options.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       program_name = argv[0]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       args = self.read_flags_from_files(argv[1:], force_gnu=False)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Parse the arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       unknown_flags, unparsed_args = self._parse_args(args, known_only)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Handle unknown flags by raising UnrecognizedFlagError.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Note some users depend on us raising this particular error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       for name, value in unknown_flags:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         suggestions = _helpers.get_flag_suggestions(name, list(self))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnrecognizedFlagError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             name, value, suggestions=suggestions)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:652: UnrecognizedFlagError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _______________________ TasksTest.test_optional_features _______________________\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <t5.data.dataset_providers_test.TasksTest testMethod=test_optional_features>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def get_tempdir(self):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       try:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       flags.FLAGS.test_tmpdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1139: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | name = 'test_tmpdir'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __getattr__(self, name):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Retrieves the 'value' attribute of the flag --name.\"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       fl = self._flags()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name not in fl:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name in self.__dict__['__hiddenflags']:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if self.__dict__['__flags_parsed'] or fl[name].present:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         return fl[name].value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       else:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnparsedFlagAccessError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'Trying to access flag --%s before flags were parsed.' % name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --test_tmpdir before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:481: UnparsedFlagAccessError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | During handling of the above exception, another exception occurred:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1150: in setUp\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     self.test_tmpdir = self.get_tempdir()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1142: in get_tempdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     flags.FLAGS(sys.argv)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | argv = ['/opt/hostedtoolcache/Python/3.8.11/x64/bin/pytest', '--junitxml=report.xml']\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | known_only = False\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __call__(self, argv, known_only=False):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Parses flags from argv; stores parsed flags into this FlagValues object.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       All unparsed arguments are returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Args:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          argv: a tuple/list of strings.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          known_only: bool, if True, parse and remove known flags; return the rest\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |            untouched. Unknown flags specified by --undefok are not returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Returns:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          The list of arguments not parsed as options, including argv[0].\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Raises:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          Error: Raised on any parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          TypeError: Raised on passing wrong type of arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          ValueError: Raised on flag value parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if isinstance(argv, (str, bytes)):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise TypeError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv should be a tuple/list of strings, not bytes or string.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if not argv:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise ValueError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv cannot be an empty list, and must contain the program name as '\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'the first element.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # This pre parses the argv list for --flagfile=<> options.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       program_name = argv[0]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       args = self.read_flags_from_files(argv[1:], force_gnu=False)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Parse the arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       unknown_flags, unparsed_args = self._parse_args(args, known_only)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Handle unknown flags by raising UnrecognizedFlagError.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Note some users depend on us raising this particular error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       for name, value in unknown_flags:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         suggestions = _helpers.get_flag_suggestions(name, list(self))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnrecognizedFlagError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             name, value, suggestions=suggestions)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:652: UnrecognizedFlagError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | ______________________ TasksTest.test_task_registry_reset ______________________\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <t5.data.dataset_providers_test.TasksTest testMethod=test_task_registry_reset>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def get_tempdir(self):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       try:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       flags.FLAGS.test_tmpdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1139: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | name = 'test_tmpdir'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __getattr__(self, name):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Retrieves the 'value' attribute of the flag --name.\"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       fl = self._flags()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name not in fl:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name in self.__dict__['__hiddenflags']:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if self.__dict__['__flags_parsed'] or fl[name].present:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         return fl[name].value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       else:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnparsedFlagAccessError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'Trying to access flag --%s before flags were parsed.' % name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --test_tmpdir before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:481: UnparsedFlagAccessError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | During handling of the above exception, another exception occurred:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1150: in setUp\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     self.test_tmpdir = self.get_tempdir()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1142: in get_tempdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     flags.FLAGS(sys.argv)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | argv = ['/opt/hostedtoolcache/Python/3.8.11/x64/bin/pytest', '--junitxml=report.xml']\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | known_only = False\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __call__(self, argv, known_only=False):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Parses flags from argv; stores parsed flags into this FlagValues object.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       All unparsed arguments are returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Args:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          argv: a tuple/list of strings.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          known_only: bool, if True, parse and remove known flags; return the rest\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |            untouched. Unknown flags specified by --undefok are not returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Returns:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          The list of arguments not parsed as options, including argv[0].\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Raises:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          Error: Raised on any parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          TypeError: Raised on passing wrong type of arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          ValueError: Raised on flag value parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if isinstance(argv, (str, bytes)):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise TypeError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv should be a tuple/list of strings, not bytes or string.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if not argv:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise ValueError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv cannot be an empty list, and must contain the program name as '\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'the first element.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # This pre parses the argv list for --flagfile=<> options.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       program_name = argv[0]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       args = self.read_flags_from_files(argv[1:], force_gnu=False)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Parse the arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       unknown_flags, unparsed_args = self._parse_args(args, known_only)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Handle unknown flags by raising UnrecognizedFlagError.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Note some users depend on us raising this particular error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       for name, value in unknown_flags:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         suggestions = _helpers.get_flag_suggestions(name, list(self))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnrecognizedFlagError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             name, value, suggestions=suggestions)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:652: UnrecognizedFlagError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | ________________________ TasksTest.test_text_line_task _________________________\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <t5.data.dataset_providers_test.TasksTest testMethod=test_text_line_task>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def get_tempdir(self):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       try:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       flags.FLAGS.test_tmpdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1139: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | name = 'test_tmpdir'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __getattr__(self, name):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Retrieves the 'value' attribute of the flag --name.\"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       fl = self._flags()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name not in fl:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name in self.__dict__['__hiddenflags']:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if self.__dict__['__flags_parsed'] or fl[name].present:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         return fl[name].value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       else:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnparsedFlagAccessError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'Trying to access flag --%s before flags were parsed.' % name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --test_tmpdir before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:481: UnparsedFlagAccessError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | During handling of the above exception, another exception occurred:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1150: in setUp\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     self.test_tmpdir = self.get_tempdir()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1142: in get_tempdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     flags.FLAGS(sys.argv)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | argv = ['/opt/hostedtoolcache/Python/3.8.11/x64/bin/pytest', '--junitxml=report.xml']\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | known_only = False\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __call__(self, argv, known_only=False):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Parses flags from argv; stores parsed flags into this FlagValues object.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       All unparsed arguments are returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Args:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          argv: a tuple/list of strings.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          known_only: bool, if True, parse and remove known flags; return the rest\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |            untouched. Unknown flags specified by --undefok are not returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Returns:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          The list of arguments not parsed as options, including argv[0].\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Raises:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          Error: Raised on any parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          TypeError: Raised on passing wrong type of arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          ValueError: Raised on flag value parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if isinstance(argv, (str, bytes)):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise TypeError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv should be a tuple/list of strings, not bytes or string.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if not argv:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise ValueError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv cannot be an empty list, and must contain the program name as '\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'the first element.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # This pre parses the argv list for --flagfile=<> options.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       program_name = argv[0]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       args = self.read_flags_from_files(argv[1:], force_gnu=False)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Parse the arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       unknown_flags, unparsed_args = self._parse_args(args, known_only)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Handle unknown flags by raising UnrecognizedFlagError.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Note some users depend on us raising this particular error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       for name, value in unknown_flags:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         suggestions = _helpers.get_flag_suggestions(name, list(self))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnrecognizedFlagError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             name, value, suggestions=suggestions)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:652: UnrecognizedFlagError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | ________________________ TasksTest.test_tf_example_task ________________________\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <t5.data.dataset_providers_test.TasksTest testMethod=test_tf_example_task>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def get_tempdir(self):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       try:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       flags.FLAGS.test_tmpdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1139: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | name = 'test_tmpdir'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __getattr__(self, name):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Retrieves the 'value' attribute of the flag --name.\"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       fl = self._flags()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name not in fl:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name in self.__dict__['__hiddenflags']:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if self.__dict__['__flags_parsed'] or fl[name].present:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         return fl[name].value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       else:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnparsedFlagAccessError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'Trying to access flag --%s before flags were parsed.' % name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --test_tmpdir before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:481: UnparsedFlagAccessError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | During handling of the above exception, another exception occurred:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1150: in setUp\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     self.test_tmpdir = self.get_tempdir()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1142: in get_tempdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     flags.FLAGS(sys.argv)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | argv = ['/opt/hostedtoolcache/Python/3.8.11/x64/bin/pytest', '--junitxml=report.xml']\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | known_only = False\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __call__(self, argv, known_only=False):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Parses flags from argv; stores parsed flags into this FlagValues object.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       All unparsed arguments are returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Args:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          argv: a tuple/list of strings.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          known_only: bool, if True, parse and remove known flags; return the rest\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |            untouched. Unknown flags specified by --undefok are not returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Returns:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          The list of arguments not parsed as options, including argv[0].\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Raises:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          Error: Raised on any parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          TypeError: Raised on passing wrong type of arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          ValueError: Raised on flag value parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if isinstance(argv, (str, bytes)):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise TypeError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv should be a tuple/list of strings, not bytes or string.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if not argv:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise ValueError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv cannot be an empty list, and must contain the program name as '\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'the first element.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # This pre parses the argv list for --flagfile=<> options.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       program_name = argv[0]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       args = self.read_flags_from_files(argv[1:], force_gnu=False)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Parse the arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       unknown_flags, unparsed_args = self._parse_args(args, known_only)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Handle unknown flags by raising UnrecognizedFlagError.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Note some users depend on us raising this particular error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       for name, value in unknown_flags:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         suggestions = _helpers.get_flag_suggestions(name, list(self))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnrecognizedFlagError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             name, value, suggestions=suggestions)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:652: UnrecognizedFlagError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | ___________________________ TasksTest.test_tfds_task ___________________________\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <t5.data.dataset_providers_test.TasksTest testMethod=test_tfds_task>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def get_tempdir(self):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       try:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       flags.FLAGS.test_tmpdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1139: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | name = 'test_tmpdir'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __getattr__(self, name):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Retrieves the 'value' attribute of the flag --name.\"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       fl = self._flags()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name not in fl:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name in self.__dict__['__hiddenflags']:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if self.__dict__['__flags_parsed'] or fl[name].present:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         return fl[name].value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       else:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnparsedFlagAccessError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'Trying to access flag --%s before flags were parsed.' % name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --test_tmpdir before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:481: UnparsedFlagAccessError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | During handling of the above exception, another exception occurred:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1150: in setUp\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     self.test_tmpdir = self.get_tempdir()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1142: in get_tempdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     flags.FLAGS(sys.argv)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | argv = ['/opt/hostedtoolcache/Python/3.8.11/x64/bin/pytest', '--junitxml=report.xml']\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | known_only = False\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __call__(self, argv, known_only=False):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Parses flags from argv; stores parsed flags into this FlagValues object.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       All unparsed arguments are returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Args:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          argv: a tuple/list of strings.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          known_only: bool, if True, parse and remove known flags; return the rest\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |            untouched. Unknown flags specified by --undefok are not returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Returns:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          The list of arguments not parsed as options, including argv[0].\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Raises:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          Error: Raised on any parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          TypeError: Raised on passing wrong type of arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          ValueError: Raised on flag value parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if isinstance(argv, (str, bytes)):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise TypeError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv should be a tuple/list of strings, not bytes or string.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if not argv:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise ValueError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv cannot be an empty list, and must contain the program name as '\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'the first element.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # This pre parses the argv list for --flagfile=<> options.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       program_name = argv[0]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       args = self.read_flags_from_files(argv[1:], force_gnu=False)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Parse the arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       unknown_flags, unparsed_args = self._parse_args(args, known_only)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Handle unknown flags by raising UnrecognizedFlagError.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Note some users depend on us raising this particular error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       for name, value in unknown_flags:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         suggestions = _helpers.get_flag_suggestions(name, list(self))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnrecognizedFlagError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             name, value, suggestions=suggestions)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:652: UnrecognizedFlagError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | ______________________ TasksTest.test_token_preprocessor _______________________\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <t5.data.dataset_providers_test.TasksTest testMethod=test_token_preprocessor>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def get_tempdir(self):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       try:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       flags.FLAGS.test_tmpdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1139: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | name = 'test_tmpdir'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __getattr__(self, name):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Retrieves the 'value' attribute of the flag --name.\"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       fl = self._flags()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name not in fl:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name in self.__dict__['__hiddenflags']:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if self.__dict__['__flags_parsed'] or fl[name].present:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         return fl[name].value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       else:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnparsedFlagAccessError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'Trying to access flag --%s before flags were parsed.' % name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --test_tmpdir before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:481: UnparsedFlagAccessError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | During handling of the above exception, another exception occurred:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1150: in setUp\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     self.test_tmpdir = self.get_tempdir()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1142: in get_tempdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     flags.FLAGS(sys.argv)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | argv = ['/opt/hostedtoolcache/Python/3.8.11/x64/bin/pytest', '--junitxml=report.xml']\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | known_only = False\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __call__(self, argv, known_only=False):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Parses flags from argv; stores parsed flags into this FlagValues object.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       All unparsed arguments are returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Args:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          argv: a tuple/list of strings.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          known_only: bool, if True, parse and remove known flags; return the rest\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |            untouched. Unknown flags specified by --undefok are not returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Returns:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          The list of arguments not parsed as options, including argv[0].\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Raises:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          Error: Raised on any parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          TypeError: Raised on passing wrong type of arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          ValueError: Raised on flag value parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if isinstance(argv, (str, bytes)):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise TypeError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv should be a tuple/list of strings, not bytes or string.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if not argv:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise ValueError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv cannot be an empty list, and must contain the program name as '\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'the first element.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # This pre parses the argv list for --flagfile=<> options.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       program_name = argv[0]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       args = self.read_flags_from_files(argv[1:], force_gnu=False)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Parse the arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       unknown_flags, unparsed_args = self._parse_args(args, known_only)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Handle unknown flags by raising UnrecognizedFlagError.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Note some users depend on us raising this particular error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       for name, value in unknown_flags:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         suggestions = _helpers.get_flag_suggestions(name, list(self))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnrecognizedFlagError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             name, value, suggestions=suggestions)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:652: UnrecognizedFlagError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | __________________________ EvalUtilsTest.test_log_csv __________________________\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <t5.evaluation.eval_utils_test.EvalUtilsTest testMethod=test_log_csv>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def test_log_csv(self):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       metric_names = list(eval_utils.METRIC_NAMES.values())\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       df = pd.DataFrame(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |           collections.OrderedDict([\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |               (metric_names[0].name, [np.nan, 1., 2.]),\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |               (metric_names[1].name, [3., np.nan, np.nan]),\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |               (metric_names[2].name, [4., np.nan, np.nan]),\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |           ]),\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |           index=[10, 20, 30],\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       )\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       df.index.name = \"step\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >     output_file = os.path.join(self.create_tempdir().full_path, \"results.csv\")\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/evaluation/eval_utils_test.py:172: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:1376: in value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     val = getattr(self._flagvalues, self._name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | name = 'test_tmpdir'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __getattr__(self, name):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Retrieves the 'value' attribute of the flag --name.\"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       fl = self._flags()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name not in fl:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name in self.__dict__['__hiddenflags']:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if self.__dict__['__flags_parsed'] or fl[name].present:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         return fl[name].value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       else:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnparsedFlagAccessError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'Trying to access flag --%s before flags were parsed.' % name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --test_tmpdir before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:481: UnparsedFlagAccessError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | ____________________ EvalUtilsTest.test_parse_events_files _____________________\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <t5.evaluation.eval_utils_test.EvalUtilsTest testMethod=test_parse_events_files>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def test_parse_events_files(self):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >     tb_summary_dir = self.create_tempdir()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/evaluation/eval_utils_test.py:31: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:1376: in value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     val = getattr(self._flagvalues, self._name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | name = 'test_tmpdir'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __getattr__(self, name):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Retrieves the 'value' attribute of the flag --name.\"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       fl = self._flags()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name not in fl:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name in self.__dict__['__hiddenflags']:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if self.__dict__['__flags_parsed'] or fl[name].present:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         return fl[name].value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       else:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnparsedFlagAccessError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'Trying to access flag --%s before flags were parsed.' % name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --test_tmpdir before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:481: UnparsedFlagAccessError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _________________ EvalUtilsTest.test_parse_events_files_seqio __________________\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <t5.evaluation.eval_utils_test.EvalUtilsTest testMethod=test_parse_events_files_seqio>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def test_parse_events_files_seqio(self):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >     tb_summary_dir = self.create_tempdir()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/evaluation/eval_utils_test.py:56: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:1376: in value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     val = getattr(self._flagvalues, self._name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | name = 'test_tmpdir'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __getattr__(self, name):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Retrieves the 'value' attribute of the flag --name.\"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       fl = self._flags()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name not in fl:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name in self.__dict__['__hiddenflags']:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if self.__dict__['__flags_parsed'] or fl[name].present:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         return fl[name].value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       else:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnparsedFlagAccessError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'Trying to access flag --%s before flags were parsed.' % name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --test_tmpdir before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:481: UnparsedFlagAccessError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _________________ MeshDatasetFnsTest.test_mesh_eval_dataset_fn _________________\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <t5.models.mesh_transformer_test.MeshDatasetFnsTest testMethod=test_mesh_eval_dataset_fn>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def get_tempdir(self):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       try:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       flags.FLAGS.test_tmpdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1139: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | name = 'test_tmpdir'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __getattr__(self, name):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Retrieves the 'value' attribute of the flag --name.\"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       fl = self._flags()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name not in fl:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name in self.__dict__['__hiddenflags']:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if self.__dict__['__flags_parsed'] or fl[name].present:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         return fl[name].value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       else:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnparsedFlagAccessError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'Trying to access flag --%s before flags were parsed.' % name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --test_tmpdir before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:481: UnparsedFlagAccessError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | During handling of the above exception, another exception occurred:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1410: in setUp\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     super().setUp()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1150: in setUp\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     self.test_tmpdir = self.get_tempdir()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1142: in get_tempdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     flags.FLAGS(sys.argv)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | argv = ['/opt/hostedtoolcache/Python/3.8.11/x64/bin/pytest', '--junitxml=report.xml']\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | known_only = False\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __call__(self, argv, known_only=False):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Parses flags from argv; stores parsed flags into this FlagValues object.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       All unparsed arguments are returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Args:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          argv: a tuple/list of strings.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          known_only: bool, if True, parse and remove known flags; return the rest\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |            untouched. Unknown flags specified by --undefok are not returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Returns:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          The list of arguments not parsed as options, including argv[0].\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Raises:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          Error: Raised on any parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          TypeError: Raised on passing wrong type of arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          ValueError: Raised on flag value parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if isinstance(argv, (str, bytes)):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise TypeError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv should be a tuple/list of strings, not bytes or string.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if not argv:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise ValueError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv cannot be an empty list, and must contain the program name as '\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'the first element.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # This pre parses the argv list for --flagfile=<> options.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       program_name = argv[0]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       args = self.read_flags_from_files(argv[1:], force_gnu=False)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Parse the arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       unknown_flags, unparsed_args = self._parse_args(args, known_only)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Handle unknown flags by raising UnrecognizedFlagError.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Note some users depend on us raising this particular error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       for name, value in unknown_flags:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         suggestions = _helpers.get_flag_suggestions(name, list(self))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnrecognizedFlagError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             name, value, suggestions=suggestions)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:652: UnrecognizedFlagError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | ________________ MeshDatasetFnsTest.test_mesh_train_dataset_fn _________________\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <t5.models.mesh_transformer_test.MeshDatasetFnsTest testMethod=test_mesh_train_dataset_fn>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def get_tempdir(self):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       try:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       flags.FLAGS.test_tmpdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1139: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | name = 'test_tmpdir'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __getattr__(self, name):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Retrieves the 'value' attribute of the flag --name.\"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       fl = self._flags()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name not in fl:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name in self.__dict__['__hiddenflags']:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if self.__dict__['__flags_parsed'] or fl[name].present:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         return fl[name].value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       else:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnparsedFlagAccessError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'Trying to access flag --%s before flags were parsed.' % name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --test_tmpdir before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:481: UnparsedFlagAccessError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | During handling of the above exception, another exception occurred:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1410: in setUp\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     super().setUp()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1150: in setUp\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     self.test_tmpdir = self.get_tempdir()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/seqio/test_utils.py:1142: in get_tempdir\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     flags.FLAGS(sys.argv)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | argv = ['/opt/hostedtoolcache/Python/3.8.11/x64/bin/pytest', '--junitxml=report.xml']\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | known_only = False\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __call__(self, argv, known_only=False):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Parses flags from argv; stores parsed flags into this FlagValues object.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       All unparsed arguments are returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Args:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          argv: a tuple/list of strings.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          known_only: bool, if True, parse and remove known flags; return the rest\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |            untouched. Unknown flags specified by --undefok are not returned.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Returns:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          The list of arguments not parsed as options, including argv[0].\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       Raises:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          Error: Raised on any parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          TypeError: Raised on passing wrong type of arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |          ValueError: Raised on flag value parsing error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if isinstance(argv, (str, bytes)):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise TypeError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv should be a tuple/list of strings, not bytes or string.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if not argv:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise ValueError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'argv cannot be an empty list, and must contain the program name as '\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'the first element.')\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # This pre parses the argv list for --flagfile=<> options.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       program_name = argv[0]\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       args = self.read_flags_from_files(argv[1:], force_gnu=False)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Parse the arguments.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       unknown_flags, unparsed_args = self._parse_args(args, known_only)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Handle unknown flags by raising UnrecognizedFlagError.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       # Note some users depend on us raising this particular error.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       for name, value in unknown_flags:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         suggestions = _helpers.get_flag_suggestions(name, list(self))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnrecognizedFlagError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             name, value, suggestions=suggestions)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:652: UnrecognizedFlagError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | ____________________ DumpTaskTest.test_main_detokenize_task ____________________\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <t5.scripts.dump_task_test.DumpTaskTest testMethod=test_main_detokenize_task>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | flags = {'detokenize': True, 'task': 'test_task'}\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | mock_task = <Mock id='139903064157968'>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     @parameterized.named_parameters(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         dict(testcase_name=\"task\", detokenize=True, task=\"test_task\"),\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         dict(testcase_name=\"detokenize_task\", detokenize=True, task=\"test_task\"),\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         dict(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             testcase_name=\"postprocess\",\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             detokenize=True,\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             apply_postprocess_fn=True,\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             task=\"test_task\"),\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         dict(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             testcase_name=\"mixture\",\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             detokenize=True,\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             apply_postprocess_fn=True,\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             mixture=\"test_mixture\"))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     @flagsaver.flagsaver(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         format_string=\"inputs: {inputs}, negatives: {negative_inputs}, targets: {targets}\",\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         module_import=[])\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def test_main(self, **flags):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       mock_task = get_mocked_task(flags[\"task\"] if \"task\" in\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |                                   flags else flags[\"mixture\"])\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       self.enter_context(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |           mock.patch.object(seqio.TaskRegistry, \"get\", return_value=mock_task))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       self.enter_context(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |           mock.patch.object(seqio.MixtureRegistry, \"get\", return_value=mock_task))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       with flagsaver.flagsaver(**flags):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       dump_task.main(None)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/scripts/dump_task_test.py:101: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/scripts/dump_task.py:121: in main\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     if FLAGS.module_import:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | name = 'module_import'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __getattr__(self, name):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Retrieves the 'value' attribute of the flag --name.\"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       fl = self._flags()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name not in fl:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name in self.__dict__['__hiddenflags']:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if self.__dict__['__flags_parsed'] or fl[name].present:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         return fl[name].value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       else:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnparsedFlagAccessError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'Trying to access flag --%s before flags were parsed.' % name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --module_import before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:481: UnparsedFlagAccessError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | ________________________ DumpTaskTest.test_main_mixture ________________________\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <t5.scripts.dump_task_test.DumpTaskTest testMethod=test_main_mixture>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | flags = {'apply_postprocess_fn': True, 'detokenize': True, 'mixture': 'test_mixture'}\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | mock_task = <Mock id='139903220338592'>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     @parameterized.named_parameters(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         dict(testcase_name=\"task\", detokenize=True, task=\"test_task\"),\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         dict(testcase_name=\"detokenize_task\", detokenize=True, task=\"test_task\"),\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         dict(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             testcase_name=\"postprocess\",\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             detokenize=True,\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             apply_postprocess_fn=True,\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             task=\"test_task\"),\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         dict(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             testcase_name=\"mixture\",\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             detokenize=True,\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             apply_postprocess_fn=True,\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             mixture=\"test_mixture\"))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     @flagsaver.flagsaver(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         format_string=\"inputs: {inputs}, negatives: {negative_inputs}, targets: {targets}\",\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         module_import=[])\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def test_main(self, **flags):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       mock_task = get_mocked_task(flags[\"task\"] if \"task\" in\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |                                   flags else flags[\"mixture\"])\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       self.enter_context(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |           mock.patch.object(seqio.TaskRegistry, \"get\", return_value=mock_task))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       self.enter_context(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |           mock.patch.object(seqio.MixtureRegistry, \"get\", return_value=mock_task))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       with flagsaver.flagsaver(**flags):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       dump_task.main(None)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/scripts/dump_task_test.py:101: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/scripts/dump_task.py:121: in main\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     if FLAGS.module_import:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | name = 'module_import'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __getattr__(self, name):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Retrieves the 'value' attribute of the flag --name.\"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       fl = self._flags()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name not in fl:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name in self.__dict__['__hiddenflags']:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if self.__dict__['__flags_parsed'] or fl[name].present:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         return fl[name].value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       else:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnparsedFlagAccessError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'Trying to access flag --%s before flags were parsed.' % name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --module_import before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:481: UnparsedFlagAccessError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | ______________________ DumpTaskTest.test_main_postprocess ______________________\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <t5.scripts.dump_task_test.DumpTaskTest testMethod=test_main_postprocess>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | flags = {'apply_postprocess_fn': True, 'detokenize': True, 'task': 'test_task'}\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | mock_task = <Mock id='139903063886000'>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     @parameterized.named_parameters(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         dict(testcase_name=\"task\", detokenize=True, task=\"test_task\"),\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         dict(testcase_name=\"detokenize_task\", detokenize=True, task=\"test_task\"),\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         dict(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             testcase_name=\"postprocess\",\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             detokenize=True,\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             apply_postprocess_fn=True,\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             task=\"test_task\"),\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         dict(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             testcase_name=\"mixture\",\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             detokenize=True,\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             apply_postprocess_fn=True,\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             mixture=\"test_mixture\"))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     @flagsaver.flagsaver(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         format_string=\"inputs: {inputs}, negatives: {negative_inputs}, targets: {targets}\",\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         module_import=[])\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def test_main(self, **flags):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       mock_task = get_mocked_task(flags[\"task\"] if \"task\" in\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |                                   flags else flags[\"mixture\"])\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       self.enter_context(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |           mock.patch.object(seqio.TaskRegistry, \"get\", return_value=mock_task))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       self.enter_context(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |           mock.patch.object(seqio.MixtureRegistry, \"get\", return_value=mock_task))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       with flagsaver.flagsaver(**flags):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       dump_task.main(None)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/scripts/dump_task_test.py:101: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/scripts/dump_task.py:121: in main\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     if FLAGS.module_import:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | name = 'module_import'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __getattr__(self, name):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Retrieves the 'value' attribute of the flag --name.\"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       fl = self._flags()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name not in fl:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name in self.__dict__['__hiddenflags']:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if self.__dict__['__flags_parsed'] or fl[name].present:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         return fl[name].value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       else:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnparsedFlagAccessError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'Trying to access flag --%s before flags were parsed.' % name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --module_import before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:481: UnparsedFlagAccessError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _________________________ DumpTaskTest.test_main_task __________________________\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <t5.scripts.dump_task_test.DumpTaskTest testMethod=test_main_task>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | flags = {'detokenize': True, 'task': 'test_task'}\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | mock_task = <Mock id='139903223126384'>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     @parameterized.named_parameters(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         dict(testcase_name=\"task\", detokenize=True, task=\"test_task\"),\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         dict(testcase_name=\"detokenize_task\", detokenize=True, task=\"test_task\"),\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         dict(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             testcase_name=\"postprocess\",\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             detokenize=True,\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             apply_postprocess_fn=True,\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             task=\"test_task\"),\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         dict(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             testcase_name=\"mixture\",\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             detokenize=True,\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             apply_postprocess_fn=True,\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             mixture=\"test_mixture\"))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     @flagsaver.flagsaver(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         format_string=\"inputs: {inputs}, negatives: {negative_inputs}, targets: {targets}\",\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         module_import=[])\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def test_main(self, **flags):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       mock_task = get_mocked_task(flags[\"task\"] if \"task\" in\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |                                   flags else flags[\"mixture\"])\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       self.enter_context(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |           mock.patch.object(seqio.TaskRegistry, \"get\", return_value=mock_task))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       self.enter_context(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |           mock.patch.object(seqio.MixtureRegistry, \"get\", return_value=mock_task))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       with flagsaver.flagsaver(**flags):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       dump_task.main(None)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/scripts/dump_task_test.py:101: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/scripts/dump_task.py:121: in main\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     if FLAGS.module_import:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | name = 'module_import'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __getattr__(self, name):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Retrieves the 'value' attribute of the flag --name.\"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       fl = self._flags()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name not in fl:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name in self.__dict__['__hiddenflags']:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if self.__dict__['__flags_parsed'] or fl[name].present:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         return fl[name].value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       else:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnparsedFlagAccessError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'Trying to access flag --%s before flags were parsed.' % name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --module_import before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:481: UnparsedFlagAccessError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _________________ DumpTaskTest.test_pretty_Multiple delimiter __________________\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <t5.scripts.dump_task_test.DumpTaskTest testMethod=test_pretty_Multiple delimiter>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | value = '[CLS] some input [SEP] other input'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     @parameterized.named_parameters(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         dict(testcase_name=\"Single delimiter\", value=\"[CLS] some input\"),\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         dict(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             testcase_name=\"Multiple delimiter\",\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             value=\"[CLS] some input [SEP] other input\"))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     @flagsaver.flagsaver(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         detokenize=True, pretty=True, delimiters=[\"\\\\[[A-Z]+\\\\]\"])\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def test_pretty(self, value: str):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >     prettied = dump_task.pretty(value)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/scripts/dump_task_test.py:73: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/scripts/dump_task.py:107: in pretty\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     if not FLAGS.pretty or not FLAGS.detokenize:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | name = 'pretty'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __getattr__(self, name):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Retrieves the 'value' attribute of the flag --name.\"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       fl = self._flags()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name not in fl:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name in self.__dict__['__hiddenflags']:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if self.__dict__['__flags_parsed'] or fl[name].present:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         return fl[name].value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       else:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnparsedFlagAccessError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'Trying to access flag --%s before flags were parsed.' % name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --pretty before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:481: UnparsedFlagAccessError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | __________________ DumpTaskTest.test_pretty_Single delimiter ___________________\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <t5.scripts.dump_task_test.DumpTaskTest testMethod=test_pretty_Single delimiter>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | value = '[CLS] some input'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     @parameterized.named_parameters(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         dict(testcase_name=\"Single delimiter\", value=\"[CLS] some input\"),\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         dict(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             testcase_name=\"Multiple delimiter\",\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             value=\"[CLS] some input [SEP] other input\"))\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     @flagsaver.flagsaver(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         detokenize=True, pretty=True, delimiters=[\"\\\\[[A-Z]+\\\\]\"])\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def test_pretty(self, value: str):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >     prettied = dump_task.pretty(value)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/scripts/dump_task_test.py:73: \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/scripts/dump_task.py:107: in pretty\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     if not FLAGS.pretty or not FLAGS.detokenize:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | self = <absl.flags._flagvalues.FlagValues object at 0x7f3ffac49a60>\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | name = 'pretty'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     def __getattr__(self, name):\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       \"\"\"Retrieves the 'value' attribute of the flag --name.\"\"\"\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       fl = self._flags()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name not in fl:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if name in self.__dict__['__hiddenflags']:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         raise AttributeError(name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       if self.__dict__['__flags_parsed'] or fl[name].present:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |         return fl[name].value\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |       else:\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | >       raise _exceptions.UnparsedFlagAccessError(\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |             'Trying to access flag --%s before flags were parsed.' % name)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | E       absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --pretty before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | /opt/hostedtoolcache/Python/3.8.11/x64/lib/python3.8/site-packages/absl/flags/_flagvalues.py:481: UnparsedFlagAccessError\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | =============================== warnings summary ===============================\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/evaluation/eval_utils_test.py::EvalUtilsTest::test_metric_group_max\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/evaluation/eval_utils_test.py::EvalUtilsTest::test_metric_group_max\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/google-research-text-to-text-transfer-transformer/t5/evaluation/eval_utils.py:236: FutureWarning: Passing a set as an indexer is deprecated and will raise in a future version. Use a list instead.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     group_df[group] = df[metrics].mean(axis=1)\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/evaluation/eval_utils_test.py::EvalUtilsTest::test_metric_group_max\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/google-research-text-to-text-transfer-transformer/t5/evaluation/eval_utils.py:239: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     metric_max = pd.Series()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/evaluation/eval_utils_test.py::EvalUtilsTest::test_metric_group_max\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/google-research-text-to-text-transfer-transformer/t5/evaluation/eval_utils.py:240: FutureWarning: The default dtype for empty Series will be 'object' instead of 'float64' in a future version. Specify a dtype explicitly to silence this warning.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     metric_max_step = pd.Series()\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | t5/evaluation/eval_utils_test.py::EvalUtilsTest::test_metric_group_max\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/google-research-text-to-text-transfer-transformer/t5/evaluation/eval_utils.py:241: FutureWarning: iteritems is deprecated and will be removed in a future version. Use .items instead.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   |     for group_name, max_step in group_max_step.iteritems():\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | \n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/google-research-text-to-text-transfer-transformer/report.xml -\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | =========================== short test summary info ============================\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | FAILED t5/data/dataset_providers_test.py::TasksTest::test_cached_task - absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | FAILED t5/data/dataset_providers_test.py::TasksTest::test_function_task - absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | FAILED t5/data/dataset_providers_test.py::TasksTest::test_immutabledict_features - absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | FAILED t5/data/dataset_providers_test.py::TasksTest::test_no_eos - absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | FAILED t5/data/dataset_providers_test.py::TasksTest::test_optional_features - absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | FAILED t5/data/dataset_providers_test.py::TasksTest::test_task_registry_reset - absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | FAILED t5/data/dataset_providers_test.py::TasksTest::test_text_line_task - absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | FAILED t5/data/dataset_providers_test.py::TasksTest::test_tf_example_task - absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | FAILED t5/data/dataset_providers_test.py::TasksTest::test_tfds_task - absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | FAILED t5/data/dataset_providers_test.py::TasksTest::test_token_preprocessor - absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | FAILED t5/evaluation/eval_utils_test.py::EvalUtilsTest::test_log_csv - absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --test_tmpdir before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | FAILED t5/evaluation/eval_utils_test.py::EvalUtilsTest::test_parse_events_files - absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --test_tmpdir before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | FAILED t5/evaluation/eval_utils_test.py::EvalUtilsTest::test_parse_events_files_seqio - absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --test_tmpdir before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | FAILED t5/models/mesh_transformer_test.py::MeshDatasetFnsTest::test_mesh_eval_dataset_fn - absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | FAILED t5/models/mesh_transformer_test.py::MeshDatasetFnsTest::test_mesh_train_dataset_fn - absl.flags._exceptions.UnrecognizedFlagError: Unknown command line flag 'junitxml'\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | FAILED t5/scripts/dump_task_test.py::DumpTaskTest::test_main_detokenize_task - absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --module_import before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | FAILED t5/scripts/dump_task_test.py::DumpTaskTest::test_main_mixture - absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --module_import before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | FAILED t5/scripts/dump_task_test.py::DumpTaskTest::test_main_postprocess - absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --module_import before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | FAILED t5/scripts/dump_task_test.py::DumpTaskTest::test_main_task - absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --module_import before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | FAILED t5/scripts/dump_task_test.py::DumpTaskTest::test_pretty_Multiple delimiter - absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --pretty before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | FAILED t5/scripts/dump_task_test.py::DumpTaskTest::test_pretty_Single delimiter - absl.flags._exceptions.UnparsedFlagAccessError: Trying to access flag --pretty before flags were parsed.\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   | ======= 21 failed, 144 passed, 2 skipped, 5 warnings in 71.17s (0:01:11) =======\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \u274c  Failure - Main Test with pytest\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build] exitcode '1': failure\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build] \u2b50 Run Main Report success or failure as github status\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4.sh] user= workdir=\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build]   \u274c  Failure - Main Report success or failure as github status\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build] Get \"http://%2Fvar%2Frun%2Fdocker.sock/v1.41/containers/1fa8b596cb2f7ca9743b534430aa5b47223c9a91fbb134d4bf9ff42e94eecd50/archive?path=%2Fvar%2Frun%2Fact%2Fworkflow%2Fpathcmd.txt\": context canceled\n[76cfe791-0d05-4be6-8bdf-7681fd21d47a/build] \ud83c\udfc1  Job succeeded\n",
        "stderr": "Error: context canceled\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/google-research-text-to-text-transfer-transformer/.github/workflows/build-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 644.4154198169708
    }
}