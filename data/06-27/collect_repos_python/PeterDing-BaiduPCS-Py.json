{
    "repository": "PeterDing/BaiduPCS-Py",
    "stars": 530,
    "language": "python",
    "size": 1255,
    "clone_url": "https://github.com/PeterDing/BaiduPCS-Py.git",
    "timestamp": "2023-06-28T16:29:19.852605Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [],
        "stdout": "[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test] \ud83d\ude80  Start image=crawlergpt:latest\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/PeterDing-BaiduPCS-Py] user=0 workdir=\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test] \u2b50 Run Pre Install and configure Poetry\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \u2705  Success - Pre Install and configure Poetry\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.7]\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test] \u2b50 Run Main actions/checkout@v2\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \u2705  Success - Main actions/checkout@v2\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test] \u2b50 Run Main Set up Python 3.7\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udc33  docker cp src=/tmp/act-cache/1dfe15d0-af8d-4ee2-b11d-4ef9c6074709/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udcac  ::debug::isExplicit: \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udcac  ::debug::explicit? false\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udcac  ::debug::explicit? true\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udcac  ::debug::explicit? true\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udcac  ::debug::explicit? true\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udcac  ::debug::explicit? true\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udcac  ::debug::explicit? true\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udcac  ::debug::explicit? true\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udcac  ::debug::evaluating 6 versions\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udcac  ::debug::matched: 3.7.11\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | Successfully setup CPython (3.7.11)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \u2705  Success - Main Set up Python 3.7\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \u2699  ::set-output:: python-version=3.7.11\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test] \u2b50 Run Main Install and configure Poetry\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udc33  docker cp src=/tmp/act-cache/1dfe15d0-af8d-4ee2-b11d-4ef9c6074709/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test] \u2b50 Run Main Install and configure Poetry\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2-composite-0.sh] user= workdir=\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | Retrieving Poetry metadata\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | # Welcome to Poetry!\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | This will download and install the latest version of Poetry,\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | a dependency and package manager for Python.\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | /home/runneradmin/.local/bin\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | You can uninstall at any time by executing this script with the --uninstall option,\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | and these changes will be reverted.\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | Installing Poetry (1.5.1)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | Installing Poetry (1.5.1): Creating environment\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | Installing Poetry (1.5.1): Installing Poetry\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | Installing Poetry (1.5.1): Creating script\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | Installing Poetry (1.5.1): Done\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | Poetry (1.5.1) is installed now. Great!\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | environment variable.\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | You can test that everything is set up by executing:\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | `poetry --version`\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \u001b[33mDone \u2705\u001b[0m\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \u2705  Success - Main Install and configure Poetry\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \u2705  Success - Main Install and configure Poetry\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test] \u2b50 Run Main Install dependencies\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3.sh] user= workdir=\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | Creating virtualenv baidupcs-py-7wNkd3lU-py3.7 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | Requirement already satisfied: setuptools in /home/runneradmin/.cache/pypoetry/virtualenvs/baidupcs-py-7wNkd3lU-py3.7/lib/python3.7/site-packages (67.8.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | Updating dependencies\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | Resolving dependencies...\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | Package operations: 46 installs, 0 updates, 0 removals\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing exceptiongroup (1.1.1)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing idna (3.4)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing sniffio (1.3.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing typing-extensions (4.6.3)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing zipp (3.15.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing anyio (3.7.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing certifi (2023.5.7)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing charset-normalizer (3.1.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing httptools (0.2.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing importlib-metadata (6.7.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing mdurl (0.1.2)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing pycparser (2.21)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing urllib3 (2.0.3)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing cffi (1.15.1)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing click (8.1.3)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing h11 (0.14.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing iniconfig (2.0.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing markdown-it-py (2.2.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing markupsafe (2.1.3)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing mugen (0.6.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing mypy-extensions (1.0.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing packaging (23.1)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing pathspec (0.11.1)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing platformdirs (3.8.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing pluggy (1.2.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing pydantic (1.10.9)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing pygments (2.15.1)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing requests (2.31.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing starlette (0.27.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing tomli (2.0.1)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing typed-ast (1.5.4)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing aget (0.1.17)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing black (23.3.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing chardet (5.1.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing cryptography (41.0.1)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing cython (0.29.35)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing fastapi (0.98.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing jinja2 (3.1.2)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing mypy (1.4.1)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing passlib (1.7.4)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing pillow (9.5.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing pytest (7.4.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing requests-toolbelt (1.0.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing rich (13.4.2)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing ruff (0.0.257)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   |   \u2022 Installing uvicorn (0.22.0)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | \n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | Writing lock file\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \u2705  Success - Main Install dependencies\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test] \u2b50 Run Main Format check with black\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4.sh] user= workdir=\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | All done! \u2728 \ud83c\udf70 \u2728\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | 55 files would be left unchanged.\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \u2705  Success - Main Format check with black\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test] \u2b50 Run Main Typecheck at Linux\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6.sh] user= workdir=\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | baidupcs_py/commands/play.py:63: error: Statement is unreachable  [unreachable]\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | baidupcs_py/commands/download.py:101: error: Statement is unreachable  [unreachable]\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | baidupcs_py/app/app.py:391: note: By default the bodies of untyped functions are not checked, consider using --check-untyped-defs  [annotation-unchecked]\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   | Found 2 errors in 2 files (checked 52 source files)\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \u274c  Failure - Main Typecheck at Linux\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test] exitcode '1': failure\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test] \u2b50 Run Post Install and configure Poetry\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udc33  docker cp src=/tmp/act-cache/1dfe15d0-af8d-4ee2-b11d-4ef9c6074709/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test]   \u2705  Success - Post Install and configure Poetry\n[63c755de-d5f2-40a0-8eab-538e40dea6c4/build-test] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'build-test' failed\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/PeterDing-BaiduPCS-Py/.github/workflows/main-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 234.5581545829773
    }
}