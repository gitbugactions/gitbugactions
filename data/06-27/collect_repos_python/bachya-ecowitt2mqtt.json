{
    "repository": "bachya/ecowitt2mqtt",
    "stars": 129,
    "language": "python",
    "size": 2020,
    "clone_url": "https://github.com/bachya/ecowitt2mqtt.git",
    "timestamp": "2023-07-01T15:33:51.017647Z",
    "clone_success": true,
    "number_of_actions": 9,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "unknown",
        "unknown",
        "unknown",
        "unknown",
        "unknown",
        "unknown",
        "unknown",
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "tests.test_config",
                "name": "test_battery_overrides_cli_options[config0]",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_battery_overrides_config_file[{\"default_battery_strategy\": \"boolean\", \"diagnostics\": false, \"disable_calculated_data\": false, \"endpoint\": \"/data/report\", \"hass_discovery\": false, \"hass_discovery_prefix\": \"homeassistant\", \"hass_entity_id_prefix\": null, \"input_data_format\": \"ecowitt\", \"input_unit_system\": \"imperial\", \"mqtt_broker\": \"127.0.0.1\", \"mqtt_password\": \"password\", \"mqtt_port\": 1883, \"mqtt_retain\": false, \"mqtt_tls\": false, \"mqtt_topic\": \"topic/\", \"mqtt_username\": \"username\", \"output_unit_system\": \"imperial\", \"port\": 9999, \"raw_data\": false, \"verbose\": false, \"battery_override\": {\"testbatt0\": \"boolean\", \"testbatt1\": \"numeric\", \"testbatt2\": \"percentage\"}}]",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_battery_overrides_env_vars",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_battery_overrides_error[config0]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_battery_overrides_missing",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_config_file[{\"default_battery_strategy\": \"boolean\", \"diagnostics\": false, \"disable_calculated_data\": false, \"endpoint\": \"/data/report\", \"hass_discovery\": false, \"hass_discovery_prefix\": \"homeassistant\", \"hass_entity_id_prefix\": null, \"input_data_format\": \"ecowitt\", \"input_unit_system\": \"imperial\", \"mqtt_broker\": \"127.0.0.1\", \"mqtt_password\": \"password\", \"mqtt_port\": 1883, \"mqtt_retain\": false, \"mqtt_tls\": false, \"mqtt_topic\": \"topic/\", \"mqtt_username\": \"username\", \"output_unit_system\": \"imperial\", \"port\": 9999, \"raw_data\": false, \"verbose\": false}]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_config_file[\\n---\\ndefault_battery_strategy: boolean\\ndiagnostics: false\\ndisable_calculated_data: false\\nendpoint: /data/report\\nhass_discovery: false\\nhass_discovery_prefix: homeassistant\\nhass_entity_id_prefix: null\\ninput_data_format: ecowitt\\ninput_unit_system: imperial\\nmqtt_broker: 127.0.0.1\\nmqtt_password: password\\nmqtt_port: 1883\\nmqtt_retain: false\\nmqtt_tls: false\\nmqtt_topic: topic/\\nmqtt_username: username\\noutput_unit_system: imperial\\nport: 9999\\nraw_data: false\\nverbose: false\\n]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_config_file_empty[{}]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_config_file_multiple_gateways[{\"default_battery_strategy\": \"boolean\", \"diagnostics\": false, \"disable_calculated_data\": false, \"endpoint\": \"/data/report\", \"hass_discovery\": false, \"hass_discovery_prefix\": \"homeassistant\", \"hass_entity_id_prefix\": null, \"input_data_format\": \"ecowitt\", \"input_unit_system\": \"imperial\", \"mqtt_broker\": \"127.0.0.1\", \"mqtt_password\": \"password\", \"mqtt_port\": 1883, \"mqtt_retain\": false, \"mqtt_tls\": false, \"mqtt_topic\": \"topic/\", \"mqtt_username\": \"username\", \"output_unit_system\": \"imperial\", \"port\": 9999, \"raw_data\": false, \"verbose\": false, \"gateways\": {\"passkey123\": {\"mqtt_broker\": \"my.mqtt.local\", \"mqtt_topic\": \"Some Topic\"}}}]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_config_file_overrides[config0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_config_file_unparsable[Fake configuration!]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_default_battery_strategy[config0]",
                "time": 0.031,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_invalid_boolean_config_validation[config0]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_output_units[output_unit_accumulated_precipitation-mm]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_output_units[output_unit_distance-km]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_output_units[output_unit_humidity-g/m\\xb3]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_output_units[output_unit_illuminance-lx]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_output_units[output_unit_precipitation_rate-mm/h]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_output_units[output_unit_pressure-hPa]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_output_units[output_unit_speed-km/h]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_output_units[output_unit_temperature-\\xb0C]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_output_units_invalid[output_unit_accumulated_precipitation]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_output_units_invalid[output_unit_distance]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_output_units_invalid[output_unit_humidity]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_output_units_invalid[output_unit_illuminance]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_output_units_invalid[output_unit_precipitation_rate]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_output_units_invalid[output_unit_pressure]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_output_units_invalid[output_unit_speed]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_output_units_invalid[output_unit_temperature]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_precision",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_valid_boolean_config_validation[config0-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_valid_boolean_config_validation[config1-False]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_config",
                "name": "test_valid_boolean_config_validation[config2-True]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core",
                "name": "test_ecowitt_create[config0]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core",
                "name": "test_invalid_config[config0]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core",
                "name": "test_unhandled_runtime_error",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_main",
                "name": "test_deprecated_env_var[ENDPOINT-ECOWITT2MQTT_ENDPOINT-/data/output]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_main",
                "name": "test_deprecated_env_var[HASS_DISCOVERY-ECOWITT2MQTT_HASS_DISCOVERY-True]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_main",
                "name": "test_deprecated_env_var[HASS_DISCOVERY_PREFIX-ECOWITT2MQTT_HASS_DISCOVERY_PREFIX-homeassistant]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_main",
                "name": "test_deprecated_env_var[HASS_ENTITY_ID_PREFIX-ECOWITT2MQTT_HASS_ENTITY_ID_PREFIX-ecowitt]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_main",
                "name": "test_deprecated_env_var[INPUT_UNIT_SYSTEM-ECOWITT2MQTT_INPUT_UNIT_SYSTEM-imperial]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_main",
                "name": "test_deprecated_env_var[LOG_LEVEL-ECOWITT2MQTT_VERBOSE-DEBUG]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_main",
                "name": "test_deprecated_env_var[MQTT_BROKER-ECOWITT2MQTT_MQTT_BROKER-127.0.0.1]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_main",
                "name": "test_deprecated_env_var[MQTT_PASSWORD-ECOWITT2MQTT_MQTT_PASSWORD-password]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_main",
                "name": "test_deprecated_env_var[MQTT_PORT-ECOWITT2MQTT_MQTT_PORT-1883]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_main",
                "name": "test_deprecated_env_var[MQTT_TOPIC-ECOWITT2MQTT_MQTT_TOPIC-topic]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_main",
                "name": "test_deprecated_env_var[MQTT_USERNAME-ECOWITT2MQTT_MQTT_USERNAME-username]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_main",
                "name": "test_deprecated_env_var[OUTPUT_UNIT_SYSTEM-ECOWITT2MQTT_OUTPUT_UNIT_SYSTEM-imperial]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_main",
                "name": "test_deprecated_env_var[PORT-ECOWITT2MQTT_PORT-8080]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_main",
                "name": "test_deprecated_env_var[RAW_DATA-ECOWITT2MQTT_RAW_DATA-True]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_main",
                "name": "test_get_cli_arguments",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_main",
                "name": "test_get_env_vars",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_main",
                "name": "test_main",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_runtime",
                "name": "test_publish_failure[mqtt_publish_side_effect0]",
                "time": 0.453,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_runtime",
                "name": "test_publish_ambient_weather_success[config0]",
                "time": 0.466,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_runtime",
                "name": "test_publish_ecowitt_success[config0]",
                "time": 0.446,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_runtime",
                "name": "test_publish_ecowitt_success[config1]",
                "time": 0.445,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_runtime",
                "name": "test_publish_ecowitt_success[config2]",
                "time": 0.445,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_runtime",
                "name": "test_unknown_exception_shutdown[mqtt_publish_side_effect0]",
                "time": 0.459,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.backports.test_enum",
                "name": "test_strenum",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_battery",
                "name": "test_battery_config[payload_gw1100b.json-config0]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_battery",
                "name": "test_default_battery_strategy[payload_gw1100b.json-config0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_battery",
                "name": "test_unknown_battery",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_data_processing",
                "name": "test_disable_calculated_data[config0]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_data_processing",
                "name": "test_missing_distance[payload_gw2000a_1.json]",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_data_processing",
                "name": "test_nonnumeric_value",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_data_processing",
                "name": "test_precision[config0]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_data_processing",
                "name": "test_process[payload_gw1000bpro.json-expected_output0]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_data_processing",
                "name": "test_process[payload_gw1000pro.json-expected_output1]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_data_processing",
                "name": "test_process[payload_gw1100b.json-expected_output2]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_data_processing",
                "name": "test_process[payload_gw2000a_1.json-expected_output3]",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_data_processing",
                "name": "test_process[payload_gw2000a_2.json-expected_output4]",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_data_processing",
                "name": "test_process[payload_pthp2550pro.json-expected_output5]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_data_processing",
                "name": "test_process[payload_wh2650a.json-expected_output6]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_data_processing",
                "name": "test_process[payload_ws2900.json-expected_output7]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_data_processing",
                "name": "test_suspcious_temperature_value[config0]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_device",
                "name": "test_device[device0-payload_ambweather.json]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_device",
                "name": "test_device[device1-payload_gw1000pro.json]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_device",
                "name": "test_device[device2-payload_gw1000bpro.json]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_device",
                "name": "test_device[device3-payload_gw1100b.json]",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_device",
                "name": "test_device[device4-payload_gw2000a_1.json]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_device",
                "name": "test_device[device5-payload_pthp2550pro.json]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_device",
                "name": "test_device[device6-payload_unknown.json]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_device",
                "name": "test_device[device7-payload_wh2650a.json]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_device",
                "name": "test_device[device8-payload_ws2350.json]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_device",
                "name": "test_device[device9-payload_ws2900.json]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_units",
                "name": "test_output_units[config0]",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_units",
                "name": "test_unit_conversion_to_imperial[config0-payload_gw1000bpro_metric.json]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_units",
                "name": "test_unit_conversion_to_metric[payload_gw1000bpro.json-expected_output0-config0]",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.data.test_units",
                "name": "test_unit_conversion_to_metric[payload_gw1000pro.json-expected_output1-config0]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helpers.publisher.test_hass_discovery",
                "name": "test_get_publisher[config0]",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helpers.publisher.test_hass_discovery",
                "name": "test_publish[config0-payload_gw2000a_2.json]",
                "time": 1.956,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helpers.publisher.test_hass_discovery",
                "name": "test_publish_custom_entity_id_prefix[config0-payload_gw2000a_2.json]",
                "time": 1.22,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helpers.publisher.test_hass_discovery",
                "name": "test_publish_error_mqtt[config0-payload_gw2000a_2.json-mqtt_publish_side_effect0]",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helpers.publisher.test_hass_discovery",
                "name": "test_publish_numeric_battery_strategy[payload_gw2000a_2.json-config0]",
                "time": 1.16,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helpers.publisher.test_hass_discovery",
                "name": "test_no_entity_description[payload_gw2000a_2.json-config0]",
                "time": 1.647,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helpers.publisher.test_topic_publisher",
                "name": "test_get_publisher",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helpers.publisher.test_topic_publisher",
                "name": "test_publish_processed",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helpers.publisher.test_topic_publisher",
                "name": "test_publish_raw[config0]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.helpers.publisher.test_topic_publisher",
                "name": "test_publish_retain[config0]",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_accumulated_precipitation_conversion[10-mm-mm-10.0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_accumulated_precipitation_conversion[10-in-mm-254.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_accumulated_precipitation_conversion[10-mm-in-0.39370078740157477]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_distance_conversion[10-km-km-10.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_distance_conversion[10-km-mi-6.21371192237334]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_distance_conversion[10-km-ft-32808.39895013124]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_distance_conversion[10-km-m-10000.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_distance_conversion[10-km-cm-1000000.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_distance_conversion[10-km-mm-10000000.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_distance_conversion[10-km-in-393700.78740157484]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_distance_conversion[10-km-yd-10936.13298337708]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_illuminance_conversion[10-lx-lx-10.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_illuminance_conversion[10-lx-fc-0.9290312990644656]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_illuminance_conversion[10-lx-kfc-0.0009290312990644657]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_illuminance_conversion[10-lx-klx-0.01]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_illuminance_conversion[10-lx-W/m\\xb2-0.07900000000000001]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_illuminance_conversion[10-W/m\\xb2-lx-1265.8227848101264]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_illuminance_conversion[10-fc-lx-107.639]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_illuminance_conversion[10-fc-klx-0.107639]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_illuminance_conversion[264.61-W/m\\xb2-%-90.49958322993245]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_illuminance_conversion[90.49958322993245-%-W/m\\xb2-264.61000000000007]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_illuminance_conversion[90.0-%-%-90.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_invalid_units[accumulated_precipitation-AccumulatedPrecipitationConverter-in-yd]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_invalid_units[accumulated_precipitation-AccumulatedPrecipitationConverter-mm-dm]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_invalid_units[distance-DistanceConverter-m-dm]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_invalid_units[distance-DistanceConverter-miles-ft]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_invalid_units[illuminance-IlluminanceConverter-lx-bulbs]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_invalid_units[illuminance-IlluminanceConverter-sunbeams-klx]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_invalid_units[pressure-PressureConverter-hPa-hPa/s]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_invalid_units[pressure-PressureConverter-units-hPa]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_invalid_units[speed-SpeedConverter-km/d-m/s]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_invalid_units[speed-SpeedConverter-mph-km/s]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_invalid_units[temperature-TemperatureConverter-Fake-\\xb0C]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_invalid_units[temperature-TemperatureConverter-\\xb0C-Bolts]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_invalid_units[volume-VolumeConverter-g/km\\xb3-lbs/ft\\xb3]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_invalid_units[volume-VolumeConverter-g/m\\xb3-sparrows]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_precipitation_rate_conversion[10-mm/h-mm/h-10.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_precipitation_rate_conversion[10-in/h-mm/h-254.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_precipitation_rate_conversion[10-mm/h-in/h-0.39370078740157477]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_pressure_conversion[10-bar-Pa-999999.9999999999]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_pressure_conversion[10-cbar-Pa-10000.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_pressure_conversion[10-hPa-Pa-1000.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_pressure_conversion[10-inHg-Pa-33863.88640341]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_pressure_conversion[10-kPa-Pa-10000.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_pressure_conversion[10-mbar-Pa-1000.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_pressure_conversion[10-mmHg-Pa-1333.22387415]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_pressure_conversion[10-Pa-Pa-10.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_pressure_conversion[10-Pa-psi-0.0014503774389728313]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_pressure_conversion[10-inHg-cbar-33.86388640341]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_speed_conversion[10-ft/s-m/s-3.0479999999999996]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_speed_conversion[1000-in/d-m/s-0.00029398148148148144]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_speed_conversion[100-in/h-m/s-0.0007055555555555556]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_speed_conversion[100-km/h-m/s-27.77777777777778]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_speed_conversion[10-kn-m/s-5.144444444444445]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_speed_conversion[1-m/s-m/s-1.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_speed_conversion[100-mph-m/s-44.70399999999999]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_speed_conversion[10000-mm/d-m/s-0.00011574074074074075]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_speed_conversion[1-m/s-in/d-3401574.8031496066]",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_speed_conversion[10-in/h-km/h-0.000254]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_temperature_conversion[20-\\xb0C-\\xb0C-20.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_temperature_conversion[20-\\xb0C-\\xb0F-68.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_temperature_conversion[10-\\xb0C-K-283.15]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_temperature_conversion[80-\\xb0F-\\xb0C-26.666666666666664]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_temperature_conversion[70-\\xb0F-K-294.26111111111106]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_temperature_conversion[200-K-\\xb0C--73.14999999999998]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_temperature_conversion[350-K-\\xb0F-170.33000000000004]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_unit_ratio[DistanceConverter-km-m-0.001]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_unit_ratio[DistanceConverter-mi-m-0.000621371192237334]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_unit_ratio[DistanceConverter-ft-m-3.280839895013124]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_unit_ratio[DistanceConverter-m-m-1.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_unit_ratio[DistanceConverter-cm-m-100.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_unit_ratio[DistanceConverter-mm-m-1000.0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_unit_ratio[DistanceConverter-in-m-39.37007874015748]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_unit_ratio[DistanceConverter-yd-m-1.093613298337708]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_volume_conversion[10-g/m\\xb3-lbs/ft\\xb3-0.0006242796057614459]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.util.test_unit_conversion",
                "name": "test_volume_conversion[10-lbs/ft\\xb3-g/m\\xb3-160184.63373960144]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests] \ud83d\ude80  Start image=crawlergpt:latest\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bachya-ecowitt2mqtt] user=0 workdir=\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v4\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2601  git clone 'https://github.com/actions/cache' # ref=v3\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2601  git clone 'https://github.com/actions/upload-artifact' # ref=v3\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests] \ud83e\uddea  Matrix: map[python-version:3.9]\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests] \u2b50 Run Main \u2935\ufe0f Check out code from GitHub\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2705  Success - Main \u2935\ufe0f Check out code from GitHub\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests] \u2b50 Run Main \ud83c\udfd7 Set up Python\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/e6f28ac0-8f57-4c37-9891-cbd46b69ff83/act/actions-setup-python@v4/ dst=/var/run/act/actions/actions-setup-python@v4/\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v4/] user=0 workdir=\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v4/dist/setup/index.js] user= workdir=\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::Python is expected to be installed into /opt/hostedtoolcache\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2753  ::group::Installed versions\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::Semantic version spec of 3.9 is 3.9\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::isExplicit: \n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::explicit? false\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::explicit? true\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::explicit? true\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::explicit? true\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::explicit? true\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::explicit? true\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::explicit? true\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::evaluating 6 versions\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::matched: 3.9.6\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Successfully set up CPython (3.9.6)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2753  ::endgroup::\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2753 add-matcher /run/act/actions/actions-setup-python@v4/.github/python.json\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2705  Success - Main \ud83c\udfd7 Set up Python\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2699  ::set-env:: PKG_CONFIG_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib/pkgconfig\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2699  ::set-env:: Python_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2699  ::set-env:: Python2_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2699  ::set-env:: Python3_ROOT_DIR=/opt/hostedtoolcache/Python/3.9.6/x64\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2699  ::set-output:: python-version=3.9.6\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2699  ::set-output:: python-path=/opt/hostedtoolcache/Python/3.9.6/x64/bin/python\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests] \u2b50 Run Main \u2935\ufe0f Get pip cache directory\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/pip-cache] user= workdir=\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2705  Success - Main \u2935\ufe0f Get pip cache directory\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2699  ::set-output:: dir=/home/runneradmin/.cache/pip\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests] \u2b50 Run Main \u2935\ufe0f Establish pip cache\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/e6f28ac0-8f57-4c37-9891-cbd46b69ff83/act/actions-cache@v3/ dst=/var/run/act/actions/actions-cache@v3/\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v3/] user=0 workdir=\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/restore/index.js] user= workdir=\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::Resolved Keys:\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::[\"Linux-pip-2ec338598b46a7f63aea4964d0784b9e8c555af3725cebd83e7a7883f52ce831\",\"Linux-pip-\"]\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::1.5.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:35591/_apis/artifactcache/cache?keys=Linux-pip-2ec338598b46a7f63aea4964d0784b9e8c555af3725cebd83e7a7883f52ce831%252CLinux-pip-&version=79a244514713d0ea96d5d8aab70186082a897848df6e845ec8308965d2f82f4f\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Cache not found for input keys: Linux-pip-2ec338598b46a7f63aea4964d0784b9e8c555af3725cebd83e7a7883f52ce831, Linux-pip-\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2705  Success - Main \u2935\ufe0f Establish pip cache\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests] \u2b50 Run Main \ud83c\udfd7 Install workflow dependencies\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting poetry==1.5.1\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading poetry-1.5.1-py3-none-any.whl (225 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting pyproject-hooks<2.0.0,>=1.0.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading pyproject_hooks-1.0.0-py3-none-any.whl (9.3 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting cachecontrol[filecache]<0.13.0,>=0.12.9\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading CacheControl-0.12.14-py2.py3-none-any.whl (21 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting installer<0.8.0,>=0.7.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading installer-0.7.0-py3-none-any.whl (453 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting pexpect<5.0.0,>=4.7.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting tomlkit<1.0.0,>=0.11.4\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading tomlkit-0.11.8-py3-none-any.whl (35 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting filelock<4.0.0,>=3.8.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting shellingham<2.0,>=1.5\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading shellingham-1.5.0.post1-py2.py3-none-any.whl (9.4 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting jsonschema<5.0.0,>=4.10.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading jsonschema-4.17.3-py3-none-any.whl (90 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting lockfile<0.13.0,>=0.12.2\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading lockfile-0.12.2-py2.py3-none-any.whl (13 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting dulwich<0.22.0,>=0.21.2\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading dulwich-0.21.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (509 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting importlib-metadata>=4.4\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting requests-toolbelt<2,>=0.9.1\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading requests_toolbelt-1.0.0-py2.py3-none-any.whl (54 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting urllib3<2.0.0,>=1.26.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting build<0.11.0,>=0.10.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading build-0.10.0-py3-none-any.whl (17 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting tomli<3.0.0,>=2.0.1\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting virtualenv<21.0.0,>=20.22.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting crashtest<0.5.0,>=0.4.1\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading crashtest-0.4.1-py3-none-any.whl (7.6 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting platformdirs<4.0.0,>=3.0.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting cleo<3.0.0,>=2.0.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading cleo-2.0.1-py3-none-any.whl (77 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting poetry-core==1.6.1\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading poetry_core-1.6.1-py3-none-any.whl (450 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting requests<3.0,>=2.18\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting packaging>=20.4\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting html5lib<2.0,>=1.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading html5lib-1.1-py2.py3-none-any.whl (112 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting poetry-plugin-export<2.0.0,>=1.4.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading poetry_plugin_export-1.4.0-py3-none-any.whl (10 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting trove-classifiers>=2022.5.19\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading trove_classifiers-2023.5.24-py3-none-any.whl (13 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting keyring<24.0.0,>=23.9.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading keyring-23.13.1-py3-none-any.whl (37 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting pkginfo<2.0.0,>=1.9.4\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading pkginfo-1.9.6-py3-none-any.whl (30 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting msgpack>=0.5.2\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading msgpack-1.0.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (322 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting rapidfuzz<3.0.0,>=2.2.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading rapidfuzz-2.15.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting webencodings\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting six>=1.9\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting zipp>=0.5\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting attrs>=17.4.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading pyrsistent-0.19.3-py3-none-any.whl (57 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting jeepney>=0.4.2\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading jeepney-0.8.0-py3-none-any.whl (48 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting jaraco.classes\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading jaraco.classes-3.2.3-py3-none-any.whl (6.0 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting SecretStorage>=3.2\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading SecretStorage-3.3.3-py3-none-any.whl (15 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting ptyprocess>=0.5\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting idna<4,>=2.5\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting certifi>=2017.4.17\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting charset-normalizer<4,>=2\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading charset_normalizer-3.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (199 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting cryptography>=2.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading cryptography-41.0.1-cp37-abi3-manylinux_2_28_x86_64.whl (4.3 MB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting cffi>=1.12\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading cffi-1.15.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (441 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting pycparser\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting distlib<1,>=0.3.6\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Collecting more-itertools\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   Downloading more_itertools-9.1.0-py3-none-any.whl (54 kB)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Installing collected packages: pycparser, urllib3, idna, charset-normalizer, cffi, certifi, zipp, tomli, requests, msgpack, more-itertools, jeepney, cryptography, webencodings, six, SecretStorage, rapidfuzz, pyrsistent, pyproject-hooks, ptyprocess, poetry-core, platformdirs, packaging, lockfile, jaraco.classes, importlib-metadata, filelock, distlib, crashtest, cachecontrol, attrs, virtualenv, trove-classifiers, tomlkit, shellingham, requests-toolbelt, poetry-plugin-export, pkginfo, pexpect, keyring, jsonschema, installer, html5lib, dulwich, cleo, build, poetry\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Successfully installed SecretStorage-3.3.3 attrs-23.1.0 build-0.10.0 cachecontrol-0.12.14 certifi-2023.5.7 cffi-1.15.1 charset-normalizer-3.1.0 cleo-2.0.1 crashtest-0.4.1 cryptography-41.0.1 distlib-0.3.6 dulwich-0.21.5 filelock-3.12.2 html5lib-1.1 idna-3.4 importlib-metadata-6.7.0 installer-0.7.0 jaraco.classes-3.2.3 jeepney-0.8.0 jsonschema-4.17.3 keyring-23.13.1 lockfile-0.12.2 more-itertools-9.1.0 msgpack-1.0.5 packaging-23.1 pexpect-4.8.0 pkginfo-1.9.6 platformdirs-3.8.0 poetry-1.5.1 poetry-core-1.6.1 poetry-plugin-export-1.4.0 ptyprocess-0.7.0 pycparser-2.21 pyproject-hooks-1.0.0 pyrsistent-0.19.3 rapidfuzz-2.15.1 requests-2.31.0 requests-toolbelt-1.0.0 shellingham-1.5.0.post1 six-1.16.0 tomli-2.0.1 tomlkit-0.11.8 trove-classifiers-2023.5.24 urllib3-1.26.16 virtualenv-20.23.1 webencodings-0.5.1 zipp-3.15.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.9.6/x64/bin/python -m pip install --upgrade pip' command.\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2705  Success - Main \ud83c\udfd7 Install workflow dependencies\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests] \u2b50 Run Main \u2935\ufe0f Establish poetry cache\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/e6f28ac0-8f57-4c37-9891-cbd46b69ff83/act/actions-cache@v3/ dst=/var/run/act/actions/actions-cache@v3/\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v3/] user=0 workdir=\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v3/dist/restore/index.js] user= workdir=\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::Resolved Keys:\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::[\"venv-3.9.6-fb283b24c084f5d0b9c6c51739e4633092ccbd0bfe63d151fcc1fe7427b6ea1f\",\"venv-3.9.6-\"]\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::Checking zstd --quiet --version\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::1.5.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::zstd version: 1.5.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:35591/_apis/artifactcache/cache?keys=venv-3.9.6-fb283b24c084f5d0b9c6c51739e4633092ccbd0bfe63d151fcc1fe7427b6ea1f%252Cvenv-3.9.6-&version=25e65b70d167147605b4332eb57b6d34df8e0303b88c4de252efb18cf3ed148a\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::Failed to delete archive: Error: ENOENT: no such file or directory, unlink ''\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Cache not found for input keys: venv-3.9.6-fb283b24c084f5d0b9c6c51739e4633092ccbd0bfe63d151fcc1fe7427b6ea1f, venv-3.9.6-\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2705  Success - Main \u2935\ufe0f Establish poetry cache\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests] \u2b50 Run Main \ud83c\udfd7 Install package dependencies\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Creating virtualenv ecowitt2mqtt in /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bachya-ecowitt2mqtt/.venv\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Installing dependencies from lock file\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | \n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Package operations: 86 installs, 1 update, 0 removals\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | \n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing pyparsing (3.0.9)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing exceptiongroup (1.1.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing frozenlist (1.3.3)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing idna (3.4)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing iniconfig (2.0.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing mdurl (0.1.2)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing multidict (6.0.4)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing packaging (21.3)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing pluggy (1.0.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing smmap (5.0.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing sniffio (1.3.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing tomli (2.0.1)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing aiosignal (1.3.1)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing anyio (3.6.2)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing attrs (22.2.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing certifi (2022.12.7)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing click (8.1.3)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing distlib (0.3.6)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing filelock (3.9.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing async-timeout (4.0.2)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing markdown-it-py (2.2.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing charset-normalizer (2.1.1)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing pbr (5.11.1)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing gitdb (4.0.10)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing pygments (2.14.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing pytest (7.4.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing pathspec (0.10.3)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing lazy-object-proxy (1.9.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Updating setuptools (67.8.0 -> 65.6.3)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing platformdirs (2.6.2)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing mypy-extensions (1.0.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing typing-extensions (4.7.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing urllib3 (1.26.14)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing toml (0.10.2)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing ruamel-yaml-clib (0.2.7)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing wrapt (1.14.1)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing yarl (1.8.2)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing aiohttp (3.8.4)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing astroid (2.15.4)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing black (22.12.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing cfgv (3.3.1)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing coverage (7.2.7)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing dill (0.3.6)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing dparse (0.6.2)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing gitpython (3.1.30)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing h11 (0.14.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing isort (5.12.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing mccabe (0.6.1)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing identify (2.5.12)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing paho-mqtt (1.6.1)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing pytest-asyncio (0.21.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing pydantic (1.10.4)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing nodeenv (1.7.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing pyyaml (6.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing ruamel-yaml (0.17.32)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing starlette (0.27.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing stevedore (4.1.1)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing tokenize-rt (5.0.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing tomlkit (0.11.6)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing virtualenv (20.17.1)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing requests (2.31.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing rich (13.3.2)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing aresponses (2.1.6)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing asyncio-mqtt (0.16.2)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing bandit (1.7.5)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing blacken-docs (1.14.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing codespell (2.2.5)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing colorlog (6.7.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing darglint (1.8.1)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing fastapi (0.98.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing meteocalc (1.1.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing mypy (1.3.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing pre-commit (3.3.3)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing pre-commit-hooks (4.4.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing pylint (2.17.4)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing pytest-aiohttp (1.0.4)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing python-multipart (0.0.6)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing pytest-cov (4.1.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing pyupgrade (3.7.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing rapidfuzz (3.1.1)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing ruff (0.0.275)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing uvicorn (0.22.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing voluptuous (0.13.1)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing vulture (2.7)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing uvloop (0.17.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing safety (2.3.5)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   |   \u2022 Installing yamllint (1.32.0)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | \n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Installing the current project: ecowitt2mqtt (2023.06.1)\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2705  Success - Main \ud83c\udfd7 Install package dependencies\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests] \u2b50 Run Main \ud83d\ude80 Run pytest\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/7] user= workdir=\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ============================= test session starts ==============================\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | platform linux -- Python 3.9.6, pytest-7.4.0, pluggy-1.0.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bachya-ecowitt2mqtt\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | plugins: aiohttp-1.0.4, aresponses-2.1.6, cov-4.1.0, anyio-3.6.2, asyncio-0.21.0\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | asyncio: mode=strict\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | collected 176 items\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | \n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | tests/test_config.py .................................                   [ 18%]\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | tests/test_core.py ...                                                   [ 20%]\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | tests/test_main.py .................                                     [ 30%]\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | tests/test_runtime.py ......                                             [ 33%]\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | tests/backports/test_enum.py .                                           [ 34%]\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | tests/data/test_battery.py ...                                           [ 35%]\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | tests/data/test_data_processing.py .............                         [ 43%]\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | tests/data/test_device.py ..........                                     [ 48%]\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | tests/data/test_units.py ....                                            [ 51%]\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | tests/helpers/publisher/test_hass_discovery.py ......                    [ 54%]\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | tests/helpers/publisher/test_topic_publisher.py ....                     [ 56%]\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | tests/util/test_unit_conversion.py ..................................... [ 77%]\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | .......................................                                  [100%]\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | \n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bachya-ecowitt2mqtt/report.xml -\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | \n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ----------- coverage: platform linux, python 3.9.6-final-0 -----------\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Name                                               Stmts   Miss  Cover   Missing\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | --------------------------------------------------------------------------------\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/__init__.py                               0      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/__main__.py                              70      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/backports/__init__.py                     0      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/backports/enum.py                        14      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/config.py                               154      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/const.py                                233      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/core.py                                  37      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/data.py                                  72      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/errors.py                                 2      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/__init__.py                       0      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/calculator/__init__.py           69      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/calculator/battery.py            43      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/calculator/humidity.py           27      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/calculator/illuminance.py        26      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/calculator/leak.py               12      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/calculator/lightning.py          22      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/calculator/pollution.py           9      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/calculator/precipitation.py      30      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/calculator/pressure.py           18      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/calculator/temperature.py       218      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/calculator/time.py               19      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/calculator/uv.py                 31      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/calculator/wind.py               40      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/config_validation.py             30      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/device.py                        28      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/publisher/__init__.py            24      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/publisher/factory.py             13      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/publisher/hass.py               108      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/publisher/topic.py               15      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/server.py                        53      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/helpers/typing.py                         6      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/runtime.py                              101      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/util/__init__.py                         18      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/util/meteo.py                            44      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ecowitt2mqtt/util/unit_conversion.py                 141      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | --------------------------------------------------------------------------------\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | TOTAL                                               1727      0   100%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | \n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Required test coverage of 100.0% reached. Total coverage: 100.00%\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | ============================= 176 passed in 11.11s =============================\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2705  Success - Main \ud83d\ude80 Run pytest\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests] \u2b50 Run Main \u2b06\ufe0f Upload coverage artifact\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udc33  docker cp src=/tmp/act-cache/e6f28ac0-8f57-4c37-9891-cbd46b69ff83/act/actions-upload-artifact@v3/ dst=/var/run/act/actions/actions-upload-artifact@v3/\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-upload-artifact@v3/] user=0 workdir=\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-upload-artifact@v3/dist/index.js] user= workdir=\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::implicitDescendants 'true'\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::matchDirectories 'true'\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::Search path '/tmp/558156d8-17ed-11ee-8a50-bb14de238602/bachya-ecowitt2mqtt/.coverage'\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::File:/tmp/558156d8-17ed-11ee-8a50-bb14de238602/bachya-ecowitt2mqtt/.coverage was found using the provided searchPath\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | With the provided path, there will be 1 file uploaded\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \ud83d\udcac  ::debug::Root artifact directory is /tmp/558156d8-17ed-11ee-8a50-bb14de238602/bachya-ecowitt2mqtt\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Starting artifact upload\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | For more detailed logs during the artifact upload process, enable step-debugging: https://docs.github.com/actions/monitoring-and-troubleshooting-workflows/enabling-debug-logging#enabling-step-debug-logging\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   | Artifact name is valid!\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u2757  ::error::Unable to get ACTIONS_RUNTIME_TOKEN env variable\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests]   \u274c  Failure - Main \u2b06\ufe0f Upload coverage artifact\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests] exitcode '1': failure\n[a7c2d7eb-1953-4c5b-826f-97be1544e93b/Tests] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'Tests' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/bachya-ecowitt2mqtt/.github/workflows/test-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "a7c2d7eb-1953-4c5b-826f-97be1544e93b",
        "build_tool": "pytest",
        "elapsed_time": 502.5331199169159
    }
}