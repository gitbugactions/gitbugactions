{
    "repository": "CloudWanderer-io/PolicyGlass",
    "stars": 54,
    "language": "python",
    "size": 1002,
    "clone_url": "https://github.com/CloudWanderer-io/PolicyGlass.git",
    "timestamp": "2023-07-01T17:10:47.527205Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "unknown",
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[StringEquals-scenario0]",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[StringNotEquals-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[StringEqualsIgnoreCase-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[StringNotEqualsIgnoreCase-scenario3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[StringLike-scenario4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[StringNotLike-scenario5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[NumericEquals-scenario6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[NumericNotEquals-scenario7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[NumericLessThan-scenario8]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[NumericGreaterThan-scenario9]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[NumericLessThanEquals-scenario10]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[NumericGreaterThanEquals-scenario11]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[DateEquals-scenario12]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[DateNotEquals-scenario13]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[DateLessThan-scenario14]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[DateGreaterThan-scenario15]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[DateLessThanEquals-scenario16]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[DateGreaterThanEquals-scenario17]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[IpAddress-scenario18]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[NotIpAddress-scenario19]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[ArnEquals-scenario20]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible[ArnNotEquals-scenario21]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[StringEquals-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[StringNotEquals-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[StringEqualsIgnoreCase-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[StringNotEqualsIgnoreCase-scenario3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[StringLike-scenario4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[StringNotLike-scenario5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[NumericEquals-scenario6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[NumericNotEquals-scenario7]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[NumericLessThan-scenario8]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[NumericGreaterThan-scenario9]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[NumericLessThanEquals-scenario10]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[NumericGreaterThanEquals-scenario11]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[DateEquals-scenario12]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[DateNotEquals-scenario13]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[DateLessThan-scenario14]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[DateGreaterThan-scenario15]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[DateLessThanEquals-scenario16]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[DateGreaterThanEquals-scenario17]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[IpAddress-scenario18]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[NotIpAddress-scenario19]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[ArnEquals-scenario20]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversible_if_exists[ArnNotEquals-scenario21]",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_not_reversible[BinaryEquals-scenario0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_condition",
                "name": "test_condition_reversal_not_case_sensitive",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_delineate_intersecting_shards",
                "name": "test_dedupe_policy_shards_simple",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_delineate_intersecting_shards",
                "name": "test_dedupe_policy_shards_complex_overlap",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_delineate_intersecting_shards",
                "name": "test_larger_after_smaller",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_delineate_intersecting_shards",
                "name": "test_identical",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_delineate_intersecting_shards",
                "name": "test_identical_except_one_with_one_without_condition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_delineate_intersecting_shards",
                "name": "test_matching_subset_conditions",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_delineate_intersecting_shards",
                "name": "test_matching_subset_conditions_and_condition_exclusions",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_delineate_intersecting_shards",
                "name": "test_subset_arps_differing_conditions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_delineate_intersecting_shards",
                "name": "test_result_of_denying_action_and_resource",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_delineate_intersecting_shards",
                "name": "test_result_of_difference_of_deny_action_and_resource_subsets",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_deprecated",
                "name": "test_delineate_intersecting_shards",
                "time": 0.044,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_effective_action",
                "name": "test_in_exclusions_bad_comparison",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_effective_action",
                "name": "test_in_exclusions_true[smaller-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_effective_action",
                "name": "test_in_exclusions_true[equal-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_effective_action",
                "name": "test_in_exclusions_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_effective_action",
                "name": "test_raise_if_nonsense_arp",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_effective_action",
                "name": "test_nothing_if_nonsense_arp_factory",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_effective_condition",
                "name": "test_factory",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_effective_condition",
                "name": "test_reverse",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_effective_resource",
                "name": "test_nonsense_effective_resource",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_policy",
                "name": "test_policy_shards[simple_iam_policy-policy0-shards0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_policy",
                "name": "test_policy_shards[complex_iam_policy-policy1-shards1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_policy",
                "name": "test_policy_shards[complex_resource_policy-policy2-shards2]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_policy_shards_effect",
                "name": "test_policy_shards_effect[eliminate-input0-expected0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_policy_shards_effect",
                "name": "test_policy_shards_effect[exception-input1-expected1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_policy_shards_effect",
                "name": "test_policy_shards_effect[multi_exception-input2-expected2]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_policy_shards_effect",
                "name": "test_policy_shards_effect[complex_exception-input3-expected3]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_policy_shards_effect",
                "name": "test_policy_shards_effect[identical_except_different_conditions-input4-expected4]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_policy_shards_effect",
                "name": "test_policy_shards_effect[allow_allow_deny_except_second_allow-input5-expected5]",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_policy_shards_effect",
                "name": "test_policy_shards_effect[deny_action_and_resource_subsets-input6-expected6]",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_policy_shards_explain",
                "name": "test_policy_shard_explain_attribute",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_policy_shards_explain",
                "name": "test_explain_policy_shards_function",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_policy_shards_explain",
                "name": "test_explain_policy_shards_supported_language",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_policy_shards_to_json",
                "name": "test_policy_shards_to_json",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_principal",
                "name": "test_short_account_id",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_principal",
                "name": "test_account_id",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_principal",
                "name": "test_is_account",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_principal",
                "name": "test_is_account_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_principal",
                "name": "test_arn_elements",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_principal_collection",
                "name": "test_principals",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_resource",
                "name": "test_arn_elements",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_resource",
                "name": "test_arn_elements_blanks",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_statement",
                "name": "test_policy_shards",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.test_statement",
                "name": "test_policy_shards_not_resource_condition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.bool.test_effective_condition",
                "name": "test_effective_condition_truthy[inclusions_populated-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.bool.test_effective_condition",
                "name": "test_effective_condition_truthy[exclusions_populated-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.bool.test_effective_condition",
                "name": "test_effective_condition_falsey[nothing_populated-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.contains.test_effective_action",
                "name": "test_bad_contains",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.contains.test_effective_action",
                "name": "test_action_contains[exactly_equal-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.contains.test_effective_action",
                "name": "test_action_contains[subset-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.contains.test_effective_action",
                "name": "test_action_contains[not_excluded-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.contains.test_effective_action",
                "name": "test_action_not_contains[superset-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.contains.test_effective_action",
                "name": "test_action_not_contains[excluded-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_effective_action",
                "name": "test_bad_difference",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_effective_action",
                "name": "test_difference[proper_subset-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_effective_action",
                "name": "test_difference[proper_subset_with_exclusions-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_effective_action",
                "name": "test_difference[excluded_proper_subset-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_effective_action",
                "name": "test_difference[subset-scenario3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_effective_action",
                "name": "test_difference[subset_with_exclusion-scenario4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_effective_action",
                "name": "test_difference[disjoint-scenario5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_effective_principal",
                "name": "test_bad_difference",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_effective_principal",
                "name": "test_difference[proper_subset-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_effective_principal",
                "name": "test_difference[proper_subset_with_exclusions-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_effective_principal",
                "name": "test_difference[excluded_proper_subset-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_effective_principal",
                "name": "test_difference[subset-scenario3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_effective_principal",
                "name": "test_difference[subset_with_exclusion-scenario4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_effective_principal",
                "name": "test_difference[disjoint-scenario5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_effective_resource",
                "name": "test_bad_difference",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_effective_resource",
                "name": "test_difference[proper_subset-scenario0]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_effective_resource",
                "name": "test_difference[proper_subset_with_exclusions-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_effective_resource",
                "name": "test_difference[excluded_proper_subset-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_effective_resource",
                "name": "test_difference[subset-scenario3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_effective_resource",
                "name": "test_difference[subset_with_exclusion-scenario4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_effective_resource",
                "name": "test_difference[disjoint-scenario5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_policyshard",
                "name": "test_bad_difference",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_policyshard",
                "name": "test_difference[exactly_equal-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_policyshard",
                "name": "test_difference[proper_subset-scenario1]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_policyshard",
                "name": "test_difference[proper_subset_with_exclusions-scenario2]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_policyshard",
                "name": "test_difference[excluded_proper_subset-scenario3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_policyshard",
                "name": "test_difference[subset-scenario4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_policyshard",
                "name": "test_difference[disjoint-scenario5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_policyshard",
                "name": "test_difference[proper_subset_with_condition-scenario6]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_policyshard",
                "name": "test_difference[exact_match_on_inclusion_with_exclusion_and_condition-scenario7]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_policyshard",
                "name": "test_difference[simple_deny_with_exclusion-scenario8]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_policyshard",
                "name": "test_difference[deny_action_and_resource_subsets-scenario9]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_policyshard",
                "name": "test_difference[test_allow_with_exclusions-scenario10]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_policyshard",
                "name": "test_difference[test_subset_arps_differing_conditions-scenario11]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.difference.test_policyshard",
                "name": "test_difference[test_subset_arps_differing_conditions_allow_and_deny-scenario12]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_action",
                "name": "test_action_equality[exactly_equal-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_action",
                "name": "test_action_equality[case_unequal-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_condition",
                "name": "test_condition_equality[exactly_equal-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_condition",
                "name": "test_condition_equality[mismatched_operator_case-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_condition",
                "name": "test_condition_equality[mismatched_key_case-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_condition",
                "name": "test_condition_inequality[mismatched_value_case-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_condition",
                "name": "test_condition_shard_equality[exactly_equal-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_condition",
                "name": "test_condition_shard_equality[mismatched_operator_case-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_condition",
                "name": "test_condition_shard_equality[mismatched_key_case-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_effective_action",
                "name": "test_equality_true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_effective_condition",
                "name": "test_effective_condition_equality[exactly_equal-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_effective_condition",
                "name": "test_effective_condition_equality[equal_different_order-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_effective_condition",
                "name": "test_effective_condition_equality[equal_different_case_operator-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_effective_condition",
                "name": "test_effective_condition_equality[equal_different_case_key-scenario3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_effective_condition",
                "name": "test_effective_condition_inequality[entirely_different-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_effective_condition",
                "name": "test_effective_condition_inequality[different_case_value-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_effective_principal",
                "name": "test_equality_true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_effective_resource",
                "name": "test_equality_true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_policy_shard",
                "name": "test_shard_equality[exactly_equal-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_policy_shard",
                "name": "test_sgard_inequality[different_condition-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_principal",
                "name": "test_action_equality[exactly_equal-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_principal",
                "name": "test_action_unequality[case_unequal-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_resource",
                "name": "test_resource_equality[exactly_equal-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.equality.test_resource",
                "name": "test_resource_inequality[case_unequal-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_effective_action",
                "name": "test_bad_intersection",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_effective_action",
                "name": "test_intersection[proper_subset-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_effective_action",
                "name": "test_intersection[proper_subset_with_exclusions-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_effective_action",
                "name": "test_intersection[excluded_proper_subset-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_effective_action",
                "name": "test_intersection[subset-scenario3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_effective_action",
                "name": "test_intersection[disjoint-scenario4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_effective_action",
                "name": "test_intersection[larger-scenario5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_effective_action",
                "name": "test_intersection[larger_with_exclusion-scenario6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_effective_condition",
                "name": "test_bad_intersection",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_effective_condition",
                "name": "test_intersection[proper_subset-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_effective_condition",
                "name": "test_intersection[proper_subset_with_exclusions-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_effective_condition",
                "name": "test_intersection[subset-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_effective_condition",
                "name": "test_intersection[disjoint-scenario3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_effective_condition",
                "name": "test_intersection[larger-scenario4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_effective_principal",
                "name": "test_bad_intersection",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_effective_principal",
                "name": "test_intersection[proper_subset-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_effective_principal",
                "name": "test_intersection[proper_subset_with_exclusions-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_effective_principal",
                "name": "test_intersection[excluded_proper_subset-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_effective_principal",
                "name": "test_intersection[subset-scenario3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_effective_principal",
                "name": "test_intersection[disjoint-scenario4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_policy_shard",
                "name": "test_bad_intersection",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_policy_shard",
                "name": "test_intersection[test_subset-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_policy_shard",
                "name": "test_intersection[test_exactly_equal-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_policy_shard",
                "name": "test_intersection[test_disjoint_conditions-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_policy_shard",
                "name": "test_intersection[test_matching_equal_one_with_one_without_condition-scenario3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_policy_shard",
                "name": "test_intersection[test_matching_subset_conditions_larger_first-scenario4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_policy_shard",
                "name": "test_intersection[test_matching_subset_conditions_smaller_first-scenario5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.intersection.test_policy_shard",
                "name": "test_intersection[test_allow_without_condition_vs_deny_with_condition-scenario6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_action",
                "name": "test_action_issubset[smaller-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_action",
                "name": "test_action_issubset[smaller_mismatching_case-scenario1]",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_action",
                "name": "test_action_issubset[exactly_equal-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_action",
                "name": "test_action_issubset[case_unequal-scenario3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_action",
                "name": "test_action_not_issubset[larger-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_effective_action",
                "name": "test_bad_issubset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_effective_action",
                "name": "test_issubset_simple_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_effective_action",
                "name": "test_issubset_simple_true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_effective_action",
                "name": "test_issubset_exclusion_true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_effective_action",
                "name": "test_issubset_excluded_action",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_effective_action",
                "name": "test_issubset_disjoint",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_effective_action",
                "name": "test_union_complex_overlap",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_effective_action",
                "name": "test_no_exclusion_not_subset_of_exclusion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_effective_action",
                "name": "test_exclusion_subset_of_no_exclusion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_effective_principal",
                "name": "test_excluded",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_policy_shard",
                "name": "test_policy_shard_issubset[smaller-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_policy_shard",
                "name": "test_policy_shard_issubset[smaller_by_arp_exclusion-scenario1]",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_policy_shard",
                "name": "test_policy_shard_issubset[exactly_equal-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_policy_shard",
                "name": "test_policy_shard_issubset[exactly_equal_but_condition-scenario3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_policy_shard",
                "name": "test_policy_shard_issubset[exactly_equal_but_condition_exclusion-scenario4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_policy_shard",
                "name": "test_policy_shard_issubset[exactly_equal_but_more_conditions-scenario5]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_policy_shard",
                "name": "test_policy_shard_issubset[exactly_equal_but_one_has_condition_exclusions-scenario6]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_policy_shard",
                "name": "test_policy_shard_not_issubset[larger-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_policy_shard",
                "name": "test_policy_shard_not_issubset[equal_with_opposite_effects-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_policy_shard",
                "name": "test_policy_shard_not_issubset[action_not_subset_resource_is-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_policy_shard",
                "name": "test_policy_shard_not_issubset[equal_except_for_exclusion-scenario3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_policy_shard",
                "name": "test_policy_shard_not_issubset[exactly_equal_but_differing_conditions-scenario4]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_principal",
                "name": "test_principal_lt[wildcard-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_principal",
                "name": "test_principal_lt[full_account-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_principal",
                "name": "test_principal_lt[short_account-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_principal",
                "name": "test_principal_lt[exactly_equal-scenario3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_principal",
                "name": "test_principal_not_contains[case_unequal-scenario0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_principal",
                "name": "test_principal_not_contains[larger-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_principal",
                "name": "test_principal_not_contains[type_incorrect-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_resource",
                "name": "test_action_issubset[smaller-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_resource",
                "name": "test_action_issubset[exactly_equal-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_resource",
                "name": "test_action_not_issubset[larger-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_resource",
                "name": "test_action_not_issubset[case_unequal-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_resource",
                "name": "test_action_not_issubset[exactly_equal_mismatching_case-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.issubset.test_resource",
                "name": "test_action_not_issubset[smaller_mismatching_case-scenario3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.less_or_greater_than.test_action",
                "name": "test_action_less_than[smaller-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.less_or_greater_than.test_action",
                "name": "test_action_less_than[smaller_mismatching_case-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.less_or_greater_than.test_action",
                "name": "test_action_greater_than[exactly_equal-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.less_or_greater_than.test_action",
                "name": "test_action_greater_than[case_unequal-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.less_or_greater_than.test_action",
                "name": "test_action_greater_than[larger-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.less_or_greater_than.test_effective_resource",
                "name": "test_resource_contains[smaller-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.less_or_greater_than.test_effective_resource",
                "name": "test_resource_not_less_than[exactly_equal-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.less_or_greater_than.test_effective_resource",
                "name": "test_resource_not_less_than[case_unequal-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.less_or_greater_than.test_effective_resource",
                "name": "test_resource_not_less_than[larger-scenario2]",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.less_or_greater_than.test_principal",
                "name": "test_principal_lt[wildcar-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.less_or_greater_than.test_principal",
                "name": "test_principal_lt[full_account-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.less_or_greater_than.test_principal",
                "name": "test_principal_lt[short_account-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.less_or_greater_than.test_principal",
                "name": "test_principal_not_contains[exactly_equal-scenario0]",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.less_or_greater_than.test_principal",
                "name": "test_principal_not_contains[case_unequal-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.less_or_greater_than.test_principal",
                "name": "test_principal_not_contains[larger-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.less_or_greater_than.test_principal",
                "name": "test_principal_not_contains[type_incorrect-scenario3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.less_or_greater_than.test_resource",
                "name": "test_resource_contains[smaller-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.less_or_greater_than.test_resource",
                "name": "test_resource_not_less_than[exactly_equal-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.less_or_greater_than.test_resource",
                "name": "test_resource_not_less_than[case_unequal-scenario1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.less_or_greater_than.test_resource",
                "name": "test_resource_not_less_than[larger-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pydantic_behaviour.test_condition",
                "name": "test_json",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pydantic_behaviour.test_policy",
                "name": "test_policy_json_equality[simple_iam_policy_strings-policy0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pydantic_behaviour.test_policy",
                "name": "test_policy_json_equality[simple_iam_policy_lists-policy1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pydantic_behaviour.test_policy",
                "name": "test_policy_json_equality[complex_iam_policy-policy2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pydantic_behaviour.test_policy",
                "name": "test_policy_json_equality[complex_resource_policy-policy3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pydantic_behaviour.test_policy",
                "name": "test_policy_types[simple_iam_policy_strings-policy0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pydantic_behaviour.test_policy",
                "name": "test_policy_types[simple_iam_policy_lists-policy1]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pydantic_behaviour.test_policy",
                "name": "test_policy_types[complex_iam_policy-policy2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pydantic_behaviour.test_policy",
                "name": "test_policy_types[complex_resource_policy-policy3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pydantic_behaviour.test_policy_shard",
                "name": "test_json",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pydantic_behaviour.test_principal",
                "name": "test_json",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pydantic_behaviour.test_statement",
                "name": "test_ensure_list[action-scenario0]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pydantic_behaviour.test_statement",
                "name": "test_ensure_list[not_action-scenario1]",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pydantic_behaviour.test_statement",
                "name": "test_ensure_list[resource-scenario2]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pydantic_behaviour.test_statement",
                "name": "test_ensure_list[not_resource-scenario3]",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.pydantic_behaviour.test_statement",
                "name": "test_ensure_condition_value_list",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.union.test_effective_action",
                "name": "test_bad_union",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.union.test_effective_action",
                "name": "test_union_simple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.union.test_effective_action",
                "name": "test_union_excluded_action_addition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.union.test_effective_action",
                "name": "test_union_complex_overlap",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.union.test_effective_action",
                "name": "test_union_disjoint",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.union.test_effective_condition",
                "name": "test_different_inclusions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.union.test_effective_condition",
                "name": "test_same_inclusions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.union.test_effective_condition",
                "name": "test_different_exclusions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.union.test_effective_condition",
                "name": "test_same_exclusions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.union.test_effective_principal",
                "name": "test_bad_union",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.union.test_effective_principal",
                "name": "test_union_simple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.union.test_effective_principal",
                "name": "test_union_excluded_principal_addition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.union.test_effective_principal",
                "name": "test_union_disjoint",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.union.test_effective_resource",
                "name": "test_bad_union",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.union.test_effective_resource",
                "name": "test_union_simple",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.union.test_effective_resource",
                "name": "test_union_excluded_resource_addition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.union.test_effective_resource",
                "name": "test_union_disjoint",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.union.test_policy_shard",
                "name": "test_elimination",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.union.test_policy_shard",
                "name": "test_disjoint",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.union.test_policy_shard",
                "name": "test_condition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.unit.union.test_policy_shard",
                "name": "test_multiple_conditions",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ] \ud83d\ude80  Start image=crawlergpt:latest\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing] \ud83d\ude80  Start image=crawlergpt:latest\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/CloudWanderer-io-PolicyGlass] user=0 workdir=\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/CloudWanderer-io-PolicyGlass] user=0 workdir=\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ] \ud83e\uddea  Matrix: map[python-version:3.6]\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ] \u2b50 Run Main actions/checkout@v2\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \u2705  Success - Main actions/checkout@v2\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing] \ud83e\uddea  Matrix: map[python-version:3.6]\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ] \u2b50 Run Main Set up Python 3.6\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing] \u2b50 Run Main actions/checkout@v2\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \u2705  Success - Main actions/checkout@v2\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udc33  docker cp src=/tmp/act-cache/6a9c52ab-ad31-467c-8df9-a5b226150f82/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing] \u2b50 Run Main Set up Python 3.6\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udc33  docker cp src=/tmp/act-cache/6a9c52ab-ad31-467c-8df9-a5b226150f82/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udcac  ::debug::Semantic version spec of 3.6 is 3.6\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udcac  ::debug::isExplicit: \n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udcac  ::debug::explicit? false\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udcac  ::debug::explicit? true\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udcac  ::debug::explicit? true\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udcac  ::debug::explicit? true\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udcac  ::debug::explicit? true\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udcac  ::debug::explicit? true\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udcac  ::debug::explicit? true\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udcac  ::debug::matched: 3.6.14\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.6.14/x64\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.6.14 x64\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udcac  ::debug::Semantic version spec of 3.6 is 3.6\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udcac  ::debug::isExplicit: \n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udcac  ::debug::explicit? false\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udcac  ::debug::explicit? true\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udcac  ::debug::explicit? true\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udcac  ::debug::explicit? true\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udcac  ::debug::explicit? true\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udcac  ::debug::explicit? true\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udcac  ::debug::explicit? true\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udcac  ::debug::evaluating 6 versions\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Successfully setup CPython (3.6.14)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udcac  ::debug::matched: 3.6.14\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.6.14/x64\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udcac  ::debug::Found tool in cache Python 3.6.14 x64\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \u2705  Success - Main Set up Python 3.6\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Successfully setup CPython (3.6.14)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \u2705  Success - Main Set up Python 3.6\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.6.14/x64\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.6.14/x64/lib\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.6.14/x64\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.6.14/x64/lib\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \u2699  ::set-output:: python-version=3.6.14\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \u2699  ::set-output:: python-version=3.6.14\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64/bin\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.6.14/x64/bin\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ] \u2b50 Run Main Install dependencies\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing] \u2b50 Run Main Install dependencies\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (21.2.4)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (21.2.4)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting pip\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting pip\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading pip-21.3.1-py3-none-any.whl (1.7 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading pip-21.3.1-py3-none-any.whl (1.7 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Installing collected packages: pip\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Attempting uninstall: pip\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |     Found existing installation: pip 21.2.4\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Installing collected packages: pip\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Attempting uninstall: pip\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |     Found existing installation: pip 21.2.4\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |     Uninstalling pip-21.2.4:\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |     Uninstalling pip-21.2.4:\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |       Successfully uninstalled pip-21.2.4\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |       Successfully uninstalled pip-21.2.4\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Successfully installed pip-21.3.1\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Successfully installed pip-21.3.1\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Obtaining file:///tmp/558156d8-17ed-11ee-8a50-bb14de238602/CloudWanderer-io-PolicyGlass (from -r requirements.txt (line 9))\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Installing build dependencies: started\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Obtaining file:///tmp/558156d8-17ed-11ee-8a50-bb14de238602/CloudWanderer-io-PolicyGlass (from -r requirements.txt (line 9))\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Installing build dependencies: started\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Installing build dependencies: finished with status 'done'\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Checking if build backend supports build_editable: started\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Installing build dependencies: finished with status 'done'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Checking if build backend supports build_editable: started\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Checking if build backend supports build_editable: finished with status 'done'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Getting requirements to build wheel: started\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Checking if build backend supports build_editable: finished with status 'done'\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Getting requirements to build wheel: started\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Getting requirements to build wheel: finished with status 'done'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Preparing metadata (pyproject.toml): started\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Getting requirements to build wheel: finished with status 'done'\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Preparing metadata (pyproject.toml): started\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting build\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading build-0.9.0-py3-none-any.whl (17 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting mypy\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading mypy-0.971-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (14.9 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting mypy\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading mypy-0.971-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (14.9 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting flake8\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading flake8-5.0.4-py2.py3-none-any.whl (61 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting flake8\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading flake8-5.0.4-py2.py3-none-any.whl (61 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting pytest\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading pytest-7.0.1-py3-none-any.whl (296 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting pytest\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading pytest-7.0.1-py3-none-any.whl (296 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting pydocstyle\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading pydocstyle-6.3.0-py3-none-any.whl (38 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting pydocstyle\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading pydocstyle-6.3.0-py3-none-any.whl (38 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting sphinx\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading sphinx-5.3.0-py3-none-any.whl (3.2 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting sphinx\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading sphinx-5.3.0-py3-none-any.whl (3.2 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting typing_extensions\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting typing_extensions\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading typing_extensions-4.1.1-py3-none-any.whl (26 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading typing_extensions-4.1.1-py3-none-any.whl (26 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting pydantic\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading pydantic-1.9.2-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.2 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting pydantic\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading pydantic-1.9.2-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.2 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting sphinx_rtd_theme\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading sphinx_rtd_theme-1.2.2-py2.py3-none-any.whl (2.8 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting sphinx_rtd_theme\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading sphinx_rtd_theme-1.2.2-py2.py3-none-any.whl (2.8 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting tomli>=1.1.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading tomli-1.2.3-py3-none-any.whl (12 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting packaging>=19.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading packaging-21.3-py3-none-any.whl (40 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting pep517>=0.9.1\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading pep517-0.13.0-py3-none-any.whl (18 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting tomli>=1.0.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting typed-ast<2,>=1.4.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading tomli-1.2.3-py3-none-any.whl (12 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading typed_ast-1.5.4-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (831 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting mypy-extensions>=0.4.3\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting pycodestyle<2.10.0,>=2.9.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading pycodestyle-2.9.1-py2.py3-none-any.whl (41 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting importlib-metadata>=0.22\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading importlib_metadata-4.8.3-py3-none-any.whl (17 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting pyflakes<2.6.0,>=2.5.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading pyflakes-2.5.0-py2.py3-none-any.whl (66 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting typed-ast<2,>=1.4.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading typed_ast-1.5.4-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (831 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting mypy-extensions>=0.4.3\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting importlib-metadata<4.3,>=1.1.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading importlib_metadata-4.2.0-py3-none-any.whl (16 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting importlib-metadata>=0.22\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading importlib_metadata-4.2.0-py3-none-any.whl (16 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting mccabe<0.8.0,>=0.7.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading mccabe-0.7.0-py2.py3-none-any.whl (7.3 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting mccabe<0.8.0,>=0.7.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading mccabe-0.7.0-py2.py3-none-any.whl (7.3 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting pycodestyle<2.10.0,>=2.9.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading pycodestyle-2.9.1-py2.py3-none-any.whl (41 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting packaging\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading packaging-21.3-py3-none-any.whl (40 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting pyflakes<2.6.0,>=2.5.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading pyflakes-2.5.0-py2.py3-none-any.whl (66 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting pluggy<2.0,>=0.12\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting iniconfig\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading iniconfig-1.1.1-py2.py3-none-any.whl (5.0 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting py>=1.8.2\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting attrs>=19.2.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading attrs-22.2.0-py3-none-any.whl (60 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting attrs>=19.2.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading attrs-22.2.0-py3-none-any.whl (60 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting iniconfig\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading iniconfig-1.1.1-py2.py3-none-any.whl (5.0 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting snowballstemmer>=2.2.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading snowballstemmer-2.2.0-py2.py3-none-any.whl (93 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting py>=1.8.2\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting sphinxcontrib-jsmath\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading sphinxcontrib_jsmath-1.0.1-py2.py3-none-any.whl (5.1 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting pluggy<2.0,>=0.12\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting imagesize>=1.3\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading pluggy-1.0.0-py2.py3-none-any.whl (13 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading imagesize-1.4.1-py2.py3-none-any.whl (8.8 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting sphinxcontrib-htmlhelp>=2.0.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting snowballstemmer>=2.2.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading sphinxcontrib_htmlhelp-2.0.0-py2.py3-none-any.whl (100 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading snowballstemmer-2.2.0-py2.py3-none-any.whl (93 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting sphinxcontrib-devhelp\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading sphinxcontrib_devhelp-1.0.2-py2.py3-none-any.whl (84 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting alabaster<0.8,>=0.7\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading alabaster-0.7.13-py3-none-any.whl (13 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting sphinxcontrib-jsmath\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting sphinxcontrib-serializinghtml>=1.1.5\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading sphinxcontrib_jsmath-1.0.1-py2.py3-none-any.whl (5.1 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading sphinxcontrib_serializinghtml-1.1.5-py2.py3-none-any.whl (94 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting sphinxcontrib-applehelp\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting sphinxcontrib-qthelp\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading sphinxcontrib_applehelp-1.0.2-py2.py3-none-any.whl (121 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading sphinxcontrib_qthelp-1.0.3-py2.py3-none-any.whl (90 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting alabaster<0.8,>=0.7\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading alabaster-0.7.13-py3-none-any.whl (13 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting sphinxcontrib-htmlhelp>=2.0.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading sphinxcontrib_htmlhelp-2.0.0-py2.py3-none-any.whl (100 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting requests>=2.5.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading requests-2.27.1-py2.py3-none-any.whl (63 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting babel>=2.9\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading Babel-2.11.0-py3-none-any.whl (9.5 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting Jinja2>=3.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading Jinja2-3.0.3-py3-none-any.whl (133 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting docutils<0.20,>=0.14\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading docutils-0.18.1-py2.py3-none-any.whl (570 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting babel>=2.9\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading Babel-2.11.0-py3-none-any.whl (9.5 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting sphinxcontrib-applehelp\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading sphinxcontrib_applehelp-1.0.2-py2.py3-none-any.whl (121 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting sphinx\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading sphinx-5.2.3-py3-none-any.whl (3.2 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting imagesize>=1.3\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading imagesize-1.4.1-py2.py3-none-any.whl (8.8 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting Jinja2>=3.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading Jinja2-3.0.3-py3-none-any.whl (133 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting Pygments>=2.12\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading Pygments-2.14.0-py3-none-any.whl (1.1 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting sphinxcontrib-serializinghtml>=1.1.5\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading sphinxcontrib_serializinghtml-1.1.5-py2.py3-none-any.whl (94 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading sphinx-5.2.2-py3-none-any.whl (3.2 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting requests>=2.5.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading requests-2.27.1-py2.py3-none-any.whl (63 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting sphinxcontrib-devhelp\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading sphinxcontrib_devhelp-1.0.2-py2.py3-none-any.whl (84 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting sphinx\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading sphinx-5.2.3-py3-none-any.whl (3.2 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading sphinx-5.2.1-py3-none-any.whl (3.2 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading sphinx-5.2.2-py3-none-any.whl (3.2 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading sphinx-5.2.0.post0-py3-none-any.whl (3.2 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading sphinx-5.2.1-py3-none-any.whl (3.2 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading sphinx-5.2.0-py3-none-any.whl (3.2 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading Sphinx-5.1.1-py3-none-any.whl (3.2 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading sphinx-5.2.0.post0-py3-none-any.whl (3.2 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading sphinx-5.2.0-py3-none-any.whl (3.2 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting Pygments>=2.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading Pygments-2.14.0-py3-none-any.whl (1.1 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading Sphinx-5.1.1-py3-none-any.whl (3.2 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting sphinx\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading Sphinx-5.1.0-py3-none-any.whl (3.2 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading Sphinx-5.1.0-py3-none-any.whl (3.2 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading Sphinx-5.0.2-py3-none-any.whl (3.1 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading Sphinx-5.0.2-py3-none-any.whl (3.1 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading Sphinx-5.0.1-py3-none-any.whl (3.1 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading Sphinx-5.0.1-py3-none-any.whl (3.1 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading Sphinx-5.0.0-py3-none-any.whl (3.1 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading Sphinx-4.5.0-py3-none-any.whl (3.1 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading Sphinx-5.0.0-py3-none-any.whl (3.1 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting docutils<0.18,>=0.14\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading docutils-0.17.1-py2.py3-none-any.whl (575 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting sphinx\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading Sphinx-4.5.0-py3-none-any.whl (3.1 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading Sphinx-4.4.0-py3-none-any.whl (3.1 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading Sphinx-4.3.2-py3-none-any.whl (3.1 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting docutils<0.18,>=0.14\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading docutils-0.17.1-py2.py3-none-any.whl (575 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting sphinx\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading Sphinx-4.4.0-py3-none-any.whl (3.1 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (from sphinx->-r requirements.txt (line 5)) (40.6.2)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting dataclasses>=0.6\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading Sphinx-4.3.2-py3-none-any.whl (3.1 MB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading dataclasses-0.8-py3-none-any.whl (19 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting sphinxcontrib-jquery<5,>=4\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading sphinxcontrib_jquery-4.1-py2.py3-none-any.whl (121 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Requirement already satisfied: setuptools in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (from sphinx->-r requirements.txt (line 5)) (40.6.2)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting sphinxcontrib-qthelp\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading sphinxcontrib_qthelp-1.0.3-py2.py3-none-any.whl (90 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting dataclasses>=0.6\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading dataclasses-0.8-py3-none-any.whl (19 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting pytz>=2015.7\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting sphinxcontrib-jquery<5,>=4\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading sphinxcontrib_jquery-4.1-py2.py3-none-any.whl (121 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting zipp>=0.5\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading zipp-3.6.0-py3-none-any.whl (5.3 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting pytz>=2015.7\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading pytz-2023.3-py2.py3-none-any.whl (502 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting MarkupSafe>=2.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading MarkupSafe-2.0.1-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (30 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting zipp>=0.5\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading zipp-3.6.0-py3-none-any.whl (5.3 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting idna<4,>=2.5\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting MarkupSafe>=2.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading MarkupSafe-2.0.1-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (30 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting charset-normalizer~=2.0.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading charset_normalizer-2.0.12-py3-none-any.whl (39 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting pyparsing!=3.0.5,>=2.0.2\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading pyparsing-3.1.0-py3-none-any.whl (102 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting urllib3<1.27,>=1.21.1\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting certifi>=2017.4.17\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting urllib3<1.27,>=1.21.1\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting certifi>=2017.4.17\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Collecting pyparsing!=3.0.5,>=2.0.2\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Downloading pyparsing-3.1.0-py3-none-any.whl (102 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting idna<4,>=2.5\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Collecting charset-normalizer~=2.0.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Downloading charset_normalizer-2.0.12-py3-none-any.whl (39 kB)\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Installing collected packages: urllib3, pytz, pyparsing, MarkupSafe, idna, charset-normalizer, certifi, zipp, typing-extensions, sphinxcontrib-serializinghtml, sphinxcontrib-qthelp, sphinxcontrib-jsmath, sphinxcontrib-htmlhelp, sphinxcontrib-devhelp, sphinxcontrib-applehelp, snowballstemmer, requests, Pygments, packaging, Jinja2, imagesize, docutils, babel, alabaster, sphinx, importlib-metadata, dataclasses, typed-ast, tomli, sphinxcontrib-jquery, pyflakes, pydantic, pycodestyle, py, pluggy, mypy-extensions, mccabe, iniconfig, attrs, sphinx-rtd-theme, pytest, pydocstyle, policyglass, mypy, flake8\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Installing collected packages: urllib3, pytz, pyparsing, MarkupSafe, idna, charset-normalizer, certifi, zipp, typing-extensions, sphinxcontrib-serializinghtml, sphinxcontrib-qthelp, sphinxcontrib-jsmath, sphinxcontrib-htmlhelp, sphinxcontrib-devhelp, sphinxcontrib-applehelp, snowballstemmer, requests, Pygments, packaging, Jinja2, imagesize, docutils, babel, alabaster, tomli, sphinx, importlib-metadata, dataclasses, typed-ast, sphinxcontrib-jquery, pyflakes, pydantic, pycodestyle, py, pluggy, pep517, mypy-extensions, mccabe, iniconfig, attrs, sphinx-rtd-theme, pytest, pydocstyle, policyglass, mypy, flake8, build\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   Running setup.py develop for policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Running setup.py develop for policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Successfully installed Jinja2-3.0.3 MarkupSafe-2.0.1 Pygments-2.14.0 alabaster-0.7.13 attrs-22.2.0 babel-2.11.0 certifi-2023.5.7 charset-normalizer-2.0.12 dataclasses-0.8 docutils-0.17.1 flake8-5.0.4 idna-3.4 imagesize-1.4.1 importlib-metadata-4.2.0 iniconfig-1.1.1 mccabe-0.7.0 mypy-0.971 mypy-extensions-1.0.0 packaging-21.3 pluggy-1.0.0 policyglass-0.8.0 py-1.11.0 pycodestyle-2.9.1 pydantic-1.9.2 pydocstyle-6.3.0 pyflakes-2.5.0 pyparsing-3.1.0 pytest-7.0.1 pytz-2023.3 requests-2.27.1 snowballstemmer-2.2.0 sphinx-4.3.2 sphinx-rtd-theme-1.2.2 sphinxcontrib-applehelp-1.0.2 sphinxcontrib-devhelp-1.0.2 sphinxcontrib-htmlhelp-2.0.0 sphinxcontrib-jquery-4.1 sphinxcontrib-jsmath-1.0.1 sphinxcontrib-qthelp-1.0.3 sphinxcontrib-serializinghtml-1.1.5 tomli-1.2.3 typed-ast-1.5.4 typing-extensions-4.1.1 urllib3-1.26.16 zipp-3.6.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Successfully installed Jinja2-3.0.3 MarkupSafe-2.0.1 Pygments-2.14.0 alabaster-0.7.13 attrs-22.2.0 babel-2.11.0 build-0.9.0 certifi-2023.5.7 charset-normalizer-2.0.12 dataclasses-0.8 docutils-0.17.1 flake8-5.0.4 idna-3.4 imagesize-1.4.1 importlib-metadata-4.2.0 iniconfig-1.1.1 mccabe-0.7.0 mypy-0.971 mypy-extensions-1.0.0 packaging-21.3 pep517-0.13.0 pluggy-1.0.0 policyglass-0.8.0 py-1.11.0 pycodestyle-2.9.1 pydantic-1.9.2 pydocstyle-6.3.0 pyflakes-2.5.0 pyparsing-3.1.0 pytest-7.0.1 pytz-2023.3 requests-2.27.1 snowballstemmer-2.2.0 sphinx-4.3.2 sphinx-rtd-theme-1.2.2 sphinxcontrib-applehelp-1.0.2 sphinxcontrib-devhelp-1.0.2 sphinxcontrib-htmlhelp-2.0.0 sphinxcontrib-jquery-4.1 sphinxcontrib-jsmath-1.0.1 sphinxcontrib-qthelp-1.0.3 sphinxcontrib-serializinghtml-1.1.5 tomli-1.2.3 typed-ast-1.5.4 typing-extensions-4.1.1 urllib3-1.26.16 zipp-3.6.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \u2705  Success - Main Install dependencies\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \u2705  Success - Main Install dependencies\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ] \u2b50 Run Main Type check with mypy\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing] \u2b50 Run Main Build a tarball\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | * Creating venv isolated environment...\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Success: no issues found in 13 source files\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \u2705  Success - Main Type check with mypy\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ] \u2b50 Run Main Lint with flake8\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | * Installing packages in isolated environment... (setuptools >= 40.8.0, wheel)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | * Getting build dependencies for sdist...\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | running egg_info\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | writing policyglass.egg-info/PKG-INFO\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | writing dependency_links to policyglass.egg-info/dependency_links.txt\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | writing requirements to policyglass.egg-info/requires.txt\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | writing top-level names to policyglass.egg-info/top_level.txt\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | reading manifest file 'policyglass.egg-info/SOURCES.txt'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding license file 'LICENSE'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | writing manifest file 'policyglass.egg-info/SOURCES.txt'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | * Building sdist...\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | running sdist\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | running egg_info\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | writing policyglass.egg-info/PKG-INFO\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | writing dependency_links to policyglass.egg-info/dependency_links.txt\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | writing requirements to policyglass.egg-info/requires.txt\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | writing top-level names to policyglass.egg-info/top_level.txt\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | reading manifest file 'policyglass.egg-info/SOURCES.txt'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding license file 'LICENSE'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | writing manifest file 'policyglass.egg-info/SOURCES.txt'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | running check\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | creating policyglass-0.8.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | creating policyglass-0.8.0/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | creating policyglass-0.8.0/policyglass.egg-info\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying files to policyglass-0.8.0...\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying LICENSE -> policyglass-0.8.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying README.rst -> policyglass-0.8.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying pyproject.toml -> policyglass-0.8.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying setup.cfg -> policyglass-0.8.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying setup.py -> policyglass-0.8.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/__init__.py -> policyglass-0.8.0/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/action.py -> policyglass-0.8.0/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/condition.py -> policyglass-0.8.0/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/deprecated.py -> policyglass-0.8.0/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/effective_arp.py -> policyglass-0.8.0/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/models.py -> policyglass-0.8.0/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/policy.py -> policyglass-0.8.0/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/policy_shard.py -> policyglass-0.8.0/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/principal.py -> policyglass-0.8.0/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/protocols.py -> policyglass-0.8.0/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/py.typed -> policyglass-0.8.0/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/resource.py -> policyglass-0.8.0/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/statement.py -> policyglass-0.8.0/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/utils.py -> policyglass-0.8.0/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass.egg-info/PKG-INFO -> policyglass-0.8.0/policyglass.egg-info\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass.egg-info/SOURCES.txt -> policyglass-0.8.0/policyglass.egg-info\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass.egg-info/dependency_links.txt -> policyglass-0.8.0/policyglass.egg-info\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass.egg-info/requires.txt -> policyglass-0.8.0/policyglass.egg-info\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass.egg-info/top_level.txt -> policyglass-0.8.0/policyglass.egg-info\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Writing policyglass-0.8.0/setup.cfg\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Creating tar archive\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | removing 'policyglass-0.8.0' (and everything under it)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | * Creating venv isolated environment...\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | * Installing packages in isolated environment... (setuptools >= 40.8.0, wheel)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | * Getting build dependencies for wheel...\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | running egg_info\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | writing policyglass.egg-info/PKG-INFO\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | writing dependency_links to policyglass.egg-info/dependency_links.txt\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | writing requirements to policyglass.egg-info/requires.txt\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | writing top-level names to policyglass.egg-info/top_level.txt\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | reading manifest file 'policyglass.egg-info/SOURCES.txt'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding license file 'LICENSE'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | writing manifest file 'policyglass.egg-info/SOURCES.txt'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | * Installing packages in isolated environment... (wheel)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | * Building wheel...\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | running bdist_wheel\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | running build\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | running build_py\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | creating build\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | creating build/lib\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | creating build/lib/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/policy.py -> build/lib/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/effective_arp.py -> build/lib/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/resource.py -> build/lib/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/utils.py -> build/lib/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/policy_shard.py -> build/lib/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/models.py -> build/lib/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/deprecated.py -> build/lib/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/condition.py -> build/lib/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/statement.py -> build/lib/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/action.py -> build/lib/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/__init__.py -> build/lib/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/protocols.py -> build/lib/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/principal.py -> build/lib/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying policyglass/py.typed -> build/lib/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | installing to build/bdist.linux-x86_64/wheel\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | running install\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | running install_lib\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | creating build/bdist.linux-x86_64\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | creating build/bdist.linux-x86_64/wheel\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | creating build/bdist.linux-x86_64/wheel/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying build/lib/policyglass/policy.py -> build/bdist.linux-x86_64/wheel/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying build/lib/policyglass/effective_arp.py -> build/bdist.linux-x86_64/wheel/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying build/lib/policyglass/py.typed -> build/bdist.linux-x86_64/wheel/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying build/lib/policyglass/resource.py -> build/bdist.linux-x86_64/wheel/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying build/lib/policyglass/utils.py -> build/bdist.linux-x86_64/wheel/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying build/lib/policyglass/policy_shard.py -> build/bdist.linux-x86_64/wheel/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying build/lib/policyglass/models.py -> build/bdist.linux-x86_64/wheel/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying build/lib/policyglass/deprecated.py -> build/bdist.linux-x86_64/wheel/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying build/lib/policyglass/condition.py -> build/bdist.linux-x86_64/wheel/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying build/lib/policyglass/statement.py -> build/bdist.linux-x86_64/wheel/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying build/lib/policyglass/action.py -> build/bdist.linux-x86_64/wheel/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying build/lib/policyglass/__init__.py -> build/bdist.linux-x86_64/wheel/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying build/lib/policyglass/protocols.py -> build/bdist.linux-x86_64/wheel/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | copying build/lib/policyglass/principal.py -> build/bdist.linux-x86_64/wheel/policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | running install_egg_info\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | running egg_info\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | writing policyglass.egg-info/PKG-INFO\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | writing dependency_links to policyglass.egg-info/dependency_links.txt\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | writing requirements to policyglass.egg-info/requires.txt\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | writing top-level names to policyglass.egg-info/top_level.txt\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | reading manifest file 'policyglass.egg-info/SOURCES.txt'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding license file 'LICENSE'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | writing manifest file 'policyglass.egg-info/SOURCES.txt'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Copying policyglass.egg-info to build/bdist.linux-x86_64/wheel/policyglass-0.8.0-py3.6.egg-info\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | running install_scripts\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding license file \"LICENSE\" (matched pattern \"LICEN[CS]E*\")\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | creating build/bdist.linux-x86_64/wheel/policyglass-0.8.0.dist-info/WHEEL\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | creating '/tmp/558156d8-17ed-11ee-8a50-bb14de238602/CloudWanderer-io-PolicyGlass/build_test/tmpyqvxa5ij/policyglass-0.8.0-py3-none-any.whl' and adding 'build/bdist.linux-x86_64/wheel' to it\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding 'policyglass/__init__.py'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding 'policyglass/action.py'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding 'policyglass/condition.py'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding 'policyglass/deprecated.py'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding 'policyglass/effective_arp.py'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding 'policyglass/models.py'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding 'policyglass/policy.py'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding 'policyglass/policy_shard.py'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding 'policyglass/principal.py'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding 'policyglass/protocols.py'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding 'policyglass/py.typed'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding 'policyglass/resource.py'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding 'policyglass/statement.py'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding 'policyglass/utils.py'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding 'policyglass-0.8.0.dist-info/LICENSE'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding 'policyglass-0.8.0.dist-info/METADATA'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding 'policyglass-0.8.0.dist-info/WHEEL'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding 'policyglass-0.8.0.dist-info/top_level.txt'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | adding 'policyglass-0.8.0.dist-info/RECORD'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | removing build/bdist.linux-x86_64/wheel\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Successfully built policyglass-0.8.0.tar.gz and policyglass-0.8.0-py3-none-any.whl\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \u2705  Success - Main Build a tarball\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing] \u2b50 Run Main Install the tarball to ensure packaging works\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 0\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \u2705  Success - Main Lint with flake8\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ] \u2b50 Run Main Lint with pydocstyle\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Processing ./build_test/policyglass-0.8.0.tar.gz\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Installing build dependencies: started\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \u2705  Success - Main Lint with pydocstyle\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ] \u2b50 Run Main Test with doctest\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/6] user= workdir=\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Installing build dependencies: finished with status 'done'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Getting requirements to build wheel: started\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Getting requirements to build wheel: finished with status 'done'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Preparing metadata (pyproject.toml): started\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Preparing metadata (pyproject.toml): finished with status 'done'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Requirement already satisfied: pydantic in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (from policyglass==0.8.0) (1.9.2)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Requirement already satisfied: typing-extensions in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (from policyglass==0.8.0) (4.1.1)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Requirement already satisfied: dataclasses>=0.6 in /opt/hostedtoolcache/Python/3.6.14/x64/lib/python3.6/site-packages (from pydantic->policyglass==0.8.0) (0.8)\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Building wheels for collected packages: policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Building wheel for policyglass (pyproject.toml): started\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Building wheel for policyglass (pyproject.toml): finished with status 'done'\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Created wheel for policyglass: filename=policyglass-0.8.0-py3-none-any.whl size=23175 sha256=c3be0ef5a255f48d569b1b6e7b96fa9b6d66d035eb9703f51241c2aa2b30285c\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Stored in directory: /home/runneradmin/.cache/pip/wheels/21/6d/82/9470ff592c35956e23bd9de19a0b95dab539d54ed56e36df5e\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Successfully built policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Installing collected packages: policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |   Attempting uninstall: policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |     Found existing installation: policyglass 0.8.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |     Uninstalling policyglass-0.8.0:\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   |       Successfully uninstalled policyglass-0.8.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | Successfully installed policyglass-0.8.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \u2705  Success - Main Install the tarball to ensure packaging works\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing] \u2b50 Run Main Test with pytest\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Running Sphinx v4.3.2\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | making output directory... done\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | WARNING: html_static_path entry '_static' does not exist\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | loading intersphinx inventory from https://docs.python.org/3/objects.inv...\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | ============================= test session starts ==============================\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | platform linux -- Python 3.6.14, pytest-7.0.1, pluggy-1.0.0\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | rootdir: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/CloudWanderer-io-PolicyGlass\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | collected 283 items\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | \n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/test_condition.py ........................................... [ 15%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | ...                                                                      [ 16%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/test_delineate_intersecting_shards.py ..........              [ 19%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | building [mo]: targets for 0 po files that are out of date\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | building [doctest]: targets for 15 source files that are out of date\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/test_deprecated.py .                                          [ 20%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | updating environment: [new config] 15 added, 0 changed, 0 removed\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | reading sources... [  6%] class_reference\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/test_effective_action.py ......                               [ 22%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/test_effective_condition.py ..                                [ 22%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/test_effective_resource.py .                                  [ 23%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/test_policy.py ...                                            [ 24%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | reading sources... [ 13%] class_reference/action\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/test_policy_shards_effect.py .......                          [ 26%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/test_policy_shards_explain.py ...                             [ 27%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/test_policy_shards_to_json.py .                               [ 28%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/test_principal.py .....                                       [ 30%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/test_principal_collection.py .                                [ 30%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/test_resource.py ..                                           [ 31%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/test_statement.py ..                                          [ 31%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/bool/test_effective_condition.py ...                          [ 32%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/contains/test_effective_action.py ......                      [ 34%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/difference/test_effective_action.py .......                   [ 37%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/difference/test_effective_principal.py .......                [ 39%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/difference/test_effective_resource.py .......                 [ 42%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/difference/test_policyshard.py ..............                 [ 47%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/equality/test_action.py ..                                    [ 48%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/equality/test_condition.py .......                            [ 50%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/equality/test_effective_action.py .                           [ 50%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/equality/test_effective_condition.py ......                   [ 53%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/equality/test_effective_principal.py .                        [ 53%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/equality/test_effective_resource.py .                         [ 53%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/equality/test_policy_shard.py ..                              [ 54%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/equality/test_principal.py ..                                 [ 55%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/equality/test_resource.py ..                                  [ 55%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/intersection/test_effective_action.py ........                [ 58%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/intersection/test_effective_condition.py ......               [ 60%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/intersection/test_effective_principal.py ......               [ 62%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/intersection/test_policy_shard.py ........                    [ 65%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/issubset/test_action.py .....                                 [ 67%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/issubset/test_effective_action.py .........                   [ 70%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/issubset/test_effective_principal.py .                        [ 71%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/issubset/test_policy_shard.py ............                    [ 75%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/issubset/test_principal.py .......                            [ 77%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/issubset/test_resource.py ......                              [ 79%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/less_or_greater_than/test_action.py .....                     [ 81%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/less_or_greater_than/test_effective_resource.py ....          [ 83%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/less_or_greater_than/test_principal.py .......                [ 85%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/less_or_greater_than/test_resource.py ....                    [ 86%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/pydantic_behaviour/test_condition.py .                        [ 87%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/pydantic_behaviour/test_policy.py ........                    [ 90%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/pydantic_behaviour/test_policy_shard.py .                     [ 90%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/pydantic_behaviour/test_principal.py .                        [ 90%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/pydantic_behaviour/test_statement.py .....                    [ 92%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/union/test_effective_action.py .....                          [ 94%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/union/test_effective_condition.py ....                        [ 95%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/union/test_effective_principal.py ....                        [ 97%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/union/test_effective_resource.py ....                         [ 98%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | tests/unit/union/test_policy_shard.py ....                               [100%]\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | \n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/CloudWanderer-io-PolicyGlass/report.xml -\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   | ============================= 283 passed in 1.58s ==============================\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \u2705  Success - Main Test with pytest\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | reading sources... [ 20%] class_reference/condition\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | reading sources... [ 26%] class_reference/policy\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing] \u2b50 Run Post Set up Python 3.6\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | reading sources... [ 33%] class_reference/policy_shard\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | reading sources... [ 40%] class_reference/principal\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | reading sources... [ 46%] class_reference/resource\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | reading sources... [ 53%] class_reference/statement\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | reading sources... [ 60%] class_reference/understanding_effective_actions\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | reading sources... [ 66%] class_reference/understanding_effective_conditions\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | reading sources... [ 73%] class_reference/understanding_policy_shards\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | reading sources... [ 80%] examples_policy_analysis\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | reading sources... [ 86%] examples_policy_shards\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | reading sources... [ 93%] index\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | reading sources... [100%] what_is_policyglass\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | \n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | looking for now-outdated files... none found\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | pickling environment... done\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | checking consistency... done\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | running tests...\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | \n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Document: class_reference/understanding_policy_shards\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | -----------------------------------------------------\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 1 items passed all tests:\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   11 tests in default\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 11 tests in 1 items.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 11 passed and 0 failed.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Test passed.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | \n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Document: index\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | ---------------\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 1 items passed all tests:\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |    8 tests in default\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 8 tests in 1 items.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 8 passed and 0 failed.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Test passed.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | \n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Document: class_reference/understanding_effective_actions\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | ---------------------------------------------------------\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 1 items passed all tests:\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |    8 tests in default\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 8 tests in 1 items.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 8 passed and 0 failed.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Test passed.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | \n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Document: class_reference/understanding_effective_conditions\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | ------------------------------------------------------------\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 1 items passed all tests:\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |    3 tests in default\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 3 tests in 1 items.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 3 passed and 0 failed.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Test passed.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | \n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Document: examples_policy_shards\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | --------------------------------\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 1 items passed all tests:\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   14 tests in default\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 14 tests in 1 items.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 14 passed and 0 failed.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Test passed.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | \n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Document: examples_policy_analysis\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | ----------------------------------\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 1 items passed all tests:\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   12 tests in default\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 12 tests in 1 items.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 12 passed and 0 failed.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Test passed.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | \n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Document: class_reference/policy_shard\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | --------------------------------------\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 1 items passed all tests:\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |   15 tests in default\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 15 tests in 1 items.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 15 passed and 0 failed.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Test passed.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | \n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Document: class_reference/policy\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | --------------------------------\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 1 items passed all tests:\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |    2 tests in default\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 2 tests in 1 items.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | 2 passed and 0 failed.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Test passed.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | \n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Doctest summary\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | ===============\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |    73 tests\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |     0 failures in tests\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |     0 failures in setup code\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   |     0 failures in cleanup code\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | build succeeded, 1 warning.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | \n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   | Testing of doctests in the sources finished, look at the results in doc_build/doctest/output.txt.\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \u2705  Success - Main Test with doctest\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ] \u2b50 Run Post Set up Python 3.6\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing]   \u2705  Success - Post Set up Python 3.6\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ]   \u2705  Success - Post Set up Python 3.6\n[21a3bbad-5776-4652-a5ba-a509ebced700/unit-and-integration-testing] \ud83c\udfc1  Job succeeded\n[21a3bbad-5776-4652-a5ba-a509ebced700/linting-and-type-checking   ] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/CloudWanderer-io-PolicyGlass/.github/workflows/continuous-integration-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "21a3bbad-5776-4652-a5ba-a509ebced700",
        "build_tool": "pytest",
        "elapsed_time": 562.3598592281342
    }
}