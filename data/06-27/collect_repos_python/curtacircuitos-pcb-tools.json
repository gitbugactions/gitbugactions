{
    "repository": "curtacircuitos/pcb-tools",
    "stars": 252,
    "language": "python",
    "size": 9798,
    "clone_url": "https://github.com/curtacircuitos/pcb-tools.git",
    "timestamp": "2023-06-28T10:23:47.320867Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMPrimitive_ctor",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMPrimitive_validation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMPrimitive_conversion",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMCommentPrimitive_ctor",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMCommentPrimitive_validation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMCommentPrimitive_factory",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMCommentPrimitive_dump",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMCommentPrimitive_conversion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMCommentPrimitive_string",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMCirclePrimitive_ctor",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMCirclePrimitive_validation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMCirclePrimitive_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMCirclePrimitive_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMCirclePrimitive_conversion",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMVectorLinePrimitive_validation",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMVectorLinePrimitive_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMVectorLinePrimitive_dump",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMVectorLinePrimtive_conversion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMOutlinePrimitive_validation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMOutlinePrimitive_factory",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMOUtlinePrimitive_dump",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMOutlinePrimitive_conversion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMPolygonPrimitive_validation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMPolygonPrimitive_factory",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMPolygonPrimitive_dump",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMPolygonPrimitive_conversion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMMoirePrimitive_validation",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMMoirePrimitive_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMMoirePrimitive_dump",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMMoirePrimitive_conversion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMThermalPrimitive_validation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMThermalPrimitive_factory",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMThermalPrimitive_dump",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMThermalPrimitive_conversion",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMCenterLinePrimitive_validation",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMCenterLinePrimtive_factory",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMCenterLinePrimitive_dump",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMCenterLinePrimitive_conversion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMLowerLeftLinePrimitive_validation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMLowerLeftLinePrimtive_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMLowerLeftLinePrimitive_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMLowerLeftLinePrimitive_conversion",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMUnsupportPrimitive",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_AMUnsupportPrimitive_smoketest",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_inch",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_am_statements",
                "name": "test_metric",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_cairo_backend",
                "name": "test_render_overlapping_touching",
                "time": 0.459,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_cairo_backend",
                "name": "test_render_overlapping_contour",
                "time": 0.408,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_cairo_backend",
                "name": "test_render_cutin_multiple",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_cairo_backend",
                "name": "test_render_svg_simple_contour",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_cam",
                "name": "test_filesettings_defaults",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_cam",
                "name": "test_filesettings_dict",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_cam",
                "name": "test_filesettings_assign",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_cam",
                "name": "test_filesettings_dict_assign",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_cam",
                "name": "test_camfile_init",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_cam",
                "name": "test_camfile_settings",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_cam",
                "name": "test_bounds_override_smoketest",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_cam",
                "name": "test_zeros",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_cam",
                "name": "test_filesettings_validation",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_cam",
                "name": "test_key_validation",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_common",
                "name": "test_file_type_detection",
                "time": 0.105,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_common",
                "name": "test_load_from_string",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_common",
                "name": "test_file_type_validation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_format_detection",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_read",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_write",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_read_settings",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_bounding_box",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_report",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_conversion",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_parser_hole_count",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_parser_hole_sizes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_parse_whitespace",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_parse_comment",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_parse_format_comment",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_parse_header",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_parse_rout",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_parse_version",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_parse_format",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_parse_units",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_parse_incremental_mode",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_parse_absolute_mode",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_parse_repeat_hole",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_parse_incremental_position",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_parse_unknown",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_drill_hit_units_conversion",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_drill_hit_offset",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_drill_slot_units_conversion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_drill_slot_offset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_drill_slot_bounds",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon",
                "name": "test_handling_multi_line_g00_and_g1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_excellon_statement_implementation",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_excellontstmt",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_excellontool_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_excellontool_dump",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_excellontool_order",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_excellontool_conversion",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_excellontool_repr",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_excellontool_equality",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_toolselection_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_toolselection_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_z_axis_infeed_rate_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_z_axis_infeed_rate_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_coordinatestmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_coordinatestmt_dump",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_coordinatestmt_conversion",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_coordinatestmt_offset",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_coordinatestmt_string",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_repeathole_stmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_repeatholestmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_repeatholestmt_conversion",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_repeathole_str",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_commentstmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_commentstmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_header_begin_stmt",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_header_end_stmt",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_rewindstop_stmt",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_z_axis_rout_position_stmt",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_retract_with_clamping_stmt",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_retract_without_clamping_stmt",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_cutter_compensation_off_stmt",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_cutter_compensation_left_stmt",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_cutter_compensation_right_stmt",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_endofprogramstmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_endofprogramStmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_endofprogramstmt_conversion",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_endofprogramstmt_offset",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_unitstmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_unitstmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_unitstmt_conversion",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_incrementalmode_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_incrementalmode_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_incrementalmode_validation",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_versionstmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_versionstmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_versionstmt_validation",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_formatstmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_formatstmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_formatstmt_validation",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_linktoolstmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_linktoolstmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_measmodestmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_measmodestmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_measmodestmt_validation",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_measmodestmt_conversion",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_routemode_stmt",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_linearmode_stmt",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_drillmode_stmt",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_absolutemode_stmt",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_unknownstmt",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_excellon_statements",
                "name": "test_unknownstmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_Statement_smoketest",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_FSParamStmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_FSParamStmt",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_FSParamStmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_FSParamStmt_string",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_MOParamStmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_MOParamStmt",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_MOParamStmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_MOParamStmt_conversion",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_MOParamStmt_string",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_IPParamStmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_IPParamStmt",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_IPParamStmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_IPParamStmt_string",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_IRParamStmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_IRParamStmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_IRParamStmt_string",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_OFParamStmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_OFParamStmt",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_OFParamStmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_OFParamStmt_conversion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_OFParamStmt_offset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_OFParamStmt_string",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_SFParamStmt_factory",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_SFParamStmt_dump",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_SFParamStmt_conversion",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_SFParamStmt_offset",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_SFParamStmt_string",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_LPParamStmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_LPParamStmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_LPParamStmt_string",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_AMParamStmt_factory",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "testAMParamStmt_conversion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_AMParamStmt_dump",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_AMParamStmt_string",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_ASParamStmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_ASParamStmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_ASParamStmt_string",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_INParamStmt_factory",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_INParamStmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_INParamStmt_string",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_LNParamStmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_LNParamStmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_LNParamStmt_string",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_comment_stmt",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_comment_stmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_comment_stmt_string",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_eofstmt",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_eofstmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_eofstmt_string",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_quadmodestmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_quadmodestmt_validation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_quadmodestmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_regionmodestmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_regionmodestmt_validation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_regionmodestmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_unknownstmt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_unknownstmt_dump",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_statement_string",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_ADParamStmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_ADParamStmt_conversion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_ADParamStmt_dump",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_ADPamramStmt_string",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_MIParamStmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_MIParamStmt_dump",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_MIParamStmt_string",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_coordstmt_ctor",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_coordstmt_factory",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_coordstmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_coordstmt_conversion",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_coordstmt_offset",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_coordstmt_string",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_aperturestmt_ctor",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_gerber_statements",
                "name": "test_aperturestmt_dump",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_ipc356",
                "name": "test_read",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_ipc356",
                "name": "test_parser",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_ipc356",
                "name": "test_comment",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_ipc356",
                "name": "test_parameter",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_ipc356",
                "name": "test_eof",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_ipc356",
                "name": "test_outline",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_ipc356",
                "name": "test_test_record",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_layers",
                "name": "test_guess_layer_class",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_layers",
                "name": "test_guess_layer_class_regex",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_layers",
                "name": "test_guess_layer_class_by_content",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_layers",
                "name": "test_sort_layers",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_layers",
                "name": "test_PCBLayer_from_file",
                "time": 0.087,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_layers",
                "name": "test_PCBLayer_bounds",
                "time": 0.084,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_layers",
                "name": "test_DrillLayer_from_cam",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_primitive_smoketest",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_line_angle",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_line_bounds",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_line_vertices",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_line_conversion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_line_offset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_arc_radius",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_arc_sweep_angle",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_arc_bounds",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_arc_bounds_no_aperture",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_arc_conversion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_arc_offset",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_circle_radius",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_circle_hole_radius",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_circle_bounds",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_circle_conversion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_circle_offset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_ellipse_ctor",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_ellipse_bounds",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_ellipse_conversion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_ellipse_offset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_rectangle_ctor",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_rectangle_hole_radius",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_rectangle_bounds",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_rectangle_vertices",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_rectangle_segments",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_rectangle_conversion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_rectangle_offset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_diamond_ctor",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_diamond_bounds",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_diamond_conversion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_diamond_offset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_chamfer_rectangle_ctor",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_chamfer_rectangle_bounds",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_chamfer_rectangle_conversion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_chamfer_rectangle_offset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_chamfer_rectangle_vertices",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_round_rectangle_ctor",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_round_rectangle_bounds",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_round_rectangle_conversion",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_round_rectangle_offset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_obround_ctor",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_obround_bounds",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_obround_orientation",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_obround_subshapes",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_obround_conversion",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_obround_offset",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_polygon_ctor",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_polygon_bounds",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_polygon_conversion",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_polygon_offset",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_region_ctor",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_region_bounds",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_region_offset",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_round_butterfly_ctor",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_round_butterfly_ctor_validation",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_round_butterfly_conversion",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_round_butterfly_offset",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_round_butterfly_bounds",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_square_butterfly_ctor",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_square_butterfly_ctor_validation",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_square_butterfly_bounds",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_squarebutterfly_conversion",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_square_butterfly_offset",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_donut_ctor",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_donut_ctor_validation",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_donut_bounds",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_donut_conversion",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_donut_offset",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_drill_ctor",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_drill_ctor_validation",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_drill_bounds",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_drill_conversion",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_drill_offset",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_drill_equality",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_primitives",
                "name": "test_slot_bounds",
                "time": 0.0,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_rs274x",
                "name": "test_read",
                "time": 0.081,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_rs274x",
                "name": "test_multiline_read",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_rs274x",
                "name": "test_comments_parameter",
                "time": 0.097,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_rs274x",
                "name": "test_size_parameter",
                "time": 0.077,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_rs274x",
                "name": "test_conversion",
                "time": 0.358,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_rs274x_backend",
                "name": "test_render_two_boxes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_utils",
                "name": "test_zero_suppression",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_utils",
                "name": "test_format",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_utils",
                "name": "test_decimal_truncation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_utils",
                "name": "test_decimal_padding",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_utils",
                "name": "test_parse_format_validation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_utils",
                "name": "test_write_format_validation",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_utils",
                "name": "test_detect_format_with_short_file",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_utils",
                "name": "test_validate_coordinates",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "gerber.tests.test_utils",
                "name": "test_convex_hull",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ] \ud83d\ude80  Start image=crawlergpt:latest\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage] \ud83d\ude80  Start image=crawlergpt:latest\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools] user=0 workdir=\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools] user=0 workdir=\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v1\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v1\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \u2601  git clone 'https://github.com/codecov/codecov-action' # ref=v1\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ] \ud83e\uddea  Matrix: map[python-version:3.5]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ] \u2b50 Run Main actions/checkout@v1\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \u2705  Success - Main actions/checkout@v1\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ] \u2b50 Run Main Set up Python 3.5\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udc33  docker cp src=/tmp/act-cache/8ced1f96-933e-45c6-9bea-f91bce003dff/act/actions-setup-python@v1/ dst=/var/run/act/actions/actions-setup-python@v1/\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v1/] user=0 workdir=\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v1/dist/index.js] user= workdir=\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udcac  ::debug::Semantic version spec of 3.5 is 3.5\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udcac  ::debug::isExplicit: \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udcac  ::debug::explicit? false\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udcac  ::debug::explicit? true\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udcac  ::debug::explicit? true\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udcac  ::debug::explicit? true\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udcac  ::debug::explicit? true\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udcac  ::debug::explicit? true\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udcac  ::debug::explicit? true\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udcac  ::debug::matched: 3.5.10\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.5.10/x64\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.5.10 x64\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Successfully setup CPython (3.5.10)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v1/.github/python.json\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \u2705  Success - Main Set up Python 3.5\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.5.10/x64\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \u2699  ::set-output:: python-version=3.5.10\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.5.10/x64\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.5.10/x64/bin\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ] \u2b50 Run Main Install dependencies\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | DEPRECATION: Python 3.5 reached the end of its life on September 13th, 2020. Please upgrade your Python as Python 3.5 is no longer maintained. pip 21.0 will drop support for Python 3.5 in January 2021. pip 21.0 will remove support for this functionality.\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Collecting cairocffi==0.6\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   Downloading cairocffi-0.6.tar.gz (75 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Collecting pytest==6.0.1\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   Downloading pytest-6.0.1-py3-none-any.whl (270 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Collecting pytest-cov==2.10.1\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   Downloading pytest_cov-2.10.1-py2.py3-none-any.whl (19 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Collecting cffi>=0.6\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   Downloading cffi-1.15.1.tar.gz (508 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Collecting pluggy<1.0,>=0.12\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   Downloading pluggy-0.13.1-py2.py3-none-any.whl (18 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Collecting pathlib2>=2.2.0\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   Downloading pathlib2-2.3.7.post1-py2.py3-none-any.whl (18 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Collecting iniconfig\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   Downloading iniconfig-1.1.1-py2.py3-none-any.whl (5.0 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Collecting py>=1.8.2\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage] \u2b50 Run Main actions/checkout@v1\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \u2705  Success - Main actions/checkout@v1\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Collecting importlib-metadata>=0.12\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   Downloading importlib_metadata-2.1.3-py2.py3-none-any.whl (10 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Collecting toml\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   Downloading toml-0.10.2-py2.py3-none-any.whl (16 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage] \u2b50 Run Main Set up Python 3.8\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udc33  docker cp src=/tmp/act-cache/8ced1f96-933e-45c6-9bea-f91bce003dff/act/actions-setup-python@v1/ dst=/var/run/act/actions/actions-setup-python@v1/\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Collecting attrs>=17.4.0\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   Downloading attrs-22.1.0-py2.py3-none-any.whl (58 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v1/] user=0 workdir=\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Collecting packaging\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   Downloading packaging-20.9-py2.py3-none-any.whl (40 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Collecting more-itertools>=4.0.0\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   Downloading more_itertools-8.14.0-py3-none-any.whl (52 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Collecting coverage>=4.4\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   Downloading coverage-5.5-cp35-cp35m-manylinux2010_x86_64.whl (240 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Collecting pycparser\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Collecting zipp>=0.5\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   Downloading zipp-1.2.0-py2.py3-none-any.whl (4.8 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Collecting six\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Collecting pyparsing>=2.0.2\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   Downloading pyparsing-2.4.7-py2.py3-none-any.whl (67 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Using legacy 'setup.py install' for cffi, since package 'wheel' is not installed.\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Using legacy 'setup.py install' for cairocffi, since package 'wheel' is not installed.\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Installing collected packages: zipp, six, pyparsing, importlib-metadata, toml, pycparser, py, pluggy, pathlib2, packaging, more-itertools, iniconfig, attrs, pytest, coverage, cffi, pytest-cov, cairocffi\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |     Running setup.py install for cffi: started\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |     Running setup.py install for cffi: finished with status 'done'\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |     Running setup.py install for cairocffi: started\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |     Running setup.py install for cairocffi: finished with status 'done'\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | Successfully installed attrs-22.1.0 cairocffi-0.6 cffi-1.15.1 coverage-5.5 importlib-metadata-2.1.3 iniconfig-1.1.1 more-itertools-8.14.0 packaging-20.9 pathlib2-2.3.7.post1 pluggy-0.13.1 py-1.11.0 pycparser-2.21 pyparsing-2.4.7 pytest-6.0.1 pytest-cov-2.10.1 six-1.16.0 toml-0.10.2 zipp-1.2.0\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \u2705  Success - Main Install dependencies\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ] \u2b50 Run Main Test with pytest\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v1/dist/index.js] user= workdir=\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udcac  ::debug::isExplicit: \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udcac  ::debug::explicit? false\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udcac  ::debug::explicit? true\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udcac  ::debug::explicit? true\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udcac  ::debug::explicit? true\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udcac  ::debug::explicit? true\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udcac  ::debug::explicit? true\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udcac  ::debug::explicit? true\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udcac  ::debug::evaluating 6 versions\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udcac  ::debug::matched: 3.8.11\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | Successfully setup CPython (3.8.11)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \u2753 add-matcher /run/act/actions/actions-setup-python@v1/.github/python.json\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \u2705  Success - Main Set up Python 3.8\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \u2699  ::set-output:: python-version=3.8.11\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage] \u2b50 Run Main Install dependencies\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | ============================= test session starts ==============================\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | platform linux -- Python 3.5.10, pytest-6.0.1, py-1.11.0, pluggy-0.13.1\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | plugins: cov-2.10.1\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | collected 330 items\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_am_statements.py ..................................... [ 11%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | .........                                                                [ 13%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_cairo_backend.py ....                                  [ 15%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_cam.py ..........                                      [ 18%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_common.py ...                                          [ 19%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_excellon.py ............................               [ 27%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_excellon_statements.py ............................... [ 36%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | .............................                                            [ 45%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_gerber_statements.py ................................. [ 55%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | .........................................                                [ 68%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_ipc356.py .......                                      [ 70%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_layers.py .......                                      [ 72%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_primitives.py ........................................ [ 84%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | ....................................                                     [ 95%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_rs274x.py .....                                        [ 96%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_rs274x_backend.py .                                    [ 97%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_utils.py .........                                     [100%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | =============================== warnings summary ===============================\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | /opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/_pytest/junitxml.py:446\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   /opt/hostedtoolcache/Python/3.5.10/x64/lib/python3.5/site-packages/_pytest/junitxml.py:446: PytestDeprecationWarning: The 'junit_family' default value will change to 'xunit2' in pytest 6.0. See:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |     https://docs.pytest.org/en/stable/deprecations.html#junit-family-default-value-change-to-xunit2\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   for more information.\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |     _issue_warning_captured(deprecated.JUNIT_XML_DEFAULT_FAMILY, config.hook, 2)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/primitives.py:1687\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/primitives.py:1687: PytestCollectionWarning: cannot collect test class 'TestRecord' because it has a __init__ constructor (from: gerber/tests/test_ipc356.py)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |     class TestRecord(Primitive):\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/primitives.py:1687\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/primitives.py:1687: PytestCollectionWarning: cannot collect test class 'TestRecord' because it has a __init__ constructor (from: gerber/tests/test_primitives.py)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |     class TestRecord(Primitive):\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_cairo_backend.py: 4 warnings\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_rs274x.py: 6 warnings\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_rs274x_backend.py: 1 warning\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/rs274x.py:263: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |     with open(filename, \"rU\") as fp:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_common.py::test_file_type_detection\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_common.py::test_file_type_detection\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_common.py::test_file_type_validation\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_layers.py::test_PCBLayer_from_file\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_layers.py::test_PCBLayer_from_file\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_layers.py::test_PCBLayer_from_file\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_layers.py::test_PCBLayer_bounds\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_layers.py::test_DrillLayer_from_cam\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/common.py:39: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |     with open(filename, 'rU') as f:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_common.py::test_load_from_string\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/tests/test_common.py:27: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |     with open(NCDRILL_FILE, \"rU\") as f:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_common.py::test_load_from_string\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/tests/test_common.py:29: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |     with open(TOP_COPPER_FILE, \"rU\") as f:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_excellon.py::test_format_detection\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/tests/test_excellon.py:20: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |     with open(NCDRILL_FILE, \"rU\") as f:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_excellon.py::test_format_detection\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/excellon.py:821: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |     with open(filename, 'rU') as f:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_excellon.py::test_read\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_excellon.py::test_write\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_excellon.py::test_read_settings\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_excellon.py::test_bounding_box\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_excellon.py::test_report\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_excellon.py::test_conversion\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/excellon.py:57: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |     with open(filename, 'rU') as f:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_excellon.py::test_read\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_excellon.py::test_write\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_excellon.py::test_read_settings\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_excellon.py::test_bounding_box\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_excellon.py::test_report\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_excellon.py::test_conversion\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_excellon.py::test_parser_hole_count\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_excellon.py::test_parser_hole_sizes\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/excellon.py:429: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |     with open(filename, 'rU') as f:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_excellon.py::test_write\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/tests/test_excellon.py:39: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |     with open(NCDRILL_FILE, \"rU\") as src:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_excellon.py::test_write\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/tests/test_excellon.py:41: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |     with open(\"test.ncd\", \"rU\") as res:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_ipc356.py::test_read\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | gerber/tests/test_ipc356.py::test_parser\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/ipc356.py:166: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   |     with open(filename, 'rU') as f:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | -- Docs: https://docs.pytest.org/en/stable/warnings.html\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/report.xml -\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   | ======================= 330 passed, 44 warnings in 4.70s =======================\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ]   \u2705  Success - Main Test with pytest\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/test    ] \ud83c\udfc1  Job succeeded\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | Collecting cairocffi==0.6\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   Downloading cairocffi-0.6.tar.gz (75 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | Collecting pytest==6.0.1\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   Downloading pytest-6.0.1-py3-none-any.whl (270 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | Collecting pytest-cov==2.10.1\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   Downloading pytest_cov-2.10.1-py2.py3-none-any.whl (19 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | Collecting cffi>=0.6\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   Downloading cffi-1.15.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (442 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | Collecting packaging\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | Collecting iniconfig\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | Collecting more-itertools>=4.0.0\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   Downloading more_itertools-9.1.0-py3-none-any.whl (54 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | Collecting pluggy<1.0,>=0.12\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   Downloading pluggy-0.13.1-py2.py3-none-any.whl (18 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | Collecting toml\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   Downloading toml-0.10.2-py2.py3-none-any.whl (16 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | Collecting py>=1.8.2\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   Downloading py-1.11.0-py2.py3-none-any.whl (98 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | Collecting attrs>=17.4.0\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | Collecting coverage>=4.4\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   Downloading coverage-7.2.7-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (229 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | Collecting pycparser\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | Using legacy 'setup.py install' for cairocffi, since package 'wheel' is not installed.\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | Installing collected packages: toml, pycparser, py, pluggy, packaging, more-itertools, iniconfig, attrs, pytest, coverage, cffi, pytest-cov, cairocffi\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     Running setup.py install for cairocffi: started\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     Running setup.py install for cairocffi: finished with status 'done'\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | Successfully installed attrs-23.1.0 cairocffi-0.6 cffi-1.15.1 coverage-7.2.7 iniconfig-2.0.0 more-itertools-9.1.0 packaging-23.1 pluggy-0.13.1 py-1.11.0 pycparser-2.21 pytest-6.0.1 pytest-cov-2.10.1 toml-0.10.2\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.8.11/x64/bin/python -m pip install --upgrade pip' command.\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \u2705  Success - Main Install dependencies\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage] \u2b50 Run Main Run coverage\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | rm -f .coverage\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | rm -f coverage.xml\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | pytest --cov=./ --cov-report=xml \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | ============================= test session starts ==============================\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | platform linux -- Python 3.8.11, pytest-6.0.1, py-1.11.0, pluggy-0.13.1\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | plugins: cov-2.10.1\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | collected 330 items\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_am_statements.py ..................................... [ 11%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | .........                                                                [ 13%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_cairo_backend.py ....                                  [ 15%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_cam.py ..........                                      [ 18%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_common.py ...                                          [ 19%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_excellon.py ............................               [ 27%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_excellon_statements.py ............................... [ 36%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | .............................                                            [ 45%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_gerber_statements.py ................................. [ 55%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | .........................................                                [ 68%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_ipc356.py .......                                      [ 70%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_layers.py .......                                      [ 72%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_primitives.py ........................................ [ 84%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | ....................................                                     [ 95%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_rs274x.py .....                                        [ 96%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_rs274x_backend.py .                                    [ 97%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_utils.py .........                                     [100%]\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | =============================== warnings summary ===============================\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/excellon_statements.py:453\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/excellon_statements.py:453: DeprecationWarning: invalid escape sequence \\-\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     '(?P<ydelta>[+\\-]?\\d*\\.?\\d*)?').match(line)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/excellon_statements.py:605\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/excellon_statements.py:605: DeprecationWarning: invalid escape sequence \\d\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     '(?P<y>\\d*\\.?\\d*)?').match(line)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/excellon_statements.py:458\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/excellon_statements.py:458: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     if stmt['xdelta'] is not '' else None)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/excellon_statements.py:461\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/excellon_statements.py:461: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     if stmt['ydelta'] is not '' else None)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/excellon_statements.py:609\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/excellon_statements.py:609: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     if stmt['x'] is not '' else None)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/excellon_statements.py:612\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/excellon_statements.py:612: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     if stmt['y'] is not '' else None)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/excellon_tool.py:57\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/excellon_tool.py:57: DeprecationWarning: invalid escape sequence \\.\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     allegro_comment_mils = re.compile('Holesize (?P<toolid>[0-9]{1,2})\\. = (?P<size>[0-9/.]+) Tolerance = \\+(?P<xtol>[0-9/.]+)/-(?P<ytol>[0-9/.]+) (?P<plated>(PLATED)|(NON_PLATED)|(OPTIONAL)) MILS Quantity = [0-9]+')\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/excellon_tool.py:58\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/excellon_tool.py:58: DeprecationWarning: invalid escape sequence \\.\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     allegro2_comment_mils = re.compile('T(?P<toolid>[0-9]{1,2}) Holesize (?P<toolid2>[0-9]{1,2})\\. = (?P<size>[0-9/.]+) Tolerance = \\+(?P<xtol>[0-9/.]+)/-(?P<ytol>[0-9/.]+) (?P<plated>(PLATED)|(NON_PLATED)|(OPTIONAL)) MILS Quantity = [0-9]+')\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/excellon_tool.py:59\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/excellon_tool.py:59: DeprecationWarning: invalid escape sequence \\.\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     allegro_comment_mm = re.compile('Holesize (?P<toolid>[0-9]{1,2})\\. = (?P<size>[0-9/.]+) Tolerance = \\+(?P<xtol>[0-9/.]+)/-(?P<ytol>[0-9/.]+) (?P<plated>(PLATED)|(NON_PLATED)|(OPTIONAL)) MM Quantity = [0-9]+')\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/excellon_tool.py:60\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/excellon_tool.py:60: DeprecationWarning: invalid escape sequence \\.\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     allegro2_comment_mm = re.compile('T(?P<toolid>[0-9]{1,2}) Holesize (?P<toolid2>[0-9]{1,2})\\. = (?P<size>[0-9/.]+) Tolerance = \\+(?P<xtol>[0-9/.]+)/-(?P<ytol>[0-9/.]+) (?P<plated>(PLATED)|(NON_PLATED)|(OPTIONAL)) MM Quantity = [0-9]+')\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/ipc356.py:385\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/ipc356.py:385: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     x = int(coord_dict['x']) if coord_dict['x'] is not '' else x\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/ipc356.py:386\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/ipc356.py:386: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     y = int(coord_dict['y']) if coord_dict['y'] is not '' else y\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/ipc356.py:415\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/ipc356.py:415: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     scale if aperture_dict['x'] is not '' else None\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/ipc356.py:417\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/ipc356.py:417: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     scale if aperture_dict['y'] is not '' else None\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/ipc356.py:431\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/ipc356.py:431: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     x = int(coord_dict['x']) if coord_dict['x'] is not '' else x\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/ipc356.py:432\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/ipc356.py:432: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     y = int(coord_dict['y']) if coord_dict['y'] is not '' else y\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/primitives.py:1687\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/primitives.py:1687: PytestCollectionWarning: cannot collect test class 'TestRecord' because it has a __init__ constructor (from: gerber/tests/test_ipc356.py)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     class TestRecord(Primitive):\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/primitives.py:1687\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/primitives.py:1687: PytestCollectionWarning: cannot collect test class 'TestRecord' because it has a __init__ constructor (from: gerber/tests/test_primitives.py)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     class TestRecord(Primitive):\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_cairo_backend.py: 4 warnings\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_rs274x.py: 6 warnings\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_rs274x_backend.py: 1 warning\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/rs274x.py:263: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     with open(filename, \"rU\") as fp:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_common.py::test_file_type_detection\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_common.py::test_file_type_detection\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_common.py::test_file_type_validation\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_layers.py::test_PCBLayer_from_file\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_layers.py::test_PCBLayer_from_file\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_layers.py::test_PCBLayer_from_file\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_layers.py::test_PCBLayer_bounds\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_layers.py::test_DrillLayer_from_cam\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/common.py:39: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     with open(filename, 'rU') as f:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_common.py::test_load_from_string\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/tests/test_common.py:27: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     with open(NCDRILL_FILE, \"rU\") as f:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_common.py::test_load_from_string\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/tests/test_common.py:29: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     with open(TOP_COPPER_FILE, \"rU\") as f:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_excellon.py::test_format_detection\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/tests/test_excellon.py:20: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     with open(NCDRILL_FILE, \"rU\") as f:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_excellon.py::test_format_detection\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/excellon.py:821: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     with open(filename, 'rU') as f:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_excellon.py::test_read\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_excellon.py::test_write\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_excellon.py::test_read_settings\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_excellon.py::test_bounding_box\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_excellon.py::test_report\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_excellon.py::test_conversion\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/excellon.py:57: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     with open(filename, 'rU') as f:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_excellon.py::test_read\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_excellon.py::test_write\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_excellon.py::test_read_settings\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_excellon.py::test_bounding_box\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_excellon.py::test_report\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_excellon.py::test_conversion\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_excellon.py::test_parser_hole_count\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_excellon.py::test_parser_hole_sizes\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/excellon.py:429: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     with open(filename, 'rU') as f:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_excellon.py::test_write\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/tests/test_excellon.py:39: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     with open(NCDRILL_FILE, \"rU\") as src:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_excellon.py::test_write\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/tests/test_excellon.py:41: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     with open(\"test.ncd\", \"rU\") as res:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_ipc356.py::test_read\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | gerber/tests/test_ipc356.py::test_parser\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/ipc356.py:166: DeprecationWarning: 'U' mode is deprecated\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     with open(filename, 'rU') as f:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | -- Docs: https://docs.pytest.org/en/stable/warnings.html\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | ---------- coverage: platform linux, python 3.8.11-final-0 -----------\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | Coverage XML written to file coverage.xml\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | ====================== 330 passed, 59 warnings in 10.17s =======================\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/excellon_statements.py:458: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   if stmt['xdelta'] is not '' else None)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/excellon_statements.py:461: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   if stmt['ydelta'] is not '' else None)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/excellon_statements.py:609: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   if stmt['x'] is not '' else None)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/excellon_statements.py:612: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   if stmt['y'] is not '' else None)\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/ipc356.py:385: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   x = int(coord_dict['x']) if coord_dict['x'] is not '' else x\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/ipc356.py:386: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   y = int(coord_dict['y']) if coord_dict['y'] is not '' else y\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/ipc356.py:415: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   scale if aperture_dict['x'] is not '' else None\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/ipc356.py:417: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   scale if aperture_dict['y'] is not '' else None\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/ipc356.py:431: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   x = int(coord_dict['x']) if coord_dict['x'] is not '' else x\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/gerber/ipc356.py:432: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   y = int(coord_dict['y']) if coord_dict['y'] is not '' else y\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \u2705  Success - Main Run coverage\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage] \u2b50 Run Main codecov/codecov-action@v1\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udc33  docker cp src=/tmp/act-cache/8ced1f96-933e-45c6-9bea-f91bce003dff/act/codecov-codecov-action@v1/ dst=/var/run/act/actions/codecov-codecov-action@v1/\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/codecov-codecov-action@v1/] user=0 workdir=\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/codecov-codecov-action@v1/dist/index.js] user= workdir=\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | [command]/usr/bin/bash codecov.sh -n  -F unittest -Q github-action-v1.5.2 -f ./coverage.xml\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   _____          _\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |  / ____|        | |\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | | |     ___   __| | ___  ___ _____   __\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | | |    / _ \\ / _` |/ _ \\/ __/ _ \\ \\ / /\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | | |___| (_) | (_| |  __/ (_| (_) \\ V /\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |  \\_____\\___/ \\__,_|\\___|\\___\\___/ \\_/\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |                               Bash-1.0.3\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \u001b[0;36m==>\u001b[0m git version 2.33.0 found\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \u001b[0;36m==>\u001b[0m curl 7.68.0 (x86_64-pc-linux-gnu) libcurl/7.68.0 OpenSSL/1.1.1f zlib/1.2.11 brotli/1.0.7 libidn2/2.2.0 libpsl/0.21.0 (+libidn2/2.2.0) libssh/0.9.3/openssl/zlib nghttp2/1.40.0 librtmp/2.3\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | Release-Date: 2020-01-08\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | Protocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtmp rtsp scp sftp smb smbs smtp smtps telnet tftp \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | Features: AsynchDNS brotli GSS-API HTTP2 HTTPS-proxy IDN IPv6 Kerberos Largefile libz NTLM NTLM_WB PSL SPNEGO SSL TLS-SRP UnixSockets\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \u001b[0;90m==>\u001b[0m GitHub Actions detected.\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     Env vars used:\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |       -> GITHUB_ACTIONS:    true\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |       -> GITHUB_HEAD_REF:   \n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |       -> GITHUB_REF:        refs/heads/master\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |       -> GITHUB_REPOSITORY: curtacircuitos/pcb-tools\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |       -> GITHUB_RUN_ID:     1\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |       -> GITHUB_SHA:        0b6ccc3d268ed85617590c2a9080c9b999369a7e\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |       -> GITHUB_WORKFLOW:   c29a3e05-e0f8-42a0-a9ef-f8324878716b\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     \u001b[0;90mproject root:\u001b[0m .\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     \u001b[0;32mYaml not found, that's ok! Learn more at\u001b[0m \u001b[0;36mhttp://docs.codecov.io/docs/codecov-yaml\u001b[0m\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     \u001b[0;90m->\u001b[0m Found 1 reports\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \u001b[0;90m==>\u001b[0m Detecting git/mercurial file structure\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \u001b[0;90m==>\u001b[0m Reading reports\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     \u001b[0;32m+\u001b[0m ./coverage.xml \u001b[0;90mbytes=288315\u001b[0m\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \u001b[0;90m==>\u001b[0m Appending adjustments\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     \u001b[0;36mhttps://docs.codecov.io/docs/fixing-reports\u001b[0m\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     \u001b[0;90m->\u001b[0m No adjustments found\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \u001b[0;90m==>\u001b[0m Gzipping contents\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |         24K\t/tmp/codecov.5sR34S.gz\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \u001b[0;90m==>\u001b[0m Uploading reports\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     \u001b[0;90murl:\u001b[0m https://codecov.io\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     \u001b[0;90mquery:\u001b[0m branch=master&commit=0b6ccc3d268ed85617590c2a9080c9b999369a7e&build=1&build_url=http%3A%2F%2Fgithub.com%2Fcurtacircuitos%2Fpcb-tools%2Factions%2Fruns%2F1&name=&tag=&slug=curtacircuitos%2Fpcb-tools&service=github-actions&flags=unittest&pr=&job=c29a3e05-e0f8-42a0-a9ef-f8324878716b&cmd_args=n,F,Q,f\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \u001b[0;90m->\u001b[0m  Pinging Codecov\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | https://codecov.io/upload/v4?package=github-action-v1.5.2-1.0.3&token=secret&branch=master&commit=0b6ccc3d268ed85617590c2a9080c9b999369a7e&build=1&build_url=http%3A%2F%2Fgithub.com%2Fcurtacircuitos%2Fpcb-tools%2Factions%2Fruns%2F1&name=&tag=&slug=curtacircuitos%2Fpcb-tools&service=github-actions&flags=unittest&pr=&job=c29a3e05-e0f8-42a0-a9ef-f8324878716b&cmd_args=n,F,Q,f\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \u001b[0;31m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | 404\u001b[0m\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \u001b[0;90m==>\u001b[0m Uploading to Codecov\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |                                  Dload  Upload   Total   Spent    Left  Speed\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   | \r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100 21850  100   171  100 21679    480  60896 --:--:-- --:--:-- --:--:-- 61376\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   |     \u001b[0;32m{'detail': ErrorDetail(string='Unable to locate build via Github Actions API. Please upload with the Codecov repository upload token to resolve issue.', code='not_found')}\u001b[0m\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage]   \u2705  Success - Main codecov/codecov-action@v1\n[c29a3e05-e0f8-42a0-a9ef-f8324878716b/coverage] \ud83c\udfc1  Job succeeded\n",
        "stderr": "",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/curtacircuitos-pcb-tools/.github/workflows/pcb-tools-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 184.92419695854187
    }
}