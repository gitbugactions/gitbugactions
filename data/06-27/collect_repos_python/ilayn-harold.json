{
    "repository": "ilayn/harold",
    "stars": 160,
    "language": "python",
    "size": 3223,
    "clone_url": "https://github.com/ilayn/harold.git",
    "timestamp": "2023-07-01T10:22:46.179732Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": true,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": false,
        "tests": [
            {
                "classname": "harold.tests.test_array_validators",
                "name": "test_assert_square",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_array_validators",
                "name": "test_assert_2d",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_array_validators",
                "name": "test_assert_finite",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_aux_linalg",
                "name": "test_haroldsvd",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_aux_linalg",
                "name": "test_haroldker",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_aux_linalg",
                "name": "test_cplxpair",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_aux_linalg",
                "name": "test_e_i",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_aux_linalg",
                "name": "test_matrix_slice",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_bd_algebra",
                "name": "test_feedback_wrong_inputs",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_bd_algebra",
                "name": "test_feedback_wellposedness",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_bd_algebra",
                "name": "test_feedback_static_static",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_bd_algebra",
                "name": "test_feedback_dynamic_static",
                "time": 0.034,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_bd_algebra",
                "name": "test_feedback_dynamic_dynamic",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_concatenate_state_matrices",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_Transfer_Instantiations",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_Transfer_property",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_Transfer_to_array",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_Transfer_algebra_mul_rmul_dt",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_Transfer_algebra_truediv_rtruediv",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_Transfer_algebra_mul_rmul_scalar_array",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_Transfer_algebra_mul_rmul_siso_mimo",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_Transfer_algebra_matmul_rmatmul",
                "time": 0.033,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_Transfer_algebra_neg_add_radd",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_Transfer_neg_add_radd_static_simo_miso",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_Transfer_slicing",
                "time": 0.055,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_Transfer_siso_dcgain",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_Transfer_mimo_miso_simo_dcgain",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_State_Instantiations",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_State_to_array",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_State_algebra_mul_rmul_dt",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_State_algebra_truediv_rtruediv",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_State_algebra_mul_rmul_scalar_array",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_State_matmul_rmatmul_ndarray",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_State_algebra_mul_rmul_mimo_siso",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_State_algebra_mul_rmul_miso_simo",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_State_algebra_add_radd",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_State_slicing",
                "time": 0.059,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_State_siso_dcgain",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_model_zeros",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_static_model_conversion_sampling_period",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_random_state_model",
                "time": 0.488,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_basic_pole_properties",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_transfer_to_state",
                "time": 0.038,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_state_to_transfer",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_verbosity_State",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_classes",
                "name": "test_verbosity_Transfer",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_discretize",
                "name": "test_discretize_args",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_discretize",
                "name": "test_static_gain_discretization",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_discretize",
                "name": "test_simple_zoh",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_discretize",
                "name": "test_simple_foh",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_discretize",
                "name": "test_simple_tustin",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_discretize",
                "name": "test_simple_tustin_prewarp",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_discretize",
                "name": "test_simple_lft",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_discretize",
                "name": "test_undiscretize",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_discretize",
                "name": "test_undiscretize_zohfoh_zeroeig",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_discretize",
                "name": "test_undiscretize_backeuler_nearzero_eig",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_frequency_domain",
                "name": "test_frequency_response",
                "time": 0.16,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_frequency_domain",
                "name": "test_frequency_response_zero_peak_precision",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_frequency_domain",
                "name": "test_frequency_response_all_integrators",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_frequency_domain",
                "name": "test_frequency_response_freq_points_close_pole_zero",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_frequency_domain_plots",
                "name": "test_bode_plot_shape",
                "time": 0.209,
                "results": [
                    {
                        "result": "Failure",
                        "message": "AttributeError: 'Figure' object has no attribute '_gridspecs'",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_frequency_domain_plots",
                "name": "test_nyquist_plot_shape",
                "time": 0.03,
                "results": [
                    {
                        "result": "Failure",
                        "message": "AttributeError: 'Figure' object has no attribute '_gridspecs'",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_kalman_ops",
                "name": "test_controllability_matrix",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_kalman_ops",
                "name": "test_observability_matrix",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_kalman_ops",
                "name": "test_pertransposed_system_dual",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_kalman_ops",
                "name": "test_simple_kalman_decomp",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_polynomial_ops",
                "name": "test_haroldgcd",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_polynomial_ops",
                "name": "test_haroldlcm",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_solvers",
                "name": "test_lyapunov_eq_arguments",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_solvers",
                "name": "test_lyapunov_eq_small_problems",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_solvers",
                "name": "test_lyapunov_eq_random_problems",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_static_ctrl_design",
                "name": "test_lqr_arguments",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_static_ctrl_design",
                "name": "test_simple_lqr",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_static_ctrl_design",
                "name": "test_simple_lqry",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_static_ctrl_design",
                "name": "test_simple_dlqr",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_static_ctrl_design",
                "name": "test_ackermann_args",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_static_ctrl_design",
                "name": "test_ackermann_controllable",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_static_ctrl_design",
                "name": "test_ackermann_uncontrollable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_system_funcs",
                "name": "test_staircase",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_system_funcs",
                "name": "test_cancellation_distance",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_system_funcs",
                "name": "test_minimal_realization_State",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_system_funcs",
                "name": "test_minimal_realization_Transfer",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_system_funcs",
                "name": "test_simple_hessenberg_trafo",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_system_props",
                "name": "test_system_norm_args",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_system_props",
                "name": "test_system_norm_simple",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_system_props",
                "name": "test_system_norm_hinf_max_at_0",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_system_props",
                "name": "test_controllability_indices",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_time_domain",
                "name": "test_simulate_linear_system_check_x0",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_time_domain",
                "name": "test_simulate_linear_system_check_u_and_t",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_time_domain",
                "name": "test_check_custom_time_input",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_time_domain",
                "name": "test_simulate_linear_system_response",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_time_domain",
                "name": "test_simulate_step_response",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_time_domain",
                "name": "test_simulate_impulse_response",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_time_domain_plots",
                "name": "test_step_response_plot_shape",
                "time": 0.338,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "harold.tests.test_time_domain_plots",
                "name": "test_impulse_response_plot_shape",
                "time": 0.239,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ] \ud83d\ude80  Start image=crawlergpt:latest\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python] \ud83d\ude80  Start image=crawlergpt:latest\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/ilayn-harold] user=0 workdir=\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/ilayn-harold] user=0 workdir=\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v3\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ] \u2b50 Run Main Check out repository\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \u2705  Success - Main Check out repository\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ] \u2b50 Run Main Set up python\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udc33  docker cp src=/tmp/act-cache/594b46cc-2ce2-45a9-8b08-d59a4ae1bbef/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \u2601  git clone 'https://github.com/snok/install-poetry' # ref=v1\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python] \u2b50 Run Pre Install Poetry\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \u2705  Success - Pre Install Poetry\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python] \ud83e\uddea  Matrix: map[os:ubuntu-latest python-version:3.8]\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python] \u2b50 Run Main Set up Python 3.8\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udc33  docker cp src=/tmp/act-cache/594b46cc-2ce2-45a9-8b08-d59a4ae1bbef/act/actions-setup-python@v3/ dst=/var/run/act/actions/actions-setup-python@v3/\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v3/] user=0 workdir=\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v3/dist/setup/index.js] user= workdir=\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udcac  ::debug::Semantic version spec of 3.x is 3.x\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udcac  ::debug::isExplicit: \n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udcac  ::debug::explicit? false\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udcac  ::debug::explicit? true\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udcac  ::debug::explicit? true\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udcac  ::debug::explicit? true\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udcac  ::debug::explicit? true\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udcac  ::debug::explicit? true\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udcac  ::debug::explicit? true\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udcac  ::debug::matched: 3.9.6\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   | Successfully setup CPython (3.9.6)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \u2705  Success - Main Set up python\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \u2699  ::set-output:: python-version=3.9.6\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ] \u2b50 Run Main show-python-version\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udcac  ::debug::isExplicit: \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udcac  ::debug::explicit? false\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udcac  ::debug::explicit? true\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udcac  ::debug::explicit? true\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udcac  ::debug::explicit? true\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udcac  ::debug::explicit? true\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udcac  ::debug::explicit? true\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udcac  ::debug::explicit? true\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udcac  ::debug::evaluating 6 versions\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udcac  ::debug::matched: 3.8.11\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | Successfully setup CPython (3.8.11)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \u2753 add-matcher /run/act/actions/actions-setup-python@v3/.github/python.json\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \u2705  Success - Main Set up Python 3.8\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.8.11/x64/lib\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   | Requirement already satisfied: pip in /opt/hostedtoolcache/Python/3.9.6/x64/lib/python3.9/site-packages (21.2.4)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \u2699  ::set-output:: python-version=3.8.11\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   | Collecting pip\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   |   Downloading pip-23.1.2-py3-none-any.whl (2.1 MB)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python] \u2b50 Run Main Checkout\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   | Installing collected packages: pip\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   |   Attempting uninstall: pip\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   |     Found existing installation: pip 21.2.4\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   |     Uninstalling pip-21.2.4:\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \u2705  Success - Main Checkout\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python] \u2b50 Run Main show-python-version\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   |       Successfully uninstalled pip-21.2.4\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   | Successfully installed pip-23.1.2\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   | Collecting flake8\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   |   Downloading flake8-6.0.0-py2.py3-none-any.whl (57 kB)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 57.8/57.8 kB 1.3 MB/s eta 0:00:00\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   | Collecting mccabe<0.8.0,>=0.7.0 (from flake8)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   |   Downloading mccabe-0.7.0-py2.py3-none-any.whl (7.3 kB)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   | Collecting pycodestyle<2.11.0,>=2.10.0 (from flake8)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   |   Downloading pycodestyle-2.10.0-py2.py3-none-any.whl (41 kB)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 41.3/41.3 kB 2.1 MB/s eta 0:00:00\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   | Collecting pyflakes<3.1.0,>=3.0.0 (from flake8)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   |   Downloading pyflakes-3.0.1-py2.py3-none-any.whl (62 kB)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   |      \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 62.8/62.8 kB 3.8 MB/s eta 0:00:00\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   | Installing collected packages: pyflakes, pycodestyle, mccabe, flake8\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   | Successfully installed flake8-6.0.0 mccabe-0.7.0 pycodestyle-2.10.0 pyflakes-3.0.1\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   | [notice] A new release of pip is available: 21.1.3 -> 23.1.2\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   | [notice] To update, run: pip install --upgrade pip\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \u2705  Success - Main show-python-version\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ] \u2b50 Run Main Lint with flake8\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | Python 3.8.11\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \u2705  Success - Main show-python-version\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \u2705  Success - Main Lint with flake8\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python] \u2b50 Run Main Install Poetry\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udc33  docker cp src=/tmp/act-cache/594b46cc-2ce2-45a9-8b08-d59a4ae1bbef/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ] \u2b50 Run Post Set up python\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python] \u2b50 Run Main Install and configure Poetry\n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ]   \u2705  Success - Post Set up python\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3-composite-0.sh] user= workdir=\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \u001b[33mSetting Poetry installation path as /home/runneradmin/.local\u001b[0m\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \u001b[33mInstalling Poetry \ud83d\udc77\u001b[0m\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/lint  ] \ud83c\udfc1  Job succeeded\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | Retrieving Poetry metadata\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | # Welcome to Poetry!\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | This will download and install the latest version of Poetry,\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | a dependency and package manager for Python.\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | It will add the `poetry` command to Poetry's bin directory, located at:\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | /home/runneradmin/.local/bin\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | You can uninstall at any time by executing this script with the --uninstall option,\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | and these changes will be reverted.\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | Installing Poetry (1.5.1)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | Installing Poetry (1.5.1): Creating environment\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | Installing Poetry (1.5.1): Installing Poetry\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | Installing Poetry (1.5.1): Creating script\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | Installing Poetry (1.5.1): Done\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | Poetry (1.5.1) is installed now. Great!\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | To get started you need Poetry's bin directory (/home/runneradmin/.local/bin) in your `PATH`\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | environment variable.\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | Add `export PATH=\"/home/runneradmin/.local/bin:$PATH\"` to your shell configuration file.\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | Alternatively, you can call Poetry explicitly with `/home/runneradmin/.local/bin/poetry`.\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | You can test that everything is set up by executing:\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | `poetry --version`\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \u001b[33mInstallation completed. Configuring settings \ud83d\udee0\u001b[0m\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \u001b[33mDone \u2705\u001b[0m\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \u001b[33mIf you are creating a venv in your project, you can activate it by running 'source .venv/bin/activate'. If you're running this in an OS matrix, you can use 'source $VENV' instead, as an OS agnostic option\u001b[0m\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \u2705  Success - Main Install and configure Poetry\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \u2705  Success - Main Install Poetry\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \u2699  ::set-env:: VENV=.venv/bin/activate\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \u2699  ::add-path:: /home/runneradmin/.local/bin\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python] \u2b50 Run Main Install library\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | Creating virtualenv harold-1nnAc3uv-py3.8 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | Updating dependencies\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | Resolving dependencies...\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | Package operations: 25 installs, 0 updates, 0 removals\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing numpy (1.24.4)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing six (1.16.0)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing zipp (3.15.0)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing attrs (23.1.0)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing contourpy (1.1.0)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing fonttools (4.40.0)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing cycler (0.11.0)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing importlib-resources (5.12.0)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing iniconfig (2.0.0)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing kiwisolver (1.4.4)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing mccabe (0.6.1)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing packaging (23.1)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing pillow (9.5.0)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing py (1.11.0)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing pluggy (1.2.0)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing pycodestyle (2.8.0)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing pyparsing (3.1.0)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing pyflakes (2.4.0)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing python-dateutil (2.8.2)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing toml (0.10.2)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing flake8 (4.0.1)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing matplotlib (3.7.1)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing pytest (6.2.5)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing scipy (1.9.3)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   \u2022 Installing tabulate (0.8.10)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | Writing lock file\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | Installing the current project: harold (1.0.3)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \u2705  Success - Main Install library\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python] \u2b50 Run Main Run tests\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | ............................................................FF.......... [ 75%]\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | .......................                                                  [100%]\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | =================================== FAILURES ===================================\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | _____________________________ test_bode_plot_shape _____________________________\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |     def test_bode_plot_shape():\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |         seed(1234)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |         # SISO\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |         f = bode_plot(Transfer(5, dt=0.5))\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | >       assert f._gridspecs[0].get_geometry() == (2, 1)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | E       AttributeError: 'Figure' object has no attribute '_gridspecs'\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | harold/tests/test_frequency_domain_plots.py:10: AttributeError\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | ___________________________ test_nyquist_plot_shape ____________________________\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |     def test_nyquist_plot_shape():\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |         seed(1234)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |         # SISO\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |         H = Transfer(5, dt=0.5)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |         f = nyquist_plot(H)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | >       assert f._gridspecs[0].get_geometry() == (1, 1)\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | E       AttributeError: 'Figure' object has no attribute '_gridspecs'\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | harold/tests/test_frequency_domain_plots.py:23: AttributeError\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | =============================== warnings summary ===============================\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | harold/tests/test_frequency_domain.py::test_frequency_response\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/ilayn-harold/harold/_frequency_domain.py:103: RuntimeWarning: divide by zero encountered in divide\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |     fr_arr = (polyval(G.num[0], iw)/polyval(G.den[0], iw))\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | harold/tests/test_frequency_domain.py::test_frequency_response\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |   /tmp/558156d8-17ed-11ee-8a50-bb14de238602/ilayn-harold/harold/_frequency_domain.py:103: RuntimeWarning: invalid value encountered in divide\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   |     fr_arr = (polyval(G.num[0], iw)/polyval(G.den[0], iw))\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | \n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | -- Docs: https://docs.pytest.org/en/stable/warnings.html\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | - generated xml file: /tmp/558156d8-17ed-11ee-8a50-bb14de238602/ilayn-harold/report.xml -\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | =========================== short test summary info ============================\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | FAILED harold/tests/test_frequency_domain_plots.py::test_bode_plot_shape - At...\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | FAILED harold/tests/test_frequency_domain_plots.py::test_nyquist_plot_shape\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   | 2 failed, 93 passed, 2 warnings in 9.76s\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \u274c  Failure - Main Run tests\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python] exitcode '1': failure\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python] \u2b50 Run Post Install Poetry\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udc33  docker cp src=/tmp/act-cache/594b46cc-2ce2-45a9-8b08-d59a4ae1bbef/act/snok-install-poetry@v1/ dst=/var/run/act/actions/snok-install-poetry@v1/\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/snok-install-poetry@v1/] user=0 workdir=\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python]   \u2705  Success - Post Install Poetry\n[e278c6df-b9b0-482a-97ca-ceef11902d70/Python] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'Python' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/ilayn-harold/.github/workflows/tests-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "e278c6df-b9b0-482a-97ca-ceef11902d70",
        "build_tool": "pytest",
        "elapsed_time": 336.2110106945038
    }
}