{
    "repository": "ReactiveX/RxPY",
    "stars": 4481,
    "language": "python",
    "size": 5602,
    "clone_url": "https://github.com/ReactiveX/RxPY.git",
    "timestamp": "2023-06-28T10:09:20.245926Z",
    "clone_success": true,
    "number_of_actions": 2,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest",
        "unknown"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [
            {
                "classname": "",
                "name": "tests.test_scheduler.test_eventloop.test_eventletscheduler",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_scheduler.test_eventloop.test_geventscheduler",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_scheduler.test_eventloop.test_ioloopscheduler",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_scheduler.test_eventloop.test_twistedscheduler",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_scheduler.test_mainloop.test_gtkscheduler",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_scheduler.test_mainloop.test_pygamescheduler",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_scheduler.test_mainloop.test_qtscheduler_pyqt5",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_scheduler.test_mainloop.test_qtscheduler_pyside2",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "",
                "name": "tests.test_scheduler.test_mainloop.test_wxscheduler",
                "time": 0.0,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "collection skipped",
                        "type": null
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_version.VersionTest",
                "name": "test_version",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_on_next_ctor_and_props",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_on_next_equality",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_on_next_tostring",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_on_next_accept_observer",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_on_next_accept_observer_with_result",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_on_next_accept_action",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_on_next_accept_action_with_result",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_throw_ctor_and_props",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_throw_equality",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_throw_tostring",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_throw_accept_observer",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_throw_accept_observer_with_result",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_throw_accept_action",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_throw_accept_action_with_result",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_close_ctor_and_props",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_close_equality",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_close_tostring",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_close_accept_observer",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_close_accept_observer_with_result",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_close_accept_action",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_close_accept_action_with_result",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_to_observable_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_to_observable_return",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_notification",
                "name": "test_to_observable_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_observer",
                "name": "test_to_observer_notification_on_next",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_observer",
                "name": "test_to_observer_notification_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_observer",
                "name": "test_to_observer_notification_completed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_observer",
                "name": "test_to_notifier_forwards",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_observer",
                "name": "test_create_on_next",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_observer",
                "name": "test_create_on_next_has_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_observer",
                "name": "test_create_on_next_on_completed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_observer",
                "name": "test_create_on_next_close_has_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_observer",
                "name": "test_create_on_next_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_observer",
                "name": "test_create_on_next_throw_hit_completed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_observer",
                "name": "test_create_on_next_throw_close1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_observer",
                "name": "test_create_on_next_throw_close2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_observer",
                "name": "test_as_observer_hides",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_observer",
                "name": "test_as_observer_forwards",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_priorityqueue.TestPriorityQueue",
                "name": "test_priorityqueue_count",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_priorityqueue.TestPriorityQueue",
                "name": "test_priorityqueue_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_priorityqueue.TestPriorityQueue",
                "name": "test_priorityqueue_enqueue_dequeue",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_priorityqueue.TestPriorityQueue",
                "name": "test_priorityqueue_length",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_priorityqueue.TestPriorityQueue",
                "name": "test_priorityqueue_peek",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_priorityqueue.TestPriorityQueue",
                "name": "test_priorityqueue_remove",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_core.test_priorityqueue.TestPriorityQueue",
                "name": "test_priorityqueue_sort_stability",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_disposables.test_disposable",
                "name": "test_Disposable_create",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_disposables.test_disposable",
                "name": "test_Disposable_dispose",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_disposables.test_disposable",
                "name": "test_emptydisposable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_disposables.test_disposable",
                "name": "test_booleandisposable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_disposables.test_disposable",
                "name": "test_future_disposable_setnone",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_disposables.test_disposable",
                "name": "test_futuredisposable_disposeafterset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_disposables.test_disposable",
                "name": "test_futuredisposable_disposebeforeset",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_disposables.test_disposable",
                "name": "test_groupdisposable_contains",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_disposables.test_disposable",
                "name": "test_groupdisposable_add",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_disposables.test_disposable",
                "name": "test_groupdisposable_addafterdispose",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_disposables.test_disposable",
                "name": "test_groupdisposable_remove",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_disposables.test_disposable",
                "name": "test_groupdisposable_clear",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_disposables.test_disposable",
                "name": "test_mutabledisposable_ctor_prop",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_disposables.test_disposable",
                "name": "test_mutabledisposable_replacebeforedispose",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_disposables.test_disposable",
                "name": "test_mutabledisposable_replaceafterdispose",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_disposables.test_disposable",
                "name": "test_mutabledisposable_dispose",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_disposables.test_disposable",
                "name": "test_refcountdisposable_singlereference",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_disposables.test_disposable",
                "name": "test_refcountdisposable_refcounting",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_disposables.test_disposable",
                "name": "test_refcountdisposable_primarydisposesfirst",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_integration.test_concat_repeat.TestConcatIntegration",
                "name": "test_concat_repeat",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_integration.test_group_reduce.TestGroupByReduce",
                "name": "test_groupby_count",
                "time": 0.056,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_integration.test_group_reduce.TestGroupByReduce",
                "name": "test_window_sum",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_all.TestAll",
                "name": "test_all_empty",
                "time": 0.011,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_all.TestAll",
                "name": "test_all_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_all.TestAll",
                "name": "test_all_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_all.TestAll",
                "name": "test_all_return",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_all.TestAll",
                "name": "test_all_return_not_match",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_all.TestAll",
                "name": "test_all_some_all_match",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_all.TestAll",
                "name": "test_all_some_match",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_all.TestAll",
                "name": "test_all_some_none_match",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_amb.TestAmb",
                "name": "test_amb_empty_never",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_amb.TestAmb",
                "name": "test_amb_loser_throws",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_amb.TestAmb",
                "name": "test_amb_never2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_amb.TestAmb",
                "name": "test_amb_never3",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_amb.TestAmb",
                "name": "test_amb_never_empty",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_amb.TestAmb",
                "name": "test_amb_regular_should_dispose_loser",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_amb.TestAmb",
                "name": "test_amb_throws_before_election",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_amb.TestAmb",
                "name": "test_amb_winner_throws",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_asobservable.TestAsObservable",
                "name": "test_as_observable_Return",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_asobservable.TestAsObservable",
                "name": "test_as_observable_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_asobservable.TestAsObservable",
                "name": "test_as_observable_hides",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_asobservable.TestAsObservable",
                "name": "test_as_observable_isnoteager",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_asobservable.TestAsObservable",
                "name": "test_as_observable_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_asobservable.TestAsObservable",
                "name": "test_as_observable_on_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_average.TestAverage",
                "name": "test_average_int32_empty",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_average.TestAverage",
                "name": "test_average_int32_never",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_average.TestAverage",
                "name": "test_average_int32_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_average.TestAverage",
                "name": "test_average_int32_return",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_average.TestAverage",
                "name": "test_average_int32_some",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_average.TestAverage",
                "name": "test_average_mapper_regular_int32",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_buffer.TestBuffer",
                "name": "test_buffer_closeboundaries",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_buffer.TestBuffer",
                "name": "test_buffer_simple",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_buffer.TestBuffer",
                "name": "test_buffer_throwboundaries",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_buffer.TestBuffer",
                "name": "test_buffer_throwsource",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_buffer.TestBuffer",
                "name": "test_toggle_closing_mapper_on_error",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_buffer.TestBuffer",
                "name": "test_toggle_closing_with_empty_observable",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_buffer.TestBuffer",
                "name": "test_toggle_closing_with_only_first_item",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_buffer.TestBuffer",
                "name": "test_toggle_openings_on_error",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_buffer.TestBuffer",
                "name": "test_toggle_source_on_error",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_buffer.TestBuffer",
                "name": "test_when_closing_on_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_buffer.TestBuffer",
                "name": "test_when_closing_only_on_first_item",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_buffer.TestBuffer",
                "name": "test_when_closing_with_empty_observable",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_buffer.TestBuffer",
                "name": "test_when_source_on_error",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_bufferwithcount.TestBufferWithCount",
                "name": "test_buffer_count_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_bufferwithcount.TestBufferWithCount",
                "name": "test_buffer_count_full_and_partial_windows",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_bufferwithcount.TestBufferWithCount",
                "name": "test_buffer_count_full_windows",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_bufferwithcount.TestBufferWithCount",
                "name": "test_buffer_count_partial_window",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_bufferwithcount.TestBufferWithCount",
                "name": "test_buffer_count_skip_less",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_bufferwithcount.TestBufferWithCount",
                "name": "test_buffer_count_skip_more",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_bufferwithcount.TestBufferWithCount",
                "name": "test_buffer_with_count_basic",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_bufferwithcount.TestBufferWithCount",
                "name": "test_buffer_with_count_disposed",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_bufferwithtime.TestBufferWithCount",
                "name": "test_buffer_with_time_basic",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_bufferwithtime.TestBufferWithCount",
                "name": "test_buffer_with_time_basic_same",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_bufferwithtime.TestBufferWithCount",
                "name": "test_buffer_with_time_disposed",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_bufferwithtime.TestBufferWithCount",
                "name": "test_buffer_with_time_error",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_bufferwithtimeorcount.TestBufferWithCount",
                "name": "test_buffer_with_time_or_count_basic",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_bufferwithtimeorcount.TestBufferWithCount",
                "name": "test_buffer_with_time_or_count_disposed",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_bufferwithtimeorcount.TestBufferWithCount",
                "name": "test_buffer_with_time_or_count_error",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_case.TestCase",
                "name": "test_case_on_error",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_case.TestCase",
                "name": "test_case_one",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_case.TestCase",
                "name": "test_case_three",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_case.TestCase",
                "name": "test_case_two",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_case.TestCase",
                "name": "test_case_with_default_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_case.TestCase",
                "name": "test_case_with_default_one",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_case.TestCase",
                "name": "test_case_with_default_three",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_case.TestCase",
                "name": "test_case_with_default_two",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_catch.TestCatch",
                "name": "test_catch_empty",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_catch.TestCatch",
                "name": "test_catch_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_catch.TestCatch",
                "name": "test_catch_error_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_catch.TestCatch",
                "name": "test_catch_error_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_catch.TestCatch",
                "name": "test_catch_error_specific_caught",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_catch.TestCatch",
                "name": "test_catch_error_specific_caught_immediate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_catch.TestCatch",
                "name": "test_catch_handler_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_catch.TestCatch",
                "name": "test_catch_multiple",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_catch.TestCatch",
                "name": "test_catch_nested_outer_catches",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_catch.TestCatch",
                "name": "test_catch_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_catch.TestCatch",
                "name": "test_catch_no_errors",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_catch.TestCatch",
                "name": "test_catch_return",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_catch.TestCatch",
                "name": "test_catch_throw_from_nested_catch",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_consecutive",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_consecutive_end_with_error_left",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_consecutive_end_with_error_right",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_empty_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_empty_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_empty_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_empty_return",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_error_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_error_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_interleaved_with_tail",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_mapper_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_never_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_never_feturn",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_never_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_never_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_return_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_return_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_return_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_return_return",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_some_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_throw_after_complete_left",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_throw_after_complete_right",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_throw_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_throw_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_throw_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_throw_return",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_combinelatest.TestCombineLatest",
                "name": "test_combine_latest_throw_some",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concat.TestConcat",
                "name": "test_concat_empty_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concat.TestConcat",
                "name": "test_concat_empty_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concat.TestConcat",
                "name": "test_concat_empty_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concat.TestConcat",
                "name": "test_concat_empty_return",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concat.TestConcat",
                "name": "test_concat_forward_none_scheduler",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concat.TestConcat",
                "name": "test_concat_forward_scheduler",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concat.TestConcat",
                "name": "test_concat_never_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concat.TestConcat",
                "name": "test_concat_never_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concat.TestConcat",
                "name": "test_concat_never_return",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concat.TestConcat",
                "name": "test_concat_return_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concat.TestConcat",
                "name": "test_concat_return_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concat.TestConcat",
                "name": "test_concat_return_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concat.TestConcat",
                "name": "test_concat_return_return",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concat.TestConcat",
                "name": "test_concat_some_data_some_data",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concat.TestConcat",
                "name": "test_concat_throw_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concat.TestConcat",
                "name": "test_concat_throw_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concat.TestConcat",
                "name": "test_concat_throw_return",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concatmap.TestConcatMap",
                "name": "test_concat_map_and_flatten_each_item",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concatmap.TestConcatMap",
                "name": "test_concat_map_finalize_before_next",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concatmap.TestConcatMap",
                "name": "test_concat_map_inner_errors",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concatmap.TestConcatMap",
                "name": "test_concat_map_many_inner_inner_never_completes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_concatmap.TestConcatMap",
                "name": "test_concat_map_outer_errors",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_connectableobservable.TestConnectableObservable",
                "name": "test_connectable_observable_connected",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_connectableobservable.TestConnectableObservable",
                "name": "test_connectable_observable_creation",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_connectableobservable.TestConnectableObservable",
                "name": "test_connectable_observable_disconnect_future",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_connectableobservable.TestConnectableObservable",
                "name": "test_connectable_observable_disconnected",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_connectableobservable.TestConnectableObservable",
                "name": "test_connectable_observable_forward_scheduler",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_connectableobservable.TestConnectableObservable",
                "name": "test_connectable_observable_multiple_non_overlapped_connections",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_connectableobservable.TestConnectableObservable",
                "name": "test_connectable_observable_not_connected",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_contains.TestContains",
                "name": "test_contains_comparer_contains_value",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_contains.TestContains",
                "name": "test_contains_comparer_does_not_contain_value",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_contains.TestContains",
                "name": "test_contains_comparer_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_contains.TestContains",
                "name": "test_contains_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_contains.TestContains",
                "name": "test_contains_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_contains.TestContains",
                "name": "test_contains_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_contains.TestContains",
                "name": "test_contains_return_negative",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_contains.TestContains",
                "name": "test_contains_return_positive",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_contains.TestContains",
                "name": "test_contains_some_negative",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_contains.TestContains",
                "name": "test_contains_some_positive",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_count.TestCount",
                "name": "test_count_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_count.TestCount",
                "name": "test_count_empty_ii",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_count.TestCount",
                "name": "test_count_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_count.TestCount",
                "name": "test_count_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_count.TestCount",
                "name": "test_count_predicate_empty_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_count.TestCount",
                "name": "test_count_predicate_empty_true",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_count.TestCount",
                "name": "test_count_predicate_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_count.TestCount",
                "name": "test_count_predicate_predicate_throws",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_count.TestCount",
                "name": "test_count_predicate_return_false",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_count.TestCount",
                "name": "test_count_predicate_return_true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_count.TestCount",
                "name": "test_count_predicate_some_all",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_count.TestCount",
                "name": "test_count_predicate_some_even",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_count.TestCount",
                "name": "test_count_predicate_some_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_count.TestCount",
                "name": "test_count_predicate_throw_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_count.TestCount",
                "name": "test_count_predicate_throw_true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_count.TestCount",
                "name": "test_count_some",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_create.TestCreate",
                "name": "test_create_completed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_create.TestCreate",
                "name": "test_create_dispose",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_create.TestCreate",
                "name": "test_create_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_create.TestCreate",
                "name": "test_create_exception",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_create.TestCreate",
                "name": "test_create_next",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_create.TestCreate",
                "name": "test_create_observer_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_debounce.TestDebounce",
                "name": "test_debounce_duration_delay_behavior",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_debounce.TestDebounce",
                "name": "test_debounce_duration_early_completion",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_debounce.TestDebounce",
                "name": "test_debounce_duration_inner_done_delay_behavior",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_debounce.TestDebounce",
                "name": "test_debounce_duration_inner_done_throttle_behavior",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_debounce.TestDebounce",
                "name": "test_debounce_duration_inner_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_debounce.TestDebounce",
                "name": "test_debounce_duration_mapper_throws",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_debounce.TestDebounce",
                "name": "test_debounce_duration_outer_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_debounce.TestDebounce",
                "name": "test_debounce_duration_throttle_behavior",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_debounce.TestDebounce",
                "name": "test_debounce_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_debounce.TestDebounce",
                "name": "test_debounce_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_debounce.TestDebounce",
                "name": "test_debounce_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_debounce.TestDebounce",
                "name": "test_debounce_timespan_alldrop",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_debounce.TestDebounce",
                "name": "test_debounce_timespan_alldrop_error_end",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_debounce.TestDebounce",
                "name": "test_debounce_timespan_allpass",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_debounce.TestDebounce",
                "name": "test_debounce_timespan_allpass_error_end",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_debounce.TestDebounce",
                "name": "test_debounce_timespan_some_drop",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_defaultifempty.TestDistinctUntilChanged",
                "name": "test_default_if_empty_empty1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_defaultifempty.TestDistinctUntilChanged",
                "name": "test_default_if_empty_empty2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_defaultifempty.TestDistinctUntilChanged",
                "name": "test_default_if_empty_non_empty1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_defaultifempty.TestDistinctUntilChanged",
                "name": "test_default_if_empty_non_empty2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_defer.TestDefer",
                "name": "test_defer_complete",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_defer.TestDefer",
                "name": "test_defer_dispose",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_defer.TestDefer",
                "name": "test_defer_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_defer.TestDefer",
                "name": "test_defer_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_delay.TestDelay",
                "name": "test_delay_datetime_offset_error1_impl",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_delay.TestDelay",
                "name": "test_delay_datetime_offset_error2_impl",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_delay.TestDelay",
                "name": "test_delay_datetime_offset_simple1_impl",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_delay.TestDelay",
                "name": "test_delay_datetime_offset_simple2_impl",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_delay.TestDelay",
                "name": "test_delay_datetime_offset_simple3_impl",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_delay.TestDelay",
                "name": "test_delay_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_delay.TestDelay",
                "name": "test_delay_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_delay.TestDelay",
                "name": "test_delay_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_delay.TestDelay",
                "name": "test_delay_timespan_error1_impl",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_delay.TestDelay",
                "name": "test_delay_timespan_error2_impl",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_delay.TestDelay",
                "name": "test_delay_timespan_simple1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_delay.TestDelay",
                "name": "test_delay_timespan_simple2_impl",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_delay.TestDelay",
                "name": "test_delay_timespan_simple3_impl",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_delaywithmapper.TestDelayWithMapper",
                "name": "test_delay_duration_dispose1",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_delaywithmapper.TestDelayWithMapper",
                "name": "test_delay_duration_dispose2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_delaywithmapper.TestDelayWithMapper",
                "name": "test_delay_duration_simple1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_delaywithmapper.TestDelayWithMapper",
                "name": "test_delay_duration_simple2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_delaywithmapper.TestDelayWithMapper",
                "name": "test_delay_duration_simple3",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_delaywithmapper.TestDelayWithMapper",
                "name": "test_delay_duration_simple4_inner_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_distinct.TestDistinctUntilChanged",
                "name": "test_distinct_default_comparer_some_duplicates",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_distinct.TestDistinctUntilChanged",
                "name": "test_distinct_defaultcomparer_all_distinct",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_distinct.TestDistinctUntilChanged",
                "name": "test_distinct_key_mapper_all_distinct",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_distinct.TestDistinctUntilChanged",
                "name": "test_distinct_key_mapper_some_duplicates",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_distinct.TestDistinctUntilChanged",
                "name": "test_distinct_key_mapper_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_distinctuntilchanged.TestDistinctUntilChanged",
                "name": "test_distinct_until_changed_all_changes",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_distinctuntilchanged.TestDistinctUntilChanged",
                "name": "test_distinct_until_changed_all_same",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_distinctuntilchanged.TestDistinctUntilChanged",
                "name": "test_distinct_until_changed_comparer_all_different",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_distinctuntilchanged.TestDistinctUntilChanged",
                "name": "test_distinct_until_changed_comparer_all_equal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_distinctuntilchanged.TestDistinctUntilChanged",
                "name": "test_distinct_until_changed_comparer_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_distinctuntilchanged.TestDistinctUntilChanged",
                "name": "test_distinct_until_changed_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_distinctuntilchanged.TestDistinctUntilChanged",
                "name": "test_distinct_until_changed_key_mapper_div2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_distinctuntilchanged.TestDistinctUntilChanged",
                "name": "test_distinct_until_changed_key_mapper_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_distinctuntilchanged.TestDistinctUntilChanged",
                "name": "test_distinct_until_changed_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_distinctuntilchanged.TestDistinctUntilChanged",
                "name": "test_distinct_until_changed_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_distinctuntilchanged.TestDistinctUntilChanged",
                "name": "test_distinct_until_changed_return",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_distinctuntilchanged.TestDistinctUntilChanged",
                "name": "test_distinct_until_changed_some_changes",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_doaction.TestDo",
                "name": "test_do_action_without_next",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_doaction.TestDo",
                "name": "test_do_next_completed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_doaction.TestDo",
                "name": "test_do_next_completed_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_doaction.TestDo",
                "name": "test_do_plain_action",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_doaction.TestDo",
                "name": "test_do_should_see_all_values",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_dowhile.TestDoWhile",
                "name": "test_dowhile_always_false",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_dowhile.TestDoWhile",
                "name": "test_dowhile_always_true",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_dowhile.TestDoWhile",
                "name": "test_dowhile_always_true_infinite",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_dowhile.TestDoWhile",
                "name": "test_dowhile_always_true_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_dowhile.TestDoWhile",
                "name": "test_dowhile_sometimes_throws",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_dowhile.TestDoWhile",
                "name": "test_dowhile_sometimes_true",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_elementat.TestElementAt",
                "name": "test_element_at_or_default_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_elementat.TestElementAt",
                "name": "test_element_at_or_default_first",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_elementat.TestElementAt",
                "name": "test_element_at_or_default_other",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_elementat.TestElementAt",
                "name": "test_element_at_or_default_outofrange",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_elementat.TestElementAt",
                "name": "test_elementat_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_elementat.TestElementAt",
                "name": "test_elementat_first",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_elementat.TestElementAt",
                "name": "test_elementat_other",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_elementat.TestElementAt",
                "name": "test_elementat_outofrange",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_empty.TestEmpty",
                "name": "test_empty_basic",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_empty.TestEmpty",
                "name": "test_empty_disposed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_empty.TestEmpty",
                "name": "test_empty_observer_throw_exception",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_expand.TestExpand",
                "name": "test_expand_basic",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_expand.TestExpand",
                "name": "test_expand_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_expand.TestExpand",
                "name": "test_expand_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_expand.TestExpand",
                "name": "test_expand_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_expand.TestExpand",
                "name": "test_expand_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_filter",
                "name": "test_is_prime",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_filter.TestFilter",
                "name": "test_filter_complete",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_filter.TestFilter",
                "name": "test_filter_dispose",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_filter.TestFilter",
                "name": "test_filter_dispose_in_predicate",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_filter.TestFilter",
                "name": "test_filter_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_filter.TestFilter",
                "name": "test_filter_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_filter.TestFilter",
                "name": "test_filter_indexed_complete",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_filter.TestFilter",
                "name": "test_filter_indexed_dispose",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_filter.TestFilter",
                "name": "test_filter_indexed_dispose_in_predicate",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_filter.TestFilter",
                "name": "test_filter_indexed_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_filter.TestFilter",
                "name": "test_filter_indexed_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_filter.TestFilter",
                "name": "test_filter_indexed_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_filter.TestFilter",
                "name": "test_filter_indexed_true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_filter.TestFilter",
                "name": "test_filter_on_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_filter.TestFilter",
                "name": "test_filter_true",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_finally.TestFinally",
                "name": "test_finally_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_finally.TestFinally",
                "name": "test_finally_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_finally.TestFinally",
                "name": "test_finally_only_called_once_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_finally.TestFinally",
                "name": "test_finally_return",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_find.TestFind",
                "name": "test_find_Error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_find.TestFind",
                "name": "test_find_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_find.TestFind",
                "name": "test_find_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_find.TestFind",
                "name": "test_find_notfound",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_find.TestFind",
                "name": "test_find_single",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_find.TestFind",
                "name": "test_find_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_first.TestFirst",
                "name": "test_first_async_empty",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_first.TestFirst",
                "name": "test_first_async_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_first.TestFirst",
                "name": "test_first_async_many",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_first.TestFirst",
                "name": "test_first_async_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_first.TestFirst",
                "name": "test_first_async_predicate",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_first.TestFirst",
                "name": "test_first_async_predicate_none",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_first.TestFirst",
                "name": "test_first_async_predicate_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_first.TestFirst",
                "name": "test_first_async_predicate_throws",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_firstordefault.TestFirst_or_default",
                "name": "test_first_or_default_async_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_firstordefault.TestFirst_or_default",
                "name": "test_first_or_default_async_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_firstordefault.TestFirst_or_default",
                "name": "test_first_or_default_async_many",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_firstordefault.TestFirst_or_default",
                "name": "test_first_or_default_async_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_firstordefault.TestFirst_or_default",
                "name": "test_first_or_default_async_predicate",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_firstordefault.TestFirst_or_default",
                "name": "test_first_or_default_async_predicate_none",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_firstordefault.TestFirst_or_default",
                "name": "test_first_or_default_async_predicate_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_firstordefault.TestFirst_or_default",
                "name": "test_first_or_default_async_predicate_throws",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_flatmap.TestFlatMap",
                "name": "test_flat_map_complete",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_flatmap.TestFlatMap",
                "name": "test_flat_map_complete_inner_not_complete",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_flatmap.TestFlatMap",
                "name": "test_flat_map_complete_outer_not_complete",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_flatmap.TestFlatMap",
                "name": "test_flat_map_dispose",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_flatmap.TestFlatMap",
                "name": "test_flat_map_error_inner",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_flatmap.TestFlatMap",
                "name": "test_flat_map_error_outer",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_flatmap.TestFlatMap",
                "name": "test_flat_map_iterable_complete",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_flatmap.TestFlatMap",
                "name": "test_flat_map_on_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_flatmap.TestFlatMap",
                "name": "test_flat_map_then_complete_complete",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_flatmap.TestFlatMap",
                "name": "test_flat_map_then_complete_complete_2",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_flatmap.TestFlatMap",
                "name": "test_flat_map_then_complete_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_flatmap.TestFlatMap",
                "name": "test_flat_map_then_complete_never",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_flatmap.TestFlatMap",
                "name": "test_flat_map_then_error_complete",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_flatmap.TestFlatMap",
                "name": "test_flat_map_then_error_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_flatmap.TestFlatMap",
                "name": "test_flat_map_then_never_complete",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_flatmap.TestFlatMap",
                "name": "test_flat_map_use_function",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_flatmap_async.TestFlatMapAsync",
                "name": "test_flat_map_async",
                "time": 0.104,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_forin.TestForIn",
                "name": "test_for_basic",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_forin.TestForIn",
                "name": "test_for_throws",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_forkjoin.TestForkJoin",
                "name": "test_fork_join_empty_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_forkjoin.TestForkJoin",
                "name": "test_fork_join_empty_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_forkjoin.TestForkJoin",
                "name": "test_fork_join_empty_non_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_forkjoin.TestForkJoin",
                "name": "test_fork_join_error_error_left_last",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_forkjoin.TestForkJoin",
                "name": "test_fork_join_error_error_right_last",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_forkjoin.TestForkJoin",
                "name": "test_fork_join_many",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_forkjoin.TestForkJoin",
                "name": "test_fork_join_many_ops",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_forkjoin.TestForkJoin",
                "name": "test_fork_join_never_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_forkjoin.TestForkJoin",
                "name": "test_fork_join_never_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_forkjoin.TestForkJoin",
                "name": "test_fork_join_never_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_forkjoin.TestForkJoin",
                "name": "test_fork_join_never_non_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_forkjoin.TestForkJoin",
                "name": "test_fork_join_non_empty_error_left_last",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_forkjoin.TestForkJoin",
                "name": "test_fork_join_non_empty_error_right_last",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_forkjoin.TestForkJoin",
                "name": "test_fork_join_non_empty_non_empty_left_last",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_forkjoin.TestForkJoin",
                "name": "test_fork_join_non_empty_non_empty_right_last",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_fromcallback.TestFromCallback",
                "name": "test_from_callback",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_fromcallback.TestFromCallback",
                "name": "test_from_callback_single",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_fromcallback.TestFromCallback",
                "name": "test_from_node_callback_mapper",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_fromfuture.TestFromFuture",
                "name": "test_future_cancel",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_fromfuture.TestFromFuture",
                "name": "test_future_dispose",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_fromfuture.TestFromFuture",
                "name": "test_future_failure",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_fromfuture.TestFromFuture",
                "name": "test_future_success",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_fromiterable.TestFromIterable",
                "name": "test_double_subscribe_to_iterable",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_fromiterable.TestFromIterable",
                "name": "test_observer_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_fromiterable.TestFromIterable",
                "name": "test_subscribe_to_iterable_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_fromiterable.TestFromIterable",
                "name": "test_subscribe_to_iterable_finite",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_generate.TestGenerate",
                "name": "test_generate_dispose",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_generate.TestGenerate",
                "name": "test_generate_finite",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_generate.TestGenerate",
                "name": "test_generate_repeat",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_generate.TestGenerate",
                "name": "test_generate_throw_condition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_generate.TestGenerate",
                "name": "test_generate_throw_iterate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_generatewithrelativetime.TestGenerateWithRelativeTime",
                "name": "test_generate_datetime_offset_dispose",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_generatewithrelativetime.TestGenerateWithRelativeTime",
                "name": "test_generate_datetime_offset_finite",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_generatewithrelativetime.TestGenerateWithRelativeTime",
                "name": "test_generate_datetime_offset_throw_condition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_generatewithrelativetime.TestGenerateWithRelativeTime",
                "name": "test_generate_datetime_offset_throw_iterate",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_generatewithrelativetime.TestGenerateWithRelativeTime",
                "name": "test_generate_datetime_offset_throw_time_mapper",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_generatewithrelativetime.TestGenerateWithRelativeTime",
                "name": "test_generate_timespan_dispose",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_generatewithrelativetime.TestGenerateWithRelativeTime",
                "name": "test_generate_timespan_finite",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_generatewithrelativetime.TestGenerateWithRelativeTime",
                "name": "test_generate_timespan_throw_condition",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_generatewithrelativetime.TestGenerateWithRelativeTime",
                "name": "test_generate_timespan_throw_iterate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_generatewithrelativetime.TestGenerateWithRelativeTime",
                "name": "test_generate_timespan_throw_timemapper",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupby.TestGroupBy",
                "name": "test_group_by_inner_complete",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupby.TestGroupBy",
                "name": "test_group_by_inner_complete_all",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupby.TestGroupBy",
                "name": "test_group_by_inner_error",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupby.TestGroupBy",
                "name": "test_group_by_outer_dispose",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupby.TestGroupBy",
                "name": "test_group_by_outer_ele_on_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupby.TestGroupBy",
                "name": "test_group_by_outer_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupby.TestGroupBy",
                "name": "test_group_by_outer_key_on_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupby.TestGroupBy",
                "name": "test_group_by_with_ReplaySubject",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupby.TestGroupBy",
                "name": "test_group_by_with_key_comparer",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupby.TestGroupBy",
                "name": "test_group_by_with_merge",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupby.TestGroupBy",
                "name": "test_groupby_outer_complete",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupjoin.TestGroup_join",
                "name": "test_group_join_op_error_i",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupjoin.TestGroup_join",
                "name": "test_group_join_op_error_ii",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupjoin.TestGroup_join",
                "name": "test_group_join_op_error_iii",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupjoin.TestGroup_join",
                "name": "test_group_join_op_error_iv",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupjoin.TestGroup_join",
                "name": "test_group_join_op_error_v",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupjoin.TestGroup_join",
                "name": "test_group_join_op_error_vi",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupjoin.TestGroup_join",
                "name": "test_group_join_op_normal_i",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupjoin.TestGroup_join",
                "name": "test_group_join_op_normal_ii",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupjoin.TestGroup_join",
                "name": "test_group_join_op_normal_iii",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupjoin.TestGroup_join",
                "name": "test_group_join_op_normal_iv",
                "time": 0.013,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupjoin.TestGroup_join",
                "name": "test_group_join_op_normal_ix",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupjoin.TestGroup_join",
                "name": "test_group_join_op_normal_v",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupjoin.TestGroup_join",
                "name": "test_group_join_op_normal_vi",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupjoin.TestGroup_join",
                "name": "test_group_join_op_normal_vii",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_groupjoin.TestGroup_join",
                "name": "test_group_join_op_normal_viii",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_ifthen.TestIf_then",
                "name": "test_if_default_completed",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_ifthen.TestIf_then",
                "name": "test_if_default_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_ifthen.TestIf_then",
                "name": "test_if_default_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_ifthen.TestIf_then",
                "name": "test_if_default_other",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_ifthen.TestIf_then",
                "name": "test_if_dispose",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_ifthen.TestIf_then",
                "name": "test_if_false",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_ifthen.TestIf_then",
                "name": "test_if_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_ifthen.TestIf_then",
                "name": "test_if_true",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_ignoreelements.TestIgnoreElements",
                "name": "test_ignore_values_basic",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_ignoreelements.TestIgnoreElements",
                "name": "test_ignore_values_completed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_ignoreelements.TestIgnoreElements",
                "name": "test_ignore_values_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_interval.TestTimeInterval",
                "name": "test_interval_timespan_basic",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_interval.TestTimeInterval",
                "name": "test_interval_timespan_disposed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_interval.TestTimeInterval",
                "name": "test_interval_timespan_observer_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_isempty.TestIsEmpty",
                "name": "test_is_empty_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_isempty.TestIsEmpty",
                "name": "test_is_empty_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_isempty.TestIsEmpty",
                "name": "test_is_empty_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_isempty.TestIsEmpty",
                "name": "test_is_empty_return",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_join.TestJoin",
                "name": "test_join_op_error_i",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_join.TestJoin",
                "name": "test_join_op_error_ii",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_join.TestJoin",
                "name": "test_join_op_error_iii",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_join.TestJoin",
                "name": "test_join_op_error_iv",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_join.TestJoin",
                "name": "test_join_op_error_v",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_join.TestJoin",
                "name": "test_join_op_error_vi",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_join.TestJoin",
                "name": "test_join_op_forward_scheduler",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_join.TestJoin",
                "name": "test_join_op_forward_scheduler_None",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_join.TestJoin",
                "name": "test_join_op_normal_i",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_join.TestJoin",
                "name": "test_join_op_normal_ii",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_join.TestJoin",
                "name": "test_join_op_normal_iii",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_join.TestJoin",
                "name": "test_join_op_normal_iv",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_join.TestJoin",
                "name": "test_join_op_normal_v",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_join.TestJoin",
                "name": "test_join_op_normal_vi",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_join.TestJoin",
                "name": "test_join_op_normal_vii",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_last.TestLast",
                "name": "test_last_async_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_last.TestLast",
                "name": "test_last_async_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_last.TestLast",
                "name": "test_last_async_many",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_last.TestLast",
                "name": "test_last_async_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_last.TestLast",
                "name": "test_last_async_predicate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_last.TestLast",
                "name": "test_last_async_predicate_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_last.TestLast",
                "name": "test_last_async_predicate_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_last.TestLast",
                "name": "test_last_async_predicate_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_lastordefault.TestLastOrDefault",
                "name": "test_last_or_default_async",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_lastordefault.TestLastOrDefault",
                "name": "test_last_or_default_async_Predicate_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_lastordefault.TestLastOrDefault",
                "name": "test_last_or_default_async_Predicate_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_lastordefault.TestLastOrDefault",
                "name": "test_last_or_default_async_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_lastordefault.TestLastOrDefault",
                "name": "test_last_or_default_async_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_lastordefault.TestLastOrDefault",
                "name": "test_last_or_default_async_many",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_lastordefault.TestLastOrDefault",
                "name": "test_last_or_default_async_predicate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_lastordefault.TestLastOrDefault",
                "name": "test_last_or_default_async_predicate_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_map.TestSelect",
                "name": "test_map_completed",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_map.TestSelect",
                "name": "test_map_completed_two",
                "time": 0.064,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_map.TestSelect",
                "name": "test_map_default_mapper",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_map.TestSelect",
                "name": "test_map_disposeinsidemapper",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_map.TestSelect",
                "name": "test_map_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_map.TestSelect",
                "name": "test_map_mapper_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_map.TestSelect",
                "name": "test_map_not_completed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_map.TestSelect",
                "name": "test_map_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_map.TestSelect",
                "name": "test_map_with_index_completed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_map.TestSelect",
                "name": "test_map_with_index_default_mapper",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_map.TestSelect",
                "name": "test_map_with_index_dispose_inside_mapper",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_map.TestSelect",
                "name": "test_map_with_index_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_map.TestSelect",
                "name": "test_map_with_index_mapper_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_map.TestSelect",
                "name": "test_map_with_index_not_completed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_map.TestSelect",
                "name": "test_map_with_index_throws",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestParse",
                "name": "test_parse_just_on_completed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestParse",
                "name": "test_parse_just_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestParse",
                "name": "test_parse_just_on_error_specified",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestParse",
                "name": "test_parse_just_on_next",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestParse",
                "name": "test_parse_marble_completed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestParse",
                "name": "test_parse_marble_lookup",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestParse",
                "name": "test_parse_marble_multiple_digits",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestParse",
                "name": "test_parse_marble_multiple_digits_float",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestParse",
                "name": "test_parse_marble_multiple_digits_int",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestParse",
                "name": "test_parse_marble_raise_with_elements_after_completed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestParse",
                "name": "test_parse_marble_raise_with_elements_after_completed_group",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestParse",
                "name": "test_parse_marble_raise_with_elements_after_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestParse",
                "name": "test_parse_marble_raise_with_elements_after_error_group",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestParse",
                "name": "test_parse_marble_time_shift",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestParse",
                "name": "test_parse_marble_timedelta",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestParse",
                "name": "test_parse_marble_timespan",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestParse",
                "name": "test_parse_marble_with_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestParse",
                "name": "test_parse_marble_with_group",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestParse",
                "name": "test_parse_marble_with_space",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestFromMarble",
                "name": "test_from_marbles_marble_completed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestFromMarble",
                "name": "test_from_marbles_marble_lookup",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestFromMarble",
                "name": "test_from_marbles_marble_with_consecutive_symbols",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestFromMarble",
                "name": "test_from_marbles_marble_with_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestFromMarble",
                "name": "test_from_marbles_marble_with_group",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestFromMarble",
                "name": "test_from_marbles_marble_with_space",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestFromMarble",
                "name": "test_from_marbles_on_complete",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestFromMarble",
                "name": "test_from_marbles_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestFromMarble",
                "name": "test_from_marbles_on_error_specified",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestFromMarble",
                "name": "test_from_marbles_on_next",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestFromMarble",
                "name": "test_from_marbles_reuse",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestFromMarble",
                "name": "test_from_marbles_timespan",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestHot",
                "name": "test_hot_marble_completed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestHot",
                "name": "test_hot_marble_lookup",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestHot",
                "name": "test_hot_marble_with_consecutive_symbols",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestHot",
                "name": "test_hot_marble_with_datetime",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestHot",
                "name": "test_hot_marble_with_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestHot",
                "name": "test_hot_marble_with_group",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestHot",
                "name": "test_hot_marble_with_space",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestHot",
                "name": "test_hot_marble_with_timedelta",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestHot",
                "name": "test_hot_on_complete",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestHot",
                "name": "test_hot_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestHot",
                "name": "test_hot_on_error_specified",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestHot",
                "name": "test_hot_on_next",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestHot",
                "name": "test_hot_skipped_at_200",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_marbles.TestHot",
                "name": "test_hot_timespan",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_materialize.TestMaterialize",
                "name": "test_materialize_dematerialize_empty",
                "time": 0.074,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_materialize.TestMaterialize",
                "name": "test_materialize_dematerialize_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_materialize.TestMaterialize",
                "name": "test_materialize_dematerialize_on_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_materialize.TestMaterialize",
                "name": "test_materialize_dematerialize_return",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_materialize.TestMaterialize",
                "name": "test_materialize_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_materialize.TestMaterialize",
                "name": "test_materialize_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_materialize.TestMaterialize",
                "name": "test_materialize_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_materialize.TestMaterialize",
                "name": "test_materialize_return",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_max.TestMax",
                "name": "test_max_int32_empty",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_max.TestMax",
                "name": "test_max_int32_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_max.TestMax",
                "name": "test_max_int32_on_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_max.TestMax",
                "name": "test_max_int32_return",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_max.TestMax",
                "name": "test_max_int32_some",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_max.TestMax",
                "name": "test_max_of_t_comparer_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_max.TestMax",
                "name": "test_max_of_t_comparer_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_max.TestMax",
                "name": "test_max_of_t_comparer_on_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_max.TestMax",
                "name": "test_max_of_t_comparer_return",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_max.TestMax",
                "name": "test_max_of_t_comparer_some",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_max.TestMax",
                "name": "test_max_of_t_comparer_throws",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_maxby.TestMaxBy",
                "name": "test_maxby_comparerthrows",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_maxby.TestMaxBy",
                "name": "test_maxby_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_maxby.TestMaxBy",
                "name": "test_maxby_multiple",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_maxby.TestMaxBy",
                "name": "test_maxby_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_maxby.TestMaxBy",
                "name": "test_maxby_on_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_maxby.TestMaxBy",
                "name": "test_maxby_return",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_maxby.TestMaxBy",
                "name": "test_maxby_some",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_112233",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_empty2",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_empty3",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_empty_delayed2_left_last",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_empty_delayed2_right_last",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_empty_delayed3_middle_last",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_empty_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_empty_return",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_error_causes_disposal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_error_left",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_error_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_lots2",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_lots3",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_never2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_never3",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_never_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_never_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_never_return",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_observable_of_observable_data",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_observable_of_observable_data_non_overlapped",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_observable_of_observable_inner_throws",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_observable_of_observable_outer_throws",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_return_empty",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_merge_return_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_mergeconcat_basic",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_mergeconcat_basic_late",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_mergeconcat_basic_long",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_mergeconcat_basic_wide",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_mergeconcat_disposed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_mergeconcat_innererror",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_merge.TestMerge",
                "name": "test_mergeconcat_outererror",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_min.TestMin",
                "name": "test_min_int32_empty",
                "time": 0.035,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_min.TestMin",
                "name": "test_min_int32_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_min.TestMin",
                "name": "test_min_int32_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_min.TestMin",
                "name": "test_min_int32_return",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_min.TestMin",
                "name": "test_min_int32_some",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_min.TestMin",
                "name": "test_min_of_t_comparer_empty",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_min.TestMin",
                "name": "test_min_of_t_comparer_empty_ii",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_min.TestMin",
                "name": "test_min_of_t_comparer_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_min.TestMin",
                "name": "test_min_of_t_comparer_on_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_min.TestMin",
                "name": "test_min_of_t_comparer_throws",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_minby.TestMinBy",
                "name": "test_min_by_comparer_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_minby.TestMinBy",
                "name": "test_min_by_comparer_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_minby.TestMinBy",
                "name": "test_min_by_comparer_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_minby.TestMinBy",
                "name": "test_min_by_comparer_return",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_minby.TestMinBy",
                "name": "test_min_by_comparer_some",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_minby.TestMinBy",
                "name": "test_min_by_comparer_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_minby.TestMinBy",
                "name": "test_min_by_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_minby.TestMinBy",
                "name": "test_min_by_mapper_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_minby.TestMinBy",
                "name": "test_min_by_multiple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_minby.TestMinBy",
                "name": "test_min_by_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_minby.TestMinBy",
                "name": "test_min_by_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_minby.TestMinBy",
                "name": "test_min_by_return",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_minby.TestMinBy",
                "name": "test_min_by_some",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_multicast.TestMulticast",
                "name": "test_multicast_cold_completed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_multicast.TestMulticast",
                "name": "test_multicast_cold_dispose",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_multicast.TestMulticast",
                "name": "test_multicast_cold_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_multicast.TestMulticast",
                "name": "test_multicast_cold_zip",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_multicast.TestMulticast",
                "name": "test_multicast_hot_1",
                "time": 0.054,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_multicast.TestMulticast",
                "name": "test_multicast_hot_2",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_multicast.TestMulticast",
                "name": "test_multicast_hot_21",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_multicast.TestMulticast",
                "name": "test_multicast_hot_3",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_multicast.TestMulticast",
                "name": "test_multicast_hot_4",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_multicast.TestMulticast",
                "name": "test_multicast_hot_5",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_multicast.TestMulticast",
                "name": "test_multicast_hot_6",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_never.TestNever",
                "name": "test_never_basic",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_observeon.TestObserveOn",
                "name": "test_observe_on_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_observeon.TestObserveOn",
                "name": "test_observe_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_observeon.TestObserveOn",
                "name": "test_observe_on_forward_subscribe_scheduler",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_observeon.TestObserveOn",
                "name": "test_observe_on_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_observeon.TestObserveOn",
                "name": "test_observe_on_normal",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_of.TestOf",
                "name": "test_of",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_of.TestOf",
                "name": "test_of_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_onerrorresumenext.TestOnErrorResumeNext",
                "name": "test_on_error_resume_next_empty_return_throw_and_more",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_onerrorresumenext.TestOnErrorResumeNext",
                "name": "test_on_error_resume_next_empty_return_throw_and_more_ii",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_onerrorresumenext.TestOnErrorResumeNext",
                "name": "test_on_error_resume_next_end_with_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_onerrorresumenext.TestOnErrorResumeNext",
                "name": "test_on_error_resume_next_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_onerrorresumenext.TestOnErrorResumeNext",
                "name": "test_on_error_resume_next_error_multiple",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_onerrorresumenext.TestOnErrorResumeNext",
                "name": "test_on_error_resume_next_no_errors",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_onerrorresumenext.TestOnErrorResumeNext",
                "name": "test_on_error_resume_next_single_source_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_onerrorresumenext.TestOnErrorResumeNext",
                "name": "test_on_error_resume_next_start_with_factory",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_onerrorresumenext.TestOnErrorResumeNext",
                "name": "test_on_error_resume_next_start_with_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_pairwise.TestPairwise",
                "name": "test_pairwise_completed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_pairwise.TestPairwise",
                "name": "test_pairwise_disposed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_pairwise.TestPairwise",
                "name": "test_pairwise_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_pairwise.TestPairwise",
                "name": "test_pairwise_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_pairwise.TestPairwise",
                "name": "test_pairwise_not_completed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_pairwise.TestPairwise",
                "name": "test_pairwise_single",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_partition.TestPartition",
                "name": "test_partition_completed",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_partition.TestPartition",
                "name": "test_partition_disposed",
                "time": 0.06,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_partition.TestPartition",
                "name": "test_partition_each",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_partition.TestPartition",
                "name": "test_partition_empty",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_partition.TestPartition",
                "name": "test_partition_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_partition.TestPartition",
                "name": "test_partition_not_completed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_partition.TestPartition",
                "name": "test_partition_single",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_pluck.TestPluck",
                "name": "test_pluck_completed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_pluck.TestPluckAttr",
                "name": "test_pluck_attr_completed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_publish.TestPublish",
                "name": "test_publish_basic",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_publish.TestPublish",
                "name": "test_publish_cold_zip",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_publish.TestPublish",
                "name": "test_publish_complete",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_publish.TestPublish",
                "name": "test_publish_dispose",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_publish.TestPublish",
                "name": "test_publish_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_publish.TestPublish",
                "name": "test_publish_lambda_zip_complete",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_publish.TestPublish",
                "name": "test_publish_lambda_zip_dispose",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_publish.TestPublish",
                "name": "test_publish_lambda_zip_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_publish.TestPublish",
                "name": "test_publish_multipleconnections",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_publish.TestPublish",
                "name": "test_ref_count_connects_on_first",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_publish.TestPublish",
                "name": "test_ref_count_notconnected",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_publishvalue.TestPublishValue",
                "name": "test_publish_with_initial_value_complete",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_publishvalue.TestPublishValue",
                "name": "test_publish_with_initial_value_dispose",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_publishvalue.TestPublishValue",
                "name": "test_publish_with_initial_value_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_publishvalue.TestPublishValue",
                "name": "test_publish_with_initial_value_lambda_zip_complete",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_publishvalue.TestPublishValue",
                "name": "test_publish_with_initial_value_lambda_zip_dispose",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_publishvalue.TestPublishValue",
                "name": "test_publish_with_initial_value_lambda_zip_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_publishvalue.TestPublishValue",
                "name": "test_publish_with_initial_value_multiple_connections",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_publishvalue.TestPublishValue",
                "name": "test_publishwithinitialvalue_basic",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_range.TestRange",
                "name": "test_range_dispose",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_range.TestRange",
                "name": "test_range_double_subscribe",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_range.TestRange",
                "name": "test_range_five",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_range.TestRange",
                "name": "test_range_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_range.TestRange",
                "name": "test_range_only_start",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_range.TestRange",
                "name": "test_range_step_also",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_range.TestRange",
                "name": "test_range_zero",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_reduce.TestReduce",
                "name": "test_reduce_seed_none_does_not_crash",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_reduce.TestReduce",
                "name": "test_reduce_with_seed_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_reduce.TestReduce",
                "name": "test_reduce_with_seed_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_reduce.TestReduce",
                "name": "test_reduce_with_seed_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_reduce.TestReduce",
                "name": "test_reduce_with_seed_range",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_reduce.TestReduce",
                "name": "test_reduce_with_seed_return",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_reduce.TestReduce",
                "name": "test_reduce_without_seed_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_reduce.TestReduce",
                "name": "test_reduce_without_seed_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_reduce.TestReduce",
                "name": "test_reduce_without_seed_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_reduce.TestReduce",
                "name": "test_reduce_without_seed_range",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_reduce.TestReduce",
                "name": "test_reduce_without_seed_return",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_repeat.TestRepeat",
                "name": "test_repeat_observable_basic",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_repeat.TestRepeat",
                "name": "test_repeat_observable_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_repeat.TestRepeat",
                "name": "test_repeat_observable_infinite",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_repeat.TestRepeat",
                "name": "test_repeat_observable_repeat_count_basic",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_repeat.TestRepeat",
                "name": "test_repeat_observable_repeat_count_dispose",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_repeat.TestRepeat",
                "name": "test_repeat_observable_repeat_count_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_repeat.TestRepeat",
                "name": "test_repeat_observable_repeat_count_infinite",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_repeat.TestRepeat",
                "name": "test_repeat_observable_repeat_count_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_repeat.TestRepeat",
                "name": "test_repeat_observable_throws",
                "time": 1.381,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_repeat.TestRepeat",
                "name": "test_repeat_value",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_repeat.TestRepeat",
                "name": "test_repeat_value_count_dispose",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_repeat.TestRepeat",
                "name": "test_repeat_value_count_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_repeat.TestRepeat",
                "name": "test_repeat_value_count_ten",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_repeat.TestRepeat",
                "name": "test_repeat_value_count_zero",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_replay.TestReplay",
                "name": "test_replay_count_basic",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_replay.TestReplay",
                "name": "test_replay_count_complete",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_replay.TestReplay",
                "name": "test_replay_count_dispose",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_replay.TestReplay",
                "name": "test_replay_count_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_replay.TestReplay",
                "name": "test_replay_count_multiple_connections",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_replay.TestReplay",
                "name": "test_replay_time_basic",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_replay.TestReplay",
                "name": "test_replay_time_complete",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_replay.TestReplay",
                "name": "test_replay_time_dispose",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_replay.TestReplay",
                "name": "test_replay_time_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_replay.TestReplay",
                "name": "test_replay_time_multiple_connections",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_retry.TestRetry",
                "name": "test_retry_observable_basic",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_retry.TestRetry",
                "name": "test_retry_observable_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_retry.TestRetry",
                "name": "test_retry_observable_infinite",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_retry.TestRetry",
                "name": "test_retry_observable_retry_count_basic",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_retry.TestRetry",
                "name": "test_retry_observable_retry_count_dispose",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_retry.TestRetry",
                "name": "test_retry_observable_retry_count_dispose_ii",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_retry.TestRetry",
                "name": "test_retry_observable_retry_count_dispose_iii",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_retry.TestRetry",
                "name": "test_retry_observable_retry_count_throws",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_retry.TestRetry",
                "name": "test_retry_observable_throws",
                "time": 1.339,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_returnvalue.TestReturnValue",
                "name": "test_return_basic",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_returnvalue.TestReturnValue",
                "name": "test_return_disposed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_returnvalue.TestReturnValue",
                "name": "test_return_disposed_after_next",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_returnvalue.TestReturnValue",
                "name": "test_return_observer_throws",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sample.TestSample",
                "name": "test_sample_empty",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sample.TestSample",
                "name": "test_sample_error",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sample.TestSample",
                "name": "test_sample_error_in_flight",
                "time": 0.05,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sample.TestSample",
                "name": "test_sample_never",
                "time": 0.058,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sample.TestSample",
                "name": "test_sample_regular",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_scan.TestScan",
                "name": "test_scan_noseed_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_scan.TestScan",
                "name": "test_scan_noseed_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_scan.TestScan",
                "name": "test_scan_noseed_on_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_scan.TestScan",
                "name": "test_scan_noseed_return",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_scan.TestScan",
                "name": "test_scan_noseed_somedata",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_scan.TestScan",
                "name": "test_scan_seed_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_scan.TestScan",
                "name": "test_scan_seed_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_scan.TestScan",
                "name": "test_scan_seed_on_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_scan.TestScan",
                "name": "test_scan_seed_return",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_scan.TestScan",
                "name": "test_scan_seed_somedata",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequence_equal_comparer_throws",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequence_equal_comparer_throws_sym",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequence_equal_equal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequence_equal_equal_sym",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequence_equal_not_equal_2",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequence_equal_not_equal_2_sym",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequence_equal_not_equal_3",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequence_equal_not_equal_3_sym",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequence_equal_not_equal_4",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequence_equal_not_equal_4_sym",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequence_equal_not_equal_left",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequence_equal_not_equal_left_sym",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequence_equal_not_equal_right",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequence_equal_not_equal_right_sym",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequenceequal_iterable_comparer_equal",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequenceequal_iterable_comparer_notequal",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequenceequal_iterable_comparer_throws",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequenceequal_iterable_equal",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequenceequal_iterable_notequal_elements",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequenceequal_iterable_notequal_toolong",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequenceequal_iterable_notequal_tooshort",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sequenceequal.TestSequenceEqual",
                "name": "test_sequenceequal_iterable_on_error",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_single.TestSingle",
                "name": "test_single_async_empty",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_single.TestSingle",
                "name": "test_single_async_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_single.TestSingle",
                "name": "test_single_async_many",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_single.TestSingle",
                "name": "test_single_async_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_single.TestSingle",
                "name": "test_single_async_predicate",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_single.TestSingle",
                "name": "test_single_async_predicate_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_single.TestSingle",
                "name": "test_single_async_predicate_on_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_single.TestSingle",
                "name": "test_single_async_predicate_one",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_single.TestSingle",
                "name": "test_single_async_predicate_throws",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_singleordefault.TestSingleOrDefault",
                "name": "test_single_or_default_async_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_singleordefault.TestSingleOrDefault",
                "name": "test_single_or_default_async_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_singleordefault.TestSingleOrDefault",
                "name": "test_single_or_default_async_many",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_singleordefault.TestSingleOrDefault",
                "name": "test_single_or_default_async_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_singleordefault.TestSingleOrDefault",
                "name": "test_single_or_default_async_predicate",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_singleordefault.TestSingleOrDefault",
                "name": "test_single_or_default_async_predicate_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_singleordefault.TestSingleOrDefault",
                "name": "test_single_or_default_async_predicate_none",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_singleordefault.TestSingleOrDefault",
                "name": "test_single_or_default_async_predicate_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_singleordefault.TestSingleOrDefault",
                "name": "test_single_or_default_async_predicate_one",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_singleordefault.TestSingleOrDefault",
                "name": "test_single_or_default_async_predicate_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skip.TestSkip",
                "name": "test_skip_Complete_zero",
                "time": 0.026,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skip.TestSkip",
                "name": "test_skip_complete_after",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skip.TestSkip",
                "name": "test_skip_complete_before",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skip.TestSkip",
                "name": "test_skip_complete_same",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skip.TestSkip",
                "name": "test_skip_dispose_after",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skip.TestSkip",
                "name": "test_skip_dispose_before",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skip.TestSkip",
                "name": "test_skip_error_after",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skip.TestSkip",
                "name": "test_skip_error_before",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skip.TestSkip",
                "name": "test_skip_error_same",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skiplast.TestSkipLast",
                "name": "test_skip_last_one_completed",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skiplast.TestSkipLast",
                "name": "test_skip_last_one_disposed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skiplast.TestSkipLast",
                "name": "test_skip_last_one_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skiplast.TestSkipLast",
                "name": "test_skip_last_three_completed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skiplast.TestSkipLast",
                "name": "test_skip_last_three_disposed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skiplast.TestSkipLast",
                "name": "test_skip_last_three_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skiplast.TestSkipLast",
                "name": "test_skip_last_zero_completed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skiplast.TestSkipLast",
                "name": "test_skip_last_zero_disposed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skiplast.TestSkipLast",
                "name": "test_skip_last_zero_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skiplastwithtime.TestSkipLastWithTime",
                "name": "test_skiplast_all",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skiplastwithtime.TestSkipLastWithTime",
                "name": "test_skiplast_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skiplastwithtime.TestSkipLastWithTime",
                "name": "test_skiplast_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skiplastwithtime.TestSkipLastWithTime",
                "name": "test_skiplast_some1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skiplastwithtime.TestSkipLastWithTime",
                "name": "test_skiplast_some2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skiplastwithtime.TestSkipLastWithTime",
                "name": "test_skiplast_zero1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skiplastwithtime.TestSkipLastWithTime",
                "name": "test_skiplast_zero2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipuntil.TestSkipUntil",
                "name": "test_skip_until_has_completed_causes_disposal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipuntil.TestSkipUntil",
                "name": "test_skip_until_never_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipuntil.TestSkipUntil",
                "name": "test_skip_until_never_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipuntil.TestSkipUntil",
                "name": "test_skip_until_never_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipuntil.TestSkipUntil",
                "name": "test_skip_until_never_next",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipuntil.TestSkipUntil",
                "name": "test_skip_until_somedata_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipuntil.TestSkipUntil",
                "name": "test_skip_until_somedata_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipuntil.TestSkipUntil",
                "name": "test_skip_until_somedata_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipuntil.TestSkipUntil",
                "name": "test_skip_until_somedata_next",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipuntilwithtime.TestSkipUntilWithTIme",
                "name": "test_skipuntil_error",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipuntilwithtime.TestSkipUntilWithTIme",
                "name": "test_skipuntil_late",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipuntilwithtime.TestSkipUntilWithTIme",
                "name": "test_skipuntil_never",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipuntilwithtime.TestSkipUntilWithTIme",
                "name": "test_skipuntil_twice1",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipuntilwithtime.TestSkipUntilWithTIme",
                "name": "test_skipuntil_twice2",
                "time": 0.037,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipuntilwithtime.TestSkipUntilWithTIme",
                "name": "test_skipuntil_zero",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipwhile.TestSkipWhile",
                "name": "test_skip_while_complete_after",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipwhile.TestSkipWhile",
                "name": "test_skip_while_complete_before",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipwhile.TestSkipWhile",
                "name": "test_skip_while_dispose_after",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipwhile.TestSkipWhile",
                "name": "test_skip_while_dispose_before",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipwhile.TestSkipWhile",
                "name": "test_skip_while_error_after",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipwhile.TestSkipWhile",
                "name": "test_skip_while_error_before",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipwhile.TestSkipWhile",
                "name": "test_skip_while_index",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipwhile.TestSkipWhile",
                "name": "test_skip_while_on_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipwhile.TestSkipWhile",
                "name": "test_skip_while_zero",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipwithtime.TestSkipWithTime",
                "name": "test_skip_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipwithtime.TestSkipWithTime",
                "name": "test_skip_late",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipwithtime.TestSkipWithTime",
                "name": "test_skip_never",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipwithtime.TestSkipWithTime",
                "name": "test_skip_some",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipwithtime.TestSkipWithTime",
                "name": "test_skip_twice1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipwithtime.TestSkipWithTime",
                "name": "test_skip_twice2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_skipwithtime.TestSkipWithTime",
                "name": "test_skip_zero",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_slice.TestSlice",
                "name": "test_slice_empty",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_slice.TestSlice",
                "name": "test_slice_same",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_slice.TestSlice",
                "name": "test_slice_same_noop",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_slice.TestSlice",
                "name": "test_slice_skip_first",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_slice.TestSlice",
                "name": "test_slice_skip_last",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_slice.TestSlice",
                "name": "test_slice_step_2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_slice.TestSlice",
                "name": "test_slice_take_first",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_slice.TestSlice",
                "name": "test_slice_take_last",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_slice.TestSlice",
                "name": "test_slice_take_last_skip_all",
                "time": 0.027,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_some.TestSome",
                "name": "test_some_empty",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_some.TestSome",
                "name": "test_some_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_some.TestSome",
                "name": "test_some_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_some.TestSome",
                "name": "test_some_predicate_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_some.TestSome",
                "name": "test_some_predicate_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_some.TestSome",
                "name": "test_some_predicate_on_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_some.TestSome",
                "name": "test_some_predicate_return",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_some.TestSome",
                "name": "test_some_predicate_return_not_match",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_some.TestSome",
                "name": "test_some_predicate_some_match",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_some.TestSome",
                "name": "test_some_predicate_some_none_match",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_some.TestSome",
                "name": "test_some_return",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_starmap.TestSelect",
                "name": "test_starmap_completed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_starmap.TestSelect",
                "name": "test_starmap_dispose_inside_mapper",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_starmap.TestSelect",
                "name": "test_starmap_empty",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_starmap.TestSelect",
                "name": "test_starmap_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_starmap.TestSelect",
                "name": "test_starmap_mapper_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_starmap.TestSelect",
                "name": "test_starmap_mapper_with_args",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_starmap.TestSelect",
                "name": "test_starmap_mapper_with_one_element",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_starmap.TestSelect",
                "name": "test_starmap_mapper_with_three_elements",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_starmap.TestSelect",
                "name": "test_starmap_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_starmap.TestSelect",
                "name": "test_starmap_no_mapper",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_starmap.TestSelect",
                "name": "test_starmap_not_completed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_starmap.TestSelect",
                "name": "test_starmap_subscription_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_start.TestStart",
                "name": "test_start_action2",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_start.TestStart",
                "name": "test_start_async",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_start.TestStart",
                "name": "test_start_async_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_start.TestStart",
                "name": "test_start_func2",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_start.TestStart",
                "name": "test_start_funcerror",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_startwith.TestStartWith",
                "name": "test_start_with",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_startwith.TestStartWith",
                "name": "test_start_with_immediate_scheduler_and_arg",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_startwith.TestStartWith",
                "name": "test_start_with_scheduler_and_arg",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_startwith.TestStartWith",
                "name": "test_start_with_scheduler_keyword_and_arg",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_subscribeon.TestSubscribeOn",
                "name": "test_subscribe_on_empty",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_subscribeon.TestSubscribeOn",
                "name": "test_subscribe_on_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_subscribeon.TestSubscribeOn",
                "name": "test_subscribe_on_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_subscribeon.TestSubscribeOn",
                "name": "test_subscribe_on_normal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sum.TestSum",
                "name": "test_sum_int32_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sum.TestSum",
                "name": "test_sum_int32_never",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sum.TestSum",
                "name": "test_sum_int32_on_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sum.TestSum",
                "name": "test_sum_int32_return",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sum.TestSum",
                "name": "test_sum_int32_some",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_sum.TestSum",
                "name": "test_sum_mapper_regular_int32",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_switchlatest.TestSwitch",
                "name": "test_switch_data",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_switchlatest.TestSwitch",
                "name": "test_switch_inner_completes",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_switchlatest.TestSwitch",
                "name": "test_switch_inner_throws",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_switchlatest.TestSwitch",
                "name": "test_switch_no_inner",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_switchlatest.TestSwitch",
                "name": "test_switch_outer_throws",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_switchmap.TestSwitchMap",
                "name": "test_switch_map",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_switchmap.TestSwitchMap",
                "name": "test_switch_map_default_mapper",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_switchmap.TestSwitchMap",
                "name": "test_switch_map_inner_completes",
                "time": 0.023,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_switchmap.TestSwitchMap",
                "name": "test_switch_map_inner_throws",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_switchmap.TestSwitchMap",
                "name": "test_switch_map_no_inner",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_switchmap.TestSwitchMap",
                "name": "test_switch_map_outer_throws",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_switchmapindexed.TestSwitchMapIndex",
                "name": "test_switch_map_default_mapper",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_switchmapindexed.TestSwitchMapIndex",
                "name": "test_switch_map_indexed_inner_completes",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_switchmapindexed.TestSwitchMapIndex",
                "name": "test_switch_map_indexed_inner_throws",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_switchmapindexed.TestSwitchMapIndex",
                "name": "test_switch_map_indexed_no_inner",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_switchmapindexed.TestSwitchMapIndex",
                "name": "test_switch_map_indexed_outer_throws",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_switchmapindexed.TestSwitchMapIndex",
                "name": "test_switch_map_indexed_uses_index",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_take.TestTake",
                "name": "test_take_complete_after",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_take.TestTake",
                "name": "test_take_complete_before",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_take.TestTake",
                "name": "test_take_complete_same",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_take.TestTake",
                "name": "test_take_dispose_after",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_take.TestTake",
                "name": "test_take_dispose_before",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_take.TestTake",
                "name": "test_take_error_after",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_take.TestTake",
                "name": "test_take_error_before",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_take.TestTake",
                "name": "test_take_error_same",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelast.TestTakeLast",
                "name": "test_Take_last_three_disposed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelast.TestTakeLast",
                "name": "test_Take_last_three_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelast.TestTakeLast",
                "name": "test_take_last_One_disposed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelast.TestTakeLast",
                "name": "test_take_last_one_completed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelast.TestTakeLast",
                "name": "test_take_last_one_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelast.TestTakeLast",
                "name": "test_take_last_three_completed",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelast.TestTakeLast",
                "name": "test_take_last_zero_completed",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelast.TestTakeLast",
                "name": "test_take_last_zero_disposed",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelast.TestTakeLast",
                "name": "test_take_last_zero_error",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelastbuffer.TestTakeLastBuffer",
                "name": "test_take_last_buffer_one_completed",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelastbuffer.TestTakeLastBuffer",
                "name": "test_take_last_buffer_one_disposed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelastbuffer.TestTakeLastBuffer",
                "name": "test_take_last_buffer_one_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelastbuffer.TestTakeLastBuffer",
                "name": "test_take_last_buffer_three_completed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelastbuffer.TestTakeLastBuffer",
                "name": "test_take_last_buffer_zero_completed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelastbuffer.TestTakeLastBuffer",
                "name": "test_take_last_buffer_zero_disposed",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelastbuffer.TestTakeLastBuffer",
                "name": "test_take_last_buffer_zero_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelastwithtime.TestTakeLast",
                "name": "test_takelast_all",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelastwithtime.TestTakeLast",
                "name": "test_takelast_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelastwithtime.TestTakeLast",
                "name": "test_takelast_never",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelastwithtime.TestTakeLast",
                "name": "test_takelast_some1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelastwithtime.TestTakeLast",
                "name": "test_takelast_some2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelastwithtime.TestTakeLast",
                "name": "test_takelast_some3",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelastwithtime.TestTakeLast",
                "name": "test_takelast_some4",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelastwithtime.TestTakeLast",
                "name": "test_takelast_zero1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takelastwithtime.TestTakeLast",
                "name": "test_takelast_zero2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takeuntil.TestTakeUntil",
                "name": "test_take_until_nopreempt_afterlastproduced_proper_disposed_signal",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takeuntil.TestTakeUntil",
                "name": "test_take_until_nopreempt_never_empty",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takeuntil.TestTakeUntil",
                "name": "test_take_until_nopreempt_never_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takeuntil.TestTakeUntil",
                "name": "test_take_until_nopreempt_somedata_empty",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takeuntil.TestTakeUntil",
                "name": "test_take_until_nopreempt_somedata_never",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takeuntil.TestTakeUntil",
                "name": "test_take_until_preempt_beforefirstproduced",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takeuntil.TestTakeUntil",
                "name": "test_take_until_preempt_beforefirstproduced_remain_silent_and_proper_disposed",
                "time": 0.025,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takeuntil.TestTakeUntil",
                "name": "test_take_until_preempt_never_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takeuntil.TestTakeUntil",
                "name": "test_take_until_preempt_never_next",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takeuntil.TestTakeUntil",
                "name": "test_take_until_preempt_somedata_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takeuntil.TestTakeUntil",
                "name": "test_take_until_preempt_somedata_next",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takeuntilwithtime.TestTakeUntilWithTime",
                "name": "test_takeuntil_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takeuntilwithtime.TestTakeUntilWithTime",
                "name": "test_takeuntil_late",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takeuntilwithtime.TestTakeUntilWithTime",
                "name": "test_takeuntil_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takeuntilwithtime.TestTakeUntilWithTime",
                "name": "test_takeuntil_twice1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takeuntilwithtime.TestTakeUntilWithTime",
                "name": "test_takeuntil_twice2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takeuntilwithtime.TestTakeUntilWithTime",
                "name": "test_takeuntil_zero",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takewhile.TestTakeWhile",
                "name": "test_take_while_complete_Before",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takewhile.TestTakeWhile",
                "name": "test_take_while_complete_after",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takewhile.TestTakeWhile",
                "name": "test_take_while_complete_after_inclusive_true",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takewhile.TestTakeWhile",
                "name": "test_take_while_dispose_after",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takewhile.TestTakeWhile",
                "name": "test_take_while_dispose_before",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takewhile.TestTakeWhile",
                "name": "test_take_while_error_after",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takewhile.TestTakeWhile",
                "name": "test_take_while_error_before",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takewhile.TestTakeWhile",
                "name": "test_take_while_index",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takewhile.TestTakeWhile",
                "name": "test_take_while_index_inclusive_false",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takewhile.TestTakeWhile",
                "name": "test_take_while_index_inclusive_true",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takewhile.TestTakeWhile",
                "name": "test_take_while_on_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takewhile.TestTakeWhile",
                "name": "test_take_while_zero",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takewithtime.TestTakeWithTime",
                "name": "test_take_Error",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takewithtime.TestTakeWithTime",
                "name": "test_take_late",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takewithtime.TestTakeWithTime",
                "name": "test_take_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takewithtime.TestTakeWithTime",
                "name": "test_take_some",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takewithtime.TestTakeWithTime",
                "name": "test_take_twice1",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takewithtime.TestTakeWithTime",
                "name": "test_take_twice2",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_takewithtime.TestTakeWithTime",
                "name": "test_take_zero",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_throttlefirst.TestThrottleFirst",
                "name": "test_throttle_first_completed",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_throttlefirst.TestThrottleFirst",
                "name": "test_throttle_first_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_throttlefirst.TestThrottleFirst",
                "name": "test_throttle_first_error",
                "time": 0.08,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_throttlefirst.TestThrottleFirst",
                "name": "test_throttle_first_never",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_throttlefirst.TestThrottleFirst",
                "name": "test_throttle_first_no_end",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_throw.TestThrow",
                "name": "test_throw_disposed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_throw.TestThrow",
                "name": "test_throw_exception_basic",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_throw.TestThrow",
                "name": "test_throw_observer_throws",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeinterval.TestTimeInterval",
                "name": "test_time_interval_default_scheduler",
                "time": 0.107,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeinterval.TestTimeInterval",
                "name": "test_time_interval_empty",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeinterval.TestTimeInterval",
                "name": "test_time_interval_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeinterval.TestTimeInterval",
                "name": "test_time_interval_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeinterval.TestTimeInterval",
                "name": "test_time_interval_regular",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeout.TestTimeout",
                "name": "test_timeout_datetime_offset_timeout_does_not_occur_completed",
                "time": 0.015,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeout.TestTimeout",
                "name": "test_timeout_datetime_offset_timeout_does_not_occur_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeout.TestTimeout",
                "name": "test_timeout_datetime_offset_timeout_occur_2",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeout.TestTimeout",
                "name": "test_timeout_datetime_offset_timeout_occur_3",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeout.TestTimeout",
                "name": "test_timeout_datetime_offset_timeout_occurs",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeout.TestTimeout",
                "name": "test_timeout_in_time",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeout.TestTimeout",
                "name": "test_timeout_out_of_time",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeout.TestTimeout",
                "name": "test_timeout_timeout_does_not_occur",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeout.TestTimeout",
                "name": "test_timeout_timeout_not_occurs_completed",
                "time": 0.039,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeout.TestTimeout",
                "name": "test_timeout_timeout_not_occurs_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeout.TestTimeout",
                "name": "test_timeout_timeout_occurs_1",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeout.TestTimeout",
                "name": "test_timeout_timeout_occurs_2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeout.TestTimeout",
                "name": "test_timeout_timeout_occurs_completed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeout.TestTimeout",
                "name": "test_timeout_timeout_occurs_error",
                "time": 0.049,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeout.TestTimeout",
                "name": "test_timeout_timeout_occurs_never",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeoutwithmapper.TestTimeoutWithSelector",
                "name": "test_timeout_duration_simple_first_throws",
                "time": 0.032,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeoutwithmapper.TestTimeoutWithSelector",
                "name": "test_timeout_duration_simple_inner_throws",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeoutwithmapper.TestTimeoutWithSelector",
                "name": "test_timeout_duration_simple_never",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeoutwithmapper.TestTimeoutWithSelector",
                "name": "test_timeout_duration_simple_source_throws",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeoutwithmapper.TestTimeoutWithSelector",
                "name": "test_timeout_duration_simple_timeout_by_completion",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeoutwithmapper.TestTimeoutWithSelector",
                "name": "test_timeout_duration_simple_timeout_by_completion2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeoutwithmapper.TestTimeoutWithSelector",
                "name": "test_timeout_duration_simple_timeout_later",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timeoutwithmapper.TestTimeoutWithSelector",
                "name": "test_timeout_duration_simple_timeoutfirst",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timer.TestTimer",
                "name": "test_oneshot_timer_date_basic",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timer.TestTimer",
                "name": "test_oneshot_timer_date_disposed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timer.TestTimer",
                "name": "test_oneshot_timer_date_observer_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timer.TestTimer",
                "name": "test_oneshot_timer_date_passed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timer.TestTimer",
                "name": "test_oneshot_timer_timespan_basic",
                "time": 0.017,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timer.TestTimer",
                "name": "test_oneshot_timer_timespan_disposed",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timer.TestTimer",
                "name": "test_oneshot_timer_timespan_negative",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timer.TestTimer",
                "name": "test_oneshot_timer_timespan_observer_throws",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timer.TestTimer",
                "name": "test_oneshot_timer_timespan_zero",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timer.TestTimer",
                "name": "test_periodic_timer_basic",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timer.TestTimer",
                "name": "test_periodic_timer_equal_time_and_period",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timestamp.TestTimeInterval",
                "name": "test_timestamp_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timestamp.TestTimeInterval",
                "name": "test_timestamp_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timestamp.TestTimeInterval",
                "name": "test_timestamp_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_timestamp.TestTimeInterval",
                "name": "test_timestamp_regular",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_toasync.TestToAsync",
                "name": "test_to_async0",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_toasync.TestToAsync",
                "name": "test_to_async1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_toasync.TestToAsync",
                "name": "test_to_async2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_toasync.TestToAsync",
                "name": "test_to_async3",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_toasync.TestToAsync",
                "name": "test_to_async4",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_toasync.TestToAsync",
                "name": "test_to_async_context",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_toasync.TestToAsync",
                "name": "test_to_async_error0",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_toasync.TestToAsync",
                "name": "test_to_async_error1",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_toasync.TestToAsync",
                "name": "test_to_async_error2",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_toasync.TestToAsync",
                "name": "test_to_async_error3",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_toasync.TestToAsync",
                "name": "test_to_async_error4",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_todict.TestToDict",
                "name": "test_to_dict_completed",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_todict.TestToDict",
                "name": "test_to_dict_disposed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_todict.TestToDict",
                "name": "test_to_dict_elementmapperthrows",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_todict.TestToDict",
                "name": "test_to_dict_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_todict.TestToDict",
                "name": "test_to_dict_keymapperthrows",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_tofuture.TestToFuture",
                "name": "test_await_empty_observable",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_tofuture.TestToFuture",
                "name": "test_await_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_tofuture.TestToFuture",
                "name": "test_await_success",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_tofuture.TestToFuture",
                "name": "test_await_success_on_sequence",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_tofuture.TestToFuture",
                "name": "test_await_with_delay",
                "time": 0.104,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_tofuture.TestToFuture",
                "name": "test_cancel",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_tofuture.TestToFuture",
                "name": "test_dispose_on_cancel",
                "time": 0.103,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_toiterable.TestToArray",
                "name": "test_toiterable_completed",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_toiterable.TestToArray",
                "name": "test_toiterabledisposed",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_toiterable.TestToArray",
                "name": "test_toiterableerror",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_toset.TestToDict",
                "name": "test_to_set_completed",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_toset.TestToDict",
                "name": "test_to_set_disposed",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_toset.TestToDict",
                "name": "test_to_set_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_using.TestUsing",
                "name": "test_using_complete",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_using.TestUsing",
                "name": "test_using_dispose",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_using.TestUsing",
                "name": "test_using_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_using.TestUsing",
                "name": "test_using_null",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_using.TestUsing",
                "name": "test_using_throw_resource_mapper",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_using.TestUsing",
                "name": "test_using_throw_resource_usage",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_while_do.TestWhile",
                "name": "test_dowhile_always_true_infinite_with_create",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_while_do.TestWhile",
                "name": "test_while_always_false",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_while_do.TestWhile",
                "name": "test_while_always_true",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_while_do.TestWhile",
                "name": "test_while_always_true_infinite",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_while_do.TestWhile",
                "name": "test_while_always_true_on_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_while_do.TestWhile",
                "name": "test_while_sometimes_throws",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_while_do.TestWhile",
                "name": "test_while_sometimes_true",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_window.TestWindow",
                "name": "test_window_close_boundaries",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_window.TestWindow",
                "name": "test_window_simple",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_window.TestWindow",
                "name": "test_window_throwSource",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_window.TestWindow",
                "name": "test_window_throw_boundaries",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_window.TestWindow",
                "name": "test_window_toggle_basic",
                "time": 0.012,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_window.TestWindow",
                "name": "test_window_toggle_data_error",
                "time": 0.022,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_window.TestWindow",
                "name": "test_window_toggle_dispose",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_window.TestWindow",
                "name": "test_window_toggle_on_error",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_window.TestWindow",
                "name": "test_window_toggle_window_error",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_window.TestWindow",
                "name": "test_window_when_basic",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_window.TestWindow",
                "name": "test_window_when_dispose",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_window.TestWindow",
                "name": "test_window_when_error",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_window.TestWindow",
                "name": "test_window_when_on_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_window.TestWindow",
                "name": "test_window_when_window_close_error",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_windowwithcount.TestWindowWithCount",
                "name": "test_window_with_count_basic",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_windowwithcount.TestWindowWithCount",
                "name": "test_window_with_count_disposed",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_windowwithcount.TestWindowWithCount",
                "name": "test_window_with_count_error",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_windowwithtime.TestWindowWithTime",
                "name": "test_Window_with_time_disposed",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_windowwithtime.TestWindowWithTime",
                "name": "test_window_time_basic",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_windowwithtime.TestWindowWithTime",
                "name": "test_window_time_basic_both",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_windowwithtime.TestWindowWithTime",
                "name": "test_window_with_time_basic",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_windowwithtime.TestWindowWithTime",
                "name": "test_window_with_time_basic_same",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_windowwithtime.TestWindowWithTime",
                "name": "test_window_with_time_error",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_windowwithtimeorcount.TestWindowWithTime",
                "name": "test_window_with_time_or_count_basic",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_windowwithtimeorcount.TestWindowWithTime",
                "name": "test_window_with_time_or_count_disposed",
                "time": 0.019,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_windowwithtimeorcount.TestWindowWithTime",
                "name": "test_window_with_time_or_count_error",
                "time": 0.018,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_consecutive",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_consecutive_end_with_error_left",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_consecutive_end_with_error_right",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_empty_empty",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_empty_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_empty_never",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_empty_return",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_error_empty",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_error_on_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_interleaved_with_tail",
                "time": 0.048,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_mapper_throws",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_never_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_never_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_never_on_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_never_return",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_no_throw_after_complete_left",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_repeat_last_left_value",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_return_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_return_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_return_on_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_return_return",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_some_on_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_throw_after_complete_right",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_throw_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_throw_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_throw_on_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_throw_return",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_withlatestfrom.TestWithLatestFrom",
                "name": "test_with_latest_from_throw_some",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_empty_empty",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_empty_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_empty_non_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_error_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_error_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_error_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_error_some",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_never_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_never_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_never_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_never_non_empty",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_non_empty_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_non_empty_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_non_empty_non_empty",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_non_empty_non_empty_sequential",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_non_empty_partial_sequential",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_some_data_asymmetric1",
                "time": 0.042,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_some_data_asymmetric2",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_some_data_symmetric",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_some_error",
                "time": 0.01,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_with_iterable_empty_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_with_iterable_empty_non_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_with_iterable_error_empty",
                "time": 0.007,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_with_iterable_error_some",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_with_iterable_never_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_with_iterable_never_non_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_with_iterable_non_empty_empty",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_with_iterable_non_empty_non_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_zip.TestZip",
                "name": "test_zip_with_iterable_some_data_both_sides",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_blocking.test_blocking.TestBlocking",
                "name": "test_run_empty",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_blocking.test_blocking.TestBlocking",
                "name": "test_run_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_blocking.test_blocking.TestBlocking",
                "name": "test_run_from",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_blocking.test_blocking.TestBlocking",
                "name": "test_run_from_first",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_blocking.test_blocking.TestBlocking",
                "name": "test_run_just",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_blocking.test_blocking.TestBlocking",
                "name": "test_run_of",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_blocking.test_blocking.TestBlocking",
                "name": "test_run_range",
                "time": 0.03,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_observable.test_blocking.test_blocking.TestBlocking",
                "name": "test_run_range_to_iterable",
                "time": 0.02,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_catchscheduler.TestCatchScheduler",
                "name": "test_catch_now",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_catchscheduler.TestCatchScheduler",
                "name": "test_catch_now_units",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_catchscheduler.TestCatchScheduler",
                "name": "test_catch_schedule",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_catchscheduler.TestCatchScheduler",
                "name": "test_catch_schedule_absolute",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_catchscheduler.TestCatchScheduler",
                "name": "test_catch_schedule_error_handled",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_catchscheduler.TestCatchScheduler",
                "name": "test_catch_schedule_error_unhandled",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_catchscheduler.TestCatchScheduler",
                "name": "test_catch_schedule_nested",
                "time": 0.016,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_catchscheduler.TestCatchScheduler",
                "name": "test_catch_schedule_nested_error_handled",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_catchscheduler.TestCatchScheduler",
                "name": "test_catch_schedule_nested_error_unhandled",
                "time": 0.028,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_catchscheduler.TestCatchScheduler",
                "name": "test_catch_schedule_periodic",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_catchscheduler.TestCatchScheduler",
                "name": "test_catch_schedule_periodic_error_handled",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_catchscheduler.TestCatchScheduler",
                "name": "test_catch_schedule_periodic_error_unhandled",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_catchscheduler.TestCatchScheduler",
                "name": "test_catch_schedule_relative",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_currentthreadscheduler.TestCurrentThreadScheduler",
                "name": "test_currentthread_ensuretrampoline",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_currentthreadscheduler.TestCurrentThreadScheduler",
                "name": "test_currentthread_ensuretrampoline_and_cancel",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_currentthreadscheduler.TestCurrentThreadScheduler",
                "name": "test_currentthread_ensuretrampoline_and_canceltimed",
                "time": 0.505,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_currentthreadscheduler.TestCurrentThreadScheduler",
                "name": "test_currentthread_ensuretrampoline_nested",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_currentthreadscheduler.TestCurrentThreadScheduler",
                "name": "test_currentthread_extend",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_currentthreadscheduler.TestCurrentThreadScheduler",
                "name": "test_currentthread_now",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_currentthreadscheduler.TestCurrentThreadScheduler",
                "name": "test_currentthread_now_units",
                "time": 1.103,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_currentthreadscheduler.TestCurrentThreadScheduler",
                "name": "test_currentthread_schedule",
                "time": 0.021,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_currentthreadscheduler.TestCurrentThreadScheduler",
                "name": "test_currentthread_schedule_block",
                "time": 0.202,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_currentthreadscheduler.TestCurrentThreadScheduler",
                "name": "test_currentthread_schedule_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_currentthreadscheduler.TestCurrentThreadScheduler",
                "name": "test_currentthread_schedule_nested",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_currentthreadscheduler.TestCurrentThreadScheduler",
                "name": "test_currentthread_schedule_nested_order",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_currentthreadscheduler.TestCurrentThreadScheduler",
                "name": "test_currentthread_singleton",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_currentthreadscheduler.TestCurrentThreadScheduler",
                "name": "test_currentthread_singleton_schedule_nested_order",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloopscheduler.TestEventLoopScheduler",
                "name": "test_event_loop_different_thread",
                "time": 0.107,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloopscheduler.TestEventLoopScheduler",
                "name": "test_event_loop_now",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloopscheduler.TestEventLoopScheduler",
                "name": "test_event_loop_now_units",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Flaky test in GitHub Actions",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloopscheduler.TestEventLoopScheduler",
                "name": "test_event_loop_schedule_action",
                "time": 0.103,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloopscheduler.TestEventLoopScheduler",
                "name": "test_event_loop_schedule_action_absolute_due",
                "time": 0.103,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloopscheduler.TestEventLoopScheduler",
                "name": "test_event_loop_schedule_action_relative_due",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloopscheduler.TestEventLoopScheduler",
                "name": "test_event_loop_schedule_ordered_actions",
                "time": 0.103,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloopscheduler.TestEventLoopScheduler",
                "name": "test_event_loop_schedule_ordered_actions_due",
                "time": 0.503,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloopscheduler.TestEventLoopScheduler",
                "name": "test_event_loop_schedule_ordered_actions_due_mixed",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloopscheduler.TestEventLoopScheduler",
                "name": "test_eventloop_schedule_absolute_dispose",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloopscheduler.TestEventLoopScheduler",
                "name": "test_eventloop_schedule_action_periodic",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloopscheduler.TestEventLoopScheduler",
                "name": "test_eventloop_schedule_dispose",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloopscheduler.TestEventLoopScheduler",
                "name": "test_eventloop_schedule_periodic_dispose_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_historicalscheduler.TestHistoricalScheduler",
                "name": "test_advance_by",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_historicalscheduler.TestHistoricalScheduler",
                "name": "test_advance_to",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_historicalscheduler.TestHistoricalScheduler",
                "name": "test_cancellation",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_historicalscheduler.TestHistoricalScheduler",
                "name": "test_ctor",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_historicalscheduler.TestHistoricalScheduler",
                "name": "test_is_enabled",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_historicalscheduler.TestHistoricalScheduler",
                "name": "test_order",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_historicalscheduler.TestHistoricalScheduler",
                "name": "test_schedule_relative_with_float",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_historicalscheduler.TestHistoricalScheduler",
                "name": "test_schedule_relative_with_timedelta",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_historicalscheduler.TestHistoricalScheduler",
                "name": "test_sleep1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_historicalscheduler.TestHistoricalScheduler",
                "name": "test_sleep2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_historicalscheduler.TestHistoricalScheduler",
                "name": "test_start_stop",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_immediatescheduler.TestImmediateScheduler",
                "name": "test_immediate_extend",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_immediatescheduler.TestImmediateScheduler",
                "name": "test_immediate_now",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Flaky test in GitHub Actions",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_immediatescheduler.TestImmediateScheduler",
                "name": "test_immediate_now_units",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Flaky test in GitHub Actions",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_immediatescheduler.TestImmediateScheduler",
                "name": "test_immediate_recursive1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_immediatescheduler.TestImmediateScheduler",
                "name": "test_immediate_recursive2",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_immediatescheduler.TestImmediateScheduler",
                "name": "test_immediate_recursive3",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_immediatescheduler.TestImmediateScheduler",
                "name": "test_immediate_schedule_action_due_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_immediatescheduler.TestImmediateScheduler",
                "name": "test_immediate_schedule_action_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_immediatescheduler.TestImmediateScheduler",
                "name": "test_immediate_scheduleaction",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_immediatescheduler.TestImmediateScheduler",
                "name": "test_immediate_simple1",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_immediatescheduler.TestImmediateScheduler",
                "name": "test_immediate_simple2",
                "time": 0.014,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_immediatescheduler.TestImmediateScheduler",
                "name": "test_immediate_simple3",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_immediatescheduler.TestImmediateScheduler",
                "name": "test_immediate_singleton",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_newthreadscheduler.TestNewThreadScheduler",
                "name": "test_new_thread_now",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_newthreadscheduler.TestNewThreadScheduler",
                "name": "test_new_thread_now_units",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Flaky test in GitHub Actions",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_newthreadscheduler.TestNewThreadScheduler",
                "name": "test_new_thread_schedule_action",
                "time": 0.105,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_newthreadscheduler.TestNewThreadScheduler",
                "name": "test_new_thread_schedule_action_cancel",
                "time": 0.203,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_newthreadscheduler.TestNewThreadScheduler",
                "name": "test_new_thread_schedule_action_due",
                "time": 0.406,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_newthreadscheduler.TestNewThreadScheduler",
                "name": "test_new_thread_schedule_periodic",
                "time": 0.204,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_newthreadscheduler.TestNewThreadScheduler",
                "name": "test_new_thread_schedule_periodic_cancel",
                "time": 0.411,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_scheduleditem.TestScheduledItem",
                "name": "test_scheduleditem_cancel",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_scheduleditem.TestScheduledItem",
                "name": "test_scheduleditem_compare",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_scheduleditem.TestScheduledItem",
                "name": "test_scheduleditem_invoke",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_scheduler.TestScheduler",
                "name": "test_base_to_datetime",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_scheduler.TestScheduler",
                "name": "test_base_to_seconds",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_scheduler.TestScheduler",
                "name": "test_base_to_timedelta",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_threadpoolscheduler.TestThreadPoolScheduler",
                "name": "test_schedule_action",
                "time": 0.009,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_threadpoolscheduler.TestThreadPoolScheduler",
                "name": "test_schedule_action_absolute",
                "time": 0.103,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_threadpoolscheduler.TestThreadPoolScheduler",
                "name": "test_schedule_action_cancel",
                "time": 0.109,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_threadpoolscheduler.TestThreadPoolScheduler",
                "name": "test_schedule_action_due_0",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_threadpoolscheduler.TestThreadPoolScheduler",
                "name": "test_schedule_action_due_relative",
                "time": 0.202,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_threadpoolscheduler.TestThreadPoolScheduler",
                "name": "test_threadpool_now",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Flaky test in GitHub Actions",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_threadpoolscheduler.TestThreadPoolScheduler",
                "name": "test_threadpool_now_units",
                "time": 1.104,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_timeoutscheduler.TestTimeoutScheduler",
                "name": "test_timeout_extend",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_timeoutscheduler.TestTimeoutScheduler",
                "name": "test_timeout_now",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Flaky test in GitHub Actions",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_timeoutscheduler.TestTimeoutScheduler",
                "name": "test_timeout_now_units",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Flaky test in GitHub Actions",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_timeoutscheduler.TestTimeoutScheduler",
                "name": "test_timeout_schedule_action",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_timeoutscheduler.TestTimeoutScheduler",
                "name": "test_timeout_schedule_action_cancel",
                "time": 0.102,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_timeoutscheduler.TestTimeoutScheduler",
                "name": "test_timeout_schedule_action_due",
                "time": 0.403,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_timeoutscheduler.TestTimeoutScheduler",
                "name": "test_timeout_singleton",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_trampolinescheduler.TestTrampolineScheduler",
                "name": "test_trampoline_ensuretrampoline",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_trampolinescheduler.TestTrampolineScheduler",
                "name": "test_trampoline_ensuretrampoline_and_cancel",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_trampolinescheduler.TestTrampolineScheduler",
                "name": "test_trampoline_ensuretrampoline_and_canceltimed",
                "time": 0.502,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_trampolinescheduler.TestTrampolineScheduler",
                "name": "test_trampoline_ensuretrampoline_nested",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_trampolinescheduler.TestTrampolineScheduler",
                "name": "test_trampoline_now",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Flaky test in GitHub Actions",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_trampolinescheduler.TestTrampolineScheduler",
                "name": "test_trampoline_now_units",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Flaky test in GitHub Actions",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_trampolinescheduler.TestTrampolineScheduler",
                "name": "test_trampoline_schedule",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_trampolinescheduler.TestTrampolineScheduler",
                "name": "test_trampoline_schedule_block",
                "time": 0.202,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_trampolinescheduler.TestTrampolineScheduler",
                "name": "test_trampoline_schedule_error",
                "time": 0.024,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_trampolinescheduler.TestTrampolineScheduler",
                "name": "test_trampoline_schedule_nested",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_trampolinescheduler.TestTrampolineScheduler",
                "name": "test_trampoline_schedule_nested_order",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_virtualtimescheduler.TestVirtualTimeScheduler",
                "name": "test_virtual_now_datetime",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_virtualtimescheduler.TestVirtualTimeScheduler",
                "name": "test_virtual_now_float",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_virtualtimescheduler.TestVirtualTimeScheduler",
                "name": "test_virtual_now_noarg",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_virtualtimescheduler.TestVirtualTimeScheduler",
                "name": "test_virtual_now_timedelta",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_virtualtimescheduler.TestVirtualTimeScheduler",
                "name": "test_virtual_schedule_action",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_virtualtimescheduler.TestVirtualTimeScheduler",
                "name": "test_virtual_schedule_action_error",
                "time": 0.001,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_virtualtimescheduler.TestVirtualTimeScheduler",
                "name": "test_virtual_schedule_advance_clock_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_virtualtimescheduler.TestVirtualTimeScheduler",
                "name": "test_virtual_schedule_sleep_error",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloop.test_asyncioscheduler.TestAsyncIOScheduler",
                "name": "test_asyncio_schedule_action",
                "time": 0.103,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloop.test_asyncioscheduler.TestAsyncIOScheduler",
                "name": "test_asyncio_schedule_action_cancel",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloop.test_asyncioscheduler.TestAsyncIOScheduler",
                "name": "test_asyncio_schedule_action_due",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloop.test_asyncioscheduler.TestAsyncIOScheduler",
                "name": "test_asyncio_schedule_now",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Flaky test in GitHub Actions",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloop.test_asyncioscheduler.TestAsyncIOScheduler",
                "name": "test_asyncio_schedule_now_units",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Test is flaky in GitHub Actions",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloop.test_asynciothreadsafescheduler.TestAsyncIOThreadSafeScheduler",
                "name": "test_asyncio_threadsafe_cancel_non_relative_same_thread",
                "time": 0.249,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloop.test_asynciothreadsafescheduler.TestAsyncIOThreadSafeScheduler",
                "name": "test_asyncio_threadsafe_schedule_action",
                "time": 0.103,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloop.test_asynciothreadsafescheduler.TestAsyncIOThreadSafeScheduler",
                "name": "test_asyncio_threadsafe_schedule_action_cancel",
                "time": 0.304,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloop.test_asynciothreadsafescheduler.TestAsyncIOThreadSafeScheduler",
                "name": "test_asyncio_threadsafe_schedule_action_cancel_same_loop",
                "time": 0.204,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloop.test_asynciothreadsafescheduler.TestAsyncIOThreadSafeScheduler",
                "name": "test_asyncio_threadsafe_schedule_action_cancel_same_thread",
                "time": 0.21,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloop.test_asynciothreadsafescheduler.TestAsyncIOThreadSafeScheduler",
                "name": "test_asyncio_threadsafe_schedule_action_due",
                "time": 0.303,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloop.test_asynciothreadsafescheduler.TestAsyncIOThreadSafeScheduler",
                "name": "test_asyncio_threadsafe_schedule_now",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Flaky test in GitHub Actions",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_eventloop.test_asynciothreadsafescheduler.TestAsyncIOThreadSafeScheduler",
                "name": "test_asyncio_threadsafe_schedule_now_units",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Flaky test in GitHub Actions",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_mainloop.test_tkinterscheduler.TestTkinterScheduler",
                "name": "test_tkinter_schedule_action",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "condition: display == False",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_mainloop.test_tkinterscheduler.TestTkinterScheduler",
                "name": "test_tkinter_schedule_action_cancel",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "condition: display == False",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_mainloop.test_tkinterscheduler.TestTkinterScheduler",
                "name": "test_tkinter_schedule_action_due",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "condition: display == False",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_mainloop.test_tkinterscheduler.TestTkinterScheduler",
                "name": "test_tkinter_schedule_action_periodic",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "condition: display == False",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_mainloop.test_tkinterscheduler.TestTkinterScheduler",
                "name": "test_tkinter_schedule_now",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Flaky test in GitHub Actions",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_scheduler.test_mainloop.test_tkinterscheduler.TestTkinterScheduler",
                "name": "test_tkinter_schedule_now_units",
                "time": 0.001,
                "results": [
                    {
                        "result": "Skipped",
                        "message": "Flaky test in GitHub Actions",
                        "type": "pytest.skip"
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subject.test_asyncsubject",
                "name": "test_infinite",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subject.test_asyncsubject",
                "name": "test_finite",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subject.test_asyncsubject",
                "name": "test_error",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subject.test_asyncsubject",
                "name": "test_canceled",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subject.test_asyncsubject",
                "name": "test_subject_disposed",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subject.test_behaviorsubject",
                "name": "test_infinite",
                "time": 0.008,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subject.test_behaviorsubject",
                "name": "test_finite",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subject.test_behaviorsubject",
                "name": "test_error",
                "time": 0.004,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subject.test_behaviorsubject",
                "name": "test_canceled",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subject.test_behaviorsubject",
                "name": "test_subject_disposed",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subject.test_replaysubject",
                "name": "test_infinite",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subject.test_replaysubject",
                "name": "test_infinite2",
                "time": 0.006,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subject.test_replaysubject",
                "name": "test_finite",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subject.test_replaysubject",
                "name": "test_error",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subject.test_replaysubject",
                "name": "test_canceled",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subject.test_replaysubject",
                "name": "test_subject_disposed",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subject.test_replaysubject",
                "name": "test_replay_subject_dies_out",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subject.test_subject",
                "name": "test_infinite",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subject.test_subject",
                "name": "test_finite",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subject.test_subject",
                "name": "test_error",
                "time": 0.005,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_subject.test_subject",
                "name": "test_canceled",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_testing.test_marbles.TestTestContext",
                "name": "test_exp",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_testing.test_marbles.TestTestContext",
                "name": "test_start_with_cold_and_exp",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_testing.test_marbles.TestTestContext",
                "name": "test_start_with_cold_and_exp_group",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_testing.test_marbles.TestTestContext",
                "name": "test_start_with_cold_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_testing.test_marbles.TestTestContext",
                "name": "test_start_with_cold_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_testing.test_marbles.TestTestContext",
                "name": "test_start_with_cold_no_create_function",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_testing.test_marbles.TestTestContext",
                "name": "test_start_with_cold_normal",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_testing.test_marbles.TestTestContext",
                "name": "test_start_with_hot_and_exp",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_testing.test_marbles.TestTestContext",
                "name": "test_start_with_hot_empty",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_testing.test_marbles.TestTestContext",
                "name": "test_start_with_hot_never",
                "time": 0.002,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            },
            {
                "classname": "tests.test_testing.test_marbles.TestTestContext",
                "name": "test_start_with_hot_normal",
                "time": 0.003,
                "results": [
                    {
                        "result": "Passed",
                        "message": "",
                        "type": ""
                    }
                ],
                "stdout": null,
                "stderr": null
            }
        ],
        "stdout": "[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ] \ud83d\ude80  Start image=crawlergpt:latest\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ] \ud83d\ude80  Start image=crawlergpt:latest\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality] \ud83d\ude80  Start image=crawlergpt:latest\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/ReactiveX-RxPY] user=0 workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/ReactiveX-RxPY] user=0 workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/ReactiveX-RxPY] user=0 workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \u2601  git clone 'https://github.com/actions/cache' # ref=v2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality] \u2b50 Run Main actions/checkout@v2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \u2705  Success - Main actions/checkout@v2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality] \u2b50 Run Main Set up Python 3.9\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udc33  docker cp src=/tmp/act-cache/5e79c165-e037-4a80-a233-62f27564d519/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ] \ud83e\uddea  Matrix: map[platform:ubuntu-latest python-version:3.7]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ] \u2b50 Run Main actions/checkout@v2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \u2705  Success - Main actions/checkout@v2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ] \u2b50 Run Main Set up Python 3.7\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udc33  docker cp src=/tmp/act-cache/5e79c165-e037-4a80-a233-62f27564d519/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ] \u2b50 Run Main actions/checkout@v2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::Semantic version spec of 3.9 is 3.9\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::isExplicit: \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::explicit? false\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::explicit? true\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::explicit? true\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::explicit? true\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::explicit? true\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::explicit? true\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::explicit? true\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::evaluating 6 versions\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::matched: 3.9.6\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Successfully setup CPython (3.9.6)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \u2705  Success - Main Set up Python 3.9\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \u2705  Success - Main actions/checkout@v2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \u2699  ::set-output:: python-version=3.9.6\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ] \u2b50 Run Main Set up Python 3.9\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality] \u2b50 Run Main Cache Poetry\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udc33  docker cp src=/tmp/act-cache/5e79c165-e037-4a80-a233-62f27564d519/act/actions-setup-python@v2/ dst=/var/run/act/actions/actions-setup-python@v2/\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udc33  docker cp src=/tmp/act-cache/5e79c165-e037-4a80-a233-62f27564d519/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Semantic version spec of 3.7 is 3.7\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::isExplicit: \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::explicit? false\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::explicit? true\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::explicit? true\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::explicit? true\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::explicit? true\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::explicit? true\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::explicit? true\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::matched: 3.7.11\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.7.11/x64\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.7.11 x64\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Successfully setup CPython (3.7.11)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \u2705  Success - Main Set up Python 3.7\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.7.11/x64\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.7.11/x64/lib\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v2/] user=0 workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/setup/index.js] user= workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \u2699  ::set-output:: python-version=3.7.11\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.7.11/x64/bin\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ] \u2b50 Run Main Cache Poetry\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::Semantic version spec of 3.9 is 3.9\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::isExplicit: \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::explicit? false\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::explicit? true\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::explicit? true\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::explicit? true\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::explicit? true\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::explicit? true\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::explicit? true\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::evaluating 6 versions\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::matched: 3.9.6\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.9.6/x64\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::Found tool in cache Python 3.9.6 x64\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Successfully setup CPython (3.9.6)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \u2753 add-matcher /run/act/actions/actions-setup-python@v2/.github/python.json\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udc33  docker cp src=/tmp/act-cache/5e79c165-e037-4a80-a233-62f27564d519/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \u2705  Success - Main Set up Python 3.9\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \u2699  ::set-env:: LD_LIBRARY_PATH=/opt/hostedtoolcache/Python/3.9.6/x64/lib\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.9.6/x64\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::Resolved Keys:\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::[\"poetry-cache-Linux-bfa77ed53a4cbb42d370877eae79ae2e64660d2cf656b798fbaa4d08a93ea043\"]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::Checking zstd --version\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:32999/_apis/artifactcache/cache?keys=poetry-cache-Linux-bfa77ed53a4cbb42d370877eae79ae2e64660d2cf656b798fbaa4d08a93ea043&version=7b31723a7ec6fd7eed12371b280ed643092aa3f7d5e693ec0b4a731954b378e6\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Cache not found for input keys: poetry-cache-Linux-bfa77ed53a4cbb42d370877eae79ae2e64660d2cf656b798fbaa4d08a93ea043\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \u2705  Success - Main Cache Poetry\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \u2699  ::set-output:: python-version=3.9.6\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.9.6/x64/bin\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ] \u2b50 Run Main Cache Poetry\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udc33  docker cp src=/tmp/act-cache/5e79c165-e037-4a80-a233-62f27564d519/act/actions-cache@v2/ dst=/var/run/act/actions/actions-cache@v2/\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality] \u2b50 Run Main Install dependencies\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-cache@v2/] user=0 workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/restore/index.js] user= workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::Resolved Keys:\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::[\"poetry-cache-Linux-bfa77ed53a4cbb42d370877eae79ae2e64660d2cf656b798fbaa4d08a93ea043\"]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::Checking zstd --version\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Resolved Keys:\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::[\"poetry-cache-Linux-bfa77ed53a4cbb42d370877eae79ae2e64660d2cf656b798fbaa4d08a93ea043\"]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Checking zstd --version\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:32999/_apis/artifactcache/cache?keys=poetry-cache-Linux-bfa77ed53a4cbb42d370877eae79ae2e64660d2cf656b798fbaa4d08a93ea043&version=7b31723a7ec6fd7eed12371b280ed643092aa3f7d5e693ec0b4a731954b378e6\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:32999/_apis/artifactcache/cache?keys=poetry-cache-Linux-bfa77ed53a4cbb42d370877eae79ae2e64660d2cf656b798fbaa4d08a93ea043&version=0fa665fed7599d82ee2751d8274e1315bfb53d6c3601564b21db5959b47a1f7f\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Cache not found for input keys: poetry-cache-Linux-bfa77ed53a4cbb42d370877eae79ae2e64660d2cf656b798fbaa4d08a93ea043\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Cache not found for input keys: poetry-cache-Linux-bfa77ed53a4cbb42d370877eae79ae2e64660d2cf656b798fbaa4d08a93ea043\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \u2705  Success - Main Cache Poetry\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \u2705  Success - Main Cache Poetry\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting poetry\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading poetry-1.5.1-py3-none-any.whl (225 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ] \u2b50 Run Main Install dependencies\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ] \u2b50 Run Main Install dependencies\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting build<0.11.0,>=0.10.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading build-0.10.0-py3-none-any.whl (17 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting installer<0.8.0,>=0.7.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading installer-0.7.0-py3-none-any.whl (453 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting poetry-plugin-export<2.0.0,>=1.4.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading poetry_plugin_export-1.4.0-py3-none-any.whl (10 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting tomli<3.0.0,>=2.0.1\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting importlib-metadata>=4.4\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting crashtest<0.5.0,>=0.4.1\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading crashtest-0.4.1-py3-none-any.whl (7.6 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting cleo<3.0.0,>=2.0.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading cleo-2.0.1-py3-none-any.whl (77 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting requests<3.0,>=2.18\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting urllib3<2.0.0,>=1.26.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting poetry-core==1.6.1\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading poetry_core-1.6.1-py3-none-any.whl (450 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting poetry\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading poetry-1.5.1-py3-none-any.whl (225 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting poetry\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading poetry-1.5.1-py3-none-any.whl (225 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting trove-classifiers>=2022.5.19\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading trove_classifiers-2023.5.24-py3-none-any.whl (13 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting pexpect<5.0.0,>=4.7.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting requests-toolbelt<2,>=0.9.1\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading requests_toolbelt-1.0.0-py2.py3-none-any.whl (54 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting urllib3<2.0.0,>=1.26.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting filelock<4.0.0,>=3.8.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting pyproject-hooks<2.0.0,>=1.0.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading pyproject_hooks-1.0.0-py3-none-any.whl (9.3 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting build<0.11.0,>=0.10.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading build-0.10.0-py3-none-any.whl (17 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting importlib-metadata>=4.4\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting crashtest<0.5.0,>=0.4.1\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting virtualenv<21.0.0,>=20.22.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading crashtest-0.4.1-py3-none-any.whl (7.6 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting shellingham<2.0,>=1.5\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading shellingham-1.5.0.post1-py2.py3-none-any.whl (9.4 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting jsonschema<5.0.0,>=4.10.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading jsonschema-4.17.3-py3-none-any.whl (90 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting cachecontrol[filecache]<0.13.0,>=0.12.9\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading CacheControl-0.12.14-py2.py3-none-any.whl (21 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting packaging>=20.4\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting filelock<4.0.0,>=3.8.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting dulwich<0.22.0,>=0.21.2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading dulwich-0.21.5-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (508 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting dulwich<0.22.0,>=0.21.2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading dulwich-0.21.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (509 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting tomlkit<1.0.0,>=0.11.4\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading tomlkit-0.11.8-py3-none-any.whl (35 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting shellingham<2.0,>=1.5\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading shellingham-1.5.0.post1-py2.py3-none-any.whl (9.4 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting pexpect<5.0.0,>=4.7.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting pkginfo<2.0.0,>=1.9.4\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading pkginfo-1.9.6-py3-none-any.whl (30 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting keyring<24.0.0,>=23.9.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading keyring-23.13.1-py3-none-any.whl (37 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting virtualenv<21.0.0,>=20.22.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting tomlkit<1.0.0,>=0.11.4\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading tomlkit-0.11.8-py3-none-any.whl (35 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting trove-classifiers>=2022.5.19\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading trove_classifiers-2023.5.24-py3-none-any.whl (13 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting cleo<3.0.0,>=2.0.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading cleo-2.0.1-py3-none-any.whl (77 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting requests<3.0,>=2.18\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting jsonschema<5.0.0,>=4.10.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading jsonschema-4.17.3-py3-none-any.whl (90 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting platformdirs<4.0.0,>=3.0.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting requests-toolbelt<2,>=0.9.1\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading requests_toolbelt-1.0.0-py2.py3-none-any.whl (54 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting trove-classifiers>=2022.5.19\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting tomli<3.0.0,>=2.0.1\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading trove_classifiers-2023.5.24-py3-none-any.whl (13 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting crashtest<0.5.0,>=0.4.1\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading crashtest-0.4.1-py3-none-any.whl (7.6 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting urllib3<2.0.0,>=1.26.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading urllib3-1.26.16-py2.py3-none-any.whl (143 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting filelock<4.0.0,>=3.8.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading filelock-3.12.2-py3-none-any.whl (10 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting lockfile<0.13.0,>=0.12.2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting dulwich<0.22.0,>=0.21.2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading lockfile-0.12.2-py2.py3-none-any.whl (13 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading dulwich-0.21.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (509 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting pexpect<5.0.0,>=4.7.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading pexpect-4.8.0-py2.py3-none-any.whl (59 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting html5lib<2.0,>=1.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting platformdirs<4.0.0,>=3.0.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading html5lib-1.1-py2.py3-none-any.whl (112 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting html5lib<2.0,>=1.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading html5lib-1.1-py2.py3-none-any.whl (112 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting installer<0.8.0,>=0.7.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading installer-0.7.0-py3-none-any.whl (453 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting pyproject-hooks<2.0.0,>=1.0.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting keyring<24.0.0,>=23.9.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading pyproject_hooks-1.0.0-py3-none-any.whl (9.3 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading keyring-23.13.1-py3-none-any.whl (37 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting lockfile<0.13.0,>=0.12.2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading lockfile-0.12.2-py2.py3-none-any.whl (13 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting poetry-plugin-export<2.0.0,>=1.4.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading poetry_plugin_export-1.4.0-py3-none-any.whl (10 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting installer<0.8.0,>=0.7.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading installer-0.7.0-py3-none-any.whl (453 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting shellingham<2.0,>=1.5\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading shellingham-1.5.0.post1-py2.py3-none-any.whl (9.4 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting keyring<24.0.0,>=23.9.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading keyring-23.13.1-py3-none-any.whl (37 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting virtualenv<21.0.0,>=20.22.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading virtualenv-20.23.1-py3-none-any.whl (3.3 MB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting pkginfo<2.0.0,>=1.9.4\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading pkginfo-1.9.6-py3-none-any.whl (30 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting packaging>=20.4\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting cleo<3.0.0,>=2.0.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading cleo-2.0.1-py3-none-any.whl (77 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting poetry-plugin-export<2.0.0,>=1.4.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading poetry_plugin_export-1.4.0-py3-none-any.whl (10 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting msgpack>=0.5.2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting tomlkit<1.0.0,>=0.11.4\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting lockfile<0.13.0,>=0.12.2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading msgpack-1.0.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (322 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading tomlkit-0.11.8-py3-none-any.whl (35 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading lockfile-0.12.2-py2.py3-none-any.whl (13 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting cachecontrol[filecache]<0.13.0,>=0.12.9\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading CacheControl-0.12.14-py2.py3-none-any.whl (21 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting pyproject-hooks<2.0.0,>=1.0.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading pyproject_hooks-1.0.0-py3-none-any.whl (9.3 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting jsonschema<5.0.0,>=4.10.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading jsonschema-4.17.3-py3-none-any.whl (90 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting platformdirs<4.0.0,>=3.0.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading platformdirs-3.8.0-py3-none-any.whl (16 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting poetry-core==1.6.1\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading poetry_core-1.6.1-py3-none-any.whl (450 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting poetry-core==1.6.1\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading poetry_core-1.6.1-py3-none-any.whl (450 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting requests-toolbelt<2,>=0.9.1\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading requests_toolbelt-1.0.0-py2.py3-none-any.whl (54 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting tomli<3.0.0,>=2.0.1\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading tomli-2.0.1-py3-none-any.whl (12 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting requests<3.0,>=2.18\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading requests-2.31.0-py3-none-any.whl (62 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting build<0.11.0,>=0.10.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading build-0.10.0-py3-none-any.whl (17 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting html5lib<2.0,>=1.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading html5lib-1.1-py2.py3-none-any.whl (112 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting importlib-metadata>=4.4\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting backports.cached-property<2.0.0,>=1.0.2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading importlib_metadata-6.7.0-py3-none-any.whl (22 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading backports.cached_property-1.0.2-py3-none-any.whl (6.1 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting cachecontrol[filecache]<0.13.0,>=0.12.9\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading CacheControl-0.12.14-py2.py3-none-any.whl (21 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting pkginfo<2.0.0,>=1.9.4\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading pkginfo-1.9.6-py3-none-any.whl (30 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting packaging>=20.4\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading packaging-23.1-py3-none-any.whl (48 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting msgpack>=0.5.2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading msgpack-1.0.5-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (299 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting msgpack>=0.5.2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading msgpack-1.0.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (322 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting rapidfuzz<3.0.0,>=2.2.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading rapidfuzz-2.15.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting rapidfuzz<3.0.0,>=2.2.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading rapidfuzz-2.15.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting typing-extensions\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading typing_extensions-4.6.3-py3-none-any.whl (31 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting webencodings\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting six>=1.9\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting webencodings\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting six>=1.9\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting zipp>=0.5\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting zipp>=0.5\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting attrs>=17.4.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading pyrsistent-0.19.3-py3-none-any.whl (57 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting attrs>=17.4.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading pyrsistent-0.19.3-py3-none-any.whl (57 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting rapidfuzz<3.0.0,>=2.2.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting pkgutil-resolve-name>=1.3.10\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading rapidfuzz-2.15.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading pkgutil_resolve_name-1.3.10-py3-none-any.whl (4.7 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting SecretStorage>=3.2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading SecretStorage-3.3.3-py3-none-any.whl (15 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting importlib-resources>=1.4.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading importlib_resources-5.12.0-py3-none-any.whl (36 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting jaraco.classes\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading jaraco.classes-3.2.3-py3-none-any.whl (6.0 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting webencodings\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading webencodings-0.5.1-py2.py3-none-any.whl (11 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting jeepney>=0.4.2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting jeepney>=0.4.2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading jeepney-0.8.0-py3-none-any.whl (48 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading jeepney-0.8.0-py3-none-any.whl (48 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting six>=1.9\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading six-1.16.0-py2.py3-none-any.whl (11 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting ptyprocess>=0.5\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting jaraco.classes\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading jaraco.classes-3.2.3-py3-none-any.whl (6.0 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting SecretStorage>=3.2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading SecretStorage-3.3.3-py3-none-any.whl (15 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting zipp>=0.5\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading zipp-3.15.0-py3-none-any.whl (6.8 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting ptyprocess>=0.5\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting certifi>=2017.4.17\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading pyrsistent-0.19.3-py3-none-any.whl (57 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting attrs>=17.4.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading attrs-23.1.0-py3-none-any.whl (61 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting charset-normalizer<4,>=2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading charset_normalizer-3.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (199 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting jeepney>=0.4.2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading jeepney-0.8.0-py3-none-any.whl (48 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting jaraco.classes\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading jaraco.classes-3.2.3-py3-none-any.whl (6.0 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting idna<4,>=2.5\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting charset-normalizer<4,>=2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading charset_normalizer-3.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (171 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting SecretStorage>=3.2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading SecretStorage-3.3.3-py3-none-any.whl (15 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting idna<4,>=2.5\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting ptyprocess>=0.5\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting certifi>=2017.4.17\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting charset-normalizer<4,>=2\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading charset_normalizer-3.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (199 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting idna<4,>=2.5\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading idna-3.4-py3-none-any.whl (61 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting certifi>=2017.4.17\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading certifi-2023.5.7-py3-none-any.whl (156 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting cryptography>=2.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading cryptography-41.0.1-cp37-abi3-manylinux_2_28_x86_64.whl (4.3 MB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting cryptography>=2.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading cryptography-41.0.1-cp37-abi3-manylinux_2_28_x86_64.whl (4.3 MB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting cffi>=1.12\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading cffi-1.15.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (441 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting pycparser\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting cryptography>=2.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading cryptography-41.0.1-cp37-abi3-manylinux_2_28_x86_64.whl (4.3 MB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting cffi>=1.12\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting distlib<1,>=0.3.6\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading cffi-1.15.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (427 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting pycparser\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Collecting more-itertools\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   Downloading more_itertools-9.1.0-py3-none-any.whl (54 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting distlib<1,>=0.3.6\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting cffi>=1.12\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading cffi-1.15.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (441 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting pycparser\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading pycparser-2.21-py2.py3-none-any.whl (118 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Collecting more-itertools\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   Downloading more_itertools-9.1.0-py3-none-any.whl (54 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting distlib<1,>=0.3.6\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading distlib-0.3.6-py2.py3-none-any.whl (468 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Installing collected packages: pycparser, urllib3, idna, charset-normalizer, cffi, certifi, zipp, tomli, requests, msgpack, more-itertools, jeepney, cryptography, webencodings, six, SecretStorage, rapidfuzz, pyrsistent, pyproject-hooks, ptyprocess, poetry-core, platformdirs, packaging, lockfile, jaraco.classes, importlib-metadata, filelock, distlib, crashtest, cachecontrol, attrs, virtualenv, trove-classifiers, tomlkit, shellingham, requests-toolbelt, poetry-plugin-export, pkginfo, pexpect, keyring, jsonschema, installer, html5lib, dulwich, cleo, build, poetry\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Collecting more-itertools\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   Downloading more_itertools-9.1.0-py3-none-any.whl (54 kB)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Installing collected packages: pycparser, zipp, urllib3, typing-extensions, idna, charset-normalizer, cffi, certifi, tomli, requests, msgpack, more-itertools, jeepney, importlib-metadata, cryptography, webencodings, six, SecretStorage, rapidfuzz, pyrsistent, pyproject-hooks, ptyprocess, poetry-core, platformdirs, pkgutil-resolve-name, packaging, lockfile, jaraco.classes, importlib-resources, filelock, distlib, crashtest, cachecontrol, attrs, virtualenv, trove-classifiers, tomlkit, shellingham, requests-toolbelt, poetry-plugin-export, pkginfo, pexpect, keyring, jsonschema, installer, html5lib, dulwich, cleo, build, backports.cached-property, poetry\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Installing collected packages: pycparser, urllib3, idna, charset-normalizer, cffi, certifi, zipp, tomli, requests, msgpack, more-itertools, jeepney, cryptography, webencodings, six, SecretStorage, rapidfuzz, pyrsistent, pyproject-hooks, ptyprocess, poetry-core, platformdirs, packaging, lockfile, jaraco.classes, importlib-metadata, filelock, distlib, crashtest, cachecontrol, attrs, virtualenv, trove-classifiers, tomlkit, shellingham, requests-toolbelt, poetry-plugin-export, pkginfo, pexpect, keyring, jsonschema, installer, html5lib, dulwich, cleo, build, poetry\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Successfully installed SecretStorage-3.3.3 attrs-23.1.0 build-0.10.0 cachecontrol-0.12.14 certifi-2023.5.7 cffi-1.15.1 charset-normalizer-3.1.0 cleo-2.0.1 crashtest-0.4.1 cryptography-41.0.1 distlib-0.3.6 dulwich-0.21.5 filelock-3.12.2 html5lib-1.1 idna-3.4 importlib-metadata-6.7.0 installer-0.7.0 jaraco.classes-3.2.3 jeepney-0.8.0 jsonschema-4.17.3 keyring-23.13.1 lockfile-0.12.2 more-itertools-9.1.0 msgpack-1.0.5 packaging-23.1 pexpect-4.8.0 pkginfo-1.9.6 platformdirs-3.8.0 poetry-1.5.1 poetry-core-1.6.1 poetry-plugin-export-1.4.0 ptyprocess-0.7.0 pycparser-2.21 pyproject-hooks-1.0.0 pyrsistent-0.19.3 rapidfuzz-2.15.1 requests-2.31.0 requests-toolbelt-1.0.0 shellingham-1.5.0.post1 six-1.16.0 tomli-2.0.1 tomlkit-0.11.8 trove-classifiers-2023.5.24 urllib3-1.26.16 virtualenv-20.23.1 webencodings-0.5.1 zipp-3.15.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Successfully installed SecretStorage-3.3.3 attrs-23.1.0 backports.cached-property-1.0.2 build-0.10.0 cachecontrol-0.12.14 certifi-2023.5.7 cffi-1.15.1 charset-normalizer-3.1.0 cleo-2.0.1 crashtest-0.4.1 cryptography-41.0.1 distlib-0.3.6 dulwich-0.21.5 filelock-3.12.2 html5lib-1.1 idna-3.4 importlib-metadata-6.7.0 importlib-resources-5.12.0 installer-0.7.0 jaraco.classes-3.2.3 jeepney-0.8.0 jsonschema-4.17.3 keyring-23.13.1 lockfile-0.12.2 more-itertools-9.1.0 msgpack-1.0.5 packaging-23.1 pexpect-4.8.0 pkginfo-1.9.6 pkgutil-resolve-name-1.3.10 platformdirs-3.8.0 poetry-1.5.1 poetry-core-1.6.1 poetry-plugin-export-1.4.0 ptyprocess-0.7.0 pycparser-2.21 pyproject-hooks-1.0.0 pyrsistent-0.19.3 rapidfuzz-2.15.1 requests-2.31.0 requests-toolbelt-1.0.0 shellingham-1.5.0.post1 six-1.16.0 tomli-2.0.1 tomlkit-0.11.8 trove-classifiers-2023.5.24 typing-extensions-4.6.3 urllib3-1.26.16 virtualenv-20.23.1 webencodings-0.5.1 zipp-3.15.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.7.11/x64/bin/python -m pip install --upgrade pip' command.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.9.6/x64/bin/python -m pip install --upgrade pip' command.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Successfully installed SecretStorage-3.3.3 attrs-23.1.0 build-0.10.0 cachecontrol-0.12.14 certifi-2023.5.7 cffi-1.15.1 charset-normalizer-3.1.0 cleo-2.0.1 crashtest-0.4.1 cryptography-41.0.1 distlib-0.3.6 dulwich-0.21.5 filelock-3.12.2 html5lib-1.1 idna-3.4 importlib-metadata-6.7.0 installer-0.7.0 jaraco.classes-3.2.3 jeepney-0.8.0 jsonschema-4.17.3 keyring-23.13.1 lockfile-0.12.2 more-itertools-9.1.0 msgpack-1.0.5 packaging-23.1 pexpect-4.8.0 pkginfo-1.9.6 platformdirs-3.8.0 poetry-1.5.1 poetry-core-1.6.1 poetry-plugin-export-1.4.0 ptyprocess-0.7.0 pycparser-2.21 pyproject-hooks-1.0.0 pyrsistent-0.19.3 rapidfuzz-2.15.1 requests-2.31.0 requests-toolbelt-1.0.0 shellingham-1.5.0.post1 six-1.16.0 tomli-2.0.1 tomlkit-0.11.8 trove-classifiers-2023.5.24 urllib3-1.26.16 virtualenv-20.23.1 webencodings-0.5.1 zipp-3.15.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | WARNING: You are using pip version 21.2.4; however, version 23.1.2 is available.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | You should consider upgrading via the '/opt/hostedtoolcache/Python/3.9.6/x64/bin/python -m pip install --upgrade pip' command.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Creating virtualenv reactivex-zLxMZfO6-py3.9 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Creating virtualenv reactivex-zLxMZfO6-py3.7 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Creating virtualenv reactivex-zLxMZfO6-py3.9 in /home/runneradmin/.cache/pypoetry/virtualenvs\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Installing dependencies from lock file\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Package operations: 43 installs, 1 update, 0 removals\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing attrs (22.2.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing exceptiongroup (1.1.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing iniconfig (1.1.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing packaging (22.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing pluggy (1.0.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing tomli (2.0.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Installing dependencies from lock file\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing certifi (2022.12.7)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing charset-normalizer (2.1.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing filelock (3.9.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing idna (3.4)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing distlib (0.3.6)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing pytest (7.2.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Updating setuptools (67.8.0 -> 65.6.3)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing urllib3 (1.26.13)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing py (1.11.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing platformdirs (2.6.2)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Package operations: 46 installs, 1 update, 0 removals\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing typing-extensions (4.4.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Installing dependencies from lock file\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing zipp (3.11.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing importlib-metadata (4.2.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Package operations: 43 installs, 1 update, 0 removals\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing attrs (22.2.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing exceptiongroup (1.1.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing iniconfig (1.1.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing packaging (22.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing pluggy (1.0.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing tomli (2.0.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing attrs (22.2.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing exceptiongroup (1.1.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing iniconfig (1.1.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing packaging (22.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing pluggy (1.0.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing tomli (2.0.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing certifi (2022.12.7)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing charset-normalizer (2.1.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing distlib (0.3.6)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing certifi (2022.12.7)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing charset-normalizer (2.1.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing filelock (3.9.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing distlib (0.3.6)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing platformdirs (2.6.2)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing idna (3.4)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Updating setuptools (67.8.0 -> 65.6.3)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing urllib3 (1.26.13)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing py (1.11.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing pytest (7.2.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing filelock (3.9.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing idna (3.4)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing platformdirs (2.6.2)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing py (1.11.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing pytest (7.2.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Updating setuptools (67.8.0 -> 65.6.3)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing cfgv (3.3.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing click (8.1.3)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing docopt (0.6.2)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing execnet (1.9.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing coverage (6.5.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing mypy-extensions (0.4.3)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing identify (2.5.11)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing pycodestyle (2.8.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing pyflakes (2.4.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing pyyaml (6.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing requests (2.28.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing pathspec (0.10.3)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing virtualenv (20.16.2)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing nodeenv (1.7.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing mccabe (0.6.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing typing-extensions (4.4.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing pytest-forked (1.4.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing urllib3 (1.26.13)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing cfgv (3.3.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing click (8.1.3)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing coverage (6.5.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing cfgv (3.3.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing click (8.1.3)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing docopt (0.6.2)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing execnet (1.9.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing coverage (6.5.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing identify (2.5.11)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing mypy-extensions (0.4.3)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing mccabe (0.6.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing nodeenv (1.7.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing pathspec (0.10.3)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing docopt (0.6.2)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing pycodestyle (2.8.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing pytest-forked (1.4.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing pyflakes (2.4.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing requests (2.28.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing pyyaml (6.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing virtualenv (20.16.2)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing typing-extensions (4.4.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing autoflake (1.7.8)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing black (22.12.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing coveralls (3.3.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing dunamai (1.15.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing flake8 (4.0.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing isort (5.11.4)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing mypy (0.931)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing pre-commit (2.21.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing pyright (0.0.13.post0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing pytest-asyncio (0.18.3)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |   \u2022 Installing pytest-xdist (2.5.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing execnet (1.9.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing identify (2.5.11)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing mccabe (0.6.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing mypy-extensions (0.4.3)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing nodeenv (1.7.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing pathspec (0.10.3)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing pycodestyle (2.8.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing pyflakes (2.4.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing pytest-forked (1.4.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing pyyaml (6.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing requests (2.28.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing typed-ast (1.5.4)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing autoflake (1.7.8)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing black (22.12.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing coveralls (3.3.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing dunamai (1.15.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing isort (5.11.4)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing mypy (0.931)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing flake8 (4.0.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing pre-commit (2.21.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing pytest-asyncio (0.18.3)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing pytest-xdist (2.5.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   \u2022 Installing pyright (0.0.13.post0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing virtualenv (20.16.2)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Connection pool is full, discarding connection: pypi.org. Connection pool size: 10\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing autoflake (1.7.8)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing black (22.12.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing coveralls (3.3.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing dunamai (1.15.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing flake8 (4.0.1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Installing the current project: reactivex (0.0.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing isort (5.11.4)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing mypy (0.931)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \u2705  Success - Main Install dependencies\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality] \u2b50 Run Main Code checks\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Installing the current project: reactivex (0.0.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \u2705  Success - Main Install dependencies\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing pre-commit (2.21.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing pyright (0.0.13.post0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing pytest-asyncio (0.18.3)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   |   \u2022 Installing pytest-xdist (2.5.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Installing the current project: reactivex (0.0.0)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ] \u2b50 Run Main Run coverage tests\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \u2705  Success - Main Install dependencies\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | [INFO] Initializing environment for https://github.com/humitos/mirrors-autoflake.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ] \u2b50 Run Main Test with pytest\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/4] user= workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | [INFO] Initializing environment for https://github.com/timothycrosley/isort.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | [INFO] Initializing environment for https://github.com/psf/black.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | [INFO] Initializing environment for https://github.com/PyCQA/flake8.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | [INFO] Initializing environment for local:pyright@1.1.286.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | [INFO] Initializing environment for https://github.com/pre-commit/mirrors-mypy.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | [INFO] Installing environment for https://github.com/humitos/mirrors-autoflake.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | [INFO] Once installed this environment will be reused.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | [INFO] This may take a few minutes...\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | [INFO] Installing environment for https://github.com/timothycrosley/isort.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | [INFO] Once installed this environment will be reused.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | [INFO] This may take a few minutes...\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | ============================= test session starts ==============================\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | platform linux -- Python 3.9.6, pytest-7.2.0, pluggy-1.0.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/ReactiveX-RxPY, configfile: pyproject.toml, testpaths: tests\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | plugins: asyncio-0.18.3, forked-1.4.0, xdist-2.5.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | asyncio: mode=strict\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | collected 1347 items / 9 skipped\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_version.py .                                                  [  0%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_core/test_notification.py ........................            [  1%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_core/test_observer.py ..............                          [  2%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_core/test_priorityqueue.py .......                            [  3%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_disposables/test_disposable.py ...................            [  4%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_integration/test_concat_repeat.py .                           [  4%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_integration/test_group_reduce.py ..                           [  5%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_all.py ........                               [  5%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_amb.py ........                               [  6%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_asobservable.py ......                        [  6%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_average.py ......                             [  7%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_buffer.py .............                       [  8%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_bufferwithcount.py ........                   [  8%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_bufferwithtime.py ....                        [  8%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_bufferwithtimeorcount.py ...                  [  9%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_case.py ........                              [  9%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_catch.py .............                        [ 10%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_combinelatest.py ...........................  [ 12%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_concat.py .................                   [ 14%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_concatmap.py .....                            [ 14%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_connectableobservable.py .......              [ 14%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_contains.py ..........                        [ 15%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_count.py ................                     [ 16%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_create.py ......                              [ 17%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_debounce.py ................                  [ 18%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_defaultifempty.py ....                        [ 18%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_defer.py ....                                 [ 19%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_delay.py .............                        [ 20%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_delaywithmapper.py ......                     [ 20%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_distinct.py .....                             [ 20%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_distinctuntilchanged.py ............          [ 21%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_doaction.py .....                             [ 22%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_dowhile.py ......                             [ 22%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_elementat.py ........                         [ 23%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_empty.py ...                                  [ 23%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_expand.py .....                               [ 23%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_filter.py ...............                     [ 24%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_finally.py ....                               [ 25%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_find.py ......                                [ 25%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_first.py ........                             [ 26%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_firstordefault.py ........                    [ 26%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_flatmap.py ................                   [ 27%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_flatmap_async.py .                            [ 28%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_forin.py ..                                   [ 28%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_forkjoin.py ...............                   [ 29%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_fromcallback.py ...                           [ 29%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_fromfuture.py ....                            [ 29%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_fromiterable.py ....                          [ 30%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_generate.py .....                             [ 30%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_generatewithrelativetime.py ..........        [ 31%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_groupby.py ...........                        [ 32%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_groupjoin.py ...............                  [ 33%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_ifthen.py ........                            [ 33%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_ignoreelements.py ...                         [ 34%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_interval.py ...                               [ 34%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_isempty.py ....                               [ 34%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_join.py ...............                       [ 35%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_last.py ........                              [ 36%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_lastordefault.py ........                     [ 36%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_map.py ...............                        [ 37%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | ============================= test session starts ==============================\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | platform linux -- Python 3.7.11, pytest-7.2.0, pluggy-1.0.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | rootdir: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/ReactiveX-RxPY, configfile: pyproject.toml, testpaths: tests\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | plugins: asyncio-0.18.3, forked-1.4.0, xdist-2.5.0\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | asyncio: mode=strict\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | gw0 I / gw1 I / gw2 I / gw3 I / gw4 I / gw5 I / gw6 I / gw7 I / gw8 I / gw9 I / gw10 I / gw11 I / gw12 I / gw13 I / gw14 I / gw15 I / gw16 I / gw17 I / gw18 I / gw19 I / gw20 I / gw21 I / gw22 I / gw23 I / gw24 I / gw25 I / gw26 I / gw27 I / gw28 I / gw29 I / gw30 I / gw31 I / gw32 I / gw33 I / gw34 I / gw35 I / gw36 I / gw37 I / gw38 I / gw39 I / gw40 I / gw41 I / gw42 I / gw43 I / gw44 I / gw45 I / gw46 I / gw47 I / gw48 I / gw49 I / gw50 I / gw51 I / gw52 I / gw53 I / gw54 I / gw55 I / gw56 I / gw57 I / gw58 I / gw59 I / gw60 I / gw61 I / gw62 I / gw63 I / gw64 I / gw65 I / gw66 I / gw67 I / gw68 I / gw69 I / gw70 I / gw71 I / gw72 I / gw73 I / gw74 I / gw75 I / gw76 I / gw77 I / gw78 I / gw79 I / gw80 I / gw81 I / gw82 I / gw83 I / gw84 I / gw85 I / gw86 I / gw87 I / gw88 I / gw89 I / gw90 I / gw91 I / gw92 I / gw93 I / gw94 I / gw95 I / gw96 I / gw97 I / gw98 I / gw99 I / gw100 I / gw101 I / gw102 I / gw103 I / gw104 I / gw105 I / gw106 I / gw107 I / gw108 I / gw109 I / gw110 I / gw111 I / gw112 I / gw113 I / gw114 I / gw115 I / gw116 I / gw117 I / gw118 I / gw119 I / gw120 I / gw121 I / gw122 I / gw123 I / gw124 I / gw125 I / gw126 I / gw127 I\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | gw0 [1347] / gw1 [1347] / gw2 [1347] / gw3 [1347] / gw4 [1347] / gw5 [1347] / gw6 [1347] / gw7 [1347] / gw8 [1347] / gw9 [1347] / gw10 [1347] / gw11 [1347] / gw12 [1347] / gw13 [1347] / gw14 [1347] / gw15 [1347] / gw16 [1347] / gw17 [1347] / gw18 [1347] / gw19 [1347] / gw20 [1347] / gw21 [1347] / gw22 [1347] / gw23 [1347] / gw24 [1347] / gw25 [1347] / gw26 [1347] / gw27 [1347] / gw28 [1347] / gw29 [1347] / gw30 [1347] / gw31 [1347] / gw32 [1347] / gw33 [1347] / gw34 [1347] / gw35 [1347] / gw36 [1347] / gw37 [1347] / gw38 [1347] / gw39 [1347] / gw40 [1347] / gw41 [1347] / gw42 [1347] / gw43 [1347] / gw44 [1347] / gw45 [1347] / gw46 [1347] / gw47 [1347] / gw48 [1347] / gw49 [1347] / gw50 [1347] / gw51 [1347] / gw52 [1347] / gw53 [1347] / gw54 [1347] / gw55 [1347] / gw56 [1347] / gw57 [1347] / gw58 [1347] / gw59 [1347] / gw60 [1347] / gw61 [1347] / gw62 [1347] / gw63 [1347] / gw64 [1347] / gw65 [1347] / gw66 [1347] / gw67 [1347] / gw68 [1347] / gw69 [1347] / gw70 [1347] / gw71 [1347] / gw72 [1347] / gw73 [1347] / gw74 [1347] / gw75 [1347] / gw76 [1347] / gw77 [1347] / gw78 [1347] / gw79 [1347] / gw80 [1347] / gw81 [1347] / gw82 [1347] / gw83 [1347] / gw84 [1347] / gw85 [1347] / gw86 [1347] / gw87 [1347] / gw88 [1347] / gw89 [1347] / gw90 [1347] / gw91 [1347] / gw92 [1347] / gw93 [1347] / gw94 [1347] / gw95 [1347] / gw96 [1347] / gw97 [1347] / gw98 [1347] / gw99 [1347] / gw100 [1347] / gw101 [1347] / gw102 [1347] / gw103 [1347] / gw104 [1347] / gw105 [1347] / gw106 [1347] / gw107 [1347] / gw108 [1347] / gw109 [1347] / gw110 [1347] / gw111 [1347] / gw112 [1347] / gw113 [1347] / gw114 [1347] / gw115 [1347] / gw116 [1347] / gw117 [1347] / gw118 [1347] / gw119 [1347] / gw120 [1347] / gw121 [1347] / gw122 [1347] / gw123 [1347] / gw124 [1347] / gw125 [1347] / gw126 [1347] / gw127 [1347]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_marbles.py .................................. [ 40%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | ........................................................................ [  5%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | ...........                                                              [ 41%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_materialize.py ........                       [ 41%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_max.py ...........                            [ 42%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_maxby.py .......                              [ 43%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | ........................................................................ [ 10%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_merge.py ...............................      [ 45%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_min.py ..........                             [ 46%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_minby.py .............                        [ 47%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | ......................................................................... [ 15%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | ........................................................................ [ 21%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_multicast.py ...........                      [ 48%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_never.py .                                    [ 48%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_observeon.py .....                            [ 48%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_of.py ..                                      [ 48%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_onerrorresumenext.py .........                [ 49%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_pairwise.py ......                            [ 49%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_partition.py .......                          [ 50%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_pluck.py ..                                   [ 50%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | ........................................................................ [ 26%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_publish.py ...........                        [ 51%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_publishvalue.py ........                      [ 51%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_range.py .......                              [ 52%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_reduce.py ...........                         [ 53%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | ........................................................................ [ 32%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | ........................................................................ [ 37%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | ........................................................................ [ 42%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | ........................................................................ [ 48%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | ........................................................................ [ 53%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | ........................................................................ [ 58%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | ........................................................................ [ 64%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | ........................................................................ [ 69%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | ........................................................................ [ 74%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | ........................................................................ [ 79%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_repeat.py ..............                      [ 54%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_replay.py ..........                          [ 54%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | ........................................................................ [ 85%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | ........................................s.......................s....... [ 90%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | ........s..........s...s...s..s..s.....s.s.....s..s.s...ss....ss..ss.... [ 96%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_retry.py .........                            [ 55%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_returnvalue.py ....                           [ 55%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_sample.py .....                               [ 56%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_scan.py ..........                            [ 57%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | ..................................................                       [100%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/ReactiveX-RxPY/report.xml -\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | ====================== 1328 passed, 28 skipped in 15.44s =======================\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_sequenceequal.py ......................       [ 58%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_single.py .........                           [ 59%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_singleordefault.py ..........                 [ 60%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \u2705  Success - Main Test with pytest\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_skip.py .........                             [ 60%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_skiplast.py .........                         [ 61%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_skiplastwithtime.py .......                   [ 61%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | An unexpected error has occurred: CalledProcessError: command: ('/home/runneradmin/.cache/pre-commit/repo4ny9fh4r/py_env-python3/bin/python', '-mpip', 'install', '.')\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | return code: 1\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | stdout:\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |     Processing /home/runneradmin/.cache/pre-commit/repo4ny9fh4r\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |       Installing build dependencies: started\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |       Installing build dependencies: finished with status 'done'\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |       Getting requirements to build wheel: started\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |       Getting requirements to build wheel: finished with status 'done'\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |       Preparing metadata (pyproject.toml): started\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |       Preparing metadata (pyproject.toml): finished with status 'error'\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |     \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | stderr:\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |       error: subprocess-exited-with-error\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |       \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |       \u00d7 Preparing metadata (pyproject.toml) did not run successfully.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |       \u2502 exit code: 1\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |       \u2570\u2500> [14 lines of output]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |           Traceback (most recent call last):\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |             File \"/home/runneradmin/.cache/pre-commit/repo4ny9fh4r/py_env-python3/lib/python3.9/site-packages/pip/_vendor/pep517/in_process/_in_process.py\", line 363, in <module>\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |               main()\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |             File \"/home/runneradmin/.cache/pre-commit/repo4ny9fh4r/py_env-python3/lib/python3.9/site-packages/pip/_vendor/pep517/in_process/_in_process.py\", line 345, in main\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |               json_out['return_val'] = hook(**hook_input['kwargs'])\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |             File \"/home/runneradmin/.cache/pre-commit/repo4ny9fh4r/py_env-python3/lib/python3.9/site-packages/pip/_vendor/pep517/in_process/_in_process.py\", line 164, in prepare_metadata_for_build_wheel\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |               return hook(metadata_directory, config_settings)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |             File \"/tmp/pip-build-env-wopo85tc/overlay/lib/python3.9/site-packages/poetry/core/masonry/api.py\", line 41, in prepare_metadata_for_build_wheel\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |               poetry = Factory().create_poetry(Path(\".\").resolve(), with_groups=False)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |             File \"/tmp/pip-build-env-wopo85tc/overlay/lib/python3.9/site-packages/poetry/core/factory.py\", line 58, in create_poetry\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |               raise RuntimeError(\"The Poetry configuration is invalid:\\n\" + message)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |           RuntimeError: The Poetry configuration is invalid:\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |             - [extras.pipfile_deprecated_finder.2] 'pip-shims<=0.3.4' does not match '^[a-zA-Z-_.0-9]+$'\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |           \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |           [end of output]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |       \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |       note: This error originates from a subprocess, and is likely not a problem with pip.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |     error: metadata-generation-failed\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |     \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |     \u00d7 Encountered error while generating package metadata.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |     \u2570\u2500> See above for output.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |     \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |     note: This is an issue with the package mentioned above, not pip.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |     hint: See above for details.\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   |     \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_skipuntil.py .........                        [ 62%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   | Check the log at /home/runneradmin/.cache/pre-commit/pre-commit.log\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality]   \u274c  Failure - Main Code checks\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_skipuntilwithtime.py ......                   [ 63%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_skipwhile.py .........                        [ 63%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_skipwithtime.py .......                       [ 64%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_slice.py .........                            [ 64%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_some.py ...........                           [ 65%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_starmap.py ............                       [ 66%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_start.py .....                                [ 66%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_startwith.py ....                             [ 67%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_subscribeon.py ....                           [ 67%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_sum.py ......                                 [ 68%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_switchlatest.py .....                         [ 68%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality] exitcode '3': failure\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_switchmap.py ......                           [ 68%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ] \u2b50 Run Post Cache Poetry\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_switchmapindexed.py ......                    [ 69%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_take.py ........                              [ 69%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-cache@v2/dist/save/index.js] user= workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_takelast.py .........                         [ 70%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_takelastbuffer.py .......                     [ 71%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_takelastwithtime.py .........                 [ 71%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_takeuntil.py ...........                      [ 72%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_takeuntilwithtime.py ......                   [ 72%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_takewhile.py ............                     [ 73%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_takewithtime.py .......                       [ 74%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Checking zstd --version\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::*** zstd command line interface 64-bits v1.5.0, by Yann Collet ***\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Reserving Cache\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:32999/_apis/artifactcache/caches\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_throttlefirst.py .....                        [ 74%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_throw.py ...                                  [ 74%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Cache ID: 1\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::followSymbolicLinks 'true'\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::implicitDescendants 'false'\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::omitBrokenSymbolicLinks 'true'\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/.cache/pypoetry'\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Search path '/home/runneradmin/Library/Caches/pypoetry'\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Search path '/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/ReactiveX-RxPY/C:Users*AppDataLocalpypoetryCache'\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Matched: ../../../home/runneradmin/.cache/pypoetry\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Cache Paths:\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::[\"../../../home/runneradmin/.cache/pypoetry\"]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Archive Path: /tmp/1fecfcac-a3fa-4783-af31-b844caf8183c/cache.tzst\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | [command]/usr/bin/tar --posix --use-compress-program zstd -T0 -cf cache.tzst -P -C /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/ReactiveX-RxPY --files-from manifest.txt\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_timeinterval.py .....                         [ 75%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_timeout.py ...............                    [ 76%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_timeoutwithmapper.py ........                 [ 77%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_timer.py ...........                          [ 77%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_timestamp.py ....                             [ 78%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_toasync.py ...........                        [ 78%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_todict.py .....                               [ 79%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_tofuture.py .......                           [ 79%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_toiterable.py ...                             [ 80%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_toset.py ...                                  [ 80%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_using.py ......                               [ 80%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_while_do.py .......                           [ 81%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_window.py ..............                      [ 82%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_windowwithcount.py ...                        [ 82%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::File Size: 87862678\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Saving Cache (ID: 1)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Upload cache\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:32999/_apis/artifactcache/caches/1\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Upload concurrency: 4\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Upload chunk size: 33554432\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Awaiting all uploads\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 0 with content range: bytes 0-33554431/*\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Uploading chunk of size 33554432 bytes at offset 33554432 with content range: bytes 33554432-67108863/*\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Uploading chunk of size 20753814 bytes at offset 67108864 with content range: bytes 67108864-87862677/*\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_windowwithtime.py ......                      [ 82%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_windowwithtimeorcount.py ...                  [ 83%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_withlatestfrom.py ........................... [ 85%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | .                                                                        [ 85%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Commiting cache\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | Cache Size: ~84 MB (87862678 B)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::Resource Url: http://130.242.72.40:32999/_apis/artifactcache/caches/1\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_zip.py .............................          [ 87%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_observable/test_blocking/test_blocking.py ........            [ 88%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::commitCache - Attempt 1 of 2 failed with error: Cache service responded with 500\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udcac  ::debug::commitCache - Error is not retryable\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   | [warning]commitCache failed: Cache service responded with 500\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \u2705  Success - Post Cache Poetry\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_scheduler/test_catchscheduler.py .............                [ 89%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ] \u2b50 Run Post Set up Python 3.7\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v2/dist/cache-save/index.js] user= workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_scheduler/test_currentthreadscheduler.py ..............       [ 90%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ]   \u2705  Success - Post Set up Python 3.7\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_scheduler/test_eventloopscheduler.py ..s..........            [ 91%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_scheduler/test_historicalscheduler.py ...........             [ 91%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_scheduler/test_immediatescheduler.py .ss..........            [ 92%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/code-quality] \ud83c\udfc1  Job failed\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_scheduler/test_newthreadscheduler.py .s.....                  [ 93%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_scheduler/test_scheduleditem.py ...                           [ 93%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_scheduler/test_scheduler.py ...                               [ 93%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_scheduler/test_threadpoolscheduler.py .....s.                 [ 94%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_scheduler/test_timeoutscheduler.py .ss....                    [ 94%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_scheduler/test_trampolinescheduler.py ....ss.....             [ 95%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_scheduler/test_virtualtimescheduler.py ........               [ 96%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_scheduler/test_eventloop/test_asyncioscheduler.py ...ss       [ 96%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_scheduler/test_eventloop/test_asynciothreadsafescheduler.py . [ 96%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | .....ss                                                                  [ 97%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_scheduler/test_mainloop/test_tkinterscheduler.py ssssss       [ 97%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_subject/test_asyncsubject.py .....                            [ 97%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_subject/test_behaviorsubject.py .....                         [ 98%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_subject/test_replaysubject.py .......                         [ 98%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_subject/test_subject.py ....                                  [ 99%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | tests/test_testing/test_marbles.py ...........                           [100%]\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | - generated xml file: /tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/ReactiveX-RxPY/report.xml -\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | ====================== 1328 passed, 28 skipped in 28.66s =======================\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \u2705  Success - Main Run coverage tests\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ] \u2b50 Run Main Coveralls\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/5] user= workdir=\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/build       ] \ud83c\udfc1  Job succeeded\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Submitting coverage to coveralls.io...\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | resubmitting with id None\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Could not submit coverage: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Traceback (most recent call last):\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   File \"/home/runneradmin/.cache/pypoetry/virtualenvs/reactivex-zLxMZfO6-py3.9/lib/python3.9/site-packages/coveralls/api.py\", line 290, in submit_report\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |     response.raise_for_status()\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   File \"/home/runneradmin/.cache/pypoetry/virtualenvs/reactivex-zLxMZfO6-py3.9/lib/python3.9/site-packages/requests/models.py\", line 1021, in raise_for_status\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |     raise HTTPError(http_error_msg, response=self)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | requests.exceptions.HTTPError: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | The above exception was the direct cause of the following exception:\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | \n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | Traceback (most recent call last):\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   File \"/home/runneradmin/.cache/pypoetry/virtualenvs/reactivex-zLxMZfO6-py3.9/lib/python3.9/site-packages/coveralls/cli.py\", line 95, in main\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |     result = coverallz.wear()\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   File \"/home/runneradmin/.cache/pypoetry/virtualenvs/reactivex-zLxMZfO6-py3.9/lib/python3.9/site-packages/coveralls/api.py\", line 257, in wear\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |     return self.submit_report(json_string)\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |   File \"/home/runneradmin/.cache/pypoetry/virtualenvs/reactivex-zLxMZfO6-py3.9/lib/python3.9/site-packages/coveralls/api.py\", line 293, in submit_report\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   |     raise CoverallsException(\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   | coveralls.exception.CoverallsException: Could not submit coverage: 422 Client Error: Unprocessable Entity for url: https://coveralls.io/api/v1/jobs\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ]   \u274c  Failure - Main Coveralls\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ] exitcode '1': failure\n[5a8b13c4-8d29-40a2-8340-1e029e8b8ffd/coverage    ] \ud83c\udfc1  Job failed\n",
        "stderr": "time=\"2023-06-28T12:11:56+02:00\" level=error msg=\"POST /_apis/artifactcache/caches/1: broken file: 87862678 != 0\" module=artifactcache\nError: Job 'code-quality' failed\n",
        "workflow": "/tmp/ad9c0f7e-1596-11ee-8a50-bb14de238602/ReactiveX-RxPY/.github/workflows/python-package-crawler.yml",
        "build_tool": "pytest",
        "elapsed_time": 169.5340268611908
    }
}