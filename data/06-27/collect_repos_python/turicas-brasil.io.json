{
    "repository": "turicas/brasil.io",
    "stars": 866,
    "language": "python",
    "size": 2715,
    "clone_url": "https://github.com/turicas/brasil.io.git",
    "timestamp": "2023-07-01T09:56:39.821914Z",
    "clone_success": true,
    "number_of_actions": 1,
    "number_of_test_actions": 1,
    "actions_successful": false,
    "actions_build_tools": [
        "pytest"
    ],
    "actions_test_build_tools": [
        "pytest"
    ],
    "actions_run": {
        "failed": true,
        "tests": [],
        "stdout": "[ab420a34-9392-43de-988b-0f1cc5ff1542/test] \ud83d\ude80  Start image=crawlergpt:latest\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udc33  docker pull image=crawlergpt:latest platform= username= forcePull=false\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udc33  docker create image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udc33  docker run image=crawlergpt:latest platform= entrypoint=[\"tail\" \"-f\" \"/dev/null\"] cmd=[]\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /tmp/558156d8-17ed-11ee-8a50-bb14de238602/turicas-brasil.io] user=0 workdir=\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \u2601  git clone 'https://github.com/actions/setup-python' # ref=v1\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test] \ud83e\uddea  Matrix: map[python-version:3.8]\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test] \u2b50 Run Main actions/checkout@v2\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \u2705  Success - Main actions/checkout@v2\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test] \u2b50 Run Main Set up Python 3.8\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udc33  docker cp src=/tmp/act-cache/46938aa9-0b10-4858-9790-1dce28a02988/act/actions-setup-python@v1/ dst=/var/run/act/actions/actions-setup-python@v1/\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udc33  docker exec cmd=[chown -R 1012:1013 /var/run/act/actions/actions-setup-python@v1/] user=0 workdir=\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udc33  docker exec cmd=[node /var/run/act/actions/actions-setup-python@v1/dist/index.js] user= workdir=\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udcac  ::debug::Semantic version spec of 3.8 is 3.8\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udcac  ::debug::isExplicit: \n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udcac  ::debug::explicit? false\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udcac  ::debug::isExplicit: 2.7.18\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udcac  ::debug::explicit? true\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udcac  ::debug::isExplicit: 3.5.10\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udcac  ::debug::explicit? true\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udcac  ::debug::isExplicit: 3.6.14\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udcac  ::debug::explicit? true\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udcac  ::debug::isExplicit: 3.7.11\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udcac  ::debug::explicit? true\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udcac  ::debug::isExplicit: 3.8.11\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udcac  ::debug::explicit? true\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udcac  ::debug::isExplicit: 3.9.6\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udcac  ::debug::explicit? true\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udcac  ::debug::evaluating 6 versions\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udcac  ::debug::matched: 3.8.11\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udcac  ::debug::checking cache: /opt/hostedtoolcache/Python/3.8.11/x64\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udcac  ::debug::Found tool in cache Python 3.8.11 x64\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   | Successfully setup CPython (3.8.11)\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \u2753 add-matcher /run/act/actions/actions-setup-python@v1/.github/python.json\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \u2705  Success - Main Set up Python 3.8\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \u2699  ::set-env:: pythonLocation=/opt/hostedtoolcache/Python/3.8.11/x64\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \u2699  ::set-output:: python-version=3.8.11\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \u2699  ::add-path:: /opt/hostedtoolcache/Python/3.8.11/x64/bin\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test] \u2b50 Run Main Copy env file\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/2] user= workdir=\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \u2705  Success - Main Copy env file\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test] \u2b50 Run Main Setup Docker\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \ud83d\udc33  docker exec cmd=[bash --noprofile --norc -e -o pipefail /var/run/act/workflow/3] user= workdir=\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   | unknown shorthand flag: 'd' in -d\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   | See 'docker --help'.\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   | \n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   | Usage:  docker [OPTIONS] COMMAND\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   | \n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   | A self-sufficient runtime for containers\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   | \n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   | Options:\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |       --config string      Location of client config files (default\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |                            \"/home/runneradmin/.docker\")\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   -c, --context string     Name of the context to use to connect to the\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |                            daemon (overrides DOCKER_HOST env var and\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |                            default context set with \"docker context use\")\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   -D, --debug              Enable debug mode\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   -H, --host list          Daemon socket(s) to connect to\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   -l, --log-level string   Set the logging level\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |                            (\"debug\"|\"info\"|\"warn\"|\"error\"|\"fatal\")\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |                            (default \"info\")\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |       --tls                Use TLS; implied by --tlsverify\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |       --tlscacert string   Trust certs signed only by this CA (default\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |                            \"/home/runneradmin/.docker/ca.pem\")\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |       --tlscert string     Path to TLS certificate file (default\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |                            \"/home/runneradmin/.docker/cert.pem\")\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |       --tlskey string      Path to TLS key file (default\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |                            \"/home/runneradmin/.docker/key.pem\")\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |       --tlsverify          Use TLS and verify the remote\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   -v, --version            Print version information and quit\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   | \n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   | Management Commands:\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   builder     Manage builds\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   buildx*     Build with BuildKit (Docker Inc., 0.6.0+azure)\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   config      Manage Docker configs\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   container   Manage containers\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   context     Manage contexts\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   image       Manage images\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   manifest    Manage Docker image manifests and manifest lists\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   network     Manage networks\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   node        Manage Swarm nodes\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   plugin      Manage plugins\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   secret      Manage Docker secrets\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   service     Manage services\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   stack       Manage Docker stacks\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   swarm       Manage Swarm\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   system      Manage Docker\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   trust       Manage trust on Docker images\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   volume      Manage volumes\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   | \n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   | Commands:\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   attach      Attach local standard input, output, and error streams to a running container\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   build       Build an image from a Dockerfile\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   commit      Create a new image from a container's changes\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   cp          Copy files/folders between a container and the local filesystem\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   create      Create a new container\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   diff        Inspect changes to files or directories on a container's filesystem\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   events      Get real time events from the server\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   exec        Run a command in a running container\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   export      Export a container's filesystem as a tar archive\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   history     Show the history of an image\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   images      List images\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   import      Import the contents from a tarball to create a filesystem image\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   info        Display system-wide information\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   inspect     Return low-level information on Docker objects\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   kill        Kill one or more running containers\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   load        Load an image from a tar archive or STDIN\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   login       Log in to a Docker registry\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   logout      Log out from a Docker registry\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   logs        Fetch the logs of a container\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   pause       Pause all processes within one or more containers\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   port        List port mappings or a specific mapping for the container\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   ps          List containers\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   pull        Pull an image or a repository from a registry\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   push        Push an image or a repository to a registry\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   rename      Rename a container\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   restart     Restart one or more containers\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   rm          Remove one or more containers\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   rmi         Remove one or more images\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   run         Run a command in a new container\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   save        Save one or more images to a tar archive (streamed to STDOUT by default)\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   search      Search the Docker Hub for images\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   start       Start one or more stopped containers\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   stats       Display a live stream of container(s) resource usage statistics\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   stop        Stop one or more running containers\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   top         Display the running processes of a container\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   unpause     Unpause all processes within one or more containers\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   update      Update configuration of one or more containers\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   version     Show the Docker version information\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   |   wait        Block until one or more containers stop, then print their exit codes\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   | \n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   | Run 'docker COMMAND --help' for more information on a command.\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   | \n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   | \u001b[1mTo get more help with docker, check out our guides at https://docs.docker.com/go/guides/\u001b[0m\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   | \n[ab420a34-9392-43de-988b-0f1cc5ff1542/test]   \u274c  Failure - Main Setup Docker\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test] exitcode '125': failure\n[ab420a34-9392-43de-988b-0f1cc5ff1542/test] \ud83c\udfc1  Job failed\n",
        "stderr": "Error: Job 'test' failed\n",
        "workflow": {
            "path": "/tmp/558156d8-17ed-11ee-8a50-bb14de238602/turicas-brasil.io/.github/workflows/django-crawler.yml",
            "type": "pytest"
        },
        "workflow_name": "ab420a34-9392-43de-988b-0f1cc5ff1542",
        "build_tool": "pytest",
        "elapsed_time": 117.46502256393433
    }
}